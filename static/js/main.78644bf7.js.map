{"version":3,"sources":["../static/js/main.78644bf7.js","../webpack/bootstrap 28e5ffa64fe0e4f9ee4e","../../d3-state-visualizer/node_modules/lodash/isArray.js","../node_modules/map2tree/node_modules/lodash/isArray.js","../../d3-state-visualizer/node_modules/lodash/isObjectLike.js","../node_modules/map2tree/node_modules/lodash/isObjectLike.js","../../d3-state-visualizer/node_modules/ramda/dist/ramda.js","../../d3-state-visualizer/node_modules/lodash/_Map.js","../node_modules/ramda/dist/ramda.js","../node_modules/map2tree/node_modules/lodash/_Map.js","../../d3-state-visualizer/node_modules/lodash/isLength.js","../../d3-state-visualizer/node_modules/lodash/_assocIndexOf.js","../../d3-state-visualizer/node_modules/lodash/_nativeCreate.js","../../d3-state-visualizer/node_modules/lodash/_root.js","../../d3-state-visualizer/node_modules/lodash/_isKeyable.js","../node_modules/map2tree/node_modules/lodash/isLength.js","../node_modules/map2tree/node_modules/lodash/_assocIndexOf.js","../node_modules/map2tree/node_modules/lodash/_nativeCreate.js","../node_modules/map2tree/node_modules/lodash/_root.js","../node_modules/map2tree/node_modules/lodash/_isKeyable.js","../node_modules/webpack/buildin/global.js","../../d3-state-visualizer/node_modules/lodash/_isHostObject.js","../../d3-state-visualizer/node_modules/lodash/keys.js","../../d3-state-visualizer/node_modules/lodash/isObject.js","../../d3-state-visualizer/node_modules/lodash/_getNative.js","../../d3-state-visualizer/node_modules/lodash/_isKey.js","../node_modules/map2tree/node_modules/lodash/_isHostObject.js","../node_modules/map2tree/node_modules/lodash/keys.js","../node_modules/map2tree/node_modules/lodash/isObject.js","../node_modules/map2tree/node_modules/lodash/_getNative.js","../node_modules/map2tree/node_modules/lodash/_isKey.js","../node_modules/react-scripts/node_modules/promise/lib/core.js","../../d3-state-visualizer/node_modules/lodash/_baseHas.js","../../d3-state-visualizer/node_modules/lodash/isArguments.js","../../d3-state-visualizer/node_modules/lodash/isArrayLike.js","../../d3-state-visualizer/node_modules/lodash/_baseProperty.js","../../d3-state-visualizer/node_modules/lodash/isFunction.js","../../d3-state-visualizer/node_modules/lodash/isString.js","../../d3-state-visualizer/node_modules/lodash/_isIndex.js","../../d3-state-visualizer/node_modules/lodash/_Stack.js","../../d3-state-visualizer/node_modules/lodash/_assocDelete.js","../../d3-state-visualizer/node_modules/lodash/_assocGet.js","../../d3-state-visualizer/node_modules/lodash/_assocHas.js","../node_modules/webpack/buildin/module.js","../../d3-state-visualizer/node_modules/lodash/_hashHas.js","../../d3-state-visualizer/node_modules/lodash/_assocSet.js","../../d3-state-visualizer/node_modules/lodash/_baseIsEqual.js","../../d3-state-visualizer/node_modules/lodash/_Symbol.js","../../d3-state-visualizer/node_modules/lodash/get.js","../../d3-state-visualizer/node_modules/lodash/_baseGet.js","../../d3-state-visualizer/node_modules/lodash/_baseToPath.js","../../d3-state-visualizer/node_modules/d3tooltip/lib/utils/functor.js","../node_modules/map2tree/node_modules/lodash/_baseHas.js","../node_modules/map2tree/node_modules/lodash/isArguments.js","../node_modules/map2tree/node_modules/lodash/isArrayLike.js","../node_modules/map2tree/node_modules/lodash/_baseProperty.js","../node_modules/map2tree/node_modules/lodash/isFunction.js","../node_modules/map2tree/node_modules/lodash/isString.js","../node_modules/map2tree/node_modules/lodash/_isIndex.js","../node_modules/map2tree/node_modules/lodash/_Stack.js","../node_modules/map2tree/node_modules/lodash/_assocDelete.js","../node_modules/map2tree/node_modules/lodash/_assocGet.js","../node_modules/map2tree/node_modules/lodash/_assocHas.js","../node_modules/map2tree/node_modules/lodash/_hashHas.js","../node_modules/map2tree/node_modules/lodash/_assocSet.js","../node_modules/map2tree/node_modules/lodash/_baseIsEqual.js","../node_modules/map2tree/node_modules/lodash/_Symbol.js","../node_modules/map2tree/node_modules/lodash/get.js","../node_modules/map2tree/node_modules/lodash/_baseGet.js","../node_modules/map2tree/node_modules/lodash/_baseToPath.js","../node_modules/d3tooltip/lib/utils/functor.js","../node_modules/react-scripts/config/polyfills.js","../node_modules/react-scripts/node_modules/promise/lib/rejection-tracking.js","../node_modules/asap/browser-raw.js","../node_modules/react-scripts/node_modules/promise/lib/es6-extensions.js","../node_modules/whatwg-fetch/fetch.js","../node_modules/object-assign/index.js","index.js","../../d3-state-visualizer/lib/index.js","../../d3-state-visualizer/lib/charts/index.js","../../d3-state-visualizer/lib/charts/tree/tree.js","../../d3-state-visualizer/node_modules/d3/d3.js","../../d3-state-visualizer/node_modules/map2tree/lib/index.js","../../d3-state-visualizer/node_modules/lodash/isPlainObject.js","../../d3-state-visualizer/node_modules/lodash/mapValues.js","../../d3-state-visualizer/node_modules/lodash/_baseForOwn.js","../../d3-state-visualizer/node_modules/lodash/_baseFor.js","../../d3-state-visualizer/node_modules/lodash/_createBaseFor.js","../../d3-state-visualizer/node_modules/lodash/_baseKeys.js","../../d3-state-visualizer/node_modules/lodash/_indexKeys.js","../../d3-state-visualizer/node_modules/lodash/_baseTimes.js","../../d3-state-visualizer/node_modules/lodash/isArrayLikeObject.js","../../d3-state-visualizer/node_modules/lodash/_getLength.js","../../d3-state-visualizer/node_modules/lodash/_isPrototype.js","../../d3-state-visualizer/node_modules/lodash/_baseIteratee.js","../../d3-state-visualizer/node_modules/lodash/_baseMatches.js","../../d3-state-visualizer/node_modules/lodash/_baseIsMatch.js","../../d3-state-visualizer/node_modules/lodash/_stackClear.js","../../d3-state-visualizer/node_modules/lodash/_stackDelete.js","../../d3-state-visualizer/node_modules/lodash/eq.js","../../d3-state-visualizer/node_modules/lodash/_stackGet.js","../../d3-state-visualizer/node_modules/lodash/_stackHas.js","../../d3-state-visualizer/node_modules/lodash/_stackSet.js","../../d3-state-visualizer/node_modules/lodash/_MapCache.js","../../d3-state-visualizer/node_modules/lodash/_mapClear.js","../../d3-state-visualizer/node_modules/lodash/_Hash.js","../../d3-state-visualizer/node_modules/lodash/isNative.js","../../d3-state-visualizer/node_modules/lodash/_checkGlobal.js","../../d3-state-visualizer/node_modules/lodash/_mapDelete.js","../../d3-state-visualizer/node_modules/lodash/_hashDelete.js","../../d3-state-visualizer/node_modules/lodash/_mapGet.js","../../d3-state-visualizer/node_modules/lodash/_hashGet.js","../../d3-state-visualizer/node_modules/lodash/_mapHas.js","../../d3-state-visualizer/node_modules/lodash/_mapSet.js","../../d3-state-visualizer/node_modules/lodash/_hashSet.js","../../d3-state-visualizer/node_modules/lodash/_baseIsEqualDeep.js","../../d3-state-visualizer/node_modules/lodash/_equalArrays.js","../../d3-state-visualizer/node_modules/lodash/_arraySome.js","../../d3-state-visualizer/node_modules/lodash/_equalByTag.js","../../d3-state-visualizer/node_modules/lodash/_Uint8Array.js","../../d3-state-visualizer/node_modules/lodash/_mapToArray.js","../../d3-state-visualizer/node_modules/lodash/_setToArray.js","../../d3-state-visualizer/node_modules/lodash/_equalObjects.js","../../d3-state-visualizer/node_modules/lodash/_getTag.js","../../d3-state-visualizer/node_modules/lodash/_Set.js","../../d3-state-visualizer/node_modules/lodash/isTypedArray.js","../../d3-state-visualizer/node_modules/lodash/_getMatchData.js","../../d3-state-visualizer/node_modules/lodash/_isStrictComparable.js","../../d3-state-visualizer/node_modules/lodash/toPairs.js","../../d3-state-visualizer/node_modules/lodash/_baseToPairs.js","../../d3-state-visualizer/node_modules/lodash/_arrayMap.js","../../d3-state-visualizer/node_modules/lodash/_baseMatchesProperty.js","../../d3-state-visualizer/node_modules/lodash/_stringToPath.js","../../d3-state-visualizer/node_modules/lodash/toString.js","../../d3-state-visualizer/node_modules/lodash/isSymbol.js","../../d3-state-visualizer/node_modules/lodash/hasIn.js","../../d3-state-visualizer/node_modules/lodash/_baseHasIn.js","../../d3-state-visualizer/node_modules/lodash/_hasPath.js","../../d3-state-visualizer/node_modules/lodash/last.js","../../d3-state-visualizer/node_modules/lodash/_parent.js","../../d3-state-visualizer/node_modules/lodash/_baseSlice.js","../../d3-state-visualizer/node_modules/lodash/identity.js","../../d3-state-visualizer/node_modules/lodash/property.js","../../d3-state-visualizer/node_modules/lodash/_basePropertyDeep.js","../../d3-state-visualizer/node_modules/deepmerge/index.js","../../d3-state-visualizer/lib/charts/tree/utils.js","../../d3-state-visualizer/lib/charts/tree/sortAndSerialize.js","../../d3-state-visualizer/node_modules/d3tooltip/lib/index.js","../../d3-state-visualizer/node_modules/d3tooltip/lib/utils/index.js","../../d3-state-visualizer/node_modules/d3tooltip/lib/utils/prependClass.js","lib-before-fix/charts/tree/tree.js","../node_modules/d3/d3.js","../node_modules/map2tree/lib/index.js","../node_modules/map2tree/node_modules/lodash/isPlainObject.js","../node_modules/map2tree/node_modules/lodash/mapValues.js","../node_modules/map2tree/node_modules/lodash/_baseForOwn.js","../node_modules/map2tree/node_modules/lodash/_baseFor.js","../node_modules/map2tree/node_modules/lodash/_createBaseFor.js","../node_modules/map2tree/node_modules/lodash/_baseKeys.js","../node_modules/map2tree/node_modules/lodash/_indexKeys.js","../node_modules/map2tree/node_modules/lodash/_baseTimes.js","../node_modules/map2tree/node_modules/lodash/isArrayLikeObject.js","../node_modules/map2tree/node_modules/lodash/_getLength.js","../node_modules/map2tree/node_modules/lodash/_isPrototype.js","../node_modules/map2tree/node_modules/lodash/_baseIteratee.js","../node_modules/map2tree/node_modules/lodash/_baseMatches.js","../node_modules/map2tree/node_modules/lodash/_baseIsMatch.js","../node_modules/map2tree/node_modules/lodash/_stackClear.js","../node_modules/map2tree/node_modules/lodash/_stackDelete.js","../node_modules/map2tree/node_modules/lodash/eq.js","../node_modules/map2tree/node_modules/lodash/_stackGet.js","../node_modules/map2tree/node_modules/lodash/_stackHas.js","../node_modules/map2tree/node_modules/lodash/_stackSet.js","../node_modules/map2tree/node_modules/lodash/_MapCache.js","../node_modules/map2tree/node_modules/lodash/_mapClear.js","../node_modules/map2tree/node_modules/lodash/_Hash.js","../node_modules/map2tree/node_modules/lodash/isNative.js","../node_modules/map2tree/node_modules/lodash/_checkGlobal.js","../node_modules/map2tree/node_modules/lodash/_mapDelete.js","../node_modules/map2tree/node_modules/lodash/_hashDelete.js","../node_modules/map2tree/node_modules/lodash/_mapGet.js","../node_modules/map2tree/node_modules/lodash/_hashGet.js","../node_modules/map2tree/node_modules/lodash/_mapHas.js","../node_modules/map2tree/node_modules/lodash/_mapSet.js","../node_modules/map2tree/node_modules/lodash/_hashSet.js","../node_modules/map2tree/node_modules/lodash/_baseIsEqualDeep.js","../node_modules/map2tree/node_modules/lodash/_equalArrays.js","../node_modules/map2tree/node_modules/lodash/_arraySome.js","../node_modules/map2tree/node_modules/lodash/_equalByTag.js","../node_modules/map2tree/node_modules/lodash/_Uint8Array.js","../node_modules/map2tree/node_modules/lodash/_mapToArray.js","../node_modules/map2tree/node_modules/lodash/_setToArray.js","../node_modules/map2tree/node_modules/lodash/_equalObjects.js","../node_modules/map2tree/node_modules/lodash/_getTag.js","../node_modules/map2tree/node_modules/lodash/_Set.js","../node_modules/map2tree/node_modules/lodash/isTypedArray.js","../node_modules/map2tree/node_modules/lodash/_getMatchData.js","../node_modules/map2tree/node_modules/lodash/_isStrictComparable.js","../node_modules/map2tree/node_modules/lodash/toPairs.js","../node_modules/map2tree/node_modules/lodash/_baseToPairs.js","../node_modules/map2tree/node_modules/lodash/_arrayMap.js","../node_modules/map2tree/node_modules/lodash/_baseMatchesProperty.js","../node_modules/map2tree/node_modules/lodash/_stringToPath.js","../node_modules/map2tree/node_modules/lodash/toString.js","../node_modules/map2tree/node_modules/lodash/isSymbol.js","../node_modules/map2tree/node_modules/lodash/hasIn.js","../node_modules/map2tree/node_modules/lodash/_baseHasIn.js","../node_modules/map2tree/node_modules/lodash/_hasPath.js","../node_modules/map2tree/node_modules/lodash/last.js","../node_modules/map2tree/node_modules/lodash/_parent.js","../node_modules/map2tree/node_modules/lodash/_baseSlice.js","../node_modules/map2tree/node_modules/lodash/identity.js","../node_modules/map2tree/node_modules/lodash/property.js","../node_modules/map2tree/node_modules/lodash/_basePropertyDeep.js","../node_modules/deepmerge/index.js","lib-before-fix/charts/tree/utils.js","lib-before-fix/charts/tree/sortAndSerialize.js","../node_modules/d3tooltip/lib/index.js","../node_modules/d3tooltip/lib/utils/index.js","../node_modules/d3tooltip/lib/utils/prependClass.js","../node_modules/immutability-helper/index.js","../node_modules/invariant/browser.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","isArray","Array","isObjectLike","value","__","@@functional/placeholder","_arity","fn","apply","this","arguments","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_cloneRegExp","pattern","RegExp","source","global","ignoreCase","multiline","sticky","unicode","_complement","f","_concat","set1","set2","idx","len1","length","len2","result","_containsWith","pred","x","list","len","_curry1","f1","a","_curry2","f2","b","_curry3","f3","_curryN","received","combined","argsIdx","left","combinedIdx","_filter","_forceReduced","@@transducer/value","@@transducer/reduced","_functionsWith","obj","key","_has","prop","_identity","_isArray","val","toString","_isInteger","Number","isInteger","_isNumber","_isString","_isTransformer","_map","_pipe","g","_pipeP","ctx","then","_quote","replace","_reduced","_slice","args","from","to","Math","max","min","_toISOString","pad","Date","toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","_xdropRepeatsWith","XDropRepeatsWith","xf","lastValue","undefined","seenFirstValue","input","sameAsLast","_xfBase","init","_xfilter","XFilter","_xfind","XFind","found","_xfindIndex","XFindIndex","_xfindLast","XFindLast","last","_xfindLastIndex","XFindLastIndex","lastIdx","_xmap","XMap","_xtake","XTake","_xtakeWhile","XTakeWhile","_xwrap","XWrap","acc","add","adjust","start","_idx","_list","always","aperture","limit","append","el","assoc","assocPath","path","bind","thisObj","both","comparator","complement","cond","pairs","containsWith","countBy","counts","createMapEntry","curryN","dec","defaultTo","v","differenceWith","first","second","out","firstLen","containsPred","dissoc","dissocPath","head","tail","divide","dropLastWhile","either","empty","constructor","evolve","transformations","transformation","type","fromPairs","gt","gte","has","hasIn","identical","identity","ifElse","condition","onTrue","onFalse","inc","insert","elt","splice","insertAll","elts","is","Ctor","isArrayLike","String","nodeType","isEmpty","isNil","keys","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","contains","item","nIdx","ks","keysIn","NaN","lt","lte","mapAccum","tuple","mapAccumRight","match","rx","str","mathMod","maxBy","merge","minBy","modulo","multiply","nAry","negate","not","nth","offset","charAt","nthArg","nthChar","nthCharCode","charCodeAt","of","once","called","over","Identity","map","lens","y","paths","pick","names","pickAll","pickBy","test","prepend","propOr","propSatisfies","props","ps","range","TypeError","push","reduceRight","reduced","remove","count","regex","replacement","reverse","scan","set","sort","sortBy","aa","bb","subtract","takeLastWhile","Infinity","tap","times","toPairs","toPairsIn","trim","ws","hasProtoTrim","beginRx","endRx","unapply","unary","uncurryN","depth","endIdx","currentDepth","unfold","seed","pair","uniqWith","update","values","vals","valuesIn","vs","view","Const","where","spec","testObj","wrap","wrapper","xprod","j","ilen","jlen","zip","rv","zipObj","zipWith","F","T","_checkForMethod","methodname","_clone","refFrom","refTo","copy","copiedValue","_createPartialApplicator","concat","_dispatchable","_equals","stackA","stackB","typeA","valueOf","getTime","keysA","pop","_hasMethod","methodName","_makeFlat","recursive","flatt","_reduce","_arrayReduce","_iterableReduce","iter","step","next","done","_methodReduce","reduce","symIterator","Symbol","iterator","_stepCat","_stepCatArray","@@transducer/init","@@transducer/step","xs","@@transducer/result","_stepCatString","_stepCatObject","_xall","XAll","all","_xany","XAny","any","_xdrop","XDrop","_xdropWhile","XDropWhile","_xgroupBy","XGroupBy","inputs","addIndex","origFn","and","binary","clone","curry","dropWhile","equals","filter","find","findIndex","findLast","findLastIndex","flatten","flip","forEach","functions","functionsIn","groupBy","intersectionWith","list1","list2","results","intersperse","separator","into","invert","invertObj","lastIndexOf","target","mapObj","mapObjIndexed","none","or","partial","partialRight","partition","pathEq","_path","pluck","propEq","propIs","reject","repeat","fromIndex","toIndex","splitEvery","sum","take","takeWhile","transduce","unionWith","uniq","unnest","useWith","transformers","tlen","whereEq","_flatCat","preservingReduced","ret","rxf","_indexOf","_predicateWrap","predPicker","preds","predIterator","predicate","_xchain","allPass","anyPass","ap","fns","chain","commuteMap","consF","ftor","constructN","Fn","$0","$1","$2","$3","$4","$5","$6","$7","$8","$9","converge","after","context","drop","dropLast","dropRepeatsWith","eqProps","obj1","obj2","indexOf","isSet","setter","lensIndex","lensProp","k","liftN","arity","lifted","mean","median","width","mergeAll","pipe","pipeP","product","project","takeLast","_contains","_toString","seen","recur","mapPairs","join","commute","compose","composeK","composeP","construct","difference","dropRepeats","intersection","lift","omit","pipeK","union","uniqBy","appliedItem","applied","invoker","method","Function","memoize","cache","split","toLower","toUpper","R","getNative","root","Map","isLength","MAX_SAFE_INTEGER","assocIndexOf","array","eq","nativeCreate","checkGlobal","objectTypes","function","freeExports","freeModule","freeGlobal","freeSelf","self","freeWindow","window","thisGlobal","isKeyable","eval","e","isHostObject","isProto","isPrototype","baseKeys","indexes","indexKeys","skipIndexes","baseHas","isIndex","isObject","isNative","isKey","reIsPlainProp","reIsDeepProp","noop","getThen","ex","LAST_ERROR","IS_ERROR","tryCallOne","tryCallTwo","Promise","_75","_83","_18","_38","doResolve","safeThen","onFulfilled","onRejected","resolve","res","handle","Handler","deferred","_47","handleResolved","asap","cb","promise","newValue","finale","_71","reason","_44","getPrototypeOf","objectProto","isArguments","isArrayLikeObject","objectToString","argsTag","isFunction","getLength","baseProperty","tag","funcTag","genTag","isString","stringTag","reIsUint","Stack","index","clear","entry","stackClear","stackDelete","stackGet","stackHas","stackSet","assocDelete","arrayProto","assocGet","assocHas","webpackPolyfill","deprecate","children","hashHas","hash","assocSet","baseIsEqual","other","customizer","bitmask","stack","baseIsEqualDeep","defaultValue","baseGet","baseToPath","stringToPath","functor","_ramda","default","enable","assign","disable","enabled","options","onUnhandled","id","allRejections","matchWhitelist","rejections","error","whitelist","DEFAULT_WHITELIST","displayId","logged","logError","onHandled","console","warn","_56","clearTimeout","timeout","err","setTimeout","line","some","cls","ReferenceError","RangeError","rawAsap","task","queue","requestFlush","flushing","flush","currentIndex","capacity","newLength","makeRequestCallFromTimer","callback","handleTimer","timeoutHandle","clearInterval","intervalHandle","setInterval","scope","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","toggle","observer","node","document","createTextNode","observe","characterData","data","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","arr","remaining","race","normalizeName","toLowerCase","normalizeValue","iteratorFor","items","shift","support","iterable","Headers","headers","header","getOwnPropertyNames","consumed","body","bodyUsed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","Uint8Array","chars","fromCharCode","bufferClone","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","rejected","text","decode","json","JSON","parse","normalizeMethod","upcased","toUpperCase","methods","Request","url","credentials","mode","referrer","form","bytes","decodeURIComponent","parseHeaders","rawHeaders","parts","Response","bodyInit","status","ok","statusText","fetch","viewClasses","DataView","isView","oldValue","thisArg","entries","response","redirectStatuses","redirect","location","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","toObject","getOwnPropertySymbols","propIsEnumerable","test1","test2","test3","letter","symbols","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_d3_state_visualizer__","__WEBPACK_IMPORTED_MODULE_1__lib_before_fix_charts_tree_tree__","__WEBPACK_IMPORTED_MODULE_2_immutability_helper__","__WEBPACK_IMPORTED_MODULE_2_immutability_helper___default","defaultAppState","todoStore","todos","title","completedCount","appStates","$unshift","$push","1","$set","3","config","state","size","aspectRatio","isSorted","widthBetweenNodesCoeff","heightBetweenNodesCoeff","style","border","tooltipOptions","top","indentationSize","transitionDuration","oldRender","getElementById","render","updateState","tree","_charts","charts","newObj","_tree2","_tree3","_interopRequireDefault","_extends","DOMNode","findParentNodePosition","nodePositionsById","nodeId","currentPosition","parentId","_deepmerge","_deepmerge3","defaultOptions","initialZoom","margin","blinkDuration","rootKeyName","pushMethod","onClickText","right","height","bottom","fullWidth","fullHeight","attr","preserveAspectRatio","viewBox","_d4","select","zoom","behavior","scaleExtent","scale","vis","cursor","on","_d3$event","event","translate","transform","radius","layout","previousNodePositionsById","diagonal","svg","projection","maxNodeCountByLevel","_utils","getNodeGroupByDepthCount","nodes","links","maxLabelLength","nodePositions","parent","selectAll","nodeIndex","nodeEnter","enter","class","position","previousPosition","fill","colors","mouseover","hover","mouseout","disabled","_d3tooltip2","getTooltipString","nodeEnterInnerGroup","r","click","clickedNode","defaultPrevented","toggleChildren","text-anchor","dy","fill-opacity","stroke","stroke-width","_children","collapsed","nodeUpdate","transition","duration","getBBox","__oldData__","nodeExit","exit","futurePosition","link","_d","_d2","nextState","_map2tree2","message","visit","_d3","_map2tree","_deepmerge2","_d3tooltip","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","ownerDocument","documentElement","d3_window","defaultView","d3_ascending","d3_number","d3_numeric","isNaN","d3_bisector","compare","lo","hi","mid","d3_transposeLength","d3_range_integerScale","d3_class","ctor","properties","d3_Map","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","d3_vendorSymbol","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","z","listeners","listenerByName","listener","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","thiz","argumentz","e1","e0","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","d3_selection_classedRe","requote","d3_selection_classes","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","classList","getAttribute","lastIndex","d3_selection_style","priority","styleNull","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElement","createElementNS","createNS","d3_selectionRemove","parentNode","removeChild","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","d3_selection_each","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","i0","j0","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","d3_array","addEventListener","removeAll","d3_selection_onListener","d3_selection_onFilters","d3_selection_onFilter","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","w","d3_event_dragSelect","suppressClick","off","d3_mousePoint","container","changedTouches","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","scrollX","scrollY","padding","ctm","getScreenCTM","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","format","hsl","color","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","mimeType","d3_xhr","respond","d3_xhrHasResponse","load","XDomainRequest","onreadystatechange","readyState","onprogress","progress","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","d3_timer","delay","now","time","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","d3_format_precision","ceil","log","LN10","d3_formatPrefix","abs","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","specifier","d3_format_re","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","d3_date_utc","UTC","d3_time_interval","number","date","d0","d1","d3_date","dt","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","d3_time_formatPads","d3_time_formats","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","points","current","isSubject","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","polygon","polygonStarted","d3_geo_clipSegmentLength1","rotatedClipStart","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","φarc","d3_geo_clipCircle","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","d3_geo_clipExtent","corner","comparePoints","ca","insidePolygon","wn","linePoint","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","moveTo","lineTo","closePath","d3_geo_resample","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","b0","ringPoint","a00","b00","c00","b1","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","newArc","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","d3_geom_quadtreeVisit","sx","sy","d3_geom_quadtreeFind","closestPoint","minDistance2","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","d3_scale_linearRebind","d3_scale_linearTickRange","span","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","cancelId","cancel","tick","tweens","ease","d3_svg_axisX","d3_svg_axisY","d3_time_formatIsoNative","d3_time_scale","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","d3_html","d3_document","createRange","selectNode","createContextualFragment","version","d3_arraySlice","childNodes","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","permutes","transpose","matrix","row","arrays","merged","nest","mapType","rollup","sortValues","keyValue","valuesByKey","sortKey","sortKeys","keyMap","order","d3_requote_re","__proto__","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","getComputedStyle","getPropertyValue","html","innerHTML","appendChild","insertBefore","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","datum","nextSibling","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","scaleTo","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","d3_formatPrefixes","toPrecision","toExponential","getUTCDay","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","ys","x1_","y1_","x2_","y2_","compat","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","bundle","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","childs","revalue","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","tops","bottoms","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","worst","stickify","rmax","rmin","ratio","stickies","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","curve","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ey","d3_svg_brushResizes","extent1","extent0","yi","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","responseXML","visitFn","childrenFn","getNode","map2tree","_isPlainObject2","toJS","_options$key","rootNodeKey","_options$pushMethod","currentNode","_mapValues2","maybeImmutable","newNode","_isArray2","_newNode$children$pus","_isPlainObject","_mapValues","isPlainObject","objectTag","proto","funcToString","objectCtorString","mapValues","iteratee","baseIteratee","baseForOwn","baseFor","createBaseFor","fromRight","keysFunc","nativeKeys","baseTimes","baseMatchesProperty","baseMatches","matchData","getMatchData","baseIsMatch","noCustomizer","objValue","srcValue","UNORDERED_COMPARE_FLAG","PARTIAL_COMPARE_FLAG","LARGE_ARRAY_SIZE","MapCache","mapClear","mapDelete","mapGet","mapHas","mapSet","Hash","reIsNative","reIsHostCtor","reRegExpChar","hashDelete","hashGet","HASH_UNDEFINED","hashSet","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","getTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","equalArrays","equalObjects","isPartial","isUnordered","arrLength","othLength","stacked","arrValue","othValue","compared","arraySome","arrayBufferTag","boolTag","dateTag","errorTag","numberTag","regexpTag","mapTag","convert","mapToArray","setTag","setToArray","symbolTag","symbolValueOf","symbolProto","objProps","objLength","skipCtor","objCtor","othCtor","Set","mapCtorString","setCtorString","ctorString","typedArrayTags","isStrictComparable","baseToPairs","arrayMap","rePropName","quote","reEscapeChar","isSymbol","symbolToString","INFINITY","hasPath","baseHasIn","hasFunc","baseSlice","basePropertyDeep","factory","deepmerge","src","dst","collapseChildren","expandChildren","rootNode","nodeGroupByDepthCount","traverseFrom","childNode","_ref","_ref$indentationSize","spacer","cr2br","spaces2nbsp","json2html","_sortAndSerialize2","_sortAndSerialize","sortObject","strict","_typeof","tObj","sortAndSerialize","tooltip","tip","mouseover.tip","_d3$mouse","mouseX","mouseY","anchor","className","prependClass","attrs","z-index","styles","mousemove.tip","_d3$mouse2","mouseout.tip","_defaultOptions$optio","_utils2","_prependClass","_prependClass2","_functor","_functor2","_ret","classNames","_toConsumableArray","arr2","__WEBPACK_IMPORTED_MODULE_0_d3__","__WEBPACK_IMPORTED_MODULE_0_d3___default","__WEBPACK_IMPORTED_MODULE_1_ramda__","__WEBPACK_IMPORTED_MODULE_2_map2tree__","__WEBPACK_IMPORTED_MODULE_2_map2tree___default","__WEBPACK_IMPORTED_MODULE_3_deepmerge__","__WEBPACK_IMPORTED_MODULE_3_deepmerge___default","__WEBPACK_IMPORTED_MODULE_4__utils__","__WEBPACK_IMPORTED_MODULE_5_d3tooltip__","__WEBPACK_IMPORTED_MODULE_5_d3tooltip___default","__WEBPACK_IMPORTED_MODULE_0_ramda__","__WEBPACK_IMPORTED_MODULE_1__sortAndSerialize__","newContext","invariant","commands","nextObject","getAllKeys","objectWasNextObject","isEquals","nextValueForKey","defaultCommands","extend","directive","invariantPushAndUnshift","command","specValue","invariantSplices","invariantSplice","invariantApply","invariantSet","invariantMerge","$splice","originalObject","$unset","$merge","$apply","original","argIndex","framesToPop"],"mappings":"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UACA5F,QACAyR,eACAlX,UACAqN,QACAsO,aACAC,YACA4B,QACA1B,SACAvQ,MACAC,OACA4B,OACA3B,YACAE,iBACAyL,UACAC,iBACAzL,SACAG,WACAxI,OACAyI,SACAiQ,QACAC,UACAgC,WACAjS,SACAmQ,YACA5Y,OACA0I,SACAC,UACAC,YACAC,QACAC,UACAgL,QACA/K,OACAC,OACAG,UACAC,WACAC,eACAE,MACA0Q,QACAzQ,QACAuK,MACArK,QACAsK,WACAC,gBACAC,aACAxQ,QACAyQ,UACAnK,QACAE,WACAC,UACA0O,QACAqB,SACApB,SACAzE,SACAhK,WACA0O,WACAC,WACA1a,QACAgW,UACAC,UACAjK,UACAC,iBACAC,SACAE,SACA2F,UACAxF,eACAC,WACA0J,UACAzJ,UACA0J,UACAjV,WACA2L,WACAC,QACAC,OACAxK,SACAyK,QACAC,UACAqP,SACAhG,cACAlJ,YACAmJ,OACA1P,QACA2P,QACAmE,YACAtN,iBACAoJ,aACAlJ,OACAzB,QACA0B,SACA+O,WACA9O,WACAC,aACAtN,YACAoc,WACA9F,aACA/I,QACArG,QACA0G,WACAC,SACAC,YACAI,UACAuN,SACAlF,aACAC,QACAkF,UACArN,YACAoI,UACAnI,UACAoI,WACAnI,UACAE,YACAE,QACAE,SACAgI,WACA7H,QACAE,SACAI,OACAE,UACAC,WAMAxV,GAAAD,QAAAqiB,KAOCjiB,KAAA6B,ON8MK,SAAUhC,EAAQD,EAASH,GOrgPjC,GAAAyiB,GAAAziB,EAAA,IACA0iB,EAAA1iB,EAAA,IAGA2iB,EAAAF,EAAAC,EAAA,MAEAtiB,GAAAD,QAAAwiB,GP4gPM,SAAUviB,EAAQD,EAASH,IQ7gPhC,WAED,YA0BA,IAAA+B,IAAcC,4BAAA,GAGdC,EAAA,SAAAd,EAAAe,GAEA,OAAAf,GACA,OACA,kBACA,MAAAe,GAAAC,MAAAC,KAAAC,WAEA,QACA,gBAAAC,GACA,MAAAJ,GAAAC,MAAAC,KAAAC,WAEA,QACA,gBAAAC,EAAAC,GACA,MAAAL,GAAAC,MAAAC,KAAAC,WAEA,QACA,gBAA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zT,MACAE,eACAG,WACAC,SACA6Q,SACAsB,QACAlS,QACAQ,UACA5F,QACAyR,eACAlX,UACAqN,QACAsO,aACAC,YACA4B,QACA1B,SACAvQ,MACAC,OACA4B,OACA3B,YACAE,iBACAyL,UACAC,iBACAzL,SACAG,WACAxI,OACAyI,SACAiQ,QACAC,UACAgC,WACAjS,SACAmQ,YACA5Y,OACA0I,SACAC,UACAC,YACAC,QACAC,UACAgL,QACA/K,OACAC,OACAG,UACAC,WACAC,eACAE,MACA0Q,QACAzQ,QACAuK,MACArK,QACAsK,WACAC,gBACAC,aACAxQ,QACAyQ,UACAnK,QACAE,WACAC,UACA0O,QACAqB,SACApB,SACAzE,SACAhK,WACA0O,WACAC,WACA1a,QACAgW,UACAC,UACAjK,UACAC,iBACAC,SACAE,SACA2F,UACAxF,eACAC,WACA0J,UACAzJ,UACA0J,UACAjV,WACA2L,WACAC,QACAC,OACAxK,SACAyK,QACAC,UACAqP,SACAhG,cACAlJ,YACAmJ,OACA1P,QACA2P,QACAmE,YACAtN,iBACAoJ,aACAlJ,OACAzB,QACA0B,SACA+O,WACA9O,WACAC,aACAtN,YACAoc,WACA9F,aACA/I,QACArG,QACA0G,WACAC,SACAC,YACAI,UACAuN,SACAlF,aACAC,QACAkF,UACArN,YACAoI,UACAnI,UACAoI,WACAnI,UACAE,YACAE,QACAE,SACAgI,WACA7H,QACAE,SACAI,OACAE,UACAC,WAMAxV,GAAAD,QAAAqiB,KAOCjiB,KAAA6B,ORyhPK,SAAUhC,EAAQD,EAASH,GSh1djC,GAAAyiB,GAAAziB,EAAA,IACA0iB,EAAA1iB,EAAA,IAGA2iB,EAAAF,EAAAC,EAAA,MAEAtiB,GAAAD,QAAAwiB,GTu1dM,SAAUviB,EAAQD,GUl0dxB,QAAAyiB,GAAA9gB,GACA,sBAAAA,OAAA,GAAAA,EAAA,MAAAA,GAAA+gB,EA3BA,GAAAA,GAAA,gBA8BAziB,GAAAD,QAAAyiB,GVo2dM,SAAUxiB,EAAQD,EAASH,GWx3djC,QAAA8iB,GAAAC,EAAAld,GAEA,IADA,GAAA5B,G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","file":"static/js/main.78644bf7.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/d3-state-visualizer-test/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 69);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n//  Ramda v0.17.1\n//  https://github.com/ramda/ramda\n//  (c) 2013-2015 Scott Sauyet, Michael Hurley, and David Chambers\n//  Ramda may be freely distributed under the MIT license.\n\n;(function() {\n\n  'use strict';\n\n  /**\n     * A special placeholder value used to specify \"gaps\" within curried functions,\n     * allowing partial application of any combination of arguments,\n     * regardless of their positions.\n     *\n     * If `g` is a curried ternary function and `_` is `R.__`, the following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2, _)(1, 3)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @constant\n     * @memberOf R\n     * @category Function\n     * @example\n     *\n     *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n     *      greet('Alice'); //=> 'Hello, Alice!'\n     */\n    var __ = { '@@functional/placeholder': true };\n\n    // jshint unused:vars\n    var _arity = function _arity(n, fn) {\n        // jshint unused:vars\n        switch (n) {\n        case 0:\n            return function () {\n                return fn.apply(this, arguments);\n            };\n        case 1:\n            return function (a0) {\n                return fn.apply(this, arguments);\n            };\n        case 2:\n            return function (a0, a1) {\n                return fn.apply(this, arguments);\n            };\n        case 3:\n            return function (a0, a1, a2) {\n                return fn.apply(this, arguments);\n            };\n        case 4:\n            return function (a0, a1, a2, a3) {\n                return fn.apply(this, arguments);\n            };\n        case 5:\n            return function (a0, a1, a2, a3, a4) {\n                return fn.apply(this, arguments);\n            };\n        case 6:\n            return function (a0, a1, a2, a3, a4, a5) {\n                return fn.apply(this, arguments);\n            };\n        case 7:\n            return function (a0, a1, a2, a3, a4, a5, a6) {\n                return fn.apply(this, arguments);\n            };\n        case 8:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                return fn.apply(this, arguments);\n            };\n        case 9:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                return fn.apply(this, arguments);\n            };\n        case 10:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                return fn.apply(this, arguments);\n            };\n        default:\n            throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n        }\n    };\n\n    var _cloneRegExp = function _cloneRegExp(pattern) {\n        return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n    };\n\n    var _complement = function _complement(f) {\n        return function () {\n            return !f.apply(this, arguments);\n        };\n    };\n\n    /**\n     * Private `concat` function to merge two array-like objects.\n     *\n     * @private\n     * @param {Array|Arguments} [set1=[]] An array-like object.\n     * @param {Array|Arguments} [set2=[]] An array-like object.\n     * @return {Array} A new, merged array.\n     * @example\n     *\n     *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     */\n    var _concat = function _concat(set1, set2) {\n        set1 = set1 || [];\n        set2 = set2 || [];\n        var idx;\n        var len1 = set1.length;\n        var len2 = set2.length;\n        var result = [];\n        idx = 0;\n        while (idx < len1) {\n            result[result.length] = set1[idx];\n            idx += 1;\n        }\n        idx = 0;\n        while (idx < len2) {\n            result[result.length] = set2[idx];\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _containsWith = function _containsWith(pred, x, list) {\n        var idx = 0, len = list.length;\n        while (idx < len) {\n            if (pred(x, list[idx])) {\n                return true;\n            }\n            idx += 1;\n        }\n        return false;\n    };\n\n    /**\n     * Optimized internal two-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry1 = function _curry1(fn) {\n        return function f1(a) {\n            if (arguments.length === 0) {\n                return f1;\n            } else if (a != null && a['@@functional/placeholder'] === true) {\n                return f1;\n            } else {\n                return fn.apply(this, arguments);\n            }\n        };\n    };\n\n    /**\n     * Optimized internal two-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry2 = function _curry2(fn) {\n        return function f2(a, b) {\n            var n = arguments.length;\n            if (n === 0) {\n                return f2;\n            } else if (n === 1 && a != null && a['@@functional/placeholder'] === true) {\n                return f2;\n            } else if (n === 1) {\n                return _curry1(function (b) {\n                    return fn(a, b);\n                });\n            } else if (n === 2 && a != null && a['@@functional/placeholder'] === true && b != null && b['@@functional/placeholder'] === true) {\n                return f2;\n            } else if (n === 2 && a != null && a['@@functional/placeholder'] === true) {\n                return _curry1(function (a) {\n                    return fn(a, b);\n                });\n            } else if (n === 2 && b != null && b['@@functional/placeholder'] === true) {\n                return _curry1(function (b) {\n                    return fn(a, b);\n                });\n            } else {\n                return fn(a, b);\n            }\n        };\n    };\n\n    /**\n     * Optimized internal three-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry3 = function _curry3(fn) {\n        return function f3(a, b, c) {\n            var n = arguments.length;\n            if (n === 0) {\n                return f3;\n            } else if (n === 1 && a != null && a['@@functional/placeholder'] === true) {\n                return f3;\n            } else if (n === 1) {\n                return _curry2(function (b, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 2 && a != null && a['@@functional/placeholder'] === true && b != null && b['@@functional/placeholder'] === true) {\n                return f3;\n            } else if (n === 2 && a != null && a['@@functional/placeholder'] === true) {\n                return _curry2(function (a, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 2 && b != null && b['@@functional/placeholder'] === true) {\n                return _curry2(function (b, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 2) {\n                return _curry1(function (c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && a != null && a['@@functional/placeholder'] === true && b != null && b['@@functional/placeholder'] === true && c != null && c['@@functional/placeholder'] === true) {\n                return f3;\n            } else if (n === 3 && a != null && a['@@functional/placeholder'] === true && b != null && b['@@functional/placeholder'] === true) {\n                return _curry2(function (a, b) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && a != null && a['@@functional/placeholder'] === true && c != null && c['@@functional/placeholder'] === true) {\n                return _curry2(function (a, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && b != null && b['@@functional/placeholder'] === true && c != null && c['@@functional/placeholder'] === true) {\n                return _curry2(function (b, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && a != null && a['@@functional/placeholder'] === true) {\n                return _curry1(function (a) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && b != null && b['@@functional/placeholder'] === true) {\n                return _curry1(function (b) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && c != null && c['@@functional/placeholder'] === true) {\n                return _curry1(function (c) {\n                    return fn(a, b, c);\n                });\n            } else {\n                return fn(a, b, c);\n            }\n        };\n    };\n\n    /**\n     * Internal curryN function.\n     *\n     * @private\n     * @category Function\n     * @param {Number} length The arity of the curried function.\n     * @return {array} An array of arguments received thus far.\n     * @param {Function} fn The function to curry.\n     */\n    var _curryN = function _curryN(length, received, fn) {\n        return function () {\n            var combined = [];\n            var argsIdx = 0;\n            var left = length;\n            var combinedIdx = 0;\n            while (combinedIdx < received.length || argsIdx < arguments.length) {\n                var result;\n                if (combinedIdx < received.length && (received[combinedIdx] == null || received[combinedIdx]['@@functional/placeholder'] !== true || argsIdx >= arguments.length)) {\n                    result = received[combinedIdx];\n                } else {\n                    result = arguments[argsIdx];\n                    argsIdx += 1;\n                }\n                combined[combinedIdx] = result;\n                if (result == null || result['@@functional/placeholder'] !== true) {\n                    left -= 1;\n                }\n                combinedIdx += 1;\n            }\n            return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n        };\n    };\n\n    var _filter = function _filter(fn, list) {\n        var idx = 0, len = list.length, result = [];\n        while (idx < len) {\n            if (fn(list[idx])) {\n                result[result.length] = list[idx];\n            }\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _forceReduced = function _forceReduced(x) {\n        return {\n            '@@transducer/value': x,\n            '@@transducer/reduced': true\n        };\n    };\n\n    /**\n     * @private\n     * @param {Function} fn The strategy for extracting function names from an object\n     * @return {Function} A function that takes an object and returns an array of function names.\n     */\n    var _functionsWith = function _functionsWith(fn) {\n        return function (obj) {\n            return _filter(function (key) {\n                return typeof obj[key] === 'function';\n            }, fn(obj));\n        };\n    };\n\n    var _has = function _has(prop, obj) {\n        return Object.prototype.hasOwnProperty.call(obj, prop);\n    };\n\n    var _identity = function _identity(x) {\n        return x;\n    };\n\n    /**\n     * Tests whether or not an object is an array.\n     *\n     * @private\n     * @param {*} val The object to test.\n     * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n     * @example\n     *\n     *      _isArray([]); //=> true\n     *      _isArray(null); //=> false\n     *      _isArray({}); //=> false\n     */\n    var _isArray = Array.isArray || function _isArray(val) {\n        return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n    };\n\n    /**\n     * Determine if the passed argument is an integer.\n     *\n     * @private\n     * @param {*} n\n     * @category Type\n     * @return {Boolean}\n     */\n    var _isInteger = Number.isInteger || function _isInteger(n) {\n        return n << 0 === n;\n    };\n\n    var _isNumber = function _isNumber(x) {\n        return Object.prototype.toString.call(x) === '[object Number]';\n    };\n\n    var _isString = function _isString(x) {\n        return Object.prototype.toString.call(x) === '[object String]';\n    };\n\n    var _isTransformer = function _isTransformer(obj) {\n        return typeof obj['@@transducer/step'] === 'function';\n    };\n\n    var _map = function _map(fn, list) {\n        var idx = 0, len = list.length, result = Array(len);\n        while (idx < len) {\n            result[idx] = fn(list[idx]);\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _pipe = function _pipe(f, g) {\n        return function () {\n            return g.call(this, f.apply(this, arguments));\n        };\n    };\n\n    var _pipeP = function _pipeP(f, g) {\n        return function () {\n            var ctx = this;\n            return f.apply(ctx, arguments).then(function (x) {\n                return g.call(ctx, x);\n            });\n        };\n    };\n\n    var _quote = function _quote(s) {\n        return '\"' + s.replace(/\"/g, '\\\\\"') + '\"';\n    };\n\n    var _reduced = function _reduced(x) {\n        return x && x['@@transducer/reduced'] ? x : {\n            '@@transducer/value': x,\n            '@@transducer/reduced': true\n        };\n    };\n\n    /**\n     * An optimized, private array `slice` implementation.\n     *\n     * @private\n     * @param {Arguments|Array} args The array or arguments object to consider.\n     * @param {Number} [from=0] The array index to slice from, inclusive.\n     * @param {Number} [to=args.length] The array index to slice to, exclusive.\n     * @return {Array} A new, sliced array.\n     * @example\n     *\n     *      _slice([1, 2, 3, 4, 5], 1, 3); //=> [2, 3]\n     *\n     *      var firstThreeArgs = function(a, b, c, d) {\n     *        return _slice(arguments, 0, 3);\n     *      };\n     *      firstThreeArgs(1, 2, 3, 4); //=> [1, 2, 3]\n     */\n    var _slice = function _slice(args, from, to) {\n        switch (arguments.length) {\n        case 1:\n            return _slice(args, 0, args.length);\n        case 2:\n            return _slice(args, from, args.length);\n        default:\n            var list = [];\n            var idx = 0;\n            var len = Math.max(0, Math.min(args.length, to) - from);\n            while (idx < len) {\n                list[idx] = args[from + idx];\n                idx += 1;\n            }\n            return list;\n        }\n    };\n\n    /**\n     * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n     */\n    var _toISOString = function () {\n        var pad = function pad(n) {\n            return (n < 10 ? '0' : '') + n;\n        };\n        return typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n            return d.toISOString();\n        } : function _toISOString(d) {\n            return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n        };\n    }();\n\n    var _xdropRepeatsWith = function () {\n        function XDropRepeatsWith(pred, xf) {\n            this.xf = xf;\n            this.pred = pred;\n            this.lastValue = undefined;\n            this.seenFirstValue = false;\n        }\n        XDropRepeatsWith.prototype['@@transducer/init'] = function () {\n            return this.xf['@@transducer/init']();\n        };\n        XDropRepeatsWith.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](result);\n        };\n        XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n            var sameAsLast = false;\n            if (!this.seenFirstValue) {\n                this.seenFirstValue = true;\n            } else if (this.pred(this.lastValue, input)) {\n                sameAsLast = true;\n            }\n            this.lastValue = input;\n            return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdropRepeatsWith(pred, xf) {\n            return new XDropRepeatsWith(pred, xf);\n        });\n    }();\n\n    var _xfBase = {\n        init: function () {\n            return this.xf['@@transducer/init']();\n        },\n        result: function (result) {\n            return this.xf['@@transducer/result'](result);\n        }\n    };\n\n    var _xfilter = function () {\n        function XFilter(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XFilter.prototype['@@transducer/init'] = _xfBase.init;\n        XFilter.prototype['@@transducer/result'] = _xfBase.result;\n        XFilter.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n        };\n        return _curry2(function _xfilter(f, xf) {\n            return new XFilter(f, xf);\n        });\n    }();\n\n    var _xfind = function () {\n        function XFind(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.found = false;\n        }\n        XFind.prototype['@@transducer/init'] = _xfBase.init;\n        XFind.prototype['@@transducer/result'] = function (result) {\n            if (!this.found) {\n                result = this.xf['@@transducer/step'](result, void 0);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XFind.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.found = true;\n                result = _reduced(this.xf['@@transducer/step'](result, input));\n            }\n            return result;\n        };\n        return _curry2(function _xfind(f, xf) {\n            return new XFind(f, xf);\n        });\n    }();\n\n    var _xfindIndex = function () {\n        function XFindIndex(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.idx = -1;\n            this.found = false;\n        }\n        XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n        XFindIndex.prototype['@@transducer/result'] = function (result) {\n            if (!this.found) {\n                result = this.xf['@@transducer/step'](result, -1);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n            this.idx += 1;\n            if (this.f(input)) {\n                this.found = true;\n                result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n            }\n            return result;\n        };\n        return _curry2(function _xfindIndex(f, xf) {\n            return new XFindIndex(f, xf);\n        });\n    }();\n\n    var _xfindLast = function () {\n        function XFindLast(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n        XFindLast.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n        };\n        XFindLast.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.last = input;\n            }\n            return result;\n        };\n        return _curry2(function _xfindLast(f, xf) {\n            return new XFindLast(f, xf);\n        });\n    }();\n\n    var _xfindLastIndex = function () {\n        function XFindLastIndex(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.idx = -1;\n            this.lastIdx = -1;\n        }\n        XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n        XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n        };\n        XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n            this.idx += 1;\n            if (this.f(input)) {\n                this.lastIdx = this.idx;\n            }\n            return result;\n        };\n        return _curry2(function _xfindLastIndex(f, xf) {\n            return new XFindLastIndex(f, xf);\n        });\n    }();\n\n    var _xmap = function () {\n        function XMap(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XMap.prototype['@@transducer/init'] = _xfBase.init;\n        XMap.prototype['@@transducer/result'] = _xfBase.result;\n        XMap.prototype['@@transducer/step'] = function (result, input) {\n            return this.xf['@@transducer/step'](result, this.f(input));\n        };\n        return _curry2(function _xmap(f, xf) {\n            return new XMap(f, xf);\n        });\n    }();\n\n    var _xtake = function () {\n        function XTake(n, xf) {\n            this.xf = xf;\n            this.n = n;\n        }\n        XTake.prototype['@@transducer/init'] = _xfBase.init;\n        XTake.prototype['@@transducer/result'] = _xfBase.result;\n        XTake.prototype['@@transducer/step'] = function (result, input) {\n            if (this.n === 0) {\n                return _reduced(result);\n            } else {\n                this.n -= 1;\n                return this.xf['@@transducer/step'](result, input);\n            }\n        };\n        return _curry2(function _xtake(n, xf) {\n            return new XTake(n, xf);\n        });\n    }();\n\n    var _xtakeWhile = function () {\n        function XTakeWhile(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n        XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n        };\n        return _curry2(function _xtakeWhile(f, xf) {\n            return new XTakeWhile(f, xf);\n        });\n    }();\n\n    var _xwrap = function () {\n        function XWrap(fn) {\n            this.f = fn;\n        }\n        XWrap.prototype['@@transducer/init'] = function () {\n            throw new Error('init not implemented on XWrap');\n        };\n        XWrap.prototype['@@transducer/result'] = function (acc) {\n            return acc;\n        };\n        XWrap.prototype['@@transducer/step'] = function (acc, x) {\n            return this.f(acc, x);\n        };\n        return function _xwrap(fn) {\n            return new XWrap(fn);\n        };\n    }();\n\n    /**\n     * Adds two numbers. Equivalent to `a + b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Number}\n     * @see R.subtract\n     * @example\n     *\n     *      R.add(2, 3);       //=>  5\n     *      R.add(7)(10);      //=> 17\n     */\n    var add = _curry2(function add(a, b) {\n        return a + b;\n    });\n\n    /**\n     * Applies a function to the value at the given index of an array,\n     * returning a new copy of the array with the element at the given\n     * index replaced with the result of the function application.\n     * @see R.update\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> a) -> Number -> [a] -> [a]\n     * @param {Function} fn The function to apply.\n     * @param {Number} idx The index.\n     * @param {Array|Arguments} list An array-like object whose value\n     *        at the supplied index will be replaced.\n     * @return {Array} A copy of the supplied array-like object with\n     *         the element at index `idx` replaced with the value\n     *         returned by applying `fn` to the existing element.\n     * @example\n     *\n     *      R.adjust(R.add(10), 1, [0, 1, 2]);     //=> [0, 11, 2]\n     *      R.adjust(R.add(10))(1)([0, 1, 2]);     //=> [0, 11, 2]\n     */\n    var adjust = _curry3(function adjust(fn, idx, list) {\n        if (idx >= list.length || idx < -list.length) {\n            return list;\n        }\n        var start = idx < 0 ? list.length : 0;\n        var _idx = start + idx;\n        var _list = _concat(list);\n        _list[_idx] = fn(list[_idx]);\n        return _list;\n    });\n\n    /**\n     * Returns a function that always returns the given value. Note that for\n     * non-primitives the value returned is a reference to the original value.\n     *\n     * This function is known as `const`, `constant`, or `K` (for K combinator)\n     * in other languages and libraries.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> (* -> a)\n     * @param {*} val The value to wrap in a function\n     * @return {Function} A Function :: * -> val.\n     * @example\n     *\n     *      var t = R.always('Tee');\n     *      t(); //=> 'Tee'\n     */\n    var always = _curry1(function always(val) {\n        return function () {\n            return val;\n        };\n    });\n\n    /**\n     * Returns a new list, composed of n-tuples of consecutive elements\n     * If `n` is greater than the length of the list, an empty list is returned.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @param {Number} n The size of the tuples to create\n     * @param {Array} list The list to split into `n`-tuples\n     * @return {Array} The new list.\n     * @example\n     *\n     *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n     *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n     *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n     */\n    var aperture = _curry2(function aperture(n, list) {\n        var idx = 0;\n        var limit = list.length - (n - 1);\n        var acc = new Array(limit >= 0 ? limit : 0);\n        while (idx < limit) {\n            acc[idx] = _slice(list, idx, idx + n);\n            idx += 1;\n        }\n        return acc;\n    });\n\n    /**\n     * Returns a new list containing the contents of the given list, followed by the given\n     * element.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The element to add to the end of the new list.\n     * @param {Array} list The list whose contents will be added to the beginning of the output\n     *        list.\n     * @return {Array} A new list containing the contents of the old list followed by `el`.\n     * @see R.prepend\n     * @example\n     *\n     *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n     *      R.append('tests', []); //=> ['tests']\n     *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n     */\n    var append = _curry2(function append(el, list) {\n        return _concat(list, [el]);\n    });\n\n    /**\n     * Applies function `fn` to the argument list `args`. This is useful for\n     * creating a fixed-arity function from a variadic function. `fn` should\n     * be a bound function if context is significant.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (*... -> a) -> [*] -> a\n     * @param {Function} fn\n     * @param {Array} args\n     * @return {*}\n     * @see R.call, R.unapply\n     * @example\n     *\n     *      var nums = [1, 2, 3, -99, 42, 6, 7];\n     *      R.apply(Math.max, nums); //=> 42\n     */\n    var apply = _curry2(function apply(fn, args) {\n        return fn.apply(this, args);\n    });\n\n    /**\n     * Makes a shallow clone of an object, setting or overriding the specified\n     * property with the given value.  Note that this copies and flattens\n     * prototype properties onto the new object as well.  All non-primitive\n     * properties are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig String -> a -> {k: v} -> {k: v}\n     * @param {String} prop the property name to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except for the specified property.\n     * @see R.dissoc\n     * @example\n     *\n     *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n     */\n    var assoc = _curry3(function assoc(prop, val, obj) {\n        var result = {};\n        for (var p in obj) {\n            result[p] = obj[p];\n        }\n        result[prop] = val;\n        return result;\n    });\n\n    /**\n     * Makes a shallow clone of an object, setting or overriding the nodes\n     * required to create the given path, and placing the specific value at the\n     * tail end of that path.  Note that this copies and flattens prototype\n     * properties onto the new object as well.  All non-primitive properties\n     * are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> a -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except along the specified path.\n     * @see R.dissocPath\n     * @example\n     *\n     *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n     */\n    var assocPath = _curry3(function assocPath(path, val, obj) {\n        switch (path.length) {\n        case 0:\n            return obj;\n        case 1:\n            return assoc(path[0], val, obj);\n        default:\n            return assoc(path[0], assocPath(_slice(path, 1), val, Object(obj[path[0]])), obj);\n        }\n    });\n\n    /**\n     * Creates a function that is bound to a context.\n     * Note: `R.bind` does not provide the additional argument-binding capabilities of\n     * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @category Object\n     * @see R.partial\n     * @sig (* -> *) -> {*} -> (* -> *)\n     * @param {Function} fn The function to bind to context\n     * @param {Object} thisObj The context to bind `fn` to\n     * @return {Function} A function that will execute in the context of `thisObj`.\n     */\n    var bind = _curry2(function bind(fn, thisObj) {\n        return _arity(fn.length, function () {\n            return fn.apply(thisObj, arguments);\n        });\n    });\n\n    /**\n     * A function wrapping calls to the two functions in an `&&` operation, returning the result of the first\n     * function if it is false-y and the result of the second function otherwise.  Note that this is\n     * short-circuited, meaning that the second function will not be invoked if the first returns a false-y\n     * value.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n     * @see R.and\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0 };\n     *      var f = R.both(gt10, even);\n     *      f(100); //=> true\n     *      f(101); //=> false\n     */\n    var both = _curry2(function both(f, g) {\n        return function _both() {\n            return f.apply(this, arguments) && g.apply(this, arguments);\n        };\n    });\n\n    /**\n     * Makes a comparator function out of a function that reports whether the first element is less than the second.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a, b -> Boolean) -> (a, b -> Number)\n     * @param {Function} pred A predicate function of arity two.\n     * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`.\n     * @example\n     *\n     *      var cmp = R.comparator(function(a, b) {\n     *        return a.age < b.age;\n     *      });\n     *      var people = [\n     *        // ...\n     *      ];\n     *      R.sort(cmp, people);\n     */\n    var comparator = _curry1(function comparator(pred) {\n        return function (a, b) {\n            return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n        };\n    });\n\n    /**\n     * Takes a function `f` and returns a function `g` such that:\n     *\n     *   - applying `g` to zero or more arguments will give __true__ if applying\n     *     the same arguments to `f` gives a logical __false__ value; and\n     *\n     *   - applying `g` to zero or more arguments will give __false__ if applying\n     *     the same arguments to `f` gives a logical __true__ value.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> *) -> (*... -> Boolean)\n     * @param {Function} f\n     * @return {Function}\n     * @see R.not\n     * @example\n     *\n     *      var isEven = function(n) { return n % 2 === 0; };\n     *      var isOdd = R.complement(isEven);\n     *      isOdd(21); //=> true\n     *      isOdd(42); //=> false\n     */\n    var complement = _curry1(_complement);\n\n    /**\n     * Returns a function, `fn`, which encapsulates if/else-if/else logic.\n     * `R.cond` takes a list of [predicate, transform] pairs. All of the\n     * arguments to `fn` are applied to each of the predicates in turn\n     * until one returns a \"truthy\" value, at which point `fn` returns the\n     * result of applying its arguments to the corresponding transformer.\n     * If none of the predicates matches, `fn` returns undefined.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n     * @param {Array} pairs\n     * @return {Function}\n     * @example\n     *\n     *      var fn = R.cond([\n     *        [R.equals(0),   R.always('water freezes at 0°C')],\n     *        [R.equals(100), R.always('water boils at 100°C')],\n     *        [R.T,           function(temp) { return 'nothing special happens at ' + temp + '°C'; }]\n     *      ]);\n     *      fn(0); //=> 'water freezes at 0°C'\n     *      fn(50); //=> 'nothing special happens at 50°C'\n     *      fn(100); //=> 'water boils at 100°C'\n     */\n    var cond = _curry1(function cond(pairs) {\n        return function () {\n            var idx = 0;\n            while (idx < pairs.length) {\n                if (pairs[idx][0].apply(this, arguments)) {\n                    return pairs[idx][1].apply(this, arguments);\n                }\n                idx += 1;\n            }\n        };\n    });\n\n    /**\n     * Returns `true` if the `x` is found in the `list`, using `pred` as an\n     * equality predicate for `x`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a, a -> Boolean) -> a -> [a] -> Boolean\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {*} x The item to find\n     * @param {Array} list The list to iterate over\n     * @return {Boolean} `true` if `x` is in `list`, else `false`.\n     * @example\n     *\n     *      var xs = [{x: 12}, {x: 11}, {x: 10}];\n     *      R.containsWith(function(a, b) { return a.x === b.x; }, {x: 10}, xs); //=> true\n     *      R.containsWith(function(a, b) { return a.x === b.x; }, {x: 1}, xs); //=> false\n     */\n    var containsWith = _curry3(_containsWith);\n\n    /**\n     * Counts the elements of a list according to how many match each value\n     * of a key generated by the supplied function. Returns an object\n     * mapping the keys produced by `fn` to the number of occurrences in\n     * the list. Note that all keys are coerced to strings because of how\n     * JavaScript objects work.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a -> String) -> [a] -> {*}\n     * @param {Function} fn The function used to map values to keys.\n     * @param {Array} list The list to count elements from.\n     * @return {Object} An object mapping keys to number of occurrences in the list.\n     * @example\n     *\n     *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n     *      var letters = R.split('', 'abcABCaaaBBc');\n     *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n     *      R.countBy(R.toLower)(letters);   //=> {'a': 5, 'b': 4, 'c': 3}\n     */\n    var countBy = _curry2(function countBy(fn, list) {\n        var counts = {};\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            var key = fn(list[idx]);\n            counts[key] = (_has(key, counts) ? counts[key] : 0) + 1;\n            idx += 1;\n        }\n        return counts;\n    });\n\n    /**\n     * Creates an object containing a single key:value pair.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig String -> a -> {String:a}\n     * @param {String} key\n     * @param {*} val\n     * @return {Object}\n     * @example\n     *\n     *      var matchPhrases = R.compose(\n     *        R.createMapEntry('must'),\n     *        R.map(R.createMapEntry('match_phrase'))\n     *      );\n     *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n     */\n    var createMapEntry = _curry2(function createMapEntry(key, val) {\n        var obj = {};\n        obj[key] = val;\n        return obj;\n    });\n\n    /**\n     * Returns a curried equivalent of the provided function, with the\n     * specified arity. The curried function has two unusual capabilities.\n     * First, its arguments needn't be provided one at a time. If `g` is\n     * `R.curryN(3, f)`, the following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`,\n     * the following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curry\n     * @example\n     *\n     *      var addFourNumbers = function() {\n     *        return R.sum([].slice.call(arguments, 0, 4));\n     *      };\n     *\n     *      var curriedAddFourNumbers = R.curryN(4, addFourNumbers);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n    var curryN = _curry2(function curryN(length, fn) {\n        if (length === 1) {\n            return _curry1(fn);\n        }\n        return _arity(length, _curryN(length, [], fn));\n    });\n\n    /**\n     * Decrements its argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @see R.inc\n     * @example\n     *\n     *      R.dec(42); //=> 41\n     */\n    var dec = add(-1);\n\n    /**\n     * Returns the second argument if it is not null or undefined. If it is null\n     * or undefined, the first (default) argument is returned.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig a -> b -> a | b\n     * @param {a} val The default value.\n     * @param {b} val The value to return if it is not null or undefined\n     * @return {*} The the second value or the default value\n     * @example\n     *\n     *      var defaultTo42 = defaultTo(42);\n     *\n     *      defaultTo42(null);  //=> 42\n     *      defaultTo42(undefined);  //=> 42\n     *      defaultTo42('Ramda');  //=> 'Ramda'\n     */\n    var defaultTo = _curry2(function defaultTo(d, v) {\n        return v == null ? d : v;\n    });\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not contained in the second list.\n     * Duplication is determined according to the value returned by applying the supplied predicate to two list\n     * elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a,a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @see R.difference\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @example\n     *\n     *      function cmp(x, y) { return x.a === y.a; }\n     *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n     *      var l2 = [{a: 3}, {a: 4}];\n     *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n     */\n    var differenceWith = _curry3(function differenceWith(pred, first, second) {\n        var out = [];\n        var idx = 0;\n        var firstLen = first.length;\n        var containsPred = containsWith(pred);\n        while (idx < firstLen) {\n            if (!containsPred(first[idx], second) && !containsPred(first[idx], out)) {\n                out[out.length] = first[idx];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new object that does not contain a `prop` property.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig String -> {k: v} -> {k: v}\n     * @param {String} prop the name of the property to dissociate\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original but without the specified property\n     * @see R.assoc\n     * @example\n     *\n     *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n     */\n    var dissoc = _curry2(function dissoc(prop, obj) {\n        var result = {};\n        for (var p in obj) {\n            if (p !== prop) {\n                result[p] = obj[p];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Makes a shallow clone of an object, omitting the property at the\n     * given path. Note that this copies and flattens prototype properties\n     * onto the new object as well.  All non-primitive properties are copied\n     * by reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object without the property at path\n     * @see R.assocPath\n     * @example\n     *\n     *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n     */\n    var dissocPath = _curry2(function dissocPath(path, obj) {\n        switch (path.length) {\n        case 0:\n            return obj;\n        case 1:\n            return dissoc(path[0], obj);\n        default:\n            var head = path[0];\n            var tail = _slice(path, 1);\n            return obj[head] == null ? obj : assoc(head, dissocPath(tail, obj[head]), obj);\n        }\n    });\n\n    /**\n     * Divides two numbers. Equivalent to `a / b`.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a / b`.\n     * @see R.multiply\n     * @example\n     *\n     *      R.divide(71, 100); //=> 0.71\n     *\n     *      var half = R.divide(R.__, 2);\n     *      half(42); //=> 21\n     *\n     *      var reciprocal = R.divide(1);\n     *      reciprocal(4);   //=> 0.25\n     */\n    var divide = _curry2(function divide(a, b) {\n        return a / b;\n    });\n\n    /**\n     * Returns a new list containing all but last the`n` elements of a given list,\n     * passing each value from the right to the supplied predicate function, skipping\n     * elements while the predicate function returns `true`. The predicate function\n     * is passed one argument: (value)*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.takeLastWhile\n     * @example\n     *\n     *      var lteThree = function(x) {\n     *        return x <= 3;\n     *      };\n     *\n     *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2]\n     */\n    var dropLastWhile = _curry2(function dropLastWhile(pred, list) {\n        var idx = list.length - 1;\n        while (idx >= 0 && pred(list[idx])) {\n            idx -= 1;\n        }\n        return _slice(list, 0, idx + 1);\n    });\n\n    /**\n     * A function wrapping calls to the two functions in an `||` operation, returning the result of the first\n     * function if it is truth-y and the result of the second function otherwise.  Note that this is\n     * short-circuited, meaning that the second function will not be invoked if the first returns a truth-y\n     * value.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n     * @see R.or\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0 };\n     *      var f = R.either(gt10, even);\n     *      f(101); //=> true\n     *      f(8); //=> true\n     */\n    var either = _curry2(function either(f, g) {\n        return function _either() {\n            return f.apply(this, arguments) || g.apply(this, arguments);\n        };\n    });\n\n    /**\n     * Returns the empty value of its argument's type. Ramda defines the empty\n     * value of Array (`[]`), Object (`{}`), and String (`''`). Other types are\n     * supported if they define `<Type>.empty` and/or `<Type>.prototype.empty`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> a\n     * @param {*} x\n     * @return {*}\n     * @example\n     *\n     *      R.empty(Just(42));      //=> Nothing()\n     *      R.empty([1, 2, 3]);     //=> []\n     *      R.empty('unicorns');    //=> ''\n     *      R.empty({x: 1, y: 2});  //=> {}\n     */\n    var empty = _curry1(function empty(x) {\n        if (x != null && typeof x.empty === 'function') {\n            return x.empty();\n        } else if (x != null && typeof x.constructor != null && typeof x.constructor.empty === 'function') {\n            return x.constructor.empty();\n        } else {\n            switch (Object.prototype.toString.call(x)) {\n            case '[object Array]':\n                return [];\n            case '[object Object]':\n                return {};\n            case '[object String]':\n                return '';\n            }\n        }\n    });\n\n    /**\n     * Creates a new object by recursively evolving a shallow copy of `object`, according to the\n     * `transformation` functions. All non-primitive properties are copied by reference.\n     *\n     * A `tranformation` function will not be invoked if its corresponding key does not exist in\n     * the evolved object.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n     * @param {Object} transformations The object specifying transformation functions to apply\n     *        to the object.\n     * @param {Object} object The object to be transformed.\n     * @return {Object} The transformed object.\n     * @example\n     *\n     *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n     *      var transformations = {\n     *        firstName: R.trim,\n     *        lastName: R.trim, // Will not get invoked.\n     *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n     *      };\n     *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n     */\n    var evolve = _curry2(function evolve(transformations, object) {\n        var transformation, key, type, result = {};\n        for (key in object) {\n            transformation = transformations[key];\n            type = typeof transformation;\n            result[key] = type === 'function' ? transformation(object[key]) : type === 'object' ? evolve(transformations[key], object[key]) : object[key];\n        }\n        return result;\n    });\n\n    /**\n     * Creates a new object out of a list key-value pairs.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [[k,v]] -> {k: v}\n     * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n     * @return {Object} The object made by pairing up `keys` and `values`.\n     * @see R.toPairs\n     * @example\n     *\n     *      R.fromPairs([['a', 1], ['b', 2],  ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n     */\n    var fromPairs = _curry1(function fromPairs(pairs) {\n        var idx = 0, len = pairs.length, out = {};\n        while (idx < len) {\n            if (_isArray(pairs[idx]) && pairs[idx].length) {\n                out[pairs[idx][0]] = pairs[idx][1];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns `true` if the first argument is greater than the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @see R.lt\n     * @example\n     *\n     *      R.gt(2, 1); //=> true\n     *      R.gt(2, 2); //=> false\n     *      R.gt(2, 3); //=> false\n     *      R.gt('a', 'z'); //=> false\n     *      R.gt('z', 'a'); //=> true\n     */\n    var gt = _curry2(function gt(a, b) {\n        return a > b;\n    });\n\n    /**\n     * Returns `true` if the first argument is greater than or equal to the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean}\n     * @see R.lte\n     * @example\n     *\n     *      R.gte(2, 1); //=> true\n     *      R.gte(2, 2); //=> true\n     *      R.gte(2, 3); //=> false\n     *      R.gte('a', 'z'); //=> false\n     *      R.gte('z', 'a'); //=> true\n     */\n    var gte = _curry2(function gte(a, b) {\n        return a >= b;\n    });\n\n    /**\n     * Returns whether or not an object has an own property with\n     * the specified name\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      var hasName = R.has('name');\n     *      hasName({name: 'alice'});   //=> true\n     *      hasName({name: 'bob'});     //=> true\n     *      hasName({});                //=> false\n     *\n     *      var point = {x: 0, y: 0};\n     *      var pointHas = R.has(R.__, point);\n     *      pointHas('x');  //=> true\n     *      pointHas('y');  //=> true\n     *      pointHas('z');  //=> false\n     */\n    var has = _curry2(_has);\n\n    /**\n     * Returns whether or not an object or its prototype chain has\n     * a property with the specified name\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      function Rectangle(width, height) {\n     *        this.width = width;\n     *        this.height = height;\n     *      }\n     *      Rectangle.prototype.area = function() {\n     *        return this.width * this.height;\n     *      };\n     *\n     *      var square = new Rectangle(2, 2);\n     *      R.hasIn('width', square);  //=> true\n     *      R.hasIn('area', square);  //=> true\n     */\n    var hasIn = _curry2(function hasIn(prop, obj) {\n        return prop in obj;\n    });\n\n    /**\n     * Returns true if its arguments are identical, false otherwise. Values are\n     * identical if they reference the same memory. `NaN` is identical to `NaN`;\n     * `0` and `-0` are not identical.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      var o = {};\n     *      R.identical(o, o); //=> true\n     *      R.identical(1, 1); //=> true\n     *      R.identical(1, '1'); //=> false\n     *      R.identical([], []); //=> false\n     *      R.identical(0, -0); //=> false\n     *      R.identical(NaN, NaN); //=> true\n     */\n    // SameValue algorithm\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Step 6.a: NaN == NaN\n    var identical = _curry2(function identical(a, b) {\n        // SameValue algorithm\n        if (a === b) {\n            // Steps 1-5, 7-10\n            // Steps 6.b-6.e: +0 != -0\n            return a !== 0 || 1 / a === 1 / b;\n        } else {\n            // Step 6.a: NaN == NaN\n            return a !== a && b !== b;\n        }\n    });\n\n    /**\n     * A function that does nothing but return the parameter supplied to it. Good as a default\n     * or placeholder function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> a\n     * @param {*} x The value to return.\n     * @return {*} The input value, `x`.\n     * @example\n     *\n     *      R.identity(1); //=> 1\n     *\n     *      var obj = {};\n     *      R.identity(obj) === obj; //=> true\n     */\n    var identity = _curry1(_identity);\n\n    /**\n     * Creates a function that will process either the `onTrue` or the `onFalse` function depending\n     * upon the result of the `condition` predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n     * @param {Function} condition A predicate function\n     * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n     * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n     * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n     *                    function depending upon the result of the `condition` predicate.\n     * @example\n     *\n     *      // Flatten all arrays in the list but leave other values alone.\n     *      var flattenArrays = R.map(R.ifElse(Array.isArray, R.flatten, R.identity));\n     *\n     *      flattenArrays([[0], [[10], [8]], 1234, {}]); //=> [[0], [10, 8], 1234, {}]\n     *      flattenArrays([[[10], 123], [8, [10]], \"hello\"]); //=> [[10, 123], [8, 10], \"hello\"]\n     */\n    var ifElse = _curry3(function ifElse(condition, onTrue, onFalse) {\n        return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n            return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n        });\n    });\n\n    /**\n     * Increments its argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @see R.dec\n     * @example\n     *\n     *      R.inc(42); //=> 43\n     */\n    var inc = add(1);\n\n    /**\n     * Inserts the supplied element into the list, at index `index`.  _Note\n     * that this is not destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} index The position to insert the element\n     * @param {*} elt The element to insert into the Array\n     * @param {Array} list The list to insert into\n     * @return {Array} A new Array with `elt` inserted at `index`.\n     * @example\n     *\n     *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n     */\n    var insert = _curry3(function insert(idx, elt, list) {\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\n        var result = _slice(list);\n        result.splice(idx, 0, elt);\n        return result;\n    });\n\n    /**\n     * Inserts the sub-list into the list, at index `index`.  _Note  that this\n     * is not destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a] -> [a]\n     * @param {Number} index The position to insert the sub-list\n     * @param {Array} elts The sub-list to insert into the Array\n     * @param {Array} list The list to insert the sub-list into\n     * @return {Array} A new Array with `elts` inserted starting at `index`.\n     * @example\n     *\n     *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n     */\n    var insertAll = _curry3(function insertAll(idx, elts, list) {\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\n        return _concat(_concat(_slice(list, 0, idx), elts), _slice(list, idx));\n    });\n\n    /**\n     * See if an object (`val`) is an instance of the supplied constructor.\n     * This function will check up the inheritance chain, if any.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig (* -> {*}) -> a -> Boolean\n     * @param {Object} ctor A constructor\n     * @param {*} val The value to test\n     * @return {Boolean}\n     * @example\n     *\n     *      R.is(Object, {}); //=> true\n     *      R.is(Number, 1); //=> true\n     *      R.is(Object, 1); //=> false\n     *      R.is(String, 's'); //=> true\n     *      R.is(String, new String('')); //=> true\n     *      R.is(Object, new String('')); //=> true\n     *      R.is(Object, 's'); //=> false\n     *      R.is(Number, {}); //=> false\n     */\n    var is = _curry2(function is(Ctor, val) {\n        return val != null && val.constructor === Ctor || val instanceof Ctor;\n    });\n\n    /**\n     * Tests whether or not an object is similar to an array.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @category List\n     * @sig * -> Boolean\n     * @param {*} x The object to test.\n     * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n     * @example\n     *\n     *      R.isArrayLike([]); //=> true\n     *      R.isArrayLike(true); //=> false\n     *      R.isArrayLike({}); //=> false\n     *      R.isArrayLike({length: 10}); //=> false\n     *      R.isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n     */\n    var isArrayLike = _curry1(function isArrayLike(x) {\n        if (_isArray(x)) {\n            return true;\n        }\n        if (!x) {\n            return false;\n        }\n        if (typeof x !== 'object') {\n            return false;\n        }\n        if (x instanceof String) {\n            return false;\n        }\n        if (x.nodeType === 1) {\n            return !!x.length;\n        }\n        if (x.length === 0) {\n            return true;\n        }\n        if (x.length > 0) {\n            return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n        }\n        return false;\n    });\n\n    /**\n     * Reports whether the list has zero elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [a] -> Boolean\n     * @param {Array} list\n     * @return {Boolean}\n     * @example\n     *\n     *      R.isEmpty([1, 2, 3]);   //=> false\n     *      R.isEmpty([]);          //=> true\n     *      R.isEmpty('');          //=> true\n     *      R.isEmpty(null);        //=> false\n     *      R.isEmpty(R.keys({}));  //=> true\n     *      R.isEmpty({});          //=> false ({} does not have a length property)\n     *      R.isEmpty({length: 0}); //=> true\n     */\n    var isEmpty = _curry1(function isEmpty(list) {\n        return Object(list).length === 0;\n    });\n\n    /**\n     * Checks if the input value is `null` or `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig * -> Boolean\n     * @param {*} x The value to test.\n     * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n     * @example\n     *\n     *      R.isNil(null); //=> true\n     *      R.isNil(undefined); //=> true\n     *      R.isNil(0); //=> false\n     *      R.isNil([]); //=> false\n     */\n    var isNil = _curry1(function isNil(x) {\n        return x == null;\n    });\n\n    /**\n     * Returns a list containing the names of all the enumerable own\n     * properties of the supplied object.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own properties.\n     * @example\n     *\n     *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n     */\n    // cover IE < 9 keys issues\n    var keys = function () {\n        // cover IE < 9 keys issues\n        var hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');\n        var nonEnumerableProps = [\n            'constructor',\n            'valueOf',\n            'isPrototypeOf',\n            'toString',\n            'propertyIsEnumerable',\n            'hasOwnProperty',\n            'toLocaleString'\n        ];\n        var contains = function contains(list, item) {\n            var idx = 0;\n            while (idx < list.length) {\n                if (list[idx] === item) {\n                    return true;\n                }\n                idx += 1;\n            }\n            return false;\n        };\n        return typeof Object.keys === 'function' ? _curry1(function keys(obj) {\n            return Object(obj) !== obj ? [] : Object.keys(obj);\n        }) : _curry1(function keys(obj) {\n            if (Object(obj) !== obj) {\n                return [];\n            }\n            var prop, ks = [], nIdx;\n            for (prop in obj) {\n                if (_has(prop, obj)) {\n                    ks[ks.length] = prop;\n                }\n            }\n            if (hasEnumBug) {\n                nIdx = nonEnumerableProps.length - 1;\n                while (nIdx >= 0) {\n                    prop = nonEnumerableProps[nIdx];\n                    if (_has(prop, obj) && !contains(ks, prop)) {\n                        ks[ks.length] = prop;\n                    }\n                    nIdx -= 1;\n                }\n            }\n            return ks;\n        });\n    }();\n\n    /**\n     * Returns a list containing the names of all the\n     * properties of the supplied object, including prototype properties.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.keysIn(f); //=> ['x', 'y']\n     */\n    var keysIn = _curry1(function keysIn(obj) {\n        var prop, ks = [];\n        for (prop in obj) {\n            ks[ks.length] = prop;\n        }\n        return ks;\n    });\n\n    /**\n     * Returns the number of elements in the array by returning `list.length`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> Number\n     * @param {Array} list The array to inspect.\n     * @return {Number} The length of the array.\n     * @example\n     *\n     *      R.length([]); //=> 0\n     *      R.length([1, 2, 3]); //=> 3\n     */\n    var length = _curry1(function length(list) {\n        return list != null && is(Number, list.length) ? list.length : NaN;\n    });\n\n    /**\n     * Returns `true` if the first argument is less than the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @see R.gt\n     * @example\n     *\n     *      R.lt(2, 1); //=> false\n     *      R.lt(2, 2); //=> false\n     *      R.lt(2, 3); //=> true\n     *      R.lt('a', 'z'); //=> true\n     *      R.lt('z', 'a'); //=> false\n     */\n    var lt = _curry2(function lt(a, b) {\n        return a < b;\n    });\n\n    /**\n     * Returns `true` if the first argument is less than or equal to the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean}\n     * @see R.gte\n     * @example\n     *\n     *      R.lte(2, 1); //=> false\n     *      R.lte(2, 2); //=> true\n     *      R.lte(2, 3); //=> true\n     *      R.lte('a', 'z'); //=> true\n     *      R.lte('z', 'a'); //=> false\n     */\n    var lte = _curry2(function lte(a, b) {\n        return a <= b;\n    });\n\n    /**\n     * The mapAccum function behaves like a combination of map and reduce; it applies a\n     * function to each element of a list, passing an accumulating parameter from left to\n     * right, and returning a final value of this accumulator together with the new list.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should return\n     * a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var append = function(a, b) {\n     *        return [a + b, a + b];\n     *      }\n     *\n     *      R.mapAccum(append, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n     */\n    var mapAccum = _curry3(function mapAccum(fn, acc, list) {\n        var idx = 0, len = list.length, result = [], tuple = [acc];\n        while (idx < len) {\n            tuple = fn(tuple[0], list[idx]);\n            result[idx] = tuple[1];\n            idx += 1;\n        }\n        return [\n            tuple[0],\n            result\n        ];\n    });\n\n    /**\n     * The mapAccumRight function behaves like a combination of map and reduce; it applies a\n     * function to each element of a list, passing an accumulating parameter from right\n     * to left, and returning a final value of this accumulator together with the new list.\n     *\n     * Similar to `mapAccum`, except moves through the input list from the right to the\n     * left.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should return\n     * a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var append = function(a, b) {\n     *        return [a + b, a + b];\n     *      }\n     *\n     *      R.mapAccumRight(append, 0, digits); //=> ['04321', ['04321', '0432', '043', '04']]\n     */\n    var mapAccumRight = _curry3(function mapAccumRight(fn, acc, list) {\n        var idx = list.length - 1, result = [], tuple = [acc];\n        while (idx >= 0) {\n            tuple = fn(tuple[0], list[idx]);\n            result[idx] = tuple[1];\n            idx -= 1;\n        }\n        return [\n            tuple[0],\n            result\n        ];\n    });\n\n    /**\n     * Tests a regular expression against a String. Note that this function\n     * will return an empty array when there are no matches. This differs\n     * from [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n     * which returns `null` when there are no matches.\n     *\n     * @func\n     * @memberOf R\n     * @see R.test\n     * @category String\n     * @sig RegExp -> String -> [String | Undefined]\n     * @param {RegExp} rx A regular expression.\n     * @param {String} str The string to match against\n     * @return {Array} The list of matches or empty array.\n     * @example\n     *\n     *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n     *      R.match(/a/, 'b'); //=> []\n     *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n     */\n    var match = _curry2(function match(rx, str) {\n        return str.match(rx) || [];\n    });\n\n    /**\n     * mathMod behaves like the modulo operator should mathematically, unlike the `%`\n     * operator (and by extension, R.modulo). So while \"-17 % 5\" is -2,\n     * mathMod(-17, 5) is 3. mathMod requires Integer arguments, and returns NaN\n     * when the modulus is zero or negative.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} m The dividend.\n     * @param {Number} p the modulus.\n     * @return {Number} The result of `b mod a`.\n     * @example\n     *\n     *      R.mathMod(-17, 5);  //=> 3\n     *      R.mathMod(17, 5);   //=> 2\n     *      R.mathMod(17, -5);  //=> NaN\n     *      R.mathMod(17, 0);   //=> NaN\n     *      R.mathMod(17.2, 5); //=> NaN\n     *      R.mathMod(17, 5.3); //=> NaN\n     *\n     *      var clock = R.mathMod(R.__, 12);\n     *      clock(15); //=> 3\n     *      clock(24); //=> 0\n     *\n     *      var seventeenMod = R.mathMod(17);\n     *      seventeenMod(3);  //=> 2\n     *      seventeenMod(4);  //=> 1\n     *      seventeenMod(10); //=> 7\n     */\n    var mathMod = _curry2(function mathMod(m, p) {\n        if (!_isInteger(m)) {\n            return NaN;\n        }\n        if (!_isInteger(p) || p < 1) {\n            return NaN;\n        }\n        return (m % p + p) % p;\n    });\n\n    /**\n     * Returns the larger of its two arguments.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> a\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.maxBy, R.min\n     * @example\n     *\n     *      R.max(789, 123); //=> 789\n     *      R.max('a', 'b'); //=> 'b'\n     */\n    var max = _curry2(function max(a, b) {\n        return b > a ? b : a;\n    });\n\n    /**\n     * Takes a function and two values, and returns whichever value produces\n     * the larger result when passed to the provided function.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord b => (a -> b) -> a -> a -> a\n     * @param {Function} f\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.max, R.minBy\n     * @example\n     *\n     *      R.maxBy(function(n) { return n * n; }, -3, 2); //=> -3\n     */\n    var maxBy = _curry3(function maxBy(f, a, b) {\n        return f(b) > f(a) ? b : a;\n    });\n\n    /**\n     * Create a new object with the own properties of `a`\n     * merged with the own properties of object `b`.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> {k: v} -> {k: v}\n     * @param {Object} a\n     * @param {Object} b\n     * @return {Object}\n     * @example\n     *\n     *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n     *      //=> { 'name': 'fred', 'age': 40 }\n     *\n     *      var resetToDefault = R.merge(R.__, {x: 0});\n     *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n     */\n    var merge = _curry2(function merge(a, b) {\n        var result = {};\n        var ks = keys(a);\n        var idx = 0;\n        while (idx < ks.length) {\n            result[ks[idx]] = a[ks[idx]];\n            idx += 1;\n        }\n        ks = keys(b);\n        idx = 0;\n        while (idx < ks.length) {\n            result[ks[idx]] = b[ks[idx]];\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns the smaller of its two arguments.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> a\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.minBy, R.max\n     * @example\n     *\n     *      R.min(789, 123); //=> 123\n     *      R.min('a', 'b'); //=> 'a'\n     */\n    var min = _curry2(function min(a, b) {\n        return b < a ? b : a;\n    });\n\n    /**\n     * Takes a function and two values, and returns whichever value produces\n     * the smaller result when passed to the provided function.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord b => (a -> b) -> a -> a -> a\n     * @param {Function} f\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.min, R.maxBy\n     * @example\n     *\n     *      R.minBy(function(n) { return n * n; }, -3, 2); //=> 2\n     */\n    var minBy = _curry3(function minBy(f, a, b) {\n        return f(b) < f(a) ? b : a;\n    });\n\n    /**\n     * Divides the second parameter by the first and returns the remainder.\n     * Note that this functions preserves the JavaScript-style behavior for\n     * modulo. For mathematical modulo see `mathMod`\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The value to the divide.\n     * @param {Number} b The pseudo-modulus\n     * @return {Number} The result of `b % a`.\n     * @see R.mathMod\n     * @example\n     *\n     *      R.modulo(17, 3); //=> 2\n     *      // JS behavior:\n     *      R.modulo(-17, 3); //=> -2\n     *      R.modulo(17, -3); //=> 2\n     *\n     *      var isOdd = R.modulo(R.__, 2);\n     *      isOdd(42); //=> 0\n     *      isOdd(21); //=> 1\n     */\n    var modulo = _curry2(function modulo(a, b) {\n        return a % b;\n    });\n\n    /**\n     * Multiplies two numbers. Equivalent to `a * b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a * b`.\n     * @see R.divide\n     * @example\n     *\n     *      var double = R.multiply(2);\n     *      var triple = R.multiply(3);\n     *      double(3);       //=>  6\n     *      triple(4);       //=> 12\n     *      R.multiply(2, 5);  //=> 10\n     */\n    var multiply = _curry2(function multiply(a, b) {\n        return a * b;\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts exactly `n`\n     * parameters. Any extraneous parameters will not be passed to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} n The desired arity of the new function.\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity `n`.\n     * @example\n     *\n     *      var takesTwoArgs = function(a, b) {\n     *        return [a, b];\n     *      };\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.nAry(1, takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only `n` arguments are passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n    var nAry = _curry2(function nAry(n, fn) {\n        switch (n) {\n        case 0:\n            return function () {\n                return fn.call(this);\n            };\n        case 1:\n            return function (a0) {\n                return fn.call(this, a0);\n            };\n        case 2:\n            return function (a0, a1) {\n                return fn.call(this, a0, a1);\n            };\n        case 3:\n            return function (a0, a1, a2) {\n                return fn.call(this, a0, a1, a2);\n            };\n        case 4:\n            return function (a0, a1, a2, a3) {\n                return fn.call(this, a0, a1, a2, a3);\n            };\n        case 5:\n            return function (a0, a1, a2, a3, a4) {\n                return fn.call(this, a0, a1, a2, a3, a4);\n            };\n        case 6:\n            return function (a0, a1, a2, a3, a4, a5) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5);\n            };\n        case 7:\n            return function (a0, a1, a2, a3, a4, a5, a6) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n            };\n        case 8:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n            };\n        case 9:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n            };\n        case 10:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n            };\n        default:\n            throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n        }\n    });\n\n    /**\n     * Negates its argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @example\n     *\n     *      R.negate(42); //=> -42\n     */\n    var negate = _curry1(function negate(n) {\n        return -n;\n    });\n\n    /**\n     * A function that returns the `!` of its argument. It will return `true` when\n     * passed false-y value, and `false` when passed a truth-y one.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig * -> Boolean\n     * @param {*} a any value\n     * @return {Boolean} the logical inverse of passed argument.\n     * @see R.complement\n     * @example\n     *\n     *      R.not(true); //=> false\n     *      R.not(false); //=> true\n     *      R.not(0); => true\n     *      R.not(1); => false\n     */\n    var not = _curry1(function not(a) {\n        return !a;\n    });\n\n    /**\n     * Returns the nth element of the given list or string.\n     * If n is negative the element at index length + n is returned.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> a | Undefined\n     * @sig Number -> String -> String\n     * @param {Number} offset\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      var list = ['foo', 'bar', 'baz', 'quux'];\n     *      R.nth(1, list); //=> 'bar'\n     *      R.nth(-1, list); //=> 'quux'\n     *      R.nth(-99, list); //=> undefined\n     *\n     *      R.nth('abc', 2); //=> 'c'\n     *      R.nth('abc', 3); //=> ''\n     */\n    var nth = _curry2(function nth(offset, list) {\n        var idx = offset < 0 ? list.length + offset : offset;\n        return _isString(list) ? list.charAt(idx) : list[idx];\n    });\n\n    /**\n     * Returns a function which returns its nth argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> *... -> *\n     * @param {Number} n\n     * @return {Function}\n     * @example\n     *\n     *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n     *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n     */\n    var nthArg = _curry1(function nthArg(n) {\n        return function () {\n            return nth(n, arguments);\n        };\n    });\n\n    /**\n     * Returns the nth character of the given string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {String} str\n     * @return {String}\n     * @deprecated since v0.16.0\n     * @example\n     *\n     *      R.nthChar(2, 'Ramda'); //=> 'm'\n     *      R.nthChar(-2, 'Ramda'); //=> 'd'\n     */\n    var nthChar = _curry2(function nthChar(n, str) {\n        return str.charAt(n < 0 ? str.length + n : n);\n    });\n\n    /**\n     * Returns the character code of the nth character of the given string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig Number -> String -> Number\n     * @param {Number} n\n     * @param {String} str\n     * @return {Number}\n     * @deprecated since v0.16.0\n     * @example\n     *\n     *      R.nthCharCode(2, 'Ramda'); //=> 'm'.charCodeAt(0)\n     *      R.nthCharCode(-2, 'Ramda'); //=> 'd'.charCodeAt(0)\n     */\n    var nthCharCode = _curry2(function nthCharCode(n, str) {\n        return str.charCodeAt(n < 0 ? str.length + n : n);\n    });\n\n    /**\n     * Returns a singleton array containing the value provided.\n     *\n     * Note this `of` is different from the ES6 `of`; See\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> [a]\n     * @param {*} x any value\n     * @return {Array} An array wrapping `x`.\n     * @example\n     *\n     *      R.of(null); //=> [null]\n     *      R.of([42]); //=> [[42]]\n     */\n    var of = _curry1(function of(x) {\n        return [x];\n    });\n\n    /**\n     * Accepts a function `fn` and returns a function that guards invocation of `fn` such that\n     * `fn` can only ever be called once, no matter how many times the returned function is\n     * invoked.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a... -> b) -> (a... -> b)\n     * @param {Function} fn The function to wrap in a call-only-once wrapper.\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var addOneOnce = R.once(function(x){ return x + 1; });\n     *      addOneOnce(10); //=> 11\n     *      addOneOnce(addOneOnce(50)); //=> 11\n     */\n    var once = _curry1(function once(fn) {\n        var called = false, result;\n        return function () {\n            if (called) {\n                return result;\n            }\n            called = true;\n            result = fn.apply(this, arguments);\n            return result;\n        };\n    });\n\n    /**\n     * Returns the result of \"setting\" the portion of the given data structure\n     * focused by the given lens to the given value.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> (a -> a) -> s -> s\n     * @param {Lens} lens\n     * @param {*} v\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var headLens = R.lensIndex(0);\n     *\n     *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n     */\n    var over = function () {\n        var Identity = function (x) {\n            return {\n                value: x,\n                map: function (f) {\n                    return Identity(f(x));\n                }\n            };\n        };\n        return _curry3(function over(lens, f, x) {\n            return lens(function (y) {\n                return Identity(f(y));\n            })(x).value;\n        });\n    }();\n\n    /**\n     * Retrieve the value at a given path.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> {k: v} -> v | Undefined\n     * @param {Array} path The path to use.\n     * @return {*} The data at `path`.\n     * @example\n     *\n     *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n     *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n     */\n    var path = _curry2(function path(paths, obj) {\n        if (obj == null) {\n            return;\n        } else {\n            var val = obj;\n            for (var idx = 0, len = paths.length; idx < len && val != null; idx += 1) {\n                val = val[paths[idx]];\n            }\n            return val;\n        }\n    });\n\n    /**\n     * Returns a partial copy of an object containing only the keys specified.  If the key does not exist, the\n     * property is ignored.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.omit\n     * @example\n     *\n     *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n     */\n    var pick = _curry2(function pick(names, obj) {\n        var result = {};\n        var idx = 0;\n        while (idx < names.length) {\n            if (names[idx] in obj) {\n                result[names[idx]] = obj[names[idx]];\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Similar to `pick` except that this one includes a `key: undefined` pair for properties that don't exist.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n     */\n    var pickAll = _curry2(function pickAll(names, obj) {\n        var result = {};\n        var idx = 0;\n        var len = names.length;\n        while (idx < len) {\n            var name = names[idx];\n            result[name] = obj[name];\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a partial copy of an object containing only the keys that\n     * satisfy the supplied predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig (v, k -> Boolean) -> {k: v} -> {k: v}\n     * @param {Function} pred A predicate to determine whether or not a key\n     *        should be included on the output object.\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties that satisfy `pred`\n     *         on it.\n     * @see R.pick\n     * @example\n     *\n     *      var isUpperCase = function(val, key) { return key.toUpperCase() === key; }\n     *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n     */\n    var pickBy = _curry2(function pickBy(test, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (test(obj[prop], prop, obj)) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list with the given element at the front, followed by the contents of the\n     * list.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The item to add to the head of the output list.\n     * @param {Array} list The array to add to the tail of the output list.\n     * @return {Array} A new array.\n     * @see R.append\n     * @example\n     *\n     *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n     */\n    var prepend = _curry2(function prepend(el, list) {\n        return _concat([el], list);\n    });\n\n    /**\n     * Returns a function that when supplied an object returns the indicated property of that object, if it exists.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig s -> {s: a} -> a | Undefined\n     * @param {String} p The property name\n     * @param {Object} obj The object to query\n     * @return {*} The value at `obj.p`.\n     * @example\n     *\n     *      R.prop('x', {x: 100}); //=> 100\n     *      R.prop('x', {}); //=> undefined\n     */\n    var prop = _curry2(function prop(p, obj) {\n        return obj[p];\n    });\n\n    /**\n     * If the given, non-null object has an own property with the specified name,\n     * returns the value of that property.\n     * Otherwise returns the provided default value.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig a -> String -> Object -> a\n     * @param {*} val The default value.\n     * @param {String} p The name of the property to return.\n     * @param {Object} obj The object to query.\n     * @return {*} The value of given property of the supplied object or the default value.\n     * @example\n     *\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var favorite = R.prop('favoriteLibrary');\n     *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n     *\n     *      favorite(alice);  //=> undefined\n     *      favoriteWithDefault(alice);  //=> 'Ramda'\n     */\n    var propOr = _curry3(function propOr(val, p, obj) {\n        return obj != null && _has(p, obj) ? obj[p] : val;\n    });\n\n    /**\n     * Returns `true` if the specified object property satisfies the given\n     * predicate; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n     * @param {Function} pred\n     * @param {String} name\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.propEq\n     * @see R.propIs\n     * @example\n     *\n     *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n     */\n    var propSatisfies = _curry3(function propSatisfies(pred, name, obj) {\n        return pred(obj[name]);\n    });\n\n    /**\n     * Acts as multiple `prop`: array of keys in, array of values out. Preserves order.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [k] -> {k: v} -> [v]\n     * @param {Array} ps The property names to fetch\n     * @param {Object} obj The object to query\n     * @return {Array} The corresponding values or partially applied function.\n     * @example\n     *\n     *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n     *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n     *\n     *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n     *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n     */\n    var props = _curry2(function props(ps, obj) {\n        var len = ps.length;\n        var out = [];\n        var idx = 0;\n        while (idx < len) {\n            out[idx] = obj[ps[idx]];\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a list of numbers from `from` (inclusive) to `to`\n     * (exclusive).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> Number -> [Number]\n     * @param {Number} from The first number in the list.\n     * @param {Number} to One more than the last number in the list.\n     * @return {Array} The list of numbers in tthe set `[a, b)`.\n     * @example\n     *\n     *      R.range(1, 5);    //=> [1, 2, 3, 4]\n     *      R.range(50, 53);  //=> [50, 51, 52]\n     */\n    var range = _curry2(function range(from, to) {\n        if (!(_isNumber(from) && _isNumber(to))) {\n            throw new TypeError('Both arguments to range must be numbers');\n        }\n        var result = [];\n        var n = from;\n        while (n < to) {\n            result.push(n);\n            n += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a single item by iterating through the list, successively calling the iterator\n     * function and passing it an accumulator value and the current value from the array, and\n     * then passing the result to the next call.\n     *\n     * Similar to `reduce`, except moves through the input list from the right to the left.\n     *\n     * The iterator function receives two values: *(acc, value)*\n     *\n     * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse arrays), unlike\n     * the native `Array.prototype.reduce` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var pairs = [ ['a', 1], ['b', 2], ['c', 3] ];\n     *      var flattenPairs = function(acc, pair) {\n     *        return acc.concat(pair);\n     *      };\n     *\n     *      R.reduceRight(flattenPairs, [], pairs); //=> [ 'c', 3, 'b', 2, 'a', 1 ]\n     */\n    var reduceRight = _curry3(function reduceRight(fn, acc, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            acc = fn(acc, list[idx]);\n            idx -= 1;\n        }\n        return acc;\n    });\n\n    /**\n     * Returns a value wrapped to indicate that it is the final value of the\n     * reduce and transduce functions.  The returned value\n     * should be considered a black box: the internal structure is not\n     * guaranteed to be stable.\n     *\n     * Note: this optimization is unavailable to functions not explicitly listed\n     * above.  For instance, it is not currently supported by reduceIndexed,\n     * reduceRight, or reduceRightIndexed.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.reduce, R.transduce\n     * @sig a -> *\n     * @param {*} x The final value of the reduce.\n     * @return {*} The wrapped value.\n     * @example\n     *\n     *      R.reduce(\n     *        R.pipe(R.add, R.ifElse(R.lte(10), R.reduced, R.identity)),\n     *        0,\n     *        [1, 2, 3, 4, 5]) // 10\n     */\n    var reduced = _curry1(_reduced);\n\n    /**\n     * Removes the sub-list of `list` starting at index `start` and containing\n     * `count` elements.  _Note that this is not destructive_: it returns a\n     * copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @param {Number} start The position to start removing elements\n     * @param {Number} count The number of elements to remove\n     * @param {Array} list The list to remove from\n     * @return {Array} A new Array with `count` elements from `start` removed.\n     * @example\n     *\n     *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n     */\n    var remove = _curry3(function remove(start, count, list) {\n        return _concat(_slice(list, 0, Math.min(start, list.length)), _slice(list, Math.min(list.length, start + count)));\n    });\n\n    /**\n     * Replace a substring or regex match in a string with a replacement.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig RegExp|String -> String -> String -> String\n     * @param {RegExp|String} pattern A regular expression or a substring to match.\n     * @param {String} replacement The string to replace the matches with.\n     * @param {String} str The String to do the search and replacement in.\n     * @return {String} The result.\n     * @example\n     *\n     *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *\n     *      // Use the \"g\" (global) flag to replace all occurrences:\n     *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n     */\n    var replace = _curry3(function replace(regex, replacement, str) {\n        return str.replace(regex, replacement);\n    });\n\n    /**\n     * Returns a new list with the same elements as the original list, just\n     * in the reverse order.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The list to reverse.\n     * @return {Array} A copy of the list in reverse order.\n     * @example\n     *\n     *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n     *      R.reverse([1, 2]);     //=> [2, 1]\n     *      R.reverse([1]);        //=> [1]\n     *      R.reverse([]);         //=> []\n     */\n    var reverse = _curry1(function reverse(list) {\n        return _slice(list).reverse();\n    });\n\n    /**\n     * Scan is similar to reduce, but returns a list of successively reduced values from the left\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> [a]\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} A list of all intermediately reduced values.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n     */\n    var scan = _curry3(function scan(fn, acc, list) {\n        var idx = 0, len = list.length, result = [acc];\n        while (idx < len) {\n            acc = fn(acc, list[idx]);\n            result[idx + 1] = acc;\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns the result of \"setting\" the portion of the given data structure\n     * focused by the given lens to the given value.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> a -> s -> s\n     * @param {Lens} lens\n     * @param {*} v\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n     *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n     */\n    var set = _curry3(function set(lens, v, x) {\n        return over(lens, always(v), x);\n    });\n\n    /**\n     * Returns a copy of the list, sorted according to the comparator function, which should accept two values at a\n     * time and return a negative number if the first value is smaller, a positive number if it's larger, and zero\n     * if they are equal.  Please note that this is a **copy** of the list.  It does not modify the original.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,a -> Number) -> [a] -> [a]\n     * @param {Function} comparator A sorting function :: a -> b -> Int\n     * @param {Array} list The list to sort\n     * @return {Array} a new array with its elements sorted by the comparator function.\n     * @example\n     *\n     *      var diff = function(a, b) { return a - b; };\n     *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n     */\n    var sort = _curry2(function sort(comparator, list) {\n        return _slice(list).sort(comparator);\n    });\n\n    /**\n     * Sorts the list according to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord b => (a -> b) -> [a] -> [a]\n     * @param {Function} fn\n     * @param {Array} list The list to sort.\n     * @return {Array} A new list sorted by the keys generated by `fn`.\n     * @example\n     *\n     *      var sortByFirstItem = R.sortBy(prop(0));\n     *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n     *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n     *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var bob = {\n     *        name: 'Bob',\n     *        age: -10\n     *      };\n     *      var clara = {\n     *        name: 'clara',\n     *        age: 314.159\n     *      };\n     *      var people = [clara, bob, alice];\n     *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n     */\n    var sortBy = _curry2(function sortBy(fn, list) {\n        return _slice(list).sort(function (a, b) {\n            var aa = fn(a);\n            var bb = fn(b);\n            return aa < bb ? -1 : aa > bb ? 1 : 0;\n        });\n    });\n\n    /**\n     * Subtracts two numbers. Equivalent to `a - b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a - b`.\n     * @see R.add\n     * @example\n     *\n     *      R.subtract(10, 8); //=> 2\n     *\n     *      var minus5 = R.subtract(R.__, 5);\n     *      minus5(17); //=> 12\n     *\n     *      var complementaryAngle = R.subtract(90);\n     *      complementaryAngle(30); //=> 60\n     *      complementaryAngle(72); //=> 18\n     */\n    var subtract = _curry2(function subtract(a, b) {\n        return a - b;\n    });\n\n    /**\n     * Returns a new list containing the last `n` elements of a given list, passing each value\n     * to the supplied predicate function, and terminating when the predicate function returns\n     * `false`. Excludes the element that caused the predicate function to fail. The predicate\n     * function is passed one argument: *(value)*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.dropLastWhile\n     * @example\n     *\n     *      var isNotOne = function(x) {\n     *        return !(x === 1);\n     *      };\n     *\n     *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n     */\n    var takeLastWhile = _curry2(function takeLastWhile(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0 && fn(list[idx])) {\n            idx -= 1;\n        }\n        return _slice(list, idx + 1, Infinity);\n    });\n\n    /**\n     * Runs the given function with the supplied object, then returns the object.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> *) -> a -> a\n     * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n     * @param {*} x\n     * @return {*} `x`.\n     * @example\n     *\n     *      var sayX = function(x) { console.log('x is ' + x); };\n     *      R.tap(sayX, 100); //=> 100\n     *      //-> 'x is 100'\n     */\n    var tap = _curry2(function tap(fn, x) {\n        fn(x);\n        return x;\n    });\n\n    /**\n     * Determines whether a given string matches a given regular expression.\n     *\n     * @func\n     * @memberOf R\n     * @see R.match\n     * @category String\n     * @sig RegExp -> String -> Boolean\n     * @param {RegExp} pattern\n     * @param {String} str\n     * @return {Boolean}\n     * @example\n     *\n     *      R.test(/^x/, 'xyz'); //=> true\n     *      R.test(/^y/, 'xyz'); //=> false\n     */\n    var test = _curry2(function test(pattern, str) {\n        return _cloneRegExp(pattern).test(str);\n    });\n\n    /**\n     * Calls an input function `n` times, returning an array containing the results of those\n     * function calls.\n     *\n     * `fn` is passed one argument: The current value of `n`, which begins at `0` and is\n     * gradually incremented to `n - 1`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (i -> a) -> i -> [a]\n     * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n     * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n     * @return {Array} An array containing the return values of all calls to `fn`.\n     * @example\n     *\n     *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n     */\n    var times = _curry2(function times(fn, n) {\n        var len = Number(n);\n        var list = new Array(len);\n        var idx = 0;\n        while (idx < len) {\n            list[idx] = fn(idx);\n            idx += 1;\n        }\n        return list;\n    });\n\n    /**\n     * Converts an object into an array of key, value arrays.\n     * Only the object's own properties are used.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own properties.\n     * @see R.fromPairs\n     * @example\n     *\n     *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n     */\n    var toPairs = _curry1(function toPairs(obj) {\n        var pairs = [];\n        for (var prop in obj) {\n            if (_has(prop, obj)) {\n                pairs[pairs.length] = [\n                    prop,\n                    obj[prop]\n                ];\n            }\n        }\n        return pairs;\n    });\n\n    /**\n     * Converts an object into an array of key, value arrays.\n     * The object's own properties and prototype properties are used.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own\n     *         and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n     */\n    var toPairsIn = _curry1(function toPairsIn(obj) {\n        var pairs = [];\n        for (var prop in obj) {\n            pairs[pairs.length] = [\n                prop,\n                obj[prop]\n            ];\n        }\n        return pairs;\n    });\n\n    /**\n     * Removes (strips) whitespace from both ends of the string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to trim.\n     * @return {String} Trimmed version of `str`.\n     * @example\n     *\n     *      R.trim('   xyz  '); //=> 'xyz'\n     *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n     */\n    var trim = function () {\n        var ws = '\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\n        var zeroWidth = '\\u200B';\n        var hasProtoTrim = typeof String.prototype.trim === 'function';\n        if (!hasProtoTrim || (ws.trim() || !zeroWidth.trim())) {\n            return _curry1(function trim(str) {\n                var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n                var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n                return str.replace(beginRx, '').replace(endRx, '');\n            });\n        } else {\n            return _curry1(function trim(str) {\n                return str.trim();\n            });\n        }\n    }();\n\n    /**\n     * Gives a single-word string description of the (native) type of a value, returning such\n     * answers as 'Object', 'Number', 'Array', or 'Null'.  Does not attempt to distinguish user\n     * Object types any further, reporting them all as 'Object'.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig (* -> {*}) -> String\n     * @param {*} val The value to test\n     * @return {String}\n     * @example\n     *\n     *      R.type({}); //=> \"Object\"\n     *      R.type(1); //=> \"Number\"\n     *      R.type(false); //=> \"Boolean\"\n     *      R.type('s'); //=> \"String\"\n     *      R.type(null); //=> \"Null\"\n     *      R.type([]); //=> \"Array\"\n     *      R.type(/[A-z]/); //=> \"RegExp\"\n     */\n    var type = _curry1(function type(val) {\n        return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n    });\n\n    /**\n     * Takes a function `fn`, which takes a single array argument, and returns\n     * a function which:\n     *\n     *   - takes any number of positional arguments;\n     *   - passes these arguments to `fn` as an array; and\n     *   - returns the result.\n     *\n     * In other words, R.unapply derives a variadic function from a function\n     * which takes an array. R.unapply is the inverse of R.apply.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ([*...] -> a) -> (*... -> a)\n     * @param {Function} fn\n     * @return {Function}\n     * @see R.apply\n     * @example\n     *\n     *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n     */\n    var unapply = _curry1(function unapply(fn) {\n        return function () {\n            return fn(_slice(arguments));\n        };\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts exactly 1\n     * parameter. Any extraneous parameters will not be passed to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> b) -> (a -> b)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 1.\n     * @example\n     *\n     *      var takesTwoArgs = function(a, b) {\n     *        return [a, b];\n     *      };\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.unary(takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only 1 argument is passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n    var unary = _curry1(function unary(fn) {\n        return nAry(1, fn);\n    });\n\n    /**\n     * Returns a function of arity `n` from a (manually) curried function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (a -> b) -> (a -> c)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to uncurry.\n     * @return {Function} A new function.\n     * @see R.curry\n     * @example\n     *\n     *      var addFour = function(a) {\n     *        return function(b) {\n     *          return function(c) {\n     *            return function(d) {\n     *              return a + b + c + d;\n     *            };\n     *          };\n     *        };\n     *      };\n     *\n     *      var uncurriedAddFour = R.uncurryN(4, addFour);\n     *      curriedAddFour(1, 2, 3, 4); //=> 10\n     */\n    var uncurryN = _curry2(function uncurryN(depth, fn) {\n        return curryN(depth, function () {\n            var currentDepth = 1;\n            var value = fn;\n            var idx = 0;\n            var endIdx;\n            while (currentDepth <= depth && typeof value === 'function') {\n                endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n                value = value.apply(this, _slice(arguments, idx, endIdx));\n                currentDepth += 1;\n                idx = endIdx;\n            }\n            return value;\n        });\n    });\n\n    /**\n     * Builds a list from a seed value. Accepts an iterator function, which returns either false\n     * to stop iteration or an array of length 2 containing the value to add to the resulting\n     * list and the seed to be used in the next call to the iterator function.\n     *\n     * The iterator function receives one argument: *(seed)*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> [b]) -> * -> [b]\n     * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n     *        either false to quit iteration or an array of length two to proceed. The element\n     *        at index 0 of this array will be added to the resulting array, and the element\n     *        at index 1 will be passed to the next call to `fn`.\n     * @param {*} seed The seed value.\n     * @return {Array} The final list.\n     * @example\n     *\n     *      var f = function(n) { return n > 50 ? false : [-n, n + 10] };\n     *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n     */\n    var unfold = _curry2(function unfold(fn, seed) {\n        var pair = fn(seed);\n        var result = [];\n        while (pair && pair.length) {\n            result[result.length] = pair[0];\n            pair = fn(pair[1]);\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list containing only one copy of each element in the original list, based\n     * upon the value returned by applying the supplied predicate to two list elements. Prefers\n     * the first item if two items compare equal based on the predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      var strEq = function(a, b) { return String(a) === String(b); };\n     *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n     *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n     *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n     *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n     */\n    var uniqWith = _curry2(function uniqWith(pred, list) {\n        var idx = 0, len = list.length;\n        var result = [], item;\n        while (idx < len) {\n            item = list[idx];\n            if (!_containsWith(pred, item, result)) {\n                result[result.length] = item;\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new copy of the array with the element at the\n     * provided index replaced with the given value.\n     * @see R.adjust\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} idx The index to update.\n     * @param {*} x The value to exist at the given index of the returned array.\n     * @param {Array|Arguments} list The source array-like object to be updated.\n     * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n     * @example\n     *\n     *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n     *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n     */\n    var update = _curry3(function update(idx, x, list) {\n        return adjust(always(x), idx, list);\n    });\n\n    /**\n     * Returns a list of all the enumerable own properties of the supplied object.\n     * Note that the order of the output array is not guaranteed across\n     * different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own properties.\n     * @example\n     *\n     *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n     */\n    var values = _curry1(function values(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var vals = [];\n        var idx = 0;\n        while (idx < len) {\n            vals[idx] = obj[props[idx]];\n            idx += 1;\n        }\n        return vals;\n    });\n\n    /**\n     * Returns a list of all the properties, including prototype properties,\n     * of the supplied object.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.valuesIn(f); //=> ['X', 'Y']\n     */\n    var valuesIn = _curry1(function valuesIn(obj) {\n        var prop, vs = [];\n        for (prop in obj) {\n            vs[vs.length] = obj[prop];\n        }\n        return vs;\n    });\n\n    /**\n     * Returns a \"view\" of the given data structure, determined by the given lens.\n     * The lens's focus determines which portion of the data structure is visible.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> s -> a\n     * @param {Lens} lens\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.view(xLens, {x: 1, y: 2});  //=> 1\n     *      R.view(xLens, {x: 4, y: 2});  //=> 4\n     */\n    var view = function () {\n        var Const = function (x) {\n            return {\n                value: x,\n                map: function () {\n                    return this;\n                }\n            };\n        };\n        return _curry2(function view(lens, x) {\n            return lens(Const)(x).value;\n        });\n    }();\n\n    /**\n     * Takes a spec object and a test object; returns true if the test satisfies\n     * the spec. Each of the spec's own properties must be a predicate function.\n     * Each predicate is applied to the value of the corresponding property of\n     * the test object. `where` returns true if all the predicates return true,\n     * false otherwise.\n     *\n     * `where` is well suited to declaratively expressing constraints for other\n     * functions such as `filter` and `find`.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @example\n     *\n     *      // pred :: Object -> Boolean\n     *      var pred = R.where({\n     *        a: R.equals('foo'),\n     *        b: R.complement(R.equals('bar')),\n     *        x: R.gt(_, 10),\n     *        y: R.lt(_, 20)\n     *      });\n     *\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n     *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n     */\n    var where = _curry2(function where(spec, testObj) {\n        for (var prop in spec) {\n            if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n                return false;\n            }\n        }\n        return true;\n    });\n\n    /**\n     * Wrap a function inside another to allow you to make adjustments to the parameters, or do\n     * other processing either before the internal function is called or with its results.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a... -> b) -> ((a... -> b) -> a... -> c) -> (a... -> c)\n     * @param {Function} fn The function to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var greet = function(name) {return 'Hello ' + name;};\n     *\n     *      var shoutedGreet = R.wrap(greet, function(gr, name) {\n     *        return gr(name).toUpperCase();\n     *      });\n     *      shoutedGreet(\"Kathy\"); //=> \"HELLO KATHY\"\n     *\n     *      var shortenedGreet = R.wrap(greet, function(gr, name) {\n     *        return gr(name.substring(0, 3));\n     *      });\n     *      shortenedGreet(\"Robert\"); //=> \"Hello Rob\"\n     */\n    var wrap = _curry2(function wrap(fn, wrapper) {\n        return curryN(fn.length, function () {\n            return wrapper.apply(this, _concat([fn], arguments));\n        });\n    });\n\n    /**\n     * Creates a new list out of the two supplied by creating each possible\n     * pair from the lists.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The list made by combining each possible pair from\n     *         `as` and `bs` into pairs (`[a, b]`).\n     * @example\n     *\n     *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n     */\n    // = xprodWith(prepend); (takes about 3 times as long...)\n    var xprod = _curry2(function xprod(a, b) {\n        // = xprodWith(prepend); (takes about 3 times as long...)\n        var idx = 0;\n        var ilen = a.length;\n        var j;\n        var jlen = b.length;\n        var result = [];\n        while (idx < ilen) {\n            j = 0;\n            while (j < jlen) {\n                result[result.length] = [\n                    a[idx],\n                    b[j]\n                ];\n                j += 1;\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Creates a new list out of the two supplied by pairing up\n     * equally-positioned items from both lists.  The returned list is\n     * truncated to the length of the shorter of the two input lists.\n     * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n     * @example\n     *\n     *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n     */\n    var zip = _curry2(function zip(a, b) {\n        var rv = [];\n        var idx = 0;\n        var len = Math.min(a.length, b.length);\n        while (idx < len) {\n            rv[idx] = [\n                a[idx],\n                b[idx]\n            ];\n            idx += 1;\n        }\n        return rv;\n    });\n\n    /**\n     * Creates a new object out of a list of keys and a list of values.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [String] -> [*] -> {String: *}\n     * @param {Array} keys The array that will be properties on the output object.\n     * @param {Array} values The list of values on the output object.\n     * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n     * @example\n     *\n     *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n     */\n    var zipObj = _curry2(function zipObj(keys, values) {\n        var idx = 0, len = keys.length, out = {};\n        while (idx < len) {\n            out[keys[idx]] = values[idx];\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Creates a new list out of the two supplied by applying the function to\n     * each equally-positioned pair in the lists. The returned list is\n     * truncated to the length of the shorter of the two input lists.\n     *\n     * @function\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> c) -> [a] -> [b] -> [c]\n     * @param {Function} fn The function used to combine the two elements into one value.\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n     *         using `fn`.\n     * @example\n     *\n     *      var f = function(x, y) {\n     *        // ...\n     *      };\n     *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n     *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n     */\n    var zipWith = _curry3(function zipWith(fn, a, b) {\n        var rv = [], idx = 0, len = Math.min(a.length, b.length);\n        while (idx < len) {\n            rv[idx] = fn(a[idx], b[idx]);\n            idx += 1;\n        }\n        return rv;\n    });\n\n    /**\n     * A function that always returns `false`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig * -> false\n     * @return {Boolean} false\n     * @see R.always, R.T\n     * @example\n     *\n     *      R.F(); //=> false\n     */\n    var F = always(false);\n\n    /**\n     * A function that always returns `true`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig * -> true\n     * @return {Boolean} `true`.\n     * @see R.always, R.F\n     * @example\n     *\n     *      R.T(); //=> true\n     */\n    var T = always(true);\n\n    /**\n     * Similar to hasMethod, this checks whether a function has a [methodname]\n     * function. If it isn't an array it will execute that function otherwise it will\n     * default to the ramda implementation.\n     *\n     * @private\n     * @param {Function} fn ramda implemtation\n     * @param {String} methodname property to check for a custom implementation\n     * @return {Object} Whatever the return value of the method is.\n     */\n    var _checkForMethod = function _checkForMethod(methodname, fn) {\n        return function () {\n            var length = arguments.length;\n            if (length === 0) {\n                return fn();\n            }\n            var obj = arguments[length - 1];\n            return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, _slice(arguments, 0, length - 1));\n        };\n    };\n\n    /**\n     * Copies an object.\n     *\n     * @private\n     * @param {*} value The value to be copied\n     * @param {Array} refFrom Array containing the source references\n     * @param {Array} refTo Array containing the copied source references\n     * @return {*} The copied value.\n     */\n    var _clone = function _clone(value, refFrom, refTo) {\n        var copy = function copy(copiedValue) {\n            var len = refFrom.length;\n            var idx = 0;\n            while (idx < len) {\n                if (value === refFrom[idx]) {\n                    return refTo[idx];\n                }\n                idx += 1;\n            }\n            refFrom[idx + 1] = value;\n            refTo[idx + 1] = copiedValue;\n            for (var key in value) {\n                copiedValue[key] = _clone(value[key], refFrom, refTo);\n            }\n            return copiedValue;\n        };\n        switch (type(value)) {\n        case 'Object':\n            return copy({});\n        case 'Array':\n            return copy([]);\n        case 'Date':\n            return new Date(value);\n        case 'RegExp':\n            return _cloneRegExp(value);\n        default:\n            return value;\n        }\n    };\n\n    var _createPartialApplicator = function _createPartialApplicator(concat) {\n        return function (fn) {\n            var args = _slice(arguments, 1);\n            return _arity(Math.max(0, fn.length - args.length), function () {\n                return fn.apply(this, concat(args, arguments));\n            });\n        };\n    };\n\n    /**\n     * Returns a function that dispatches with different strategies based on the\n     * object in list position (last argument). If it is an array, executes [fn].\n     * Otherwise, if it has a  function with [methodname], it will execute that\n     * function (functor case). Otherwise, if it is a transformer, uses transducer\n     * [xf] to return a new transformer (transducer case). Otherwise, it will\n     * default to executing [fn].\n     *\n     * @private\n     * @param {String} methodname property to check for a custom implementation\n     * @param {Function} xf transducer to initialize if object is transformer\n     * @param {Function} fn default ramda implementation\n     * @return {Function} A function that dispatches on object in list position\n     */\n    var _dispatchable = function _dispatchable(methodname, xf, fn) {\n        return function () {\n            var length = arguments.length;\n            if (length === 0) {\n                return fn();\n            }\n            var obj = arguments[length - 1];\n            if (!_isArray(obj)) {\n                var args = _slice(arguments, 0, length - 1);\n                if (typeof obj[methodname] === 'function') {\n                    return obj[methodname].apply(obj, args);\n                }\n                if (_isTransformer(obj)) {\n                    var transducer = xf.apply(null, args);\n                    return transducer(obj);\n                }\n            }\n            return fn.apply(this, arguments);\n        };\n    };\n\n    // The algorithm used to handle cyclic structures is\n    // inspired by underscore's isEqual\n    // RegExp equality algorithm: http://stackoverflow.com/a/10776635\n    var _equals = function _equals(a, b, stackA, stackB) {\n        var typeA = type(a);\n        if (typeA !== type(b)) {\n            return false;\n        }\n        if (typeA === 'Boolean' || typeA === 'Number' || typeA === 'String') {\n            return typeof a === 'object' ? typeof b === 'object' && identical(a.valueOf(), b.valueOf()) : identical(a, b);\n        }\n        if (identical(a, b)) {\n            return true;\n        }\n        if (typeA === 'RegExp') {\n            // RegExp equality algorithm: http://stackoverflow.com/a/10776635\n            return a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode;\n        }\n        if (Object(a) === a) {\n            if (typeA === 'Date' && a.getTime() !== b.getTime()) {\n                return false;\n            }\n            var keysA = keys(a);\n            if (keysA.length !== keys(b).length) {\n                return false;\n            }\n            var idx = stackA.length - 1;\n            while (idx >= 0) {\n                if (stackA[idx] === a) {\n                    return stackB[idx] === b;\n                }\n                idx -= 1;\n            }\n            stackA[stackA.length] = a;\n            stackB[stackB.length] = b;\n            idx = keysA.length - 1;\n            while (idx >= 0) {\n                var key = keysA[idx];\n                if (!_has(key, b) || !_equals(b[key], a[key], stackA, stackB)) {\n                    return false;\n                }\n                idx -= 1;\n            }\n            stackA.pop();\n            stackB.pop();\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * Private function that determines whether or not a provided object has a given method.\n     * Does not ignore methods stored on the object's prototype chain. Used for dynamically\n     * dispatching Ramda methods to non-Array objects.\n     *\n     * @private\n     * @param {String} methodName The name of the method to check for.\n     * @param {Object} obj The object to test.\n     * @return {Boolean} `true` has a given method, `false` otherwise.\n     * @example\n     *\n     *      var person = { name: 'John' };\n     *      person.shout = function() { alert(this.name); };\n     *\n     *      _hasMethod('shout', person); //=> true\n     *      _hasMethod('foo', person); //=> false\n     */\n    var _hasMethod = function _hasMethod(methodName, obj) {\n        return obj != null && !_isArray(obj) && typeof obj[methodName] === 'function';\n    };\n\n    /**\n     * `_makeFlat` is a helper function that returns a one-level or fully recursive function\n     * based on the flag passed in.\n     *\n     * @private\n     */\n    var _makeFlat = function _makeFlat(recursive) {\n        return function flatt(list) {\n            var value, result = [], idx = 0, j, ilen = list.length, jlen;\n            while (idx < ilen) {\n                if (isArrayLike(list[idx])) {\n                    value = recursive ? flatt(list[idx]) : list[idx];\n                    j = 0;\n                    jlen = value.length;\n                    while (j < jlen) {\n                        result[result.length] = value[j];\n                        j += 1;\n                    }\n                } else {\n                    result[result.length] = list[idx];\n                }\n                idx += 1;\n            }\n            return result;\n        };\n    };\n\n    var _reduce = function () {\n        function _arrayReduce(xf, acc, list) {\n            var idx = 0, len = list.length;\n            while (idx < len) {\n                acc = xf['@@transducer/step'](acc, list[idx]);\n                if (acc && acc['@@transducer/reduced']) {\n                    acc = acc['@@transducer/value'];\n                    break;\n                }\n                idx += 1;\n            }\n            return xf['@@transducer/result'](acc);\n        }\n        function _iterableReduce(xf, acc, iter) {\n            var step = iter.next();\n            while (!step.done) {\n                acc = xf['@@transducer/step'](acc, step.value);\n                if (acc && acc['@@transducer/reduced']) {\n                    acc = acc['@@transducer/value'];\n                    break;\n                }\n                step = iter.next();\n            }\n            return xf['@@transducer/result'](acc);\n        }\n        function _methodReduce(xf, acc, obj) {\n            return xf['@@transducer/result'](obj.reduce(bind(xf['@@transducer/step'], xf), acc));\n        }\n        var symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n        return function _reduce(fn, acc, list) {\n            if (typeof fn === 'function') {\n                fn = _xwrap(fn);\n            }\n            if (isArrayLike(list)) {\n                return _arrayReduce(fn, acc, list);\n            }\n            if (typeof list.reduce === 'function') {\n                return _methodReduce(fn, acc, list);\n            }\n            if (list[symIterator] != null) {\n                return _iterableReduce(fn, acc, list[symIterator]());\n            }\n            if (typeof list.next === 'function') {\n                return _iterableReduce(fn, acc, list);\n            }\n            throw new TypeError('reduce: list must be array or iterable');\n        };\n    }();\n\n    var _stepCat = function () {\n        var _stepCatArray = {\n            '@@transducer/init': Array,\n            '@@transducer/step': function (xs, x) {\n                return _concat(xs, [x]);\n            },\n            '@@transducer/result': _identity\n        };\n        var _stepCatString = {\n            '@@transducer/init': String,\n            '@@transducer/step': function (a, b) {\n                return a + b;\n            },\n            '@@transducer/result': _identity\n        };\n        var _stepCatObject = {\n            '@@transducer/init': Object,\n            '@@transducer/step': function (result, input) {\n                return merge(result, isArrayLike(input) ? createMapEntry(input[0], input[1]) : input);\n            },\n            '@@transducer/result': _identity\n        };\n        return function _stepCat(obj) {\n            if (_isTransformer(obj)) {\n                return obj;\n            }\n            if (isArrayLike(obj)) {\n                return _stepCatArray;\n            }\n            if (typeof obj === 'string') {\n                return _stepCatString;\n            }\n            if (typeof obj === 'object') {\n                return _stepCatObject;\n            }\n            throw new Error('Cannot create transformer for ' + obj);\n        };\n    }();\n\n    var _xall = function () {\n        function XAll(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.all = true;\n        }\n        XAll.prototype['@@transducer/init'] = _xfBase.init;\n        XAll.prototype['@@transducer/result'] = function (result) {\n            if (this.all) {\n                result = this.xf['@@transducer/step'](result, true);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XAll.prototype['@@transducer/step'] = function (result, input) {\n            if (!this.f(input)) {\n                this.all = false;\n                result = _reduced(this.xf['@@transducer/step'](result, false));\n            }\n            return result;\n        };\n        return _curry2(function _xall(f, xf) {\n            return new XAll(f, xf);\n        });\n    }();\n\n    var _xany = function () {\n        function XAny(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.any = false;\n        }\n        XAny.prototype['@@transducer/init'] = _xfBase.init;\n        XAny.prototype['@@transducer/result'] = function (result) {\n            if (!this.any) {\n                result = this.xf['@@transducer/step'](result, false);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XAny.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.any = true;\n                result = _reduced(this.xf['@@transducer/step'](result, true));\n            }\n            return result;\n        };\n        return _curry2(function _xany(f, xf) {\n            return new XAny(f, xf);\n        });\n    }();\n\n    var _xdrop = function () {\n        function XDrop(n, xf) {\n            this.xf = xf;\n            this.n = n;\n        }\n        XDrop.prototype['@@transducer/init'] = _xfBase.init;\n        XDrop.prototype['@@transducer/result'] = _xfBase.result;\n        XDrop.prototype['@@transducer/step'] = function (result, input) {\n            if (this.n > 0) {\n                this.n -= 1;\n                return result;\n            }\n            return this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdrop(n, xf) {\n            return new XDrop(n, xf);\n        });\n    }();\n\n    var _xdropWhile = function () {\n        function XDropWhile(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n        XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f) {\n                if (this.f(input)) {\n                    return result;\n                }\n                this.f = null;\n            }\n            return this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdropWhile(f, xf) {\n            return new XDropWhile(f, xf);\n        });\n    }();\n\n    var _xgroupBy = function () {\n        function XGroupBy(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.inputs = {};\n        }\n        XGroupBy.prototype['@@transducer/init'] = _xfBase.init;\n        XGroupBy.prototype['@@transducer/result'] = function (result) {\n            var key;\n            for (key in this.inputs) {\n                if (_has(key, this.inputs)) {\n                    result = this.xf['@@transducer/step'](result, this.inputs[key]);\n                    if (result['@@transducer/reduced']) {\n                        result = result['@@transducer/value'];\n                        break;\n                    }\n                }\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XGroupBy.prototype['@@transducer/step'] = function (result, input) {\n            var key = this.f(input);\n            this.inputs[key] = this.inputs[key] || [\n                key,\n                []\n            ];\n            this.inputs[key][1] = append(input, this.inputs[key][1]);\n            return result;\n        };\n        return _curry2(function _xgroupBy(f, xf) {\n            return new XGroupBy(f, xf);\n        });\n    }();\n\n    /**\n     * Creates a new list iteration function from an existing one by adding two new parameters\n     * to its callback function: the current index, and the entire list.\n     *\n     * This would turn, for instance, Ramda's simple `map` function into one that more closely\n     * resembles `Array.prototype.map`.  Note that this will only work for functions in which\n     * the iteration callback function is the first parameter, and where the list is the last\n     * parameter.  (This latter might be unimportant if the list parameter is not used.)\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @category List\n     * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n     * @param {Function} fn A list iteration function that does not pass index or list to its callback\n     * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n     * @example\n     *\n     *      var mapIndexed = R.addIndex(R.map);\n     *      mapIndexed(function(val, idx) {return idx + '-' + val;}, ['f', 'o', 'o', 'b', 'a', 'r']);\n     *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n     */\n    var addIndex = _curry1(function addIndex(fn) {\n        return curryN(fn.length, function () {\n            var idx = 0;\n            var origFn = arguments[0];\n            var list = arguments[arguments.length - 1];\n            var args = _slice(arguments);\n            args[0] = function () {\n                var result = origFn.apply(this, _concat(arguments, [\n                    idx,\n                    list\n                ]));\n                idx += 1;\n                return result;\n            };\n            return fn.apply(this, args);\n        });\n    });\n\n    /**\n     * Returns `true` if all elements of the list match the predicate, `false` if there are any\n     * that don't.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n     *         otherwise.\n     * @see R.any, R.none\n     * @example\n     *\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      var lessThan3 = R.flip(R.lt)(3);\n     *      R.all(lessThan2)([1, 2]); //=> false\n     *      R.all(lessThan3)([1, 2]); //=> true\n     */\n    var all = _curry2(_dispatchable('all', _xall, function all(fn, list) {\n        var idx = 0;\n        while (idx < list.length) {\n            if (!fn(list[idx])) {\n                return false;\n            }\n            idx += 1;\n        }\n        return true;\n    }));\n\n    /**\n     * A function that returns the first argument if it's falsy otherwise the second\n     * argument. Note that this is NOT short-circuited, meaning that if expressions\n     * are passed they are both evaluated.\n     *\n     * Dispatches to the `and` method of the first argument if applicable.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {*} a any value\n     * @param {*} b any other value\n     * @return {*} the first argument if falsy otherwise the second argument.\n     * @see R.both\n     * @example\n     *\n     *      R.and(false, true); //=> false\n     *      R.and(0, []); //=> 0\n     *      R.and(null, ''); => null\n     */\n    var and = _curry2(function and(a, b) {\n        return _hasMethod('and', a) ? a.and(b) : a && b;\n    });\n\n    /**\n     * Returns `true` if at least one of elements of the list match the predicate, `false`\n     * otherwise.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n     *         otherwise.\n     * @see R.all, R.none\n     * @example\n     *\n     *      var lessThan0 = R.flip(R.lt)(0);\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      R.any(lessThan0)([1, 2]); //=> false\n     *      R.any(lessThan2)([1, 2]); //=> true\n     */\n    var any = _curry2(_dispatchable('any', _xany, function any(fn, list) {\n        var idx = 0;\n        while (idx < list.length) {\n            if (fn(list[idx])) {\n                return true;\n            }\n            idx += 1;\n        }\n        return false;\n    }));\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts exactly 2\n     * parameters. Any extraneous parameters will not be passed to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> c) -> (a, b -> c)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 2.\n     * @example\n     *\n     *      var takesThreeArgs = function(a, b, c) {\n     *        return [a, b, c];\n     *      };\n     *      takesThreeArgs.length; //=> 3\n     *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      var takesTwoArgs = R.binary(takesThreeArgs);\n     *      takesTwoArgs.length; //=> 2\n     *      // Only 2 arguments are passed to the wrapped function\n     *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n     */\n    var binary = _curry1(function binary(fn) {\n        return nAry(2, fn);\n    });\n\n    /**\n     * Creates a deep copy of the value which may contain (nested) `Array`s and\n     * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n     * not copied, but assigned by their reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {*} -> {*}\n     * @param {*} value The object or array to clone\n     * @return {*} A new object or array.\n     * @example\n     *\n     *      var objects = [{}, {}, {}];\n     *      var objectsClone = R.clone(objects);\n     *      objects[0] === objectsClone[0]; //=> false\n     */\n    var clone = _curry1(function clone(value) {\n        return _clone(value, [], []);\n    });\n\n    /**\n     * Returns a new list consisting of the elements of the first list followed by the elements\n     * of the second.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The first list to merge.\n     * @param {Array} list2 The second set to merge.\n     * @return {Array} A new array consisting of the contents of `list1` followed by the\n     *         contents of `list2`. If, instead of an Array for `list1`, you pass an\n     *         object with a `concat` method on it, `concat` will call `list1.concat`\n     *         and pass it the value of `list2`.\n     *\n     * @example\n     *\n     *      R.concat([], []); //=> []\n     *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n     */\n    var concat = _curry2(function concat(set1, set2) {\n        if (_isArray(set2)) {\n            return _concat(set1, set2);\n        } else if (_hasMethod('concat', set1)) {\n            return set1.concat(set2);\n        } else {\n            throw new TypeError('can\\'t concat ' + typeof set1);\n        }\n    });\n\n    /**\n     * Returns a curried equivalent of the provided function. The curried\n     * function has two unusual capabilities. First, its arguments needn't\n     * be provided one at a time. If `f` is a ternary function and `g` is\n     * `R.curry(f)`, the following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`,\n     * the following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> a) -> (* -> a)\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curryN\n     * @example\n     *\n     *      var addFourNumbers = function(a, b, c, d) {\n     *        return a + b + c + d;\n     *      };\n     *\n     *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n    var curry = _curry1(function curry(fn) {\n        return curryN(fn.length, fn);\n    });\n\n    /**\n     * Returns a new list containing the last `n` elements of a given list, passing each value\n     * to the supplied predicate function, skipping elements while the predicate function returns\n     * `true`. The predicate function is passed one argument: *(value)*.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.takeWhile\n     * @example\n     *\n     *      var lteTwo = function(x) {\n     *        return x <= 2;\n     *      };\n     *\n     *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n     */\n    var dropWhile = _curry2(_dispatchable('dropWhile', _xdropWhile, function dropWhile(pred, list) {\n        var idx = 0, len = list.length;\n        while (idx < len && pred(list[idx])) {\n            idx += 1;\n        }\n        return _slice(list, idx);\n    }));\n\n    /**\n     * Returns `true` if its arguments are equivalent, `false` otherwise.\n     * Dispatches to an `equals` method if present. Handles cyclical data\n     * structures.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig a -> b -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      R.equals(1, 1); //=> true\n     *      R.equals(1, '1'); //=> false\n     *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n     *\n     *      var a = {}; a.v = a;\n     *      var b = {}; b.v = b;\n     *      R.equals(a, b); //=> true\n     */\n    var equals = _curry2(function equals(a, b) {\n        return _hasMethod('equals', a) ? a.equals(b) : _hasMethod('equals', b) ? b.equals(a) : _equals(a, b, [], []);\n    });\n\n    /**\n     * Returns a new list containing only those items that match a given predicate function.\n     * The predicate function is passed one argument: *(value)*.\n     *\n     * Note that `R.filter` does not skip deleted or unassigned indices, unlike the native\n     * `Array.prototype.filter` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter#Description\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} The new filtered array.\n     * @see R.reject\n     * @example\n     *\n     *      var isEven = function(n) {\n     *        return n % 2 === 0;\n     *      };\n     *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n     */\n    var filter = _curry2(_dispatchable('filter', _xfilter, _filter));\n\n    /**\n     * Returns the first element of the list which matches the predicate, or `undefined` if no\n     * element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     *        desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n     *      R.find(R.propEq('a', 4))(xs); //=> undefined\n     */\n    var find = _curry2(_dispatchable('find', _xfind, function find(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (fn(list[idx])) {\n                return list[idx];\n            }\n            idx += 1;\n        }\n    }));\n\n    /**\n     * Returns the index of the first element of the list which matches the predicate, or `-1`\n     * if no element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n     *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n    var findIndex = _curry2(_dispatchable('findIndex', _xfindIndex, function findIndex(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (fn(list[idx])) {\n                return idx;\n            }\n            idx += 1;\n        }\n        return -1;\n    }));\n\n    /**\n     * Returns the last element of the list which matches the predicate, or `undefined` if no\n     * element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n     *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n     */\n    var findLast = _curry2(_dispatchable('findLast', _xfindLast, function findLast(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            if (fn(list[idx])) {\n                return list[idx];\n            }\n            idx -= 1;\n        }\n    }));\n\n    /**\n     * Returns the index of the last element of the list which matches the predicate, or\n     * `-1` if no element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n     *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n    var findLastIndex = _curry2(_dispatchable('findLastIndex', _xfindLastIndex, function findLastIndex(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            if (fn(list[idx])) {\n                return idx;\n            }\n            idx -= 1;\n        }\n        return -1;\n    }));\n\n    /**\n     * Returns a new list by pulling every item out of it (and all its sub-arrays) and putting\n     * them in a new array, depth-first.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b]\n     * @param {Array} list The array to consider.\n     * @return {Array} The flattened list.\n     * @see R.unnest\n     * @example\n     *\n     *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n     *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n     */\n    var flatten = _curry1(_makeFlat(true));\n\n    /**\n     * Returns a new function much like the supplied one, except that the first two arguments'\n     * order is reversed.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)\n     * @param {Function} fn The function to invoke with its first two parameters reversed.\n     * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n     * @example\n     *\n     *      var mergeThree = function(a, b, c) {\n     *        return ([]).concat(a, b, c);\n     *      };\n     *\n     *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n     */\n    var flip = _curry1(function flip(fn) {\n        return curry(function (a, b) {\n            var args = _slice(arguments);\n            args[0] = b;\n            args[1] = a;\n            return fn.apply(this, args);\n        });\n    });\n\n    /**\n     * Iterate over an input `list`, calling a provided function `fn` for each element in the\n     * list.\n     *\n     * `fn` receives one argument: *(value)*.\n     *\n     * Note: `R.forEach` does not skip deleted or unassigned indices (sparse arrays), unlike\n     * the native `Array.prototype.forEach` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n     *\n     * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns the original\n     * array. In some libraries this function is named `each`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> *) -> [a] -> [a]\n     * @param {Function} fn The function to invoke. Receives one argument, `value`.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} The original list.\n     * @example\n     *\n     *      var printXPlusFive = function(x) { console.log(x + 5); };\n     *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n     *      //-> 6\n     *      //-> 7\n     *      //-> 8\n     */\n    var forEach = _curry2(_checkForMethod('forEach', function forEach(fn, list) {\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            fn(list[idx]);\n            idx += 1;\n        }\n        return list;\n    }));\n\n    /**\n     * Returns a list of function names of object's own functions\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {*} -> [String]\n     * @param {Object} obj The objects with functions in it\n     * @return {Array} A list of the object's own properties that map to functions.\n     * @example\n     *\n     *      R.functions(R); // returns list of ramda's own function names\n     *\n     *      var F = function() { this.x = function(){}; this.y = 1; }\n     *      F.prototype.z = function() {};\n     *      F.prototype.a = 100;\n     *      R.functions(new F()); //=> [\"x\"]\n     */\n    var functions = _curry1(_functionsWith(keys));\n\n    /**\n     * Returns a list of function names of object's own and prototype functions\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {*} -> [String]\n     * @param {Object} obj The objects with functions in it\n     * @return {Array} A list of the object's own properties and prototype\n     *         properties that map to functions.\n     * @example\n     *\n     *      R.functionsIn(R); // returns list of ramda's own and prototype function names\n     *\n     *      var F = function() { this.x = function(){}; this.y = 1; }\n     *      F.prototype.z = function() {};\n     *      F.prototype.a = 100;\n     *      R.functionsIn(new F()); //=> [\"x\", \"z\"]\n     */\n    var functionsIn = _curry1(_functionsWith(keysIn));\n\n    /**\n     * Splits a list into sub-lists stored in an object, based on the result of calling a String-returning function\n     * on each element, and grouping the results according to values returned.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> String) -> [a] -> {String: [a]}\n     * @param {Function} fn Function :: a -> String\n     * @param {Array} list The array to group\n     * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n     *         that produced that key when passed to `fn`.\n     * @example\n     *\n     *      var byGrade = R.groupBy(function(student) {\n     *        var score = student.score;\n     *        return score < 65 ? 'F' :\n     *               score < 70 ? 'D' :\n     *               score < 80 ? 'C' :\n     *               score < 90 ? 'B' : 'A';\n     *      });\n     *      var students = [{name: 'Abby', score: 84},\n     *                      {name: 'Eddy', score: 58},\n     *                      // ...\n     *                      {name: 'Jack', score: 69}];\n     *      byGrade(students);\n     *      // {\n     *      //   'A': [{name: 'Dianne', score: 99}],\n     *      //   'B': [{name: 'Abby', score: 84}]\n     *      //   // ...,\n     *      //   'F': [{name: 'Eddy', score: 58}]\n     *      // }\n     */\n    var groupBy = _curry2(_dispatchable('groupBy', _xgroupBy, function groupBy(fn, list) {\n        return _reduce(function (acc, elt) {\n            var key = fn(elt);\n            acc[key] = append(elt, acc[key] || (acc[key] = []));\n            return acc;\n        }, {}, list);\n    }));\n\n    /**\n     * Returns the first element of the given list or string. In some libraries\n     * this function is named `first`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.tail, R.init, R.last\n     * @sig [a] -> a | Undefined\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n     *      R.head([]); //=> undefined\n     *\n     *      R.head('abc'); //=> 'a'\n     *      R.head(''); //=> ''\n     */\n    var head = nth(0);\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those\n     * elements common to both lists.  Duplication is determined according\n     * to the value returned by applying the supplied predicate to two list\n     * elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a,a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate function that determines whether\n     *        the two supplied elements are equal.\n     * @param {Array} list1 One list of items to compare\n     * @param {Array} list2 A second list of items to compare\n     * @see R.intersection\n     * @return {Array} A new list containing those elements common to both lists.\n     * @example\n     *\n     *      var buffaloSpringfield = [\n     *        {id: 824, name: 'Richie Furay'},\n     *        {id: 956, name: 'Dewey Martin'},\n     *        {id: 313, name: 'Bruce Palmer'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *      var csny = [\n     *        {id: 204, name: 'David Crosby'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 539, name: 'Graham Nash'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *\n     *      var sameId = function(o1, o2) {return o1.id === o2.id;};\n     *\n     *      R.intersectionWith(sameId, buffaloSpringfield, csny);\n     *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n     */\n    var intersectionWith = _curry3(function intersectionWith(pred, list1, list2) {\n        var results = [], idx = 0;\n        while (idx < list1.length) {\n            if (_containsWith(pred, list1[idx], list2)) {\n                results[results.length] = list1[idx];\n            }\n            idx += 1;\n        }\n        return uniqWith(pred, results);\n    });\n\n    /**\n     * Creates a new list with the separator interposed between elements.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} separator The element to add to the list.\n     * @param {Array} list The list to be interposed.\n     * @return {Array} The new list.\n     * @example\n     *\n     *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n     */\n    var intersperse = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {\n        var out = [];\n        var idx = 0;\n        var length = list.length;\n        while (idx < length) {\n            if (idx === length - 1) {\n                out.push(list[idx]);\n            } else {\n                out.push(list[idx], separator);\n            }\n            idx += 1;\n        }\n        return out;\n    }));\n\n    /**\n     * Transforms the items of the list with the transducer and appends the transformed items to\n     * the accumulator using an appropriate iterator function based on the accumulator type.\n     *\n     * The accumulator can be an array, string, object or a transformer. Iterated items will\n     * be appended to arrays and concatenated to strings. Objects will be merged directly or 2-item\n     * arrays will be merged as key, value pairs.\n     *\n     * The accumulator can also be a transformer object that provides a 2-arity reducing iterator\n     * function, step, 0-arity initial value function, init, and 1-arity result extraction function\n     * result. The step function is used as the iterator function in reduce. The result function is\n     * used to convert the final accumulator into the return type and in most cases is R.identity.\n     * The init function is used to provide the initial accumulator.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> (b -> b) -> [c] -> a\n     * @param {*} acc The initial accumulator value.\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.into([], transducer, numbers); //=> [2, 3]\n     *\n     *      var intoArray = R.into([]);\n     *      intoArray(transducer, numbers); //=> [2, 3]\n     */\n    var into = _curry3(function into(acc, xf, list) {\n        return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), acc, list);\n    });\n\n    /**\n     * Same as R.invertObj, however this accounts for objects\n     * with duplicate values by putting the values into an\n     * array.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {s: x} -> {x: [ s, ... ]}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object with keys\n     * in an array.\n     * @example\n     *\n     *      var raceResultsByFirstName = {\n     *        first: 'alice',\n     *        second: 'jake',\n     *        third: 'alice',\n     *      };\n     *      R.invert(raceResultsByFirstName);\n     *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n     */\n    var invert = _curry1(function invert(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var idx = 0;\n        var out = {};\n        while (idx < len) {\n            var key = props[idx];\n            var val = obj[key];\n            var list = _has(val, out) ? out[val] : out[val] = [];\n            list[list.length] = key;\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new object with the keys of the given object\n     * as values, and the values of the given object as keys.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {s: x} -> {x: s}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object\n     * @example\n     *\n     *      var raceResults = {\n     *        first: 'alice',\n     *        second: 'jake'\n     *      };\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': 'first', 'jake':'second' }\n     *\n     *      // Alternatively:\n     *      var raceResults = ['alice', 'jake'];\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': '0', 'jake':'1' }\n     */\n    var invertObj = _curry1(function invertObj(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var idx = 0;\n        var out = {};\n        while (idx < len) {\n            var key = props[idx];\n            out[obj[key]] = key;\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns the last element of the given list or string.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.init, R.head, R.tail\n     * @sig [a] -> a | Undefined\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n     *      R.last([]); //=> undefined\n     *\n     *      R.last('abc'); //=> 'c'\n     *      R.last(''); //=> ''\n     */\n    var last = nth(-1);\n\n    /**\n     * Returns the position of the last occurrence of an item in\n     * an array, or -1 if the item is not included in the array.\n     * `R.equals` is used to determine equality.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} xs The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     * @see R.indexOf\n     * @example\n     *\n     *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n     *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n     */\n    var lastIndexOf = _curry2(function lastIndexOf(target, xs) {\n        if (_hasMethod('lastIndexOf', xs)) {\n            return xs.lastIndexOf(target);\n        } else {\n            var idx = xs.length - 1;\n            while (idx >= 0) {\n                if (equals(xs[idx], target)) {\n                    return idx;\n                }\n                idx -= 1;\n            }\n            return -1;\n        }\n    });\n\n    /**\n     * Returns a new list, constructed by applying the supplied function to every element of the\n     * supplied list.\n     *\n     * Note: `R.map` does not skip deleted or unassigned indices (sparse arrays), unlike the\n     * native `Array.prototype.map` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map#Description\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> b) -> [a] -> [b]\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {Array} list The list to be iterated over.\n     * @return {Array} The new list.\n     * @example\n     *\n     *      var double = function(x) {\n     *        return x * 2;\n     *      };\n     *\n     *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n     */\n    var map = _curry2(_dispatchable('map', _xmap, _map));\n\n    /**\n     * Map, but for objects. Creates an object with the same keys as `obj` and values\n     * generated by running each property of `obj` through `fn`. `fn` is passed one argument:\n     * *(value)*.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig (v -> v) -> {k: v} -> {k: v}\n     * @param {Function} fn A function called for each property in `obj`. Its return value will\n     * become a new property on the return object.\n     * @param {Object} obj The object to iterate over.\n     * @return {Object} A new object with the same keys as `obj` and values that are the result\n     *         of running each property through `fn`.\n     * @example\n     *\n     *      var values = { x: 1, y: 2, z: 3 };\n     *      var double = function(num) {\n     *        return num * 2;\n     *      };\n     *\n     *      R.mapObj(double, values); //=> { x: 2, y: 4, z: 6 }\n     */\n    var mapObj = _curry2(function mapObj(fn, obj) {\n        return _reduce(function (acc, key) {\n            acc[key] = fn(obj[key]);\n            return acc;\n        }, {}, keys(obj));\n    });\n\n    /**\n     * Like `mapObj`, but but passes additional arguments to the predicate function. The\n     * predicate function is passed three arguments: *(value, key, obj)*.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig (v, k, {k: v} -> v) -> {k: v} -> {k: v}\n     * @param {Function} fn A function called for each property in `obj`. Its return value will\n     *        become a new property on the return object.\n     * @param {Object} obj The object to iterate over.\n     * @return {Object} A new object with the same keys as `obj` and values that are the result\n     *         of running each property through `fn`.\n     * @example\n     *\n     *      var values = { x: 1, y: 2, z: 3 };\n     *      var prependKeyAndDouble = function(num, key, obj) {\n     *        return key + (num * 2);\n     *      };\n     *\n     *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n     */\n    var mapObjIndexed = _curry2(function mapObjIndexed(fn, obj) {\n        return _reduce(function (acc, key) {\n            acc[key] = fn(obj[key], key, obj);\n            return acc;\n        }, {}, keys(obj));\n    });\n\n    /**\n     * Returns `true` if no elements of the list match the predicate,\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n     * @see R.all, R.any\n     * @example\n     *\n     *      R.none(R.isNaN, [1, 2, 3]); //=> true\n     *      R.none(R.isNaN, [1, 2, 3, NaN]); //=> false\n     */\n    var none = _curry2(_complement(_dispatchable('any', _xany, any)));\n\n    /**\n     * A function that returns the first truthy of two arguments otherwise the\n     * last argument. Note that this is NOT short-circuited, meaning that if\n     * expressions are passed they are both evaluated.\n     *\n     * Dispatches to the `or` method of the first argument if applicable.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {*} a any value\n     * @param {*} b any other value\n     * @return {*} the first truthy argument, otherwise the last argument.\n     * @see R.either\n     * @example\n     *\n     *      R.or(false, true); //=> true\n     *      R.or(0, []); //=> []\n     *      R.or(null, ''); => ''\n     */\n    var or = _curry2(function or(a, b) {\n        return _hasMethod('or', a) ? a.or(b) : a || b;\n    });\n\n    /**\n     * Accepts as its arguments a function and any number of values and returns a function that,\n     * when invoked, calls the original function with all of the values prepended to the\n     * original function's arguments list. In some libraries this function is named `applyLeft`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> b -> ... -> i -> j -> ... -> m -> n) -> a -> b-> ... -> i -> (j -> ... -> m -> n)\n     * @param {Function} fn The function to invoke.\n     * @param {...*} [args] Arguments to prepend to `fn` when the returned function is invoked.\n     * @return {Function} A new function wrapping `fn`. When invoked, it will call `fn`\n     *         with `args` prepended to `fn`'s arguments list.\n     * @example\n     *\n     *      var multiply = function(a, b) { return a * b; };\n     *      var double = R.partial(multiply, 2);\n     *      double(2); //=> 4\n     *\n     *      var greet = function(salutation, title, firstName, lastName) {\n     *        return salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *      };\n     *      var sayHello = R.partial(greet, 'Hello');\n     *      var sayHelloToMs = R.partial(sayHello, 'Ms.');\n     *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n     */\n    var partial = curry(_createPartialApplicator(_concat));\n\n    /**\n     * Accepts as its arguments a function and any number of values and returns a function that,\n     * when invoked, calls the original function with all of the values appended to the original\n     * function's arguments list.\n     *\n     * Note that `partialRight` is the opposite of `partial`: `partialRight` fills `fn`'s arguments\n     * from the right to the left.  In some libraries this function is named `applyRight`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> b-> ... -> i -> j -> ... -> m -> n) -> j -> ... -> m -> n -> (a -> b-> ... -> i)\n     * @param {Function} fn The function to invoke.\n     * @param {...*} [args] Arguments to append to `fn` when the returned function is invoked.\n     * @return {Function} A new function wrapping `fn`. When invoked, it will call `fn` with\n     *         `args` appended to `fn`'s arguments list.\n     * @example\n     *\n     *      var greet = function(salutation, title, firstName, lastName) {\n     *        return salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *      };\n     *      var greetMsJaneJones = R.partialRight(greet, 'Ms.', 'Jane', 'Jones');\n     *\n     *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n     */\n    var partialRight = curry(_createPartialApplicator(flip(_concat)));\n\n    /**\n     * Takes a predicate and a list and returns the pair of lists of\n     * elements which do and do not satisfy the predicate, respectively.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [[a],[a]]\n     * @param {Function} pred A predicate to determine which array the element belongs to.\n     * @param {Array} list The array to partition.\n     * @return {Array} A nested array, containing first an array of elements that satisfied the predicate,\n     *         and second an array of elements that did not satisfy.\n     * @example\n     *\n     *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n     *      //=> [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n     */\n    var partition = _curry2(function partition(pred, list) {\n        return _reduce(function (acc, elt) {\n            var xs = acc[pred(elt) ? 0 : 1];\n            xs[xs.length] = elt;\n            return acc;\n        }, [\n            [],\n            []\n        ], list);\n    });\n\n    /**\n     * Determines whether a nested path on an object has a specific value,\n     * in `R.equals` terms. Most likely used to filter a list.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [String] -> * -> {String: *} -> Boolean\n     * @param {Array} path The path of the nested property to use\n     * @param {*} val The value to compare the nested property with\n     * @param {Object} obj The object to check the nested property in\n     * @return {Boolean} `true` if the value equals the nested object property,\n     *         `false` otherwise.\n     * @example\n     *\n     *      var user1 = { address: { zipCode: 90210 } };\n     *      var user2 = { address: { zipCode: 55555 } };\n     *      var user3 = { name: 'Bob' };\n     *      var users = [ user1, user2, user3 ];\n     *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n     *      R.filter(isFamous, users); //=> [ user1 ]\n     */\n    var pathEq = _curry3(function pathEq(_path, val, obj) {\n        return equals(path(_path, obj), val);\n    });\n\n    /**\n     * Returns a new list by plucking the same named property off all objects in the list supplied.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig k -> [{k: v}] -> [v]\n     * @param {Number|String} key The key name to pluck off of each object.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of values for the given key.\n     * @example\n     *\n     *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n     *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n     */\n    var pluck = _curry2(function pluck(p, list) {\n        return map(prop(p), list);\n    });\n\n    /**\n     * Returns `true` if the specified object property is equal, in `R.equals`\n     * terms, to the given value; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig String -> a -> Object -> Boolean\n     * @param {String} name\n     * @param {*} val\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.equals, R.propSatisfies\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n     *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n     *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n     *      var kids = [abby, fred, rusty, alois];\n     *      var hasBrownHair = R.propEq('hair', 'brown');\n     *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n     */\n    var propEq = _curry3(function propEq(name, val, obj) {\n        return propSatisfies(equals(val), name, obj);\n    });\n\n    /**\n     * Returns `true` if the specified object property is of the given type;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig Type -> String -> Object -> Boolean\n     * @param {Function} type\n     * @param {String} name\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.is\n     * @see R.propSatisfies\n     * @example\n     *\n     *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n     *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n     *      R.propIs(Number, 'x', {});            //=> false\n     */\n    var propIs = _curry3(function propIs(type, name, obj) {\n        return propSatisfies(is(type), name, obj);\n    });\n\n    /**\n     * Returns a single item by iterating through the list, successively calling the iterator\n     * function and passing it an accumulator value and the current value from the array, and\n     * then passing the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*.  It may use `R.reduced` to\n     * shortcut the iteration.\n     *\n     * Note: `R.reduce` does not skip deleted or unassigned indices (sparse arrays), unlike\n     * the native `Array.prototype.reduce` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n     * @see R.reduced\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3];\n     *      var add = function(a, b) {\n     *        return a + b;\n     *      };\n     *\n     *      R.reduce(add, 10, numbers); //=> 16\n     */\n    var reduce = _curry3(_reduce);\n\n    /**\n     * Similar to `filter`, except that it keeps only values for which the given predicate\n     * function returns falsy. The predicate function is passed one argument: *(value)*.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} The new filtered array.\n     * @see R.filter\n     * @example\n     *\n     *      var isOdd = function(n) {\n     *        return n % 2 === 1;\n     *      };\n     *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n     */\n    var reject = _curry2(function reject(fn, list) {\n        return filter(_complement(fn), list);\n    });\n\n    /**\n     * Returns a fixed list of size `n` containing a specified identical value.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> n -> [a]\n     * @param {*} value The value to repeat.\n     * @param {Number} n The desired size of the output list.\n     * @return {Array} A new array containing `n` `value`s.\n     * @example\n     *\n     *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n     *\n     *      var obj = {};\n     *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n     *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n     */\n    var repeat = _curry2(function repeat(value, n) {\n        return times(always(value), n);\n    });\n\n    /**\n     * Returns the elements of the given list or string (or object with a `slice`\n     * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @sig Number -> Number -> String -> String\n     * @param {Number} fromIndex The start index (inclusive).\n     * @param {Number} toIndex The end index (exclusive).\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n     *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n     *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n     *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n     *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n     */\n    var slice = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n        return Array.prototype.slice.call(list, fromIndex, toIndex);\n    }));\n\n    /**\n     * Splits a collection into slices of the specified length.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @sig Number -> String -> [String]\n     * @param {Number} n\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n     *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n     */\n    var splitEvery = _curry2(function splitEvery(n, list) {\n        if (n <= 0) {\n            throw new Error('First argument to splitEvery must be a positive integer');\n        }\n        var result = [];\n        var idx = 0;\n        while (idx < list.length) {\n            result.push(slice(idx, idx += n, list));\n        }\n        return result;\n    });\n\n    /**\n     * Adds together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The sum of all the numbers in the list.\n     * @see R.reduce\n     * @example\n     *\n     *      R.sum([2,4,6,8,100,1]); //=> 121\n     */\n    var sum = reduce(add, 0);\n\n    /**\n     * Returns all but the first element of the given list or string (or object\n     * with a `tail` method).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.head, R.init, R.last\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.tail([1, 2, 3]);  //=> [2, 3]\n     *      R.tail([1, 2]);     //=> [2]\n     *      R.tail([1]);        //=> []\n     *      R.tail([]);         //=> []\n     *\n     *      R.tail('abc');  //=> 'bc'\n     *      R.tail('ab');   //=> 'b'\n     *      R.tail('a');    //=> ''\n     *      R.tail('');     //=> ''\n     */\n    var tail = _checkForMethod('tail', slice(1, Infinity));\n\n    /**\n     * Returns the first `n` elements of the given list, string, or\n     * transducer/transformer (or object with a `take` method).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {*} list\n     * @return {*}\n     * @see R.drop\n     * @example\n     *\n     *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n     *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n     *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.take(3, 'ramda');               //=> 'ram'\n     *\n     *      var personnel = [\n     *        'Dave Brubeck',\n     *        'Paul Desmond',\n     *        'Eugene Wright',\n     *        'Joe Morello',\n     *        'Gerry Mulligan',\n     *        'Bob Bates',\n     *        'Joe Dodge',\n     *        'Ron Crotty'\n     *      ];\n     *\n     *      var takeFive = R.take(5);\n     *      takeFive(personnel);\n     *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n     */\n    var take = _curry2(_dispatchable('take', _xtake, function take(n, xs) {\n        return slice(0, n < 0 ? Infinity : n, xs);\n    }));\n\n    /**\n     * Returns a new list containing the first `n` elements of a given list, passing each value\n     * to the supplied predicate function, and terminating when the predicate function returns\n     * `false`. Excludes the element that caused the predicate function to fail. The predicate\n     * function is passed one argument: *(value)*.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.dropWhile\n     * @example\n     *\n     *      var isNotFour = function(x) {\n     *        return !(x === 4);\n     *      };\n     *\n     *      R.takeWhile(isNotFour, [1, 2, 3, 4]); //=> [1, 2, 3]\n     */\n    var takeWhile = _curry2(_dispatchable('takeWhile', _xtakeWhile, function takeWhile(fn, list) {\n        var idx = 0, len = list.length;\n        while (idx < len && fn(list[idx])) {\n            idx += 1;\n        }\n        return _slice(list, 0, idx);\n    }));\n\n    /**\n     * Initializes a transducer using supplied iterator function. Returns a single item by\n     * iterating through the list, successively calling the transformed iterator function and\n     * passing it an accumulator value and the current value from the array, and then passing\n     * the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*. It will be wrapped as a\n     * transformer to initialize the transducer. A transformer can be passed directly in place\n     * of an iterator function.  In both cases, iteration may be stopped early with the\n     * `R.reduced` function.\n     *\n     * A transducer is a function that accepts a transformer and returns a transformer and can\n     * be composed directly.\n     *\n     * A transformer is an an object that provides a 2-arity reducing iterator function, step,\n     * 0-arity initial value function, init, and 1-arity result extraction function, result.\n     * The step function is used as the iterator function in reduce. The result function is used\n     * to convert the final accumulator into the return type and in most cases is R.identity.\n     * The init function can be used to provide an initial accumulator, but is ignored by transduce.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.reduce, R.reduced, R.into\n     * @sig (c -> c) -> (a,b -> a) -> a -> [b] -> a\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array. Wrapped as transformer, if necessary, and used to\n     *        initialize the transducer\n     * @param {*} acc The initial accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n     */\n    var transduce = curryN(4, function transduce(xf, fn, acc, list) {\n        return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n    });\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the elements of each list.  Duplication is\n     * determined according to the value returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a,a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @see R.union\n     * @example\n     *\n     *      function cmp(x, y) { return x.a === y.a; }\n     *      var l1 = [{a: 1}, {a: 2}];\n     *      var l2 = [{a: 1}, {a: 4}];\n     *      R.unionWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n     */\n    var unionWith = _curry3(function unionWith(pred, list1, list2) {\n        return uniqWith(pred, _concat(list1, list2));\n    });\n\n    /**\n     * Returns a new list containing only one copy of each element in the original list.\n     * `R.equals` is used to determine equality.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n     *      R.uniq([1, '1']);     //=> [1, '1']\n     *      R.uniq([[42], [42]]); //=> [[42]]\n     */\n    var uniq = uniqWith(equals);\n\n    /**\n     * Returns a new list by pulling every item at the first level of nesting out, and putting\n     * them in a new array.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b]\n     * @param {Array} list The array to consider.\n     * @return {Array} The flattened list.\n     * @see R.flatten\n     * @example\n     *\n     *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n     *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n     */\n    var unnest = _curry1(_makeFlat(false));\n\n    /**\n     * Accepts a function `fn` and any number of transformer functions and returns a new\n     * function. When the new function is invoked, it calls the function `fn` with parameters\n     * consisting of the result of calling each supplied handler on successive arguments to the\n     * new function.\n     *\n     * If more arguments are passed to the returned function than transformer functions, those\n     * arguments are passed directly to `fn` as additional parameters. If you expect additional\n     * arguments that don't need to be transformed, although you can ignore them, it's best to\n     * pass an identity function so that the new function reports the correct arity.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (x1 -> x2 -> ... -> z) -> ((a -> x1), (b -> x2), ...) -> (a -> b -> ... -> z)\n     * @param {Function} fn The function to wrap.\n     * @param {...Function} transformers A variable number of transformer functions\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var double = function(y) { return y * 2; };\n     *      var square = function(x) { return x * x; };\n     *      var add = function(a, b) { return a + b; };\n     *      // Adds any number of arguments together\n     *      var addAll = function() {\n     *        return R.reduce(add, 0, arguments);\n     *      };\n     *\n     *      // Basic example\n     *      var addDoubleAndSquare = R.useWith(addAll, double, square);\n     *\n     *      //≅ addAll(double(10), square(5));\n     *      addDoubleAndSquare(10, 5); //=> 45\n     *\n     *      // Example of passing more arguments than transformers\n     *      //≅ addAll(double(10), square(5), 100);\n     *      addDoubleAndSquare(10, 5, 100); //=> 145\n     *\n     *      // If there are extra _expected_ arguments that don't need to be transformed, although\n     *      // you can ignore them, it might be best to pass in the identity function so that the new\n     *      // function correctly reports arity.\n     *      var addDoubleAndSquareWithExtraParams = R.useWith(addAll, double, square, R.identity);\n     *      // addDoubleAndSquareWithExtraParams.length //=> 3\n     *      //≅ addAll(double(10), square(5), R.identity(100));\n     *      addDoubleAndSquare(10, 5, 100); //=> 145\n     */\n    /*, transformers */\n    var useWith = curry(function useWith(fn) {\n        var transformers = _slice(arguments, 1);\n        var tlen = transformers.length;\n        return curry(_arity(tlen, function () {\n            var args = [], idx = 0;\n            while (idx < tlen) {\n                args[idx] = transformers[idx](arguments[idx]);\n                idx += 1;\n            }\n            return fn.apply(this, args.concat(_slice(arguments, tlen)));\n        }));\n    });\n\n    /**\n     * Takes a spec object and a test object; returns true if the test satisfies\n     * the spec, false otherwise. An object satisfies the spec if, for each of the\n     * spec's own properties, accessing that property of the object gives the same\n     * value (in `R.equals` terms) as accessing that property of the spec.\n     *\n     * `whereEq` is a specialization of [`where`](#where).\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {String: *} -> {String: *} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @see R.where\n     * @example\n     *\n     *      // pred :: Object -> Boolean\n     *      var pred = R.whereEq({a: 1, b: 2});\n     *\n     *      pred({a: 1});              //=> false\n     *      pred({a: 1, b: 2});        //=> true\n     *      pred({a: 1, b: 2, c: 3});  //=> true\n     *      pred({a: 1, b: 1});        //=> false\n     */\n    var whereEq = _curry2(function whereEq(spec, testObj) {\n        return where(mapObj(equals, spec), testObj);\n    });\n\n    var _flatCat = function () {\n        var preservingReduced = function (xf) {\n            return {\n                '@@transducer/init': _xfBase.init,\n                '@@transducer/result': function (result) {\n                    return xf['@@transducer/result'](result);\n                },\n                '@@transducer/step': function (result, input) {\n                    var ret = xf['@@transducer/step'](result, input);\n                    return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n                }\n            };\n        };\n        return function _xcat(xf) {\n            var rxf = preservingReduced(xf);\n            return {\n                '@@transducer/init': _xfBase.init,\n                '@@transducer/result': function (result) {\n                    return rxf['@@transducer/result'](result);\n                },\n                '@@transducer/step': function (result, input) {\n                    return !isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n                }\n            };\n        };\n    }();\n\n    var _indexOf = function _indexOf(list, item, from) {\n        var idx = from;\n        while (idx < list.length) {\n            if (equals(list[idx], item)) {\n                return idx;\n            }\n            idx += 1;\n        }\n        return -1;\n    };\n\n    /**\n     * Create a predicate wrapper which will call a pick function (all/any) for each predicate\n     *\n     * @private\n     * @see R.all\n     * @see R.any\n     */\n    // Call function immediately if given arguments\n    // Return a function which will call the predicates with the provided arguments\n    var _predicateWrap = function _predicateWrap(predPicker) {\n        return function (preds) {\n            var predIterator = function () {\n                var args = arguments;\n                return predPicker(function (predicate) {\n                    return predicate.apply(null, args);\n                }, preds);\n            };\n            return arguments.length > 1 ? // Call function immediately if given arguments\n            predIterator.apply(null, _slice(arguments, 1)) : // Return a function which will call the predicates with the provided arguments\n            _arity(Math.max.apply(Math, pluck('length', preds)), predIterator);\n        };\n    };\n\n    var _xchain = _curry2(function _xchain(f, xf) {\n        return map(f, _flatCat(xf));\n    });\n\n    /**\n     * Given a list of predicates, returns a new predicate that will be true exactly when all of them are.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} list An array of predicate functions\n     * @param {*} optional Any arguments to pass into the predicates\n     * @return {Function} a function that applies its arguments to each of\n     *         the predicates, returning `true` if all are satisfied.\n     * @see R.anyPass\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0};\n     *      var f = R.allPass([gt10, even]);\n     *      f(11); //=> false\n     *      f(12); //=> true\n     */\n    var allPass = _curry1(_predicateWrap(all));\n\n    /**\n     * Given a list of predicates returns a new predicate that will be true exactly when any one of them is.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} list An array of predicate functions\n     * @param {*} optional Any arguments to pass into the predicates\n     * @return {Function} A function that applies its arguments to each of the predicates, returning\n     *         `true` if all are satisfied.\n     * @see R.allPass\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0};\n     *      var f = R.anyPass([gt10, even]);\n     *      f(11); //=> true\n     *      f(8); //=> true\n     *      f(9); //=> false\n     */\n    var anyPass = _curry1(_predicateWrap(any));\n\n    /**\n     * ap applies a list of functions to a list of values.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig [f] -> [a] -> [f a]\n     * @param {Array} fns An array of functions\n     * @param {Array} vs An array of values\n     * @return {Array} An array of results of applying each of `fns` to all of `vs` in turn.\n     * @example\n     *\n     *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n     */\n    var ap = _curry2(function ap(fns, vs) {\n        return _hasMethod('ap', fns) ? fns.ap(vs) : _reduce(function (acc, fn) {\n            return _concat(acc, map(fn, vs));\n        }, [], fns);\n    });\n\n    /**\n     * Returns the result of calling its first argument with the remaining\n     * arguments. This is occasionally useful as a converging function for\n     * `R.converge`: the left branch can produce a function while the right\n     * branch produces a value to be passed to that function as an argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (*... -> a),*... -> a\n     * @param {Function} fn The function to apply to the remaining arguments.\n     * @param {...*} args Any number of positional arguments.\n     * @return {*}\n     * @see R.apply\n     * @example\n     *\n     *      var indentN = R.pipe(R.times(R.always(' ')),\n     *                           R.join(''),\n     *                           R.replace(/^(?!$)/gm));\n     *\n     *      var format = R.converge(R.call,\n     *                              R.pipe(R.prop('indent'), indentN),\n     *                              R.prop('value'));\n     *\n     *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n     */\n    var call = curry(function call(fn) {\n        return fn.apply(this, _slice(arguments, 1));\n    });\n\n    /**\n     * `chain` maps a function over a list and concatenates the results.\n     * This implementation is compatible with the\n     * Fantasy-land Chain spec, and will work with types that implement that spec.\n     * `chain` is also known as `flatMap` in some libraries\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> [b]) -> [a] -> [b]\n     * @param {Function} fn\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      var duplicate = function(n) {\n     *        return [n, n];\n     *      };\n     *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n     */\n    var chain = _curry2(_dispatchable('chain', _xchain, function chain(fn, list) {\n        return unnest(map(fn, list));\n    }));\n\n    /**\n     * Turns a list of Functors into a Functor of a list, applying\n     * a mapping function to the elements of the list along the way.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.commute\n     * @sig Functor f => (f a -> f b) -> (x -> f x) -> [f a] -> f [b]\n     * @param {Function} fn The transformation function\n     * @param {Function} of A function that returns the data type to return\n     * @param {Array} list An array of functors of the same type\n     * @return {*}\n     * @example\n     *\n     *      R.commuteMap(R.map(R.add(10)), R.of, [[1], [2, 3]]);   //=> [[11, 12], [11, 13]]\n     *      R.commuteMap(R.map(R.add(10)), R.of, [[1, 2], [3]]);   //=> [[11, 13], [12, 13]]\n     *      R.commuteMap(R.map(R.add(10)), R.of, [[1], [2], [3]]); //=> [[11, 12, 13]]\n     *      R.commuteMap(R.map(R.add(10)), Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([11, 12, 13])\n     *      R.commuteMap(R.map(R.add(10)), Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n     */\n    var commuteMap = _curry3(function commuteMap(fn, of, list) {\n        function consF(acc, ftor) {\n            return ap(map(append, fn(ftor)), acc);\n        }\n        return _reduce(consF, of([]), list);\n    });\n\n    /**\n     * Wraps a constructor function inside a curried function that can be called with the same\n     * arguments and returns the same type. The arity of the function returned is specified\n     * to allow using variadic constructor functions.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (* -> {*}) -> (* -> {*})\n     * @param {Number} n The arity of the constructor function.\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Variadic constructor function\n     *      var Widget = function() {\n     *        this.children = Array.prototype.slice.call(arguments);\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = [\n     *        // ...\n     *      ];\n     *      R.map(R.constructN(1, Widget), allConfigs); // a list of Widgets\n     */\n    var constructN = _curry2(function constructN(n, Fn) {\n        if (n > 10) {\n            throw new Error('Constructor with greater than ten arguments');\n        }\n        if (n === 0) {\n            return function () {\n                return new Fn();\n            };\n        }\n        return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n            switch (arguments.length) {\n            case 1:\n                return new Fn($0);\n            case 2:\n                return new Fn($0, $1);\n            case 3:\n                return new Fn($0, $1, $2);\n            case 4:\n                return new Fn($0, $1, $2, $3);\n            case 5:\n                return new Fn($0, $1, $2, $3, $4);\n            case 6:\n                return new Fn($0, $1, $2, $3, $4, $5);\n            case 7:\n                return new Fn($0, $1, $2, $3, $4, $5, $6);\n            case 8:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n            case 9:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n            case 10:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n            }\n        }));\n    });\n\n    /**\n     * Accepts at least three functions and returns a new function. When invoked, this new\n     * function will invoke the first function, `after`, passing as its arguments the\n     * results of invoking the subsequent functions with whatever arguments are passed to\n     * the new function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (x1 -> x2 -> ... -> z) -> ((a -> b -> ... -> x1), (a -> b -> ... -> x2), ...) -> (a -> b -> ... -> z)\n     * @param {Function} after A function. `after` will be invoked with the return values of\n     *        `fn1` and `fn2` as its arguments.\n     * @param {...Function} functions A variable number of functions.\n     * @return {Function} A new function.\n     * @example\n     *\n     *      var add = function(a, b) { return a + b; };\n     *      var multiply = function(a, b) { return a * b; };\n     *      var subtract = function(a, b) { return a - b; };\n     *\n     *      //≅ multiply( add(1, 2), subtract(1, 2) );\n     *      R.converge(multiply, add, subtract)(1, 2); //=> -3\n     *\n     *      var add3 = function(a, b, c) { return a + b + c; };\n     *      R.converge(add3, multiply, add, subtract)(1, 2); //=> 4\n     */\n    var converge = curryN(3, function converge(after) {\n        var fns = _slice(arguments, 1);\n        return curryN(Math.max.apply(Math, pluck('length', fns)), function () {\n            var args = arguments;\n            var context = this;\n            return after.apply(context, _map(function (fn) {\n                return fn.apply(context, args);\n            }, fns));\n        });\n    });\n\n    /**\n     * Returns all but the first `n` elements of the given list, string, or\n     * transducer/transformer (or object with a `drop` method).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.transduce\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {*} list\n     * @return {*}\n     * @see R.take\n     * @example\n     *\n     *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n     *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n     *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n     *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n     *      R.drop(3, 'ramda');               //=> 'da'\n     */\n    var drop = _curry2(_dispatchable('drop', _xdrop, function drop(n, xs) {\n        return slice(Math.max(0, n), Infinity, xs);\n    }));\n\n    /**\n     * Returns a list containing all but the last `n` elements of the given `list`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n The number of elements of `xs` to skip.\n     * @param {Array} xs The collection to consider.\n     * @return {Array}\n     * @see R.takeLast\n     * @example\n     *\n     *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n     *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n     *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n     *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n     *      R.dropLast(3, 'ramda');               //=> 'ra'\n     */\n    var dropLast = _curry2(function dropLast(n, xs) {\n        return take(n < xs.length ? xs.length - n : 0, xs);\n    });\n\n    /**\n     * Returns a new list without any consecutively repeating elements. Equality is\n     * determined by applying the supplied predicate two consecutive elements.\n     * The first element in a series of equal element is the one being preserved.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} `list` without repeating elements.\n     * @example\n     *\n     *      function lengthEq(x, y) { return Math.abs(x) === Math.abs(y); };\n     *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n     *      R.dropRepeatsWith(lengthEq, l); //=> [1, 3, 4, -5, 3]\n     */\n    var dropRepeatsWith = _curry2(_dispatchable('dropRepeatsWith', _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n        var result = [];\n        var idx = 1;\n        var len = list.length;\n        if (len !== 0) {\n            result[0] = list[0];\n            while (idx < len) {\n                if (!pred(last(result), list[idx])) {\n                    result[result.length] = list[idx];\n                }\n                idx += 1;\n            }\n        }\n        return result;\n    }));\n\n    /**\n     * Reports whether two objects have the same value, in `R.equals` terms,\n     * for the specified property. Useful as a curried predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig k -> {k: v} -> {k: v} -> Boolean\n     * @param {String} prop The name of the property to compare\n     * @param {Object} obj1\n     * @param {Object} obj2\n     * @return {Boolean}\n     *\n     * @example\n     *\n     *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n     *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n     *      R.eqProps('a', o1, o2); //=> false\n     *      R.eqProps('c', o1, o2); //=> true\n     */\n    var eqProps = _curry3(function eqProps(prop, obj1, obj2) {\n        return equals(obj1[prop], obj2[prop]);\n    });\n\n    /**\n     * Returns the position of the first occurrence of an item in an array,\n     * or -1 if the item is not included in the array. `R.equals` is used to\n     * determine equality.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} xs The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     * @see R.lastIndexOf\n     * @example\n     *\n     *      R.indexOf(3, [1,2,3,4]); //=> 2\n     *      R.indexOf(10, [1,2,3,4]); //=> -1\n     */\n    var indexOf = _curry2(function indexOf(target, xs) {\n        return _hasMethod('indexOf', xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n    });\n\n    /**\n     * Returns all but the last element of the given list or string.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.last, R.head, R.tail\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.init([1, 2, 3]);  //=> [1, 2]\n     *      R.init([1, 2]);     //=> [1]\n     *      R.init([1]);        //=> []\n     *      R.init([]);         //=> []\n     *\n     *      R.init('abc');  //=> 'ab'\n     *      R.init('ab');   //=> 'a'\n     *      R.init('a');    //=> ''\n     *      R.init('');     //=> ''\n     */\n    var init = slice(0, -1);\n\n    /**\n     * Returns `true` if all elements are unique, in `R.equals` terms,\n     * otherwise `false`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> Boolean\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if all elements are unique, else `false`.\n     * @example\n     *\n     *      R.isSet(['1', 1]); //=> true\n     *      R.isSet([1, 1]);   //=> false\n     *      R.isSet([[42], [42]]); //=> false\n     */\n    var isSet = _curry1(function isSet(list) {\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            if (_indexOf(list, list[idx], idx + 1) >= 0) {\n                return false;\n            }\n            idx += 1;\n        }\n        return true;\n    });\n\n    /**\n     * Returns a lens for the given getter and setter functions. The getter \"gets\"\n     * the value of the focus; the setter \"sets\" the value of the focus. The setter\n     * should not mutate the data structure.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n     * @param {Function} getter\n     * @param {Function} setter\n     * @return {Lens}\n     * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n     *\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n     */\n    var lens = _curry2(function lens(getter, setter) {\n        return function (f) {\n            return function (s) {\n                return map(function (v) {\n                    return setter(v, s);\n                }, f(getter(s)));\n            };\n        };\n    });\n\n    /**\n     * Returns a lens whose focus is the specified index.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Number -> Lens s a\n     * @param {Number} n\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var headLens = R.lensIndex(0);\n     *\n     *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n     *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n     *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n     */\n    var lensIndex = _curry1(function lensIndex(n) {\n        return lens(nth(n), update(n));\n    });\n\n    /**\n     * Returns a lens whose focus is the specified property.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig String -> Lens s a\n     * @param {String} k\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n     */\n    var lensProp = _curry1(function lensProp(k) {\n        return lens(prop(k), assoc(k));\n    });\n\n    /**\n     * \"lifts\" a function to be the specified arity, so that it may \"map over\" that many\n     * lists (or other Functors).\n     *\n     * @func\n     * @memberOf R\n     * @see R.lift\n     * @category Function\n     * @sig Number -> (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The function `fn` applicable to mappable objects.\n     * @example\n     *\n     *      var madd3 = R.liftN(3, R.curryN(3, function() {\n     *        return R.reduce(R.add, 0, arguments);\n     *      }));\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     */\n    var liftN = _curry2(function liftN(arity, fn) {\n        var lifted = curryN(arity, fn);\n        return curryN(arity, function () {\n            return _reduce(ap, map(lifted, arguments[0]), _slice(arguments, 1));\n        });\n    });\n\n    /**\n     * Returns the mean of the given list of numbers.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list\n     * @return {Number}\n     * @example\n     *\n     *      R.mean([2, 7, 9]); //=> 6\n     *      R.mean([]); //=> NaN\n     */\n    var mean = _curry1(function mean(list) {\n        return sum(list) / list.length;\n    });\n\n    /**\n     * Returns the median of the given list of numbers.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list\n     * @return {Number}\n     * @example\n     *\n     *      R.median([2, 9, 7]); //=> 7\n     *      R.median([7, 2, 10, 9]); //=> 8\n     *      R.median([]); //=> NaN\n     */\n    var median = _curry1(function median(list) {\n        var len = list.length;\n        if (len === 0) {\n            return NaN;\n        }\n        var width = 2 - len % 2;\n        var idx = (len - width) / 2;\n        return mean(_slice(list).sort(function (a, b) {\n            return a < b ? -1 : a > b ? 1 : 0;\n        }).slice(idx, idx + width));\n    });\n\n    /**\n     * Merges a list of objects together into one object.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [{k: v}] -> {k: v}\n     * @param {Array} list An array of objects\n     * @return {Object} A merged object.\n     * @see R.reduce\n     * @example\n     *\n     *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n     *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n     */\n    var mergeAll = _curry1(function mergeAll(list) {\n        return reduce(merge, {}, list);\n    });\n\n    /**\n     * Performs left-to-right function composition. The leftmost function may have\n     * any arity; the remaining functions must be unary.\n     *\n     * In some libraries this function is named `sequence`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> (a -> b -> ... -> n -> z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.compose\n     * @example\n     *\n     *      var f = R.pipe(Math.pow, R.negate, R.inc);\n     *\n     *      f(3, 4); // -(3^4) + 1\n     */\n    var pipe = function pipe() {\n        if (arguments.length === 0) {\n            throw new Error('pipe requires at least one argument');\n        }\n        return curryN(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n    };\n\n    /**\n     * Performs left-to-right composition of one or more Promise-returning\n     * functions. The leftmost function may have any arity; the remaining\n     * functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.composeP\n     * @example\n     *\n     *      //  followersForUser :: String -> Promise [User]\n     *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n     */\n    var pipeP = function pipeP() {\n        if (arguments.length === 0) {\n            throw new Error('pipeP requires at least one argument');\n        }\n        return curryN(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n    };\n\n    /**\n     * Multiplies together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The product of all the numbers in the list.\n     * @see R.reduce\n     * @example\n     *\n     *      R.product([2,4,6,8,100,1]); //=> 38400\n     */\n    var product = reduce(multiply, 1);\n\n    /**\n     * Reasonable analog to SQL `select` statement.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @category Relation\n     * @sig [k] -> [{k: v}] -> [{k: v}]\n     * @param {Array} props The property names to project\n     * @param {Array} objs The objects to query\n     * @return {Array} An array of objects with just the `props` properties.\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n     *      var kids = [abby, fred];\n     *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n     */\n    // passing `identity` gives correct arity\n    var project = useWith(_map, pickAll, identity);\n\n    /**\n     * Returns a new list containing the last `n` elements of the given list.\n     * If `n > list.length`, returns a list of `list.length` elements.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n The number of elements to return.\n     * @param {Array} xs The collection to consider.\n     * @return {Array}\n     * @see R.dropLast\n     * @example\n     *\n     *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n     *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['for', 'baz']\n     *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.takeLast(3, 'ramda');               //=> 'mda'\n     */\n    var takeLast = _curry2(function takeLast(n, xs) {\n        return drop(n >= 0 ? xs.length - n : 0, xs);\n    });\n\n    var _contains = function _contains(a, list) {\n        return _indexOf(list, a, 0) >= 0;\n    };\n\n    //  mapPairs :: (Object, [String]) -> [String]\n    // Function, RegExp, user-defined types\n    var _toString = function _toString(x, seen) {\n        var recur = function recur(y) {\n            var xs = seen.concat([x]);\n            return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n        };\n        //  mapPairs :: (Object, [String]) -> [String]\n        var mapPairs = function (obj, keys) {\n            return _map(function (k) {\n                return _quote(k) + ': ' + recur(obj[k]);\n            }, keys.slice().sort());\n        };\n        switch (Object.prototype.toString.call(x)) {\n        case '[object Arguments]':\n            return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n        case '[object Array]':\n            return '[' + _map(recur, x).concat(mapPairs(x, reject(test(/^\\d+$/), keys(x)))).join(', ') + ']';\n        case '[object Boolean]':\n            return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n        case '[object Date]':\n            return 'new Date(' + _quote(_toISOString(x)) + ')';\n        case '[object Null]':\n            return 'null';\n        case '[object Number]':\n            return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n        case '[object String]':\n            return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n        case '[object Undefined]':\n            return 'undefined';\n        default:\n            return typeof x.constructor === 'function' && x.constructor.name !== 'Object' && typeof x.toString === 'function' && x.toString() !== '[object Object]' ? x.toString() : // Function, RegExp, user-defined types\n            '{' + mapPairs(x, keys(x)).join(', ') + '}';\n        }\n    };\n\n    /**\n     * Turns a list of Functors into a Functor of a list.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.commuteMap\n     * @sig Functor f => (x -> f x) -> [f a] -> f [a]\n     * @param {Function} of A function that returns the data type to return\n     * @param {Array} list An array of functors of the same type\n     * @return {*}\n     * @example\n     *\n     *      R.commute(R.of, [[1], [2, 3]]);   //=> [[1, 2], [1, 3]]\n     *      R.commute(R.of, [[1, 2], [3]]);   //=> [[1, 3], [2, 3]]\n     *      R.commute(R.of, [[1], [2], [3]]); //=> [[1, 2, 3]]\n     *      R.commute(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n     *      R.commute(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n     */\n    var commute = commuteMap(identity);\n\n    /**\n     * Performs right-to-left function composition. The rightmost function may have\n     * any arity; the remaining functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> (a -> b -> ... -> n -> z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.pipe\n     * @example\n     *\n     *      var f = R.compose(R.inc, R.negate, Math.pow);\n     *\n     *      f(3, 4); // -(3^4) + 1\n     */\n    var compose = function compose() {\n        if (arguments.length === 0) {\n            throw new Error('compose requires at least one argument');\n        }\n        return pipe.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Returns the right-to-left Kleisli composition of the provided functions,\n     * each of which must return a value of a type supported by [`chain`](#chain).\n     *\n     * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @see R.pipeK\n     * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (m a -> m z)\n     * @param {...Function}\n     * @return {Function}\n     * @example\n     *\n     *      //  parseJson :: String -> Maybe *\n     *      //  get :: String -> Object -> Maybe *\n     *\n     *      //  getStateCode :: Maybe String -> Maybe String\n     *      var getStateCode = R.composeK(\n     *        R.compose(Maybe.of, R.toUpper),\n     *        get('state'),\n     *        get('address'),\n     *        get('user'),\n     *        parseJson\n     *      );\n     *\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n     *      //=> Just('NY')\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\n     *      //=> Nothing()\n     */\n    var composeK = function composeK() {\n        return arguments.length === 0 ? identity : compose.apply(this, map(chain, arguments));\n    };\n\n    /**\n     * Performs right-to-left composition of one or more Promise-returning\n     * functions. The rightmost function may have any arity; the remaining\n     * functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.pipeP\n     * @example\n     *\n     *      //  followersForUser :: String -> Promise [User]\n     *      var followersForUser = R.composeP(db.getFollowers, db.getUserById);\n     */\n    var composeP = function composeP() {\n        if (arguments.length === 0) {\n            throw new Error('composeP requires at least one argument');\n        }\n        return pipeP.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Wraps a constructor function inside a curried function that can be called with the same\n     * arguments and returns the same type.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> {*}) -> (* -> {*})\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Constructor function\n     *      var Widget = function(config) {\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = [\n     *        // ...\n     *      ];\n     *      R.map(R.construct(Widget), allConfigs); // a list of Widgets\n     */\n    var construct = _curry1(function construct(Fn) {\n        return constructN(Fn.length, Fn);\n    });\n\n    /**\n     * Returns `true` if the specified value is equal, in `R.equals` terms,\n     * to at least one element of the given list; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> Boolean\n     * @param {Object} a The item to compare against.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the item is in the list, `false` otherwise.\n     *\n     * @example\n     *\n     *      R.contains(3, [1, 2, 3]); //=> true\n     *      R.contains(4, [1, 2, 3]); //=> false\n     *      R.contains([42], [[42]]); //=> true\n     */\n    var contains = _curry2(_contains);\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not contained in the second list.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @see R.differenceWith\n     * @example\n     *\n     *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n     *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n     */\n    var difference = _curry2(function difference(first, second) {\n        var out = [];\n        var idx = 0;\n        var firstLen = first.length;\n        while (idx < firstLen) {\n            if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n                out[out.length] = first[idx];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new list without any consecutively repeating elements.\n     * `R.equals` is used to determine equality.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} `list` without repeating elements.\n     * @example\n     *\n     *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n     */\n    var dropRepeats = _curry1(_dispatchable('dropRepeats', _xdropRepeatsWith(equals), dropRepeatsWith(equals)));\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those elements common to both lists.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @see R.intersectionWith\n     * @return {Array} The list of elements found in both `list1` and `list2`.\n     * @example\n     *\n     *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n     */\n    var intersection = _curry2(function intersection(list1, list2) {\n        return uniq(_filter(flip(_contains)(list1), list2));\n    });\n\n    /**\n     * \"lifts\" a function of arity > 1 so that it may \"map over\" an Array or\n     * other Functor.\n     *\n     * @func\n     * @memberOf R\n     * @see R.liftN\n     * @category Function\n     * @sig (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The function `fn` applicable to mappable objects.\n     * @example\n     *\n     *      var madd3 = R.lift(R.curry(function(a, b, c) {\n     *        return a + b + c;\n     *      }));\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     *\n     *      var madd5 = R.lift(R.curry(function(a, b, c, d, e) {\n     *        return a + b + c + d + e;\n     *      }));\n     *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n     */\n    var lift = _curry1(function lift(fn) {\n        return liftN(fn.length, fn);\n    });\n\n    /**\n     * Returns a partial copy of an object omitting the keys specified.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> {String: *} -> {String: *}\n     * @param {Array} names an array of String property names to omit from the new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with properties from `names` not on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n     */\n    var omit = _curry2(function omit(names, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (!_contains(prop, names)) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns the left-to-right Kleisli composition of the provided functions,\n     * each of which must return a value of a type supported by [`chain`](#chain).\n     *\n     * `R.pipeK(f, g, h)` is equivalent to `R.pipe(R.chain(f), R.chain(g), R.chain(h))`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @see R.composeK\n     * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (m a -> m z)\n     * @param {...Function}\n     * @return {Function}\n     * @example\n     *\n     *      //  parseJson :: String -> Maybe *\n     *      //  get :: String -> Object -> Maybe *\n     *\n     *      //  getStateCode :: Maybe String -> Maybe String\n     *      var getStateCode = R.pipeK(\n     *        parseJson,\n     *        get('user'),\n     *        get('address'),\n     *        get('state'),\n     *        R.compose(Maybe.of, R.toUpper)\n     *      );\n     *\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n     *      //=> Just('NY')\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\n     *      //=> Nothing()\n     */\n    var pipeK = function pipeK() {\n        return composeK.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Returns the string representation of the given value. `eval`'ing the output\n     * should result in a value equivalent to the input value. Many of the built-in\n     * `toString` methods do not satisfy this requirement.\n     *\n     * If the given value is an `[object Object]` with a `toString` method other\n     * than `Object.prototype.toString`, this method is invoked with no arguments\n     * to produce the return value. This means user-defined constructor functions\n     * can provide a suitable `toString` method. For example:\n     *\n     *     function Point(x, y) {\n     *       this.x = x;\n     *       this.y = y;\n     *     }\n     *\n     *     Point.prototype.toString = function() {\n     *       return 'new Point(' + this.x + ', ' + this.y + ')';\n     *     };\n     *\n     *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig * -> String\n     * @param {*} val\n     * @return {String}\n     * @example\n     *\n     *      R.toString(42); //=> '42'\n     *      R.toString('abc'); //=> '\"abc\"'\n     *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n     *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n     *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n     */\n    var toString = _curry1(function toString(val) {\n        return _toString(val, []);\n    });\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the\n     * elements of each list.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @example\n     *\n     *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n     */\n    var union = _curry2(compose(uniq, _concat));\n\n    /**\n     * Returns a new list containing only one copy of each element in the\n     * original list, based upon the value returned by applying the supplied\n     * function to each list element. Prefers the first item if the supplied\n     * function produces the same value on two items. `R.equals` is used for\n     * comparison.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> b) -> [a] -> [a]\n     * @param {Function} fn A function used to produce a value to use during comparisons.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n     */\n    var uniqBy = _curry2(function uniqBy(fn, list) {\n        var idx = 0, applied = [], result = [], appliedItem, item;\n        while (idx < list.length) {\n            item = list[idx];\n            appliedItem = fn(item);\n            if (!_contains(appliedItem, applied)) {\n                result.push(item);\n                applied.push(appliedItem);\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Turns a named method with a specified arity into a function\n     * that can be called directly supplied with arguments and a target object.\n     *\n     * The returned function is curried and accepts `arity + 1` parameters where\n     * the final parameter is the target object.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n     * @param {Number} arity Number of arguments the returned function should take\n     *        before the target object.\n     * @param {Function} method Name of the method to call.\n     * @return {Function} A new curried function.\n     * @example\n     *\n     *      var sliceFrom = R.invoker(1, 'slice');\n     *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n     *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n     *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n     */\n    var invoker = _curry2(function invoker(arity, method) {\n        return curryN(arity + 1, function () {\n            var target = arguments[arity];\n            if (target != null && is(Function, target[method])) {\n                return target[method].apply(target, _slice(arguments, 0, arity));\n            }\n            throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n        });\n    });\n\n    /**\n     * Returns a string made by inserting the `separator` between each\n     * element and concatenating all the elements into a single string.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig String -> [a] -> String\n     * @param {Number|String} separator The string used to separate the elements.\n     * @param {Array} xs The elements to join into a string.\n     * @return {String} str The string made by concatenating `xs` with `separator`.\n     * @see R.split\n     * @example\n     *\n     *      var spacer = R.join(' ');\n     *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n     *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n     */\n    var join = invoker(1, 'join');\n\n    /**\n     * Creates a new function that, when invoked, caches the result of calling `fn` for a given\n     * argument set and returns the result. Subsequent calls to the memoized `fn` with the same\n     * argument set will not result in an additional call to `fn`; instead, the cached result\n     * for that set of arguments will be returned.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (*... -> a) -> (*... -> a)\n     * @param {Function} fn The function to memoize.\n     * @return {Function} Memoized version of `fn`.\n     * @example\n     *\n     *      var count = 0;\n     *      var factorial = R.memoize(function(n) {\n     *        count += 1;\n     *        return R.product(R.range(1, n + 1));\n     *      });\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      count; //=> 1\n     */\n    var memoize = _curry1(function memoize(fn) {\n        var cache = {};\n        return function () {\n            var key = toString(arguments);\n            if (!_has(key, cache)) {\n                cache[key] = fn.apply(this, arguments);\n            }\n            return cache[key];\n        };\n    });\n\n    /**\n     * Splits a string into an array of strings based on the given\n     * separator.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String -> [String]\n     * @param {String} sep The separator string.\n     * @param {String} str The string to separate into an array.\n     * @return {Array} The array of strings from `str` separated by `str`.\n     * @see R.join\n     * @example\n     *\n     *      var pathComponents = R.split('/');\n     *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n     *\n     *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n     */\n    var split = invoker(1, 'split');\n\n    /**\n     * The lower case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to lower case.\n     * @return {String} The lower case version of `str`.\n     * @see R.toUpper\n     * @example\n     *\n     *      R.toLower('XYZ'); //=> 'xyz'\n     */\n    var toLower = invoker(0, 'toLowerCase');\n\n    /**\n     * The upper case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to upper case.\n     * @return {String} The upper case version of `str`.\n     * @see R.toLower\n     * @example\n     *\n     *      R.toUpper('abc'); //=> 'ABC'\n     */\n    var toUpper = invoker(0, 'toUpperCase');\n\n    var R = {\n        F: F,\n        T: T,\n        __: __,\n        add: add,\n        addIndex: addIndex,\n        adjust: adjust,\n        all: all,\n        allPass: allPass,\n        always: always,\n        and: and,\n        any: any,\n        anyPass: anyPass,\n        ap: ap,\n        aperture: aperture,\n        append: append,\n        apply: apply,\n        assoc: assoc,\n        assocPath: assocPath,\n        binary: binary,\n        bind: bind,\n        both: both,\n        call: call,\n        chain: chain,\n        clone: clone,\n        commute: commute,\n        commuteMap: commuteMap,\n        comparator: comparator,\n        complement: complement,\n        compose: compose,\n        composeK: composeK,\n        composeP: composeP,\n        concat: concat,\n        cond: cond,\n        construct: construct,\n        constructN: constructN,\n        contains: contains,\n        containsWith: containsWith,\n        converge: converge,\n        countBy: countBy,\n        createMapEntry: createMapEntry,\n        curry: curry,\n        curryN: curryN,\n        dec: dec,\n        defaultTo: defaultTo,\n        difference: difference,\n        differenceWith: differenceWith,\n        dissoc: dissoc,\n        dissocPath: dissocPath,\n        divide: divide,\n        drop: drop,\n        dropLast: dropLast,\n        dropLastWhile: dropLastWhile,\n        dropRepeats: dropRepeats,\n        dropRepeatsWith: dropRepeatsWith,\n        dropWhile: dropWhile,\n        either: either,\n        empty: empty,\n        eqProps: eqProps,\n        equals: equals,\n        evolve: evolve,\n        filter: filter,\n        find: find,\n        findIndex: findIndex,\n        findLast: findLast,\n        findLastIndex: findLastIndex,\n        flatten: flatten,\n        flip: flip,\n        forEach: forEach,\n        fromPairs: fromPairs,\n        functions: functions,\n        functionsIn: functionsIn,\n        groupBy: groupBy,\n        gt: gt,\n        gte: gte,\n        has: has,\n        hasIn: hasIn,\n        head: head,\n        identical: identical,\n        identity: identity,\n        ifElse: ifElse,\n        inc: inc,\n        indexOf: indexOf,\n        init: init,\n        insert: insert,\n        insertAll: insertAll,\n        intersection: intersection,\n        intersectionWith: intersectionWith,\n        intersperse: intersperse,\n        into: into,\n        invert: invert,\n        invertObj: invertObj,\n        invoker: invoker,\n        is: is,\n        isArrayLike: isArrayLike,\n        isEmpty: isEmpty,\n        isNil: isNil,\n        isSet: isSet,\n        join: join,\n        keys: keys,\n        keysIn: keysIn,\n        last: last,\n        lastIndexOf: lastIndexOf,\n        length: length,\n        lens: lens,\n        lensIndex: lensIndex,\n        lensProp: lensProp,\n        lift: lift,\n        liftN: liftN,\n        lt: lt,\n        lte: lte,\n        map: map,\n        mapAccum: mapAccum,\n        mapAccumRight: mapAccumRight,\n        mapObj: mapObj,\n        mapObjIndexed: mapObjIndexed,\n        match: match,\n        mathMod: mathMod,\n        max: max,\n        maxBy: maxBy,\n        mean: mean,\n        median: median,\n        memoize: memoize,\n        merge: merge,\n        mergeAll: mergeAll,\n        min: min,\n        minBy: minBy,\n        modulo: modulo,\n        multiply: multiply,\n        nAry: nAry,\n        negate: negate,\n        none: none,\n        not: not,\n        nth: nth,\n        nthArg: nthArg,\n        nthChar: nthChar,\n        nthCharCode: nthCharCode,\n        of: of,\n        omit: omit,\n        once: once,\n        or: or,\n        over: over,\n        partial: partial,\n        partialRight: partialRight,\n        partition: partition,\n        path: path,\n        pathEq: pathEq,\n        pick: pick,\n        pickAll: pickAll,\n        pickBy: pickBy,\n        pipe: pipe,\n        pipeK: pipeK,\n        pipeP: pipeP,\n        pluck: pluck,\n        prepend: prepend,\n        product: product,\n        project: project,\n        prop: prop,\n        propEq: propEq,\n        propIs: propIs,\n        propOr: propOr,\n        propSatisfies: propSatisfies,\n        props: props,\n        range: range,\n        reduce: reduce,\n        reduceRight: reduceRight,\n        reduced: reduced,\n        reject: reject,\n        remove: remove,\n        repeat: repeat,\n        replace: replace,\n        reverse: reverse,\n        scan: scan,\n        set: set,\n        slice: slice,\n        sort: sort,\n        sortBy: sortBy,\n        split: split,\n        splitEvery: splitEvery,\n        subtract: subtract,\n        sum: sum,\n        tail: tail,\n        take: take,\n        takeLast: takeLast,\n        takeLastWhile: takeLastWhile,\n        takeWhile: takeWhile,\n        tap: tap,\n        test: test,\n        times: times,\n        toLower: toLower,\n        toPairs: toPairs,\n        toPairsIn: toPairsIn,\n        toString: toString,\n        toUpper: toUpper,\n        transduce: transduce,\n        trim: trim,\n        type: type,\n        unapply: unapply,\n        unary: unary,\n        uncurryN: uncurryN,\n        unfold: unfold,\n        union: union,\n        unionWith: unionWith,\n        uniq: uniq,\n        uniqBy: uniqBy,\n        uniqWith: uniqWith,\n        unnest: unnest,\n        update: update,\n        useWith: useWith,\n        values: values,\n        valuesIn: valuesIn,\n        view: view,\n        where: where,\n        whereEq: whereEq,\n        wrap: wrap,\n        xprod: xprod,\n        zip: zip,\n        zipObj: zipObj,\n        zipWith: zipWith\n    };\n\n  /* TEST_ENTRY_POINT */\n\n  if (true) {\n    module.exports = R;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function() { return R; });\n  } else {\n    this.R = R;\n  }\n\n}.call(this));\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getNative = __webpack_require__(22),\n    root = __webpack_require__(11);\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n//  Ramda v0.17.1\n//  https://github.com/ramda/ramda\n//  (c) 2013-2015 Scott Sauyet, Michael Hurley, and David Chambers\n//  Ramda may be freely distributed under the MIT license.\n\n;(function() {\n\n  'use strict';\n\n  /**\n     * A special placeholder value used to specify \"gaps\" within curried functions,\n     * allowing partial application of any combination of arguments,\n     * regardless of their positions.\n     *\n     * If `g` is a curried ternary function and `_` is `R.__`, the following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2, _)(1, 3)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @constant\n     * @memberOf R\n     * @category Function\n     * @example\n     *\n     *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n     *      greet('Alice'); //=> 'Hello, Alice!'\n     */\n    var __ = { '@@functional/placeholder': true };\n\n    // jshint unused:vars\n    var _arity = function _arity(n, fn) {\n        // jshint unused:vars\n        switch (n) {\n        case 0:\n            return function () {\n                return fn.apply(this, arguments);\n            };\n        case 1:\n            return function (a0) {\n                return fn.apply(this, arguments);\n            };\n        case 2:\n            return function (a0, a1) {\n                return fn.apply(this, arguments);\n            };\n        case 3:\n            return function (a0, a1, a2) {\n                return fn.apply(this, arguments);\n            };\n        case 4:\n            return function (a0, a1, a2, a3) {\n                return fn.apply(this, arguments);\n            };\n        case 5:\n            return function (a0, a1, a2, a3, a4) {\n                return fn.apply(this, arguments);\n            };\n        case 6:\n            return function (a0, a1, a2, a3, a4, a5) {\n                return fn.apply(this, arguments);\n            };\n        case 7:\n            return function (a0, a1, a2, a3, a4, a5, a6) {\n                return fn.apply(this, arguments);\n            };\n        case 8:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                return fn.apply(this, arguments);\n            };\n        case 9:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                return fn.apply(this, arguments);\n            };\n        case 10:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                return fn.apply(this, arguments);\n            };\n        default:\n            throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n        }\n    };\n\n    var _cloneRegExp = function _cloneRegExp(pattern) {\n        return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n    };\n\n    var _complement = function _complement(f) {\n        return function () {\n            return !f.apply(this, arguments);\n        };\n    };\n\n    /**\n     * Private `concat` function to merge two array-like objects.\n     *\n     * @private\n     * @param {Array|Arguments} [set1=[]] An array-like object.\n     * @param {Array|Arguments} [set2=[]] An array-like object.\n     * @return {Array} A new, merged array.\n     * @example\n     *\n     *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     */\n    var _concat = function _concat(set1, set2) {\n        set1 = set1 || [];\n        set2 = set2 || [];\n        var idx;\n        var len1 = set1.length;\n        var len2 = set2.length;\n        var result = [];\n        idx = 0;\n        while (idx < len1) {\n            result[result.length] = set1[idx];\n            idx += 1;\n        }\n        idx = 0;\n        while (idx < len2) {\n            result[result.length] = set2[idx];\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _containsWith = function _containsWith(pred, x, list) {\n        var idx = 0, len = list.length;\n        while (idx < len) {\n            if (pred(x, list[idx])) {\n                return true;\n            }\n            idx += 1;\n        }\n        return false;\n    };\n\n    /**\n     * Optimized internal two-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry1 = function _curry1(fn) {\n        return function f1(a) {\n            if (arguments.length === 0) {\n                return f1;\n            } else if (a != null && a['@@functional/placeholder'] === true) {\n                return f1;\n            } else {\n                return fn.apply(this, arguments);\n            }\n        };\n    };\n\n    /**\n     * Optimized internal two-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry2 = function _curry2(fn) {\n        return function f2(a, b) {\n            var n = arguments.length;\n            if (n === 0) {\n                return f2;\n            } else if (n === 1 && a != null && a['@@functional/placeholder'] === true) {\n                return f2;\n            } else if (n === 1) {\n                return _curry1(function (b) {\n                    return fn(a, b);\n                });\n            } else if (n === 2 && a != null && a['@@functional/placeholder'] === true && b != null && b['@@functional/placeholder'] === true) {\n                return f2;\n            } else if (n === 2 && a != null && a['@@functional/placeholder'] === true) {\n                return _curry1(function (a) {\n                    return fn(a, b);\n                });\n            } else if (n === 2 && b != null && b['@@functional/placeholder'] === true) {\n                return _curry1(function (b) {\n                    return fn(a, b);\n                });\n            } else {\n                return fn(a, b);\n            }\n        };\n    };\n\n    /**\n     * Optimized internal three-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry3 = function _curry3(fn) {\n        return function f3(a, b, c) {\n            var n = arguments.length;\n            if (n === 0) {\n                return f3;\n            } else if (n === 1 && a != null && a['@@functional/placeholder'] === true) {\n                return f3;\n            } else if (n === 1) {\n                return _curry2(function (b, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 2 && a != null && a['@@functional/placeholder'] === true && b != null && b['@@functional/placeholder'] === true) {\n                return f3;\n            } else if (n === 2 && a != null && a['@@functional/placeholder'] === true) {\n                return _curry2(function (a, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 2 && b != null && b['@@functional/placeholder'] === true) {\n                return _curry2(function (b, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 2) {\n                return _curry1(function (c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && a != null && a['@@functional/placeholder'] === true && b != null && b['@@functional/placeholder'] === true && c != null && c['@@functional/placeholder'] === true) {\n                return f3;\n            } else if (n === 3 && a != null && a['@@functional/placeholder'] === true && b != null && b['@@functional/placeholder'] === true) {\n                return _curry2(function (a, b) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && a != null && a['@@functional/placeholder'] === true && c != null && c['@@functional/placeholder'] === true) {\n                return _curry2(function (a, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && b != null && b['@@functional/placeholder'] === true && c != null && c['@@functional/placeholder'] === true) {\n                return _curry2(function (b, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && a != null && a['@@functional/placeholder'] === true) {\n                return _curry1(function (a) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && b != null && b['@@functional/placeholder'] === true) {\n                return _curry1(function (b) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && c != null && c['@@functional/placeholder'] === true) {\n                return _curry1(function (c) {\n                    return fn(a, b, c);\n                });\n            } else {\n                return fn(a, b, c);\n            }\n        };\n    };\n\n    /**\n     * Internal curryN function.\n     *\n     * @private\n     * @category Function\n     * @param {Number} length The arity of the curried function.\n     * @return {array} An array of arguments received thus far.\n     * @param {Function} fn The function to curry.\n     */\n    var _curryN = function _curryN(length, received, fn) {\n        return function () {\n            var combined = [];\n            var argsIdx = 0;\n            var left = length;\n            var combinedIdx = 0;\n            while (combinedIdx < received.length || argsIdx < arguments.length) {\n                var result;\n                if (combinedIdx < received.length && (received[combinedIdx] == null || received[combinedIdx]['@@functional/placeholder'] !== true || argsIdx >= arguments.length)) {\n                    result = received[combinedIdx];\n                } else {\n                    result = arguments[argsIdx];\n                    argsIdx += 1;\n                }\n                combined[combinedIdx] = result;\n                if (result == null || result['@@functional/placeholder'] !== true) {\n                    left -= 1;\n                }\n                combinedIdx += 1;\n            }\n            return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n        };\n    };\n\n    var _filter = function _filter(fn, list) {\n        var idx = 0, len = list.length, result = [];\n        while (idx < len) {\n            if (fn(list[idx])) {\n                result[result.length] = list[idx];\n            }\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _forceReduced = function _forceReduced(x) {\n        return {\n            '@@transducer/value': x,\n            '@@transducer/reduced': true\n        };\n    };\n\n    /**\n     * @private\n     * @param {Function} fn The strategy for extracting function names from an object\n     * @return {Function} A function that takes an object and returns an array of function names.\n     */\n    var _functionsWith = function _functionsWith(fn) {\n        return function (obj) {\n            return _filter(function (key) {\n                return typeof obj[key] === 'function';\n            }, fn(obj));\n        };\n    };\n\n    var _has = function _has(prop, obj) {\n        return Object.prototype.hasOwnProperty.call(obj, prop);\n    };\n\n    var _identity = function _identity(x) {\n        return x;\n    };\n\n    /**\n     * Tests whether or not an object is an array.\n     *\n     * @private\n     * @param {*} val The object to test.\n     * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n     * @example\n     *\n     *      _isArray([]); //=> true\n     *      _isArray(null); //=> false\n     *      _isArray({}); //=> false\n     */\n    var _isArray = Array.isArray || function _isArray(val) {\n        return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n    };\n\n    /**\n     * Determine if the passed argument is an integer.\n     *\n     * @private\n     * @param {*} n\n     * @category Type\n     * @return {Boolean}\n     */\n    var _isInteger = Number.isInteger || function _isInteger(n) {\n        return n << 0 === n;\n    };\n\n    var _isNumber = function _isNumber(x) {\n        return Object.prototype.toString.call(x) === '[object Number]';\n    };\n\n    var _isString = function _isString(x) {\n        return Object.prototype.toString.call(x) === '[object String]';\n    };\n\n    var _isTransformer = function _isTransformer(obj) {\n        return typeof obj['@@transducer/step'] === 'function';\n    };\n\n    var _map = function _map(fn, list) {\n        var idx = 0, len = list.length, result = Array(len);\n        while (idx < len) {\n            result[idx] = fn(list[idx]);\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _pipe = function _pipe(f, g) {\n        return function () {\n            return g.call(this, f.apply(this, arguments));\n        };\n    };\n\n    var _pipeP = function _pipeP(f, g) {\n        return function () {\n            var ctx = this;\n            return f.apply(ctx, arguments).then(function (x) {\n                return g.call(ctx, x);\n            });\n        };\n    };\n\n    var _quote = function _quote(s) {\n        return '\"' + s.replace(/\"/g, '\\\\\"') + '\"';\n    };\n\n    var _reduced = function _reduced(x) {\n        return x && x['@@transducer/reduced'] ? x : {\n            '@@transducer/value': x,\n            '@@transducer/reduced': true\n        };\n    };\n\n    /**\n     * An optimized, private array `slice` implementation.\n     *\n     * @private\n     * @param {Arguments|Array} args The array or arguments object to consider.\n     * @param {Number} [from=0] The array index to slice from, inclusive.\n     * @param {Number} [to=args.length] The array index to slice to, exclusive.\n     * @return {Array} A new, sliced array.\n     * @example\n     *\n     *      _slice([1, 2, 3, 4, 5], 1, 3); //=> [2, 3]\n     *\n     *      var firstThreeArgs = function(a, b, c, d) {\n     *        return _slice(arguments, 0, 3);\n     *      };\n     *      firstThreeArgs(1, 2, 3, 4); //=> [1, 2, 3]\n     */\n    var _slice = function _slice(args, from, to) {\n        switch (arguments.length) {\n        case 1:\n            return _slice(args, 0, args.length);\n        case 2:\n            return _slice(args, from, args.length);\n        default:\n            var list = [];\n            var idx = 0;\n            var len = Math.max(0, Math.min(args.length, to) - from);\n            while (idx < len) {\n                list[idx] = args[from + idx];\n                idx += 1;\n            }\n            return list;\n        }\n    };\n\n    /**\n     * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n     */\n    var _toISOString = function () {\n        var pad = function pad(n) {\n            return (n < 10 ? '0' : '') + n;\n        };\n        return typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n            return d.toISOString();\n        } : function _toISOString(d) {\n            return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n        };\n    }();\n\n    var _xdropRepeatsWith = function () {\n        function XDropRepeatsWith(pred, xf) {\n            this.xf = xf;\n            this.pred = pred;\n            this.lastValue = undefined;\n            this.seenFirstValue = false;\n        }\n        XDropRepeatsWith.prototype['@@transducer/init'] = function () {\n            return this.xf['@@transducer/init']();\n        };\n        XDropRepeatsWith.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](result);\n        };\n        XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n            var sameAsLast = false;\n            if (!this.seenFirstValue) {\n                this.seenFirstValue = true;\n            } else if (this.pred(this.lastValue, input)) {\n                sameAsLast = true;\n            }\n            this.lastValue = input;\n            return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdropRepeatsWith(pred, xf) {\n            return new XDropRepeatsWith(pred, xf);\n        });\n    }();\n\n    var _xfBase = {\n        init: function () {\n            return this.xf['@@transducer/init']();\n        },\n        result: function (result) {\n            return this.xf['@@transducer/result'](result);\n        }\n    };\n\n    var _xfilter = function () {\n        function XFilter(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XFilter.prototype['@@transducer/init'] = _xfBase.init;\n        XFilter.prototype['@@transducer/result'] = _xfBase.result;\n        XFilter.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n        };\n        return _curry2(function _xfilter(f, xf) {\n            return new XFilter(f, xf);\n        });\n    }();\n\n    var _xfind = function () {\n        function XFind(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.found = false;\n        }\n        XFind.prototype['@@transducer/init'] = _xfBase.init;\n        XFind.prototype['@@transducer/result'] = function (result) {\n            if (!this.found) {\n                result = this.xf['@@transducer/step'](result, void 0);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XFind.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.found = true;\n                result = _reduced(this.xf['@@transducer/step'](result, input));\n            }\n            return result;\n        };\n        return _curry2(function _xfind(f, xf) {\n            return new XFind(f, xf);\n        });\n    }();\n\n    var _xfindIndex = function () {\n        function XFindIndex(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.idx = -1;\n            this.found = false;\n        }\n        XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n        XFindIndex.prototype['@@transducer/result'] = function (result) {\n            if (!this.found) {\n                result = this.xf['@@transducer/step'](result, -1);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n            this.idx += 1;\n            if (this.f(input)) {\n                this.found = true;\n                result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n            }\n            return result;\n        };\n        return _curry2(function _xfindIndex(f, xf) {\n            return new XFindIndex(f, xf);\n        });\n    }();\n\n    var _xfindLast = function () {\n        function XFindLast(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n        XFindLast.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n        };\n        XFindLast.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.last = input;\n            }\n            return result;\n        };\n        return _curry2(function _xfindLast(f, xf) {\n            return new XFindLast(f, xf);\n        });\n    }();\n\n    var _xfindLastIndex = function () {\n        function XFindLastIndex(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.idx = -1;\n            this.lastIdx = -1;\n        }\n        XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n        XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n        };\n        XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n            this.idx += 1;\n            if (this.f(input)) {\n                this.lastIdx = this.idx;\n            }\n            return result;\n        };\n        return _curry2(function _xfindLastIndex(f, xf) {\n            return new XFindLastIndex(f, xf);\n        });\n    }();\n\n    var _xmap = function () {\n        function XMap(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XMap.prototype['@@transducer/init'] = _xfBase.init;\n        XMap.prototype['@@transducer/result'] = _xfBase.result;\n        XMap.prototype['@@transducer/step'] = function (result, input) {\n            return this.xf['@@transducer/step'](result, this.f(input));\n        };\n        return _curry2(function _xmap(f, xf) {\n            return new XMap(f, xf);\n        });\n    }();\n\n    var _xtake = function () {\n        function XTake(n, xf) {\n            this.xf = xf;\n            this.n = n;\n        }\n        XTake.prototype['@@transducer/init'] = _xfBase.init;\n        XTake.prototype['@@transducer/result'] = _xfBase.result;\n        XTake.prototype['@@transducer/step'] = function (result, input) {\n            if (this.n === 0) {\n                return _reduced(result);\n            } else {\n                this.n -= 1;\n                return this.xf['@@transducer/step'](result, input);\n            }\n        };\n        return _curry2(function _xtake(n, xf) {\n            return new XTake(n, xf);\n        });\n    }();\n\n    var _xtakeWhile = function () {\n        function XTakeWhile(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n        XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n        };\n        return _curry2(function _xtakeWhile(f, xf) {\n            return new XTakeWhile(f, xf);\n        });\n    }();\n\n    var _xwrap = function () {\n        function XWrap(fn) {\n            this.f = fn;\n        }\n        XWrap.prototype['@@transducer/init'] = function () {\n            throw new Error('init not implemented on XWrap');\n        };\n        XWrap.prototype['@@transducer/result'] = function (acc) {\n            return acc;\n        };\n        XWrap.prototype['@@transducer/step'] = function (acc, x) {\n            return this.f(acc, x);\n        };\n        return function _xwrap(fn) {\n            return new XWrap(fn);\n        };\n    }();\n\n    /**\n     * Adds two numbers. Equivalent to `a + b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Number}\n     * @see R.subtract\n     * @example\n     *\n     *      R.add(2, 3);       //=>  5\n     *      R.add(7)(10);      //=> 17\n     */\n    var add = _curry2(function add(a, b) {\n        return a + b;\n    });\n\n    /**\n     * Applies a function to the value at the given index of an array,\n     * returning a new copy of the array with the element at the given\n     * index replaced with the result of the function application.\n     * @see R.update\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> a) -> Number -> [a] -> [a]\n     * @param {Function} fn The function to apply.\n     * @param {Number} idx The index.\n     * @param {Array|Arguments} list An array-like object whose value\n     *        at the supplied index will be replaced.\n     * @return {Array} A copy of the supplied array-like object with\n     *         the element at index `idx` replaced with the value\n     *         returned by applying `fn` to the existing element.\n     * @example\n     *\n     *      R.adjust(R.add(10), 1, [0, 1, 2]);     //=> [0, 11, 2]\n     *      R.adjust(R.add(10))(1)([0, 1, 2]);     //=> [0, 11, 2]\n     */\n    var adjust = _curry3(function adjust(fn, idx, list) {\n        if (idx >= list.length || idx < -list.length) {\n            return list;\n        }\n        var start = idx < 0 ? list.length : 0;\n        var _idx = start + idx;\n        var _list = _concat(list);\n        _list[_idx] = fn(list[_idx]);\n        return _list;\n    });\n\n    /**\n     * Returns a function that always returns the given value. Note that for\n     * non-primitives the value returned is a reference to the original value.\n     *\n     * This function is known as `const`, `constant`, or `K` (for K combinator)\n     * in other languages and libraries.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> (* -> a)\n     * @param {*} val The value to wrap in a function\n     * @return {Function} A Function :: * -> val.\n     * @example\n     *\n     *      var t = R.always('Tee');\n     *      t(); //=> 'Tee'\n     */\n    var always = _curry1(function always(val) {\n        return function () {\n            return val;\n        };\n    });\n\n    /**\n     * Returns a new list, composed of n-tuples of consecutive elements\n     * If `n` is greater than the length of the list, an empty list is returned.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @param {Number} n The size of the tuples to create\n     * @param {Array} list The list to split into `n`-tuples\n     * @return {Array} The new list.\n     * @example\n     *\n     *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n     *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n     *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n     */\n    var aperture = _curry2(function aperture(n, list) {\n        var idx = 0;\n        var limit = list.length - (n - 1);\n        var acc = new Array(limit >= 0 ? limit : 0);\n        while (idx < limit) {\n            acc[idx] = _slice(list, idx, idx + n);\n            idx += 1;\n        }\n        return acc;\n    });\n\n    /**\n     * Returns a new list containing the contents of the given list, followed by the given\n     * element.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The element to add to the end of the new list.\n     * @param {Array} list The list whose contents will be added to the beginning of the output\n     *        list.\n     * @return {Array} A new list containing the contents of the old list followed by `el`.\n     * @see R.prepend\n     * @example\n     *\n     *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n     *      R.append('tests', []); //=> ['tests']\n     *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n     */\n    var append = _curry2(function append(el, list) {\n        return _concat(list, [el]);\n    });\n\n    /**\n     * Applies function `fn` to the argument list `args`. This is useful for\n     * creating a fixed-arity function from a variadic function. `fn` should\n     * be a bound function if context is significant.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (*... -> a) -> [*] -> a\n     * @param {Function} fn\n     * @param {Array} args\n     * @return {*}\n     * @see R.call, R.unapply\n     * @example\n     *\n     *      var nums = [1, 2, 3, -99, 42, 6, 7];\n     *      R.apply(Math.max, nums); //=> 42\n     */\n    var apply = _curry2(function apply(fn, args) {\n        return fn.apply(this, args);\n    });\n\n    /**\n     * Makes a shallow clone of an object, setting or overriding the specified\n     * property with the given value.  Note that this copies and flattens\n     * prototype properties onto the new object as well.  All non-primitive\n     * properties are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig String -> a -> {k: v} -> {k: v}\n     * @param {String} prop the property name to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except for the specified property.\n     * @see R.dissoc\n     * @example\n     *\n     *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n     */\n    var assoc = _curry3(function assoc(prop, val, obj) {\n        var result = {};\n        for (var p in obj) {\n            result[p] = obj[p];\n        }\n        result[prop] = val;\n        return result;\n    });\n\n    /**\n     * Makes a shallow clone of an object, setting or overriding the nodes\n     * required to create the given path, and placing the specific value at the\n     * tail end of that path.  Note that this copies and flattens prototype\n     * properties onto the new object as well.  All non-primitive properties\n     * are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> a -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except along the specified path.\n     * @see R.dissocPath\n     * @example\n     *\n     *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n     */\n    var assocPath = _curry3(function assocPath(path, val, obj) {\n        switch (path.length) {\n        case 0:\n            return obj;\n        case 1:\n            return assoc(path[0], val, obj);\n        default:\n            return assoc(path[0], assocPath(_slice(path, 1), val, Object(obj[path[0]])), obj);\n        }\n    });\n\n    /**\n     * Creates a function that is bound to a context.\n     * Note: `R.bind` does not provide the additional argument-binding capabilities of\n     * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @category Object\n     * @see R.partial\n     * @sig (* -> *) -> {*} -> (* -> *)\n     * @param {Function} fn The function to bind to context\n     * @param {Object} thisObj The context to bind `fn` to\n     * @return {Function} A function that will execute in the context of `thisObj`.\n     */\n    var bind = _curry2(function bind(fn, thisObj) {\n        return _arity(fn.length, function () {\n            return fn.apply(thisObj, arguments);\n        });\n    });\n\n    /**\n     * A function wrapping calls to the two functions in an `&&` operation, returning the result of the first\n     * function if it is false-y and the result of the second function otherwise.  Note that this is\n     * short-circuited, meaning that the second function will not be invoked if the first returns a false-y\n     * value.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n     * @see R.and\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0 };\n     *      var f = R.both(gt10, even);\n     *      f(100); //=> true\n     *      f(101); //=> false\n     */\n    var both = _curry2(function both(f, g) {\n        return function _both() {\n            return f.apply(this, arguments) && g.apply(this, arguments);\n        };\n    });\n\n    /**\n     * Makes a comparator function out of a function that reports whether the first element is less than the second.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a, b -> Boolean) -> (a, b -> Number)\n     * @param {Function} pred A predicate function of arity two.\n     * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`.\n     * @example\n     *\n     *      var cmp = R.comparator(function(a, b) {\n     *        return a.age < b.age;\n     *      });\n     *      var people = [\n     *        // ...\n     *      ];\n     *      R.sort(cmp, people);\n     */\n    var comparator = _curry1(function comparator(pred) {\n        return function (a, b) {\n            return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n        };\n    });\n\n    /**\n     * Takes a function `f` and returns a function `g` such that:\n     *\n     *   - applying `g` to zero or more arguments will give __true__ if applying\n     *     the same arguments to `f` gives a logical __false__ value; and\n     *\n     *   - applying `g` to zero or more arguments will give __false__ if applying\n     *     the same arguments to `f` gives a logical __true__ value.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> *) -> (*... -> Boolean)\n     * @param {Function} f\n     * @return {Function}\n     * @see R.not\n     * @example\n     *\n     *      var isEven = function(n) { return n % 2 === 0; };\n     *      var isOdd = R.complement(isEven);\n     *      isOdd(21); //=> true\n     *      isOdd(42); //=> false\n     */\n    var complement = _curry1(_complement);\n\n    /**\n     * Returns a function, `fn`, which encapsulates if/else-if/else logic.\n     * `R.cond` takes a list of [predicate, transform] pairs. All of the\n     * arguments to `fn` are applied to each of the predicates in turn\n     * until one returns a \"truthy\" value, at which point `fn` returns the\n     * result of applying its arguments to the corresponding transformer.\n     * If none of the predicates matches, `fn` returns undefined.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n     * @param {Array} pairs\n     * @return {Function}\n     * @example\n     *\n     *      var fn = R.cond([\n     *        [R.equals(0),   R.always('water freezes at 0°C')],\n     *        [R.equals(100), R.always('water boils at 100°C')],\n     *        [R.T,           function(temp) { return 'nothing special happens at ' + temp + '°C'; }]\n     *      ]);\n     *      fn(0); //=> 'water freezes at 0°C'\n     *      fn(50); //=> 'nothing special happens at 50°C'\n     *      fn(100); //=> 'water boils at 100°C'\n     */\n    var cond = _curry1(function cond(pairs) {\n        return function () {\n            var idx = 0;\n            while (idx < pairs.length) {\n                if (pairs[idx][0].apply(this, arguments)) {\n                    return pairs[idx][1].apply(this, arguments);\n                }\n                idx += 1;\n            }\n        };\n    });\n\n    /**\n     * Returns `true` if the `x` is found in the `list`, using `pred` as an\n     * equality predicate for `x`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a, a -> Boolean) -> a -> [a] -> Boolean\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {*} x The item to find\n     * @param {Array} list The list to iterate over\n     * @return {Boolean} `true` if `x` is in `list`, else `false`.\n     * @example\n     *\n     *      var xs = [{x: 12}, {x: 11}, {x: 10}];\n     *      R.containsWith(function(a, b) { return a.x === b.x; }, {x: 10}, xs); //=> true\n     *      R.containsWith(function(a, b) { return a.x === b.x; }, {x: 1}, xs); //=> false\n     */\n    var containsWith = _curry3(_containsWith);\n\n    /**\n     * Counts the elements of a list according to how many match each value\n     * of a key generated by the supplied function. Returns an object\n     * mapping the keys produced by `fn` to the number of occurrences in\n     * the list. Note that all keys are coerced to strings because of how\n     * JavaScript objects work.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a -> String) -> [a] -> {*}\n     * @param {Function} fn The function used to map values to keys.\n     * @param {Array} list The list to count elements from.\n     * @return {Object} An object mapping keys to number of occurrences in the list.\n     * @example\n     *\n     *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n     *      var letters = R.split('', 'abcABCaaaBBc');\n     *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n     *      R.countBy(R.toLower)(letters);   //=> {'a': 5, 'b': 4, 'c': 3}\n     */\n    var countBy = _curry2(function countBy(fn, list) {\n        var counts = {};\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            var key = fn(list[idx]);\n            counts[key] = (_has(key, counts) ? counts[key] : 0) + 1;\n            idx += 1;\n        }\n        return counts;\n    });\n\n    /**\n     * Creates an object containing a single key:value pair.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig String -> a -> {String:a}\n     * @param {String} key\n     * @param {*} val\n     * @return {Object}\n     * @example\n     *\n     *      var matchPhrases = R.compose(\n     *        R.createMapEntry('must'),\n     *        R.map(R.createMapEntry('match_phrase'))\n     *      );\n     *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n     */\n    var createMapEntry = _curry2(function createMapEntry(key, val) {\n        var obj = {};\n        obj[key] = val;\n        return obj;\n    });\n\n    /**\n     * Returns a curried equivalent of the provided function, with the\n     * specified arity. The curried function has two unusual capabilities.\n     * First, its arguments needn't be provided one at a time. If `g` is\n     * `R.curryN(3, f)`, the following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`,\n     * the following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curry\n     * @example\n     *\n     *      var addFourNumbers = function() {\n     *        return R.sum([].slice.call(arguments, 0, 4));\n     *      };\n     *\n     *      var curriedAddFourNumbers = R.curryN(4, addFourNumbers);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n    var curryN = _curry2(function curryN(length, fn) {\n        if (length === 1) {\n            return _curry1(fn);\n        }\n        return _arity(length, _curryN(length, [], fn));\n    });\n\n    /**\n     * Decrements its argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @see R.inc\n     * @example\n     *\n     *      R.dec(42); //=> 41\n     */\n    var dec = add(-1);\n\n    /**\n     * Returns the second argument if it is not null or undefined. If it is null\n     * or undefined, the first (default) argument is returned.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig a -> b -> a | b\n     * @param {a} val The default value.\n     * @param {b} val The value to return if it is not null or undefined\n     * @return {*} The the second value or the default value\n     * @example\n     *\n     *      var defaultTo42 = defaultTo(42);\n     *\n     *      defaultTo42(null);  //=> 42\n     *      defaultTo42(undefined);  //=> 42\n     *      defaultTo42('Ramda');  //=> 'Ramda'\n     */\n    var defaultTo = _curry2(function defaultTo(d, v) {\n        return v == null ? d : v;\n    });\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not contained in the second list.\n     * Duplication is determined according to the value returned by applying the supplied predicate to two list\n     * elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a,a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @see R.difference\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @example\n     *\n     *      function cmp(x, y) { return x.a === y.a; }\n     *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n     *      var l2 = [{a: 3}, {a: 4}];\n     *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n     */\n    var differenceWith = _curry3(function differenceWith(pred, first, second) {\n        var out = [];\n        var idx = 0;\n        var firstLen = first.length;\n        var containsPred = containsWith(pred);\n        while (idx < firstLen) {\n            if (!containsPred(first[idx], second) && !containsPred(first[idx], out)) {\n                out[out.length] = first[idx];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new object that does not contain a `prop` property.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig String -> {k: v} -> {k: v}\n     * @param {String} prop the name of the property to dissociate\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original but without the specified property\n     * @see R.assoc\n     * @example\n     *\n     *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n     */\n    var dissoc = _curry2(function dissoc(prop, obj) {\n        var result = {};\n        for (var p in obj) {\n            if (p !== prop) {\n                result[p] = obj[p];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Makes a shallow clone of an object, omitting the property at the\n     * given path. Note that this copies and flattens prototype properties\n     * onto the new object as well.  All non-primitive properties are copied\n     * by reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object without the property at path\n     * @see R.assocPath\n     * @example\n     *\n     *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n     */\n    var dissocPath = _curry2(function dissocPath(path, obj) {\n        switch (path.length) {\n        case 0:\n            return obj;\n        case 1:\n            return dissoc(path[0], obj);\n        default:\n            var head = path[0];\n            var tail = _slice(path, 1);\n            return obj[head] == null ? obj : assoc(head, dissocPath(tail, obj[head]), obj);\n        }\n    });\n\n    /**\n     * Divides two numbers. Equivalent to `a / b`.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a / b`.\n     * @see R.multiply\n     * @example\n     *\n     *      R.divide(71, 100); //=> 0.71\n     *\n     *      var half = R.divide(R.__, 2);\n     *      half(42); //=> 21\n     *\n     *      var reciprocal = R.divide(1);\n     *      reciprocal(4);   //=> 0.25\n     */\n    var divide = _curry2(function divide(a, b) {\n        return a / b;\n    });\n\n    /**\n     * Returns a new list containing all but last the`n` elements of a given list,\n     * passing each value from the right to the supplied predicate function, skipping\n     * elements while the predicate function returns `true`. The predicate function\n     * is passed one argument: (value)*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.takeLastWhile\n     * @example\n     *\n     *      var lteThree = function(x) {\n     *        return x <= 3;\n     *      };\n     *\n     *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2]\n     */\n    var dropLastWhile = _curry2(function dropLastWhile(pred, list) {\n        var idx = list.length - 1;\n        while (idx >= 0 && pred(list[idx])) {\n            idx -= 1;\n        }\n        return _slice(list, 0, idx + 1);\n    });\n\n    /**\n     * A function wrapping calls to the two functions in an `||` operation, returning the result of the first\n     * function if it is truth-y and the result of the second function otherwise.  Note that this is\n     * short-circuited, meaning that the second function will not be invoked if the first returns a truth-y\n     * value.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n     * @see R.or\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0 };\n     *      var f = R.either(gt10, even);\n     *      f(101); //=> true\n     *      f(8); //=> true\n     */\n    var either = _curry2(function either(f, g) {\n        return function _either() {\n            return f.apply(this, arguments) || g.apply(this, arguments);\n        };\n    });\n\n    /**\n     * Returns the empty value of its argument's type. Ramda defines the empty\n     * value of Array (`[]`), Object (`{}`), and String (`''`). Other types are\n     * supported if they define `<Type>.empty` and/or `<Type>.prototype.empty`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> a\n     * @param {*} x\n     * @return {*}\n     * @example\n     *\n     *      R.empty(Just(42));      //=> Nothing()\n     *      R.empty([1, 2, 3]);     //=> []\n     *      R.empty('unicorns');    //=> ''\n     *      R.empty({x: 1, y: 2});  //=> {}\n     */\n    var empty = _curry1(function empty(x) {\n        if (x != null && typeof x.empty === 'function') {\n            return x.empty();\n        } else if (x != null && typeof x.constructor != null && typeof x.constructor.empty === 'function') {\n            return x.constructor.empty();\n        } else {\n            switch (Object.prototype.toString.call(x)) {\n            case '[object Array]':\n                return [];\n            case '[object Object]':\n                return {};\n            case '[object String]':\n                return '';\n            }\n        }\n    });\n\n    /**\n     * Creates a new object by recursively evolving a shallow copy of `object`, according to the\n     * `transformation` functions. All non-primitive properties are copied by reference.\n     *\n     * A `tranformation` function will not be invoked if its corresponding key does not exist in\n     * the evolved object.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n     * @param {Object} transformations The object specifying transformation functions to apply\n     *        to the object.\n     * @param {Object} object The object to be transformed.\n     * @return {Object} The transformed object.\n     * @example\n     *\n     *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n     *      var transformations = {\n     *        firstName: R.trim,\n     *        lastName: R.trim, // Will not get invoked.\n     *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n     *      };\n     *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n     */\n    var evolve = _curry2(function evolve(transformations, object) {\n        var transformation, key, type, result = {};\n        for (key in object) {\n            transformation = transformations[key];\n            type = typeof transformation;\n            result[key] = type === 'function' ? transformation(object[key]) : type === 'object' ? evolve(transformations[key], object[key]) : object[key];\n        }\n        return result;\n    });\n\n    /**\n     * Creates a new object out of a list key-value pairs.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [[k,v]] -> {k: v}\n     * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n     * @return {Object} The object made by pairing up `keys` and `values`.\n     * @see R.toPairs\n     * @example\n     *\n     *      R.fromPairs([['a', 1], ['b', 2],  ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n     */\n    var fromPairs = _curry1(function fromPairs(pairs) {\n        var idx = 0, len = pairs.length, out = {};\n        while (idx < len) {\n            if (_isArray(pairs[idx]) && pairs[idx].length) {\n                out[pairs[idx][0]] = pairs[idx][1];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns `true` if the first argument is greater than the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @see R.lt\n     * @example\n     *\n     *      R.gt(2, 1); //=> true\n     *      R.gt(2, 2); //=> false\n     *      R.gt(2, 3); //=> false\n     *      R.gt('a', 'z'); //=> false\n     *      R.gt('z', 'a'); //=> true\n     */\n    var gt = _curry2(function gt(a, b) {\n        return a > b;\n    });\n\n    /**\n     * Returns `true` if the first argument is greater than or equal to the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean}\n     * @see R.lte\n     * @example\n     *\n     *      R.gte(2, 1); //=> true\n     *      R.gte(2, 2); //=> true\n     *      R.gte(2, 3); //=> false\n     *      R.gte('a', 'z'); //=> false\n     *      R.gte('z', 'a'); //=> true\n     */\n    var gte = _curry2(function gte(a, b) {\n        return a >= b;\n    });\n\n    /**\n     * Returns whether or not an object has an own property with\n     * the specified name\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      var hasName = R.has('name');\n     *      hasName({name: 'alice'});   //=> true\n     *      hasName({name: 'bob'});     //=> true\n     *      hasName({});                //=> false\n     *\n     *      var point = {x: 0, y: 0};\n     *      var pointHas = R.has(R.__, point);\n     *      pointHas('x');  //=> true\n     *      pointHas('y');  //=> true\n     *      pointHas('z');  //=> false\n     */\n    var has = _curry2(_has);\n\n    /**\n     * Returns whether or not an object or its prototype chain has\n     * a property with the specified name\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      function Rectangle(width, height) {\n     *        this.width = width;\n     *        this.height = height;\n     *      }\n     *      Rectangle.prototype.area = function() {\n     *        return this.width * this.height;\n     *      };\n     *\n     *      var square = new Rectangle(2, 2);\n     *      R.hasIn('width', square);  //=> true\n     *      R.hasIn('area', square);  //=> true\n     */\n    var hasIn = _curry2(function hasIn(prop, obj) {\n        return prop in obj;\n    });\n\n    /**\n     * Returns true if its arguments are identical, false otherwise. Values are\n     * identical if they reference the same memory. `NaN` is identical to `NaN`;\n     * `0` and `-0` are not identical.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      var o = {};\n     *      R.identical(o, o); //=> true\n     *      R.identical(1, 1); //=> true\n     *      R.identical(1, '1'); //=> false\n     *      R.identical([], []); //=> false\n     *      R.identical(0, -0); //=> false\n     *      R.identical(NaN, NaN); //=> true\n     */\n    // SameValue algorithm\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Step 6.a: NaN == NaN\n    var identical = _curry2(function identical(a, b) {\n        // SameValue algorithm\n        if (a === b) {\n            // Steps 1-5, 7-10\n            // Steps 6.b-6.e: +0 != -0\n            return a !== 0 || 1 / a === 1 / b;\n        } else {\n            // Step 6.a: NaN == NaN\n            return a !== a && b !== b;\n        }\n    });\n\n    /**\n     * A function that does nothing but return the parameter supplied to it. Good as a default\n     * or placeholder function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> a\n     * @param {*} x The value to return.\n     * @return {*} The input value, `x`.\n     * @example\n     *\n     *      R.identity(1); //=> 1\n     *\n     *      var obj = {};\n     *      R.identity(obj) === obj; //=> true\n     */\n    var identity = _curry1(_identity);\n\n    /**\n     * Creates a function that will process either the `onTrue` or the `onFalse` function depending\n     * upon the result of the `condition` predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n     * @param {Function} condition A predicate function\n     * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n     * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n     * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n     *                    function depending upon the result of the `condition` predicate.\n     * @example\n     *\n     *      // Flatten all arrays in the list but leave other values alone.\n     *      var flattenArrays = R.map(R.ifElse(Array.isArray, R.flatten, R.identity));\n     *\n     *      flattenArrays([[0], [[10], [8]], 1234, {}]); //=> [[0], [10, 8], 1234, {}]\n     *      flattenArrays([[[10], 123], [8, [10]], \"hello\"]); //=> [[10, 123], [8, 10], \"hello\"]\n     */\n    var ifElse = _curry3(function ifElse(condition, onTrue, onFalse) {\n        return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n            return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n        });\n    });\n\n    /**\n     * Increments its argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @see R.dec\n     * @example\n     *\n     *      R.inc(42); //=> 43\n     */\n    var inc = add(1);\n\n    /**\n     * Inserts the supplied element into the list, at index `index`.  _Note\n     * that this is not destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} index The position to insert the element\n     * @param {*} elt The element to insert into the Array\n     * @param {Array} list The list to insert into\n     * @return {Array} A new Array with `elt` inserted at `index`.\n     * @example\n     *\n     *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n     */\n    var insert = _curry3(function insert(idx, elt, list) {\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\n        var result = _slice(list);\n        result.splice(idx, 0, elt);\n        return result;\n    });\n\n    /**\n     * Inserts the sub-list into the list, at index `index`.  _Note  that this\n     * is not destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a] -> [a]\n     * @param {Number} index The position to insert the sub-list\n     * @param {Array} elts The sub-list to insert into the Array\n     * @param {Array} list The list to insert the sub-list into\n     * @return {Array} A new Array with `elts` inserted starting at `index`.\n     * @example\n     *\n     *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n     */\n    var insertAll = _curry3(function insertAll(idx, elts, list) {\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\n        return _concat(_concat(_slice(list, 0, idx), elts), _slice(list, idx));\n    });\n\n    /**\n     * See if an object (`val`) is an instance of the supplied constructor.\n     * This function will check up the inheritance chain, if any.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig (* -> {*}) -> a -> Boolean\n     * @param {Object} ctor A constructor\n     * @param {*} val The value to test\n     * @return {Boolean}\n     * @example\n     *\n     *      R.is(Object, {}); //=> true\n     *      R.is(Number, 1); //=> true\n     *      R.is(Object, 1); //=> false\n     *      R.is(String, 's'); //=> true\n     *      R.is(String, new String('')); //=> true\n     *      R.is(Object, new String('')); //=> true\n     *      R.is(Object, 's'); //=> false\n     *      R.is(Number, {}); //=> false\n     */\n    var is = _curry2(function is(Ctor, val) {\n        return val != null && val.constructor === Ctor || val instanceof Ctor;\n    });\n\n    /**\n     * Tests whether or not an object is similar to an array.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @category List\n     * @sig * -> Boolean\n     * @param {*} x The object to test.\n     * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n     * @example\n     *\n     *      R.isArrayLike([]); //=> true\n     *      R.isArrayLike(true); //=> false\n     *      R.isArrayLike({}); //=> false\n     *      R.isArrayLike({length: 10}); //=> false\n     *      R.isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n     */\n    var isArrayLike = _curry1(function isArrayLike(x) {\n        if (_isArray(x)) {\n            return true;\n        }\n        if (!x) {\n            return false;\n        }\n        if (typeof x !== 'object') {\n            return false;\n        }\n        if (x instanceof String) {\n            return false;\n        }\n        if (x.nodeType === 1) {\n            return !!x.length;\n        }\n        if (x.length === 0) {\n            return true;\n        }\n        if (x.length > 0) {\n            return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n        }\n        return false;\n    });\n\n    /**\n     * Reports whether the list has zero elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [a] -> Boolean\n     * @param {Array} list\n     * @return {Boolean}\n     * @example\n     *\n     *      R.isEmpty([1, 2, 3]);   //=> false\n     *      R.isEmpty([]);          //=> true\n     *      R.isEmpty('');          //=> true\n     *      R.isEmpty(null);        //=> false\n     *      R.isEmpty(R.keys({}));  //=> true\n     *      R.isEmpty({});          //=> false ({} does not have a length property)\n     *      R.isEmpty({length: 0}); //=> true\n     */\n    var isEmpty = _curry1(function isEmpty(list) {\n        return Object(list).length === 0;\n    });\n\n    /**\n     * Checks if the input value is `null` or `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig * -> Boolean\n     * @param {*} x The value to test.\n     * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n     * @example\n     *\n     *      R.isNil(null); //=> true\n     *      R.isNil(undefined); //=> true\n     *      R.isNil(0); //=> false\n     *      R.isNil([]); //=> false\n     */\n    var isNil = _curry1(function isNil(x) {\n        return x == null;\n    });\n\n    /**\n     * Returns a list containing the names of all the enumerable own\n     * properties of the supplied object.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own properties.\n     * @example\n     *\n     *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n     */\n    // cover IE < 9 keys issues\n    var keys = function () {\n        // cover IE < 9 keys issues\n        var hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');\n        var nonEnumerableProps = [\n            'constructor',\n            'valueOf',\n            'isPrototypeOf',\n            'toString',\n            'propertyIsEnumerable',\n            'hasOwnProperty',\n            'toLocaleString'\n        ];\n        var contains = function contains(list, item) {\n            var idx = 0;\n            while (idx < list.length) {\n                if (list[idx] === item) {\n                    return true;\n                }\n                idx += 1;\n            }\n            return false;\n        };\n        return typeof Object.keys === 'function' ? _curry1(function keys(obj) {\n            return Object(obj) !== obj ? [] : Object.keys(obj);\n        }) : _curry1(function keys(obj) {\n            if (Object(obj) !== obj) {\n                return [];\n            }\n            var prop, ks = [], nIdx;\n            for (prop in obj) {\n                if (_has(prop, obj)) {\n                    ks[ks.length] = prop;\n                }\n            }\n            if (hasEnumBug) {\n                nIdx = nonEnumerableProps.length - 1;\n                while (nIdx >= 0) {\n                    prop = nonEnumerableProps[nIdx];\n                    if (_has(prop, obj) && !contains(ks, prop)) {\n                        ks[ks.length] = prop;\n                    }\n                    nIdx -= 1;\n                }\n            }\n            return ks;\n        });\n    }();\n\n    /**\n     * Returns a list containing the names of all the\n     * properties of the supplied object, including prototype properties.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.keysIn(f); //=> ['x', 'y']\n     */\n    var keysIn = _curry1(function keysIn(obj) {\n        var prop, ks = [];\n        for (prop in obj) {\n            ks[ks.length] = prop;\n        }\n        return ks;\n    });\n\n    /**\n     * Returns the number of elements in the array by returning `list.length`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> Number\n     * @param {Array} list The array to inspect.\n     * @return {Number} The length of the array.\n     * @example\n     *\n     *      R.length([]); //=> 0\n     *      R.length([1, 2, 3]); //=> 3\n     */\n    var length = _curry1(function length(list) {\n        return list != null && is(Number, list.length) ? list.length : NaN;\n    });\n\n    /**\n     * Returns `true` if the first argument is less than the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @see R.gt\n     * @example\n     *\n     *      R.lt(2, 1); //=> false\n     *      R.lt(2, 2); //=> false\n     *      R.lt(2, 3); //=> true\n     *      R.lt('a', 'z'); //=> true\n     *      R.lt('z', 'a'); //=> false\n     */\n    var lt = _curry2(function lt(a, b) {\n        return a < b;\n    });\n\n    /**\n     * Returns `true` if the first argument is less than or equal to the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean}\n     * @see R.gte\n     * @example\n     *\n     *      R.lte(2, 1); //=> false\n     *      R.lte(2, 2); //=> true\n     *      R.lte(2, 3); //=> true\n     *      R.lte('a', 'z'); //=> true\n     *      R.lte('z', 'a'); //=> false\n     */\n    var lte = _curry2(function lte(a, b) {\n        return a <= b;\n    });\n\n    /**\n     * The mapAccum function behaves like a combination of map and reduce; it applies a\n     * function to each element of a list, passing an accumulating parameter from left to\n     * right, and returning a final value of this accumulator together with the new list.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should return\n     * a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var append = function(a, b) {\n     *        return [a + b, a + b];\n     *      }\n     *\n     *      R.mapAccum(append, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n     */\n    var mapAccum = _curry3(function mapAccum(fn, acc, list) {\n        var idx = 0, len = list.length, result = [], tuple = [acc];\n        while (idx < len) {\n            tuple = fn(tuple[0], list[idx]);\n            result[idx] = tuple[1];\n            idx += 1;\n        }\n        return [\n            tuple[0],\n            result\n        ];\n    });\n\n    /**\n     * The mapAccumRight function behaves like a combination of map and reduce; it applies a\n     * function to each element of a list, passing an accumulating parameter from right\n     * to left, and returning a final value of this accumulator together with the new list.\n     *\n     * Similar to `mapAccum`, except moves through the input list from the right to the\n     * left.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should return\n     * a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var append = function(a, b) {\n     *        return [a + b, a + b];\n     *      }\n     *\n     *      R.mapAccumRight(append, 0, digits); //=> ['04321', ['04321', '0432', '043', '04']]\n     */\n    var mapAccumRight = _curry3(function mapAccumRight(fn, acc, list) {\n        var idx = list.length - 1, result = [], tuple = [acc];\n        while (idx >= 0) {\n            tuple = fn(tuple[0], list[idx]);\n            result[idx] = tuple[1];\n            idx -= 1;\n        }\n        return [\n            tuple[0],\n            result\n        ];\n    });\n\n    /**\n     * Tests a regular expression against a String. Note that this function\n     * will return an empty array when there are no matches. This differs\n     * from [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n     * which returns `null` when there are no matches.\n     *\n     * @func\n     * @memberOf R\n     * @see R.test\n     * @category String\n     * @sig RegExp -> String -> [String | Undefined]\n     * @param {RegExp} rx A regular expression.\n     * @param {String} str The string to match against\n     * @return {Array} The list of matches or empty array.\n     * @example\n     *\n     *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n     *      R.match(/a/, 'b'); //=> []\n     *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n     */\n    var match = _curry2(function match(rx, str) {\n        return str.match(rx) || [];\n    });\n\n    /**\n     * mathMod behaves like the modulo operator should mathematically, unlike the `%`\n     * operator (and by extension, R.modulo). So while \"-17 % 5\" is -2,\n     * mathMod(-17, 5) is 3. mathMod requires Integer arguments, and returns NaN\n     * when the modulus is zero or negative.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} m The dividend.\n     * @param {Number} p the modulus.\n     * @return {Number} The result of `b mod a`.\n     * @example\n     *\n     *      R.mathMod(-17, 5);  //=> 3\n     *      R.mathMod(17, 5);   //=> 2\n     *      R.mathMod(17, -5);  //=> NaN\n     *      R.mathMod(17, 0);   //=> NaN\n     *      R.mathMod(17.2, 5); //=> NaN\n     *      R.mathMod(17, 5.3); //=> NaN\n     *\n     *      var clock = R.mathMod(R.__, 12);\n     *      clock(15); //=> 3\n     *      clock(24); //=> 0\n     *\n     *      var seventeenMod = R.mathMod(17);\n     *      seventeenMod(3);  //=> 2\n     *      seventeenMod(4);  //=> 1\n     *      seventeenMod(10); //=> 7\n     */\n    var mathMod = _curry2(function mathMod(m, p) {\n        if (!_isInteger(m)) {\n            return NaN;\n        }\n        if (!_isInteger(p) || p < 1) {\n            return NaN;\n        }\n        return (m % p + p) % p;\n    });\n\n    /**\n     * Returns the larger of its two arguments.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> a\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.maxBy, R.min\n     * @example\n     *\n     *      R.max(789, 123); //=> 789\n     *      R.max('a', 'b'); //=> 'b'\n     */\n    var max = _curry2(function max(a, b) {\n        return b > a ? b : a;\n    });\n\n    /**\n     * Takes a function and two values, and returns whichever value produces\n     * the larger result when passed to the provided function.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord b => (a -> b) -> a -> a -> a\n     * @param {Function} f\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.max, R.minBy\n     * @example\n     *\n     *      R.maxBy(function(n) { return n * n; }, -3, 2); //=> -3\n     */\n    var maxBy = _curry3(function maxBy(f, a, b) {\n        return f(b) > f(a) ? b : a;\n    });\n\n    /**\n     * Create a new object with the own properties of `a`\n     * merged with the own properties of object `b`.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> {k: v} -> {k: v}\n     * @param {Object} a\n     * @param {Object} b\n     * @return {Object}\n     * @example\n     *\n     *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n     *      //=> { 'name': 'fred', 'age': 40 }\n     *\n     *      var resetToDefault = R.merge(R.__, {x: 0});\n     *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n     */\n    var merge = _curry2(function merge(a, b) {\n        var result = {};\n        var ks = keys(a);\n        var idx = 0;\n        while (idx < ks.length) {\n            result[ks[idx]] = a[ks[idx]];\n            idx += 1;\n        }\n        ks = keys(b);\n        idx = 0;\n        while (idx < ks.length) {\n            result[ks[idx]] = b[ks[idx]];\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns the smaller of its two arguments.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> a\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.minBy, R.max\n     * @example\n     *\n     *      R.min(789, 123); //=> 123\n     *      R.min('a', 'b'); //=> 'a'\n     */\n    var min = _curry2(function min(a, b) {\n        return b < a ? b : a;\n    });\n\n    /**\n     * Takes a function and two values, and returns whichever value produces\n     * the smaller result when passed to the provided function.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord b => (a -> b) -> a -> a -> a\n     * @param {Function} f\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.min, R.maxBy\n     * @example\n     *\n     *      R.minBy(function(n) { return n * n; }, -3, 2); //=> 2\n     */\n    var minBy = _curry3(function minBy(f, a, b) {\n        return f(b) < f(a) ? b : a;\n    });\n\n    /**\n     * Divides the second parameter by the first and returns the remainder.\n     * Note that this functions preserves the JavaScript-style behavior for\n     * modulo. For mathematical modulo see `mathMod`\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The value to the divide.\n     * @param {Number} b The pseudo-modulus\n     * @return {Number} The result of `b % a`.\n     * @see R.mathMod\n     * @example\n     *\n     *      R.modulo(17, 3); //=> 2\n     *      // JS behavior:\n     *      R.modulo(-17, 3); //=> -2\n     *      R.modulo(17, -3); //=> 2\n     *\n     *      var isOdd = R.modulo(R.__, 2);\n     *      isOdd(42); //=> 0\n     *      isOdd(21); //=> 1\n     */\n    var modulo = _curry2(function modulo(a, b) {\n        return a % b;\n    });\n\n    /**\n     * Multiplies two numbers. Equivalent to `a * b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a * b`.\n     * @see R.divide\n     * @example\n     *\n     *      var double = R.multiply(2);\n     *      var triple = R.multiply(3);\n     *      double(3);       //=>  6\n     *      triple(4);       //=> 12\n     *      R.multiply(2, 5);  //=> 10\n     */\n    var multiply = _curry2(function multiply(a, b) {\n        return a * b;\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts exactly `n`\n     * parameters. Any extraneous parameters will not be passed to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} n The desired arity of the new function.\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity `n`.\n     * @example\n     *\n     *      var takesTwoArgs = function(a, b) {\n     *        return [a, b];\n     *      };\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.nAry(1, takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only `n` arguments are passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n    var nAry = _curry2(function nAry(n, fn) {\n        switch (n) {\n        case 0:\n            return function () {\n                return fn.call(this);\n            };\n        case 1:\n            return function (a0) {\n                return fn.call(this, a0);\n            };\n        case 2:\n            return function (a0, a1) {\n                return fn.call(this, a0, a1);\n            };\n        case 3:\n            return function (a0, a1, a2) {\n                return fn.call(this, a0, a1, a2);\n            };\n        case 4:\n            return function (a0, a1, a2, a3) {\n                return fn.call(this, a0, a1, a2, a3);\n            };\n        case 5:\n            return function (a0, a1, a2, a3, a4) {\n                return fn.call(this, a0, a1, a2, a3, a4);\n            };\n        case 6:\n            return function (a0, a1, a2, a3, a4, a5) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5);\n            };\n        case 7:\n            return function (a0, a1, a2, a3, a4, a5, a6) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n            };\n        case 8:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n            };\n        case 9:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n            };\n        case 10:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n            };\n        default:\n            throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n        }\n    });\n\n    /**\n     * Negates its argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @example\n     *\n     *      R.negate(42); //=> -42\n     */\n    var negate = _curry1(function negate(n) {\n        return -n;\n    });\n\n    /**\n     * A function that returns the `!` of its argument. It will return `true` when\n     * passed false-y value, and `false` when passed a truth-y one.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig * -> Boolean\n     * @param {*} a any value\n     * @return {Boolean} the logical inverse of passed argument.\n     * @see R.complement\n     * @example\n     *\n     *      R.not(true); //=> false\n     *      R.not(false); //=> true\n     *      R.not(0); => true\n     *      R.not(1); => false\n     */\n    var not = _curry1(function not(a) {\n        return !a;\n    });\n\n    /**\n     * Returns the nth element of the given list or string.\n     * If n is negative the element at index length + n is returned.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> a | Undefined\n     * @sig Number -> String -> String\n     * @param {Number} offset\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      var list = ['foo', 'bar', 'baz', 'quux'];\n     *      R.nth(1, list); //=> 'bar'\n     *      R.nth(-1, list); //=> 'quux'\n     *      R.nth(-99, list); //=> undefined\n     *\n     *      R.nth('abc', 2); //=> 'c'\n     *      R.nth('abc', 3); //=> ''\n     */\n    var nth = _curry2(function nth(offset, list) {\n        var idx = offset < 0 ? list.length + offset : offset;\n        return _isString(list) ? list.charAt(idx) : list[idx];\n    });\n\n    /**\n     * Returns a function which returns its nth argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> *... -> *\n     * @param {Number} n\n     * @return {Function}\n     * @example\n     *\n     *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n     *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n     */\n    var nthArg = _curry1(function nthArg(n) {\n        return function () {\n            return nth(n, arguments);\n        };\n    });\n\n    /**\n     * Returns the nth character of the given string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {String} str\n     * @return {String}\n     * @deprecated since v0.16.0\n     * @example\n     *\n     *      R.nthChar(2, 'Ramda'); //=> 'm'\n     *      R.nthChar(-2, 'Ramda'); //=> 'd'\n     */\n    var nthChar = _curry2(function nthChar(n, str) {\n        return str.charAt(n < 0 ? str.length + n : n);\n    });\n\n    /**\n     * Returns the character code of the nth character of the given string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig Number -> String -> Number\n     * @param {Number} n\n     * @param {String} str\n     * @return {Number}\n     * @deprecated since v0.16.0\n     * @example\n     *\n     *      R.nthCharCode(2, 'Ramda'); //=> 'm'.charCodeAt(0)\n     *      R.nthCharCode(-2, 'Ramda'); //=> 'd'.charCodeAt(0)\n     */\n    var nthCharCode = _curry2(function nthCharCode(n, str) {\n        return str.charCodeAt(n < 0 ? str.length + n : n);\n    });\n\n    /**\n     * Returns a singleton array containing the value provided.\n     *\n     * Note this `of` is different from the ES6 `of`; See\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> [a]\n     * @param {*} x any value\n     * @return {Array} An array wrapping `x`.\n     * @example\n     *\n     *      R.of(null); //=> [null]\n     *      R.of([42]); //=> [[42]]\n     */\n    var of = _curry1(function of(x) {\n        return [x];\n    });\n\n    /**\n     * Accepts a function `fn` and returns a function that guards invocation of `fn` such that\n     * `fn` can only ever be called once, no matter how many times the returned function is\n     * invoked.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a... -> b) -> (a... -> b)\n     * @param {Function} fn The function to wrap in a call-only-once wrapper.\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var addOneOnce = R.once(function(x){ return x + 1; });\n     *      addOneOnce(10); //=> 11\n     *      addOneOnce(addOneOnce(50)); //=> 11\n     */\n    var once = _curry1(function once(fn) {\n        var called = false, result;\n        return function () {\n            if (called) {\n                return result;\n            }\n            called = true;\n            result = fn.apply(this, arguments);\n            return result;\n        };\n    });\n\n    /**\n     * Returns the result of \"setting\" the portion of the given data structure\n     * focused by the given lens to the given value.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> (a -> a) -> s -> s\n     * @param {Lens} lens\n     * @param {*} v\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var headLens = R.lensIndex(0);\n     *\n     *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n     */\n    var over = function () {\n        var Identity = function (x) {\n            return {\n                value: x,\n                map: function (f) {\n                    return Identity(f(x));\n                }\n            };\n        };\n        return _curry3(function over(lens, f, x) {\n            return lens(function (y) {\n                return Identity(f(y));\n            })(x).value;\n        });\n    }();\n\n    /**\n     * Retrieve the value at a given path.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> {k: v} -> v | Undefined\n     * @param {Array} path The path to use.\n     * @return {*} The data at `path`.\n     * @example\n     *\n     *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n     *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n     */\n    var path = _curry2(function path(paths, obj) {\n        if (obj == null) {\n            return;\n        } else {\n            var val = obj;\n            for (var idx = 0, len = paths.length; idx < len && val != null; idx += 1) {\n                val = val[paths[idx]];\n            }\n            return val;\n        }\n    });\n\n    /**\n     * Returns a partial copy of an object containing only the keys specified.  If the key does not exist, the\n     * property is ignored.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.omit\n     * @example\n     *\n     *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n     */\n    var pick = _curry2(function pick(names, obj) {\n        var result = {};\n        var idx = 0;\n        while (idx < names.length) {\n            if (names[idx] in obj) {\n                result[names[idx]] = obj[names[idx]];\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Similar to `pick` except that this one includes a `key: undefined` pair for properties that don't exist.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n     */\n    var pickAll = _curry2(function pickAll(names, obj) {\n        var result = {};\n        var idx = 0;\n        var len = names.length;\n        while (idx < len) {\n            var name = names[idx];\n            result[name] = obj[name];\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a partial copy of an object containing only the keys that\n     * satisfy the supplied predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig (v, k -> Boolean) -> {k: v} -> {k: v}\n     * @param {Function} pred A predicate to determine whether or not a key\n     *        should be included on the output object.\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties that satisfy `pred`\n     *         on it.\n     * @see R.pick\n     * @example\n     *\n     *      var isUpperCase = function(val, key) { return key.toUpperCase() === key; }\n     *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n     */\n    var pickBy = _curry2(function pickBy(test, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (test(obj[prop], prop, obj)) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list with the given element at the front, followed by the contents of the\n     * list.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The item to add to the head of the output list.\n     * @param {Array} list The array to add to the tail of the output list.\n     * @return {Array} A new array.\n     * @see R.append\n     * @example\n     *\n     *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n     */\n    var prepend = _curry2(function prepend(el, list) {\n        return _concat([el], list);\n    });\n\n    /**\n     * Returns a function that when supplied an object returns the indicated property of that object, if it exists.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig s -> {s: a} -> a | Undefined\n     * @param {String} p The property name\n     * @param {Object} obj The object to query\n     * @return {*} The value at `obj.p`.\n     * @example\n     *\n     *      R.prop('x', {x: 100}); //=> 100\n     *      R.prop('x', {}); //=> undefined\n     */\n    var prop = _curry2(function prop(p, obj) {\n        return obj[p];\n    });\n\n    /**\n     * If the given, non-null object has an own property with the specified name,\n     * returns the value of that property.\n     * Otherwise returns the provided default value.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig a -> String -> Object -> a\n     * @param {*} val The default value.\n     * @param {String} p The name of the property to return.\n     * @param {Object} obj The object to query.\n     * @return {*} The value of given property of the supplied object or the default value.\n     * @example\n     *\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var favorite = R.prop('favoriteLibrary');\n     *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n     *\n     *      favorite(alice);  //=> undefined\n     *      favoriteWithDefault(alice);  //=> 'Ramda'\n     */\n    var propOr = _curry3(function propOr(val, p, obj) {\n        return obj != null && _has(p, obj) ? obj[p] : val;\n    });\n\n    /**\n     * Returns `true` if the specified object property satisfies the given\n     * predicate; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n     * @param {Function} pred\n     * @param {String} name\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.propEq\n     * @see R.propIs\n     * @example\n     *\n     *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n     */\n    var propSatisfies = _curry3(function propSatisfies(pred, name, obj) {\n        return pred(obj[name]);\n    });\n\n    /**\n     * Acts as multiple `prop`: array of keys in, array of values out. Preserves order.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [k] -> {k: v} -> [v]\n     * @param {Array} ps The property names to fetch\n     * @param {Object} obj The object to query\n     * @return {Array} The corresponding values or partially applied function.\n     * @example\n     *\n     *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n     *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n     *\n     *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n     *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n     */\n    var props = _curry2(function props(ps, obj) {\n        var len = ps.length;\n        var out = [];\n        var idx = 0;\n        while (idx < len) {\n            out[idx] = obj[ps[idx]];\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a list of numbers from `from` (inclusive) to `to`\n     * (exclusive).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> Number -> [Number]\n     * @param {Number} from The first number in the list.\n     * @param {Number} to One more than the last number in the list.\n     * @return {Array} The list of numbers in tthe set `[a, b)`.\n     * @example\n     *\n     *      R.range(1, 5);    //=> [1, 2, 3, 4]\n     *      R.range(50, 53);  //=> [50, 51, 52]\n     */\n    var range = _curry2(function range(from, to) {\n        if (!(_isNumber(from) && _isNumber(to))) {\n            throw new TypeError('Both arguments to range must be numbers');\n        }\n        var result = [];\n        var n = from;\n        while (n < to) {\n            result.push(n);\n            n += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a single item by iterating through the list, successively calling the iterator\n     * function and passing it an accumulator value and the current value from the array, and\n     * then passing the result to the next call.\n     *\n     * Similar to `reduce`, except moves through the input list from the right to the left.\n     *\n     * The iterator function receives two values: *(acc, value)*\n     *\n     * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse arrays), unlike\n     * the native `Array.prototype.reduce` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var pairs = [ ['a', 1], ['b', 2], ['c', 3] ];\n     *      var flattenPairs = function(acc, pair) {\n     *        return acc.concat(pair);\n     *      };\n     *\n     *      R.reduceRight(flattenPairs, [], pairs); //=> [ 'c', 3, 'b', 2, 'a', 1 ]\n     */\n    var reduceRight = _curry3(function reduceRight(fn, acc, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            acc = fn(acc, list[idx]);\n            idx -= 1;\n        }\n        return acc;\n    });\n\n    /**\n     * Returns a value wrapped to indicate that it is the final value of the\n     * reduce and transduce functions.  The returned value\n     * should be considered a black box: the internal structure is not\n     * guaranteed to be stable.\n     *\n     * Note: this optimization is unavailable to functions not explicitly listed\n     * above.  For instance, it is not currently supported by reduceIndexed,\n     * reduceRight, or reduceRightIndexed.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.reduce, R.transduce\n     * @sig a -> *\n     * @param {*} x The final value of the reduce.\n     * @return {*} The wrapped value.\n     * @example\n     *\n     *      R.reduce(\n     *        R.pipe(R.add, R.ifElse(R.lte(10), R.reduced, R.identity)),\n     *        0,\n     *        [1, 2, 3, 4, 5]) // 10\n     */\n    var reduced = _curry1(_reduced);\n\n    /**\n     * Removes the sub-list of `list` starting at index `start` and containing\n     * `count` elements.  _Note that this is not destructive_: it returns a\n     * copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @param {Number} start The position to start removing elements\n     * @param {Number} count The number of elements to remove\n     * @param {Array} list The list to remove from\n     * @return {Array} A new Array with `count` elements from `start` removed.\n     * @example\n     *\n     *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n     */\n    var remove = _curry3(function remove(start, count, list) {\n        return _concat(_slice(list, 0, Math.min(start, list.length)), _slice(list, Math.min(list.length, start + count)));\n    });\n\n    /**\n     * Replace a substring or regex match in a string with a replacement.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig RegExp|String -> String -> String -> String\n     * @param {RegExp|String} pattern A regular expression or a substring to match.\n     * @param {String} replacement The string to replace the matches with.\n     * @param {String} str The String to do the search and replacement in.\n     * @return {String} The result.\n     * @example\n     *\n     *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *\n     *      // Use the \"g\" (global) flag to replace all occurrences:\n     *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n     */\n    var replace = _curry3(function replace(regex, replacement, str) {\n        return str.replace(regex, replacement);\n    });\n\n    /**\n     * Returns a new list with the same elements as the original list, just\n     * in the reverse order.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The list to reverse.\n     * @return {Array} A copy of the list in reverse order.\n     * @example\n     *\n     *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n     *      R.reverse([1, 2]);     //=> [2, 1]\n     *      R.reverse([1]);        //=> [1]\n     *      R.reverse([]);         //=> []\n     */\n    var reverse = _curry1(function reverse(list) {\n        return _slice(list).reverse();\n    });\n\n    /**\n     * Scan is similar to reduce, but returns a list of successively reduced values from the left\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> [a]\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} A list of all intermediately reduced values.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n     */\n    var scan = _curry3(function scan(fn, acc, list) {\n        var idx = 0, len = list.length, result = [acc];\n        while (idx < len) {\n            acc = fn(acc, list[idx]);\n            result[idx + 1] = acc;\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns the result of \"setting\" the portion of the given data structure\n     * focused by the given lens to the given value.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> a -> s -> s\n     * @param {Lens} lens\n     * @param {*} v\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n     *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n     */\n    var set = _curry3(function set(lens, v, x) {\n        return over(lens, always(v), x);\n    });\n\n    /**\n     * Returns a copy of the list, sorted according to the comparator function, which should accept two values at a\n     * time and return a negative number if the first value is smaller, a positive number if it's larger, and zero\n     * if they are equal.  Please note that this is a **copy** of the list.  It does not modify the original.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,a -> Number) -> [a] -> [a]\n     * @param {Function} comparator A sorting function :: a -> b -> Int\n     * @param {Array} list The list to sort\n     * @return {Array} a new array with its elements sorted by the comparator function.\n     * @example\n     *\n     *      var diff = function(a, b) { return a - b; };\n     *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n     */\n    var sort = _curry2(function sort(comparator, list) {\n        return _slice(list).sort(comparator);\n    });\n\n    /**\n     * Sorts the list according to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord b => (a -> b) -> [a] -> [a]\n     * @param {Function} fn\n     * @param {Array} list The list to sort.\n     * @return {Array} A new list sorted by the keys generated by `fn`.\n     * @example\n     *\n     *      var sortByFirstItem = R.sortBy(prop(0));\n     *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n     *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n     *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var bob = {\n     *        name: 'Bob',\n     *        age: -10\n     *      };\n     *      var clara = {\n     *        name: 'clara',\n     *        age: 314.159\n     *      };\n     *      var people = [clara, bob, alice];\n     *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n     */\n    var sortBy = _curry2(function sortBy(fn, list) {\n        return _slice(list).sort(function (a, b) {\n            var aa = fn(a);\n            var bb = fn(b);\n            return aa < bb ? -1 : aa > bb ? 1 : 0;\n        });\n    });\n\n    /**\n     * Subtracts two numbers. Equivalent to `a - b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a - b`.\n     * @see R.add\n     * @example\n     *\n     *      R.subtract(10, 8); //=> 2\n     *\n     *      var minus5 = R.subtract(R.__, 5);\n     *      minus5(17); //=> 12\n     *\n     *      var complementaryAngle = R.subtract(90);\n     *      complementaryAngle(30); //=> 60\n     *      complementaryAngle(72); //=> 18\n     */\n    var subtract = _curry2(function subtract(a, b) {\n        return a - b;\n    });\n\n    /**\n     * Returns a new list containing the last `n` elements of a given list, passing each value\n     * to the supplied predicate function, and terminating when the predicate function returns\n     * `false`. Excludes the element that caused the predicate function to fail. The predicate\n     * function is passed one argument: *(value)*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.dropLastWhile\n     * @example\n     *\n     *      var isNotOne = function(x) {\n     *        return !(x === 1);\n     *      };\n     *\n     *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n     */\n    var takeLastWhile = _curry2(function takeLastWhile(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0 && fn(list[idx])) {\n            idx -= 1;\n        }\n        return _slice(list, idx + 1, Infinity);\n    });\n\n    /**\n     * Runs the given function with the supplied object, then returns the object.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> *) -> a -> a\n     * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n     * @param {*} x\n     * @return {*} `x`.\n     * @example\n     *\n     *      var sayX = function(x) { console.log('x is ' + x); };\n     *      R.tap(sayX, 100); //=> 100\n     *      //-> 'x is 100'\n     */\n    var tap = _curry2(function tap(fn, x) {\n        fn(x);\n        return x;\n    });\n\n    /**\n     * Determines whether a given string matches a given regular expression.\n     *\n     * @func\n     * @memberOf R\n     * @see R.match\n     * @category String\n     * @sig RegExp -> String -> Boolean\n     * @param {RegExp} pattern\n     * @param {String} str\n     * @return {Boolean}\n     * @example\n     *\n     *      R.test(/^x/, 'xyz'); //=> true\n     *      R.test(/^y/, 'xyz'); //=> false\n     */\n    var test = _curry2(function test(pattern, str) {\n        return _cloneRegExp(pattern).test(str);\n    });\n\n    /**\n     * Calls an input function `n` times, returning an array containing the results of those\n     * function calls.\n     *\n     * `fn` is passed one argument: The current value of `n`, which begins at `0` and is\n     * gradually incremented to `n - 1`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (i -> a) -> i -> [a]\n     * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n     * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n     * @return {Array} An array containing the return values of all calls to `fn`.\n     * @example\n     *\n     *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n     */\n    var times = _curry2(function times(fn, n) {\n        var len = Number(n);\n        var list = new Array(len);\n        var idx = 0;\n        while (idx < len) {\n            list[idx] = fn(idx);\n            idx += 1;\n        }\n        return list;\n    });\n\n    /**\n     * Converts an object into an array of key, value arrays.\n     * Only the object's own properties are used.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own properties.\n     * @see R.fromPairs\n     * @example\n     *\n     *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n     */\n    var toPairs = _curry1(function toPairs(obj) {\n        var pairs = [];\n        for (var prop in obj) {\n            if (_has(prop, obj)) {\n                pairs[pairs.length] = [\n                    prop,\n                    obj[prop]\n                ];\n            }\n        }\n        return pairs;\n    });\n\n    /**\n     * Converts an object into an array of key, value arrays.\n     * The object's own properties and prototype properties are used.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own\n     *         and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n     */\n    var toPairsIn = _curry1(function toPairsIn(obj) {\n        var pairs = [];\n        for (var prop in obj) {\n            pairs[pairs.length] = [\n                prop,\n                obj[prop]\n            ];\n        }\n        return pairs;\n    });\n\n    /**\n     * Removes (strips) whitespace from both ends of the string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to trim.\n     * @return {String} Trimmed version of `str`.\n     * @example\n     *\n     *      R.trim('   xyz  '); //=> 'xyz'\n     *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n     */\n    var trim = function () {\n        var ws = '\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\n        var zeroWidth = '\\u200B';\n        var hasProtoTrim = typeof String.prototype.trim === 'function';\n        if (!hasProtoTrim || (ws.trim() || !zeroWidth.trim())) {\n            return _curry1(function trim(str) {\n                var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n                var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n                return str.replace(beginRx, '').replace(endRx, '');\n            });\n        } else {\n            return _curry1(function trim(str) {\n                return str.trim();\n            });\n        }\n    }();\n\n    /**\n     * Gives a single-word string description of the (native) type of a value, returning such\n     * answers as 'Object', 'Number', 'Array', or 'Null'.  Does not attempt to distinguish user\n     * Object types any further, reporting them all as 'Object'.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig (* -> {*}) -> String\n     * @param {*} val The value to test\n     * @return {String}\n     * @example\n     *\n     *      R.type({}); //=> \"Object\"\n     *      R.type(1); //=> \"Number\"\n     *      R.type(false); //=> \"Boolean\"\n     *      R.type('s'); //=> \"String\"\n     *      R.type(null); //=> \"Null\"\n     *      R.type([]); //=> \"Array\"\n     *      R.type(/[A-z]/); //=> \"RegExp\"\n     */\n    var type = _curry1(function type(val) {\n        return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n    });\n\n    /**\n     * Takes a function `fn`, which takes a single array argument, and returns\n     * a function which:\n     *\n     *   - takes any number of positional arguments;\n     *   - passes these arguments to `fn` as an array; and\n     *   - returns the result.\n     *\n     * In other words, R.unapply derives a variadic function from a function\n     * which takes an array. R.unapply is the inverse of R.apply.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ([*...] -> a) -> (*... -> a)\n     * @param {Function} fn\n     * @return {Function}\n     * @see R.apply\n     * @example\n     *\n     *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n     */\n    var unapply = _curry1(function unapply(fn) {\n        return function () {\n            return fn(_slice(arguments));\n        };\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts exactly 1\n     * parameter. Any extraneous parameters will not be passed to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> b) -> (a -> b)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 1.\n     * @example\n     *\n     *      var takesTwoArgs = function(a, b) {\n     *        return [a, b];\n     *      };\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.unary(takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only 1 argument is passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n    var unary = _curry1(function unary(fn) {\n        return nAry(1, fn);\n    });\n\n    /**\n     * Returns a function of arity `n` from a (manually) curried function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (a -> b) -> (a -> c)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to uncurry.\n     * @return {Function} A new function.\n     * @see R.curry\n     * @example\n     *\n     *      var addFour = function(a) {\n     *        return function(b) {\n     *          return function(c) {\n     *            return function(d) {\n     *              return a + b + c + d;\n     *            };\n     *          };\n     *        };\n     *      };\n     *\n     *      var uncurriedAddFour = R.uncurryN(4, addFour);\n     *      curriedAddFour(1, 2, 3, 4); //=> 10\n     */\n    var uncurryN = _curry2(function uncurryN(depth, fn) {\n        return curryN(depth, function () {\n            var currentDepth = 1;\n            var value = fn;\n            var idx = 0;\n            var endIdx;\n            while (currentDepth <= depth && typeof value === 'function') {\n                endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n                value = value.apply(this, _slice(arguments, idx, endIdx));\n                currentDepth += 1;\n                idx = endIdx;\n            }\n            return value;\n        });\n    });\n\n    /**\n     * Builds a list from a seed value. Accepts an iterator function, which returns either false\n     * to stop iteration or an array of length 2 containing the value to add to the resulting\n     * list and the seed to be used in the next call to the iterator function.\n     *\n     * The iterator function receives one argument: *(seed)*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> [b]) -> * -> [b]\n     * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n     *        either false to quit iteration or an array of length two to proceed. The element\n     *        at index 0 of this array will be added to the resulting array, and the element\n     *        at index 1 will be passed to the next call to `fn`.\n     * @param {*} seed The seed value.\n     * @return {Array} The final list.\n     * @example\n     *\n     *      var f = function(n) { return n > 50 ? false : [-n, n + 10] };\n     *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n     */\n    var unfold = _curry2(function unfold(fn, seed) {\n        var pair = fn(seed);\n        var result = [];\n        while (pair && pair.length) {\n            result[result.length] = pair[0];\n            pair = fn(pair[1]);\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list containing only one copy of each element in the original list, based\n     * upon the value returned by applying the supplied predicate to two list elements. Prefers\n     * the first item if two items compare equal based on the predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      var strEq = function(a, b) { return String(a) === String(b); };\n     *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n     *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n     *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n     *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n     */\n    var uniqWith = _curry2(function uniqWith(pred, list) {\n        var idx = 0, len = list.length;\n        var result = [], item;\n        while (idx < len) {\n            item = list[idx];\n            if (!_containsWith(pred, item, result)) {\n                result[result.length] = item;\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new copy of the array with the element at the\n     * provided index replaced with the given value.\n     * @see R.adjust\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} idx The index to update.\n     * @param {*} x The value to exist at the given index of the returned array.\n     * @param {Array|Arguments} list The source array-like object to be updated.\n     * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n     * @example\n     *\n     *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n     *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n     */\n    var update = _curry3(function update(idx, x, list) {\n        return adjust(always(x), idx, list);\n    });\n\n    /**\n     * Returns a list of all the enumerable own properties of the supplied object.\n     * Note that the order of the output array is not guaranteed across\n     * different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own properties.\n     * @example\n     *\n     *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n     */\n    var values = _curry1(function values(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var vals = [];\n        var idx = 0;\n        while (idx < len) {\n            vals[idx] = obj[props[idx]];\n            idx += 1;\n        }\n        return vals;\n    });\n\n    /**\n     * Returns a list of all the properties, including prototype properties,\n     * of the supplied object.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.valuesIn(f); //=> ['X', 'Y']\n     */\n    var valuesIn = _curry1(function valuesIn(obj) {\n        var prop, vs = [];\n        for (prop in obj) {\n            vs[vs.length] = obj[prop];\n        }\n        return vs;\n    });\n\n    /**\n     * Returns a \"view\" of the given data structure, determined by the given lens.\n     * The lens's focus determines which portion of the data structure is visible.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> s -> a\n     * @param {Lens} lens\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.view(xLens, {x: 1, y: 2});  //=> 1\n     *      R.view(xLens, {x: 4, y: 2});  //=> 4\n     */\n    var view = function () {\n        var Const = function (x) {\n            return {\n                value: x,\n                map: function () {\n                    return this;\n                }\n            };\n        };\n        return _curry2(function view(lens, x) {\n            return lens(Const)(x).value;\n        });\n    }();\n\n    /**\n     * Takes a spec object and a test object; returns true if the test satisfies\n     * the spec. Each of the spec's own properties must be a predicate function.\n     * Each predicate is applied to the value of the corresponding property of\n     * the test object. `where` returns true if all the predicates return true,\n     * false otherwise.\n     *\n     * `where` is well suited to declaratively expressing constraints for other\n     * functions such as `filter` and `find`.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @example\n     *\n     *      // pred :: Object -> Boolean\n     *      var pred = R.where({\n     *        a: R.equals('foo'),\n     *        b: R.complement(R.equals('bar')),\n     *        x: R.gt(_, 10),\n     *        y: R.lt(_, 20)\n     *      });\n     *\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n     *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n     */\n    var where = _curry2(function where(spec, testObj) {\n        for (var prop in spec) {\n            if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n                return false;\n            }\n        }\n        return true;\n    });\n\n    /**\n     * Wrap a function inside another to allow you to make adjustments to the parameters, or do\n     * other processing either before the internal function is called or with its results.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a... -> b) -> ((a... -> b) -> a... -> c) -> (a... -> c)\n     * @param {Function} fn The function to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var greet = function(name) {return 'Hello ' + name;};\n     *\n     *      var shoutedGreet = R.wrap(greet, function(gr, name) {\n     *        return gr(name).toUpperCase();\n     *      });\n     *      shoutedGreet(\"Kathy\"); //=> \"HELLO KATHY\"\n     *\n     *      var shortenedGreet = R.wrap(greet, function(gr, name) {\n     *        return gr(name.substring(0, 3));\n     *      });\n     *      shortenedGreet(\"Robert\"); //=> \"Hello Rob\"\n     */\n    var wrap = _curry2(function wrap(fn, wrapper) {\n        return curryN(fn.length, function () {\n            return wrapper.apply(this, _concat([fn], arguments));\n        });\n    });\n\n    /**\n     * Creates a new list out of the two supplied by creating each possible\n     * pair from the lists.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The list made by combining each possible pair from\n     *         `as` and `bs` into pairs (`[a, b]`).\n     * @example\n     *\n     *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n     */\n    // = xprodWith(prepend); (takes about 3 times as long...)\n    var xprod = _curry2(function xprod(a, b) {\n        // = xprodWith(prepend); (takes about 3 times as long...)\n        var idx = 0;\n        var ilen = a.length;\n        var j;\n        var jlen = b.length;\n        var result = [];\n        while (idx < ilen) {\n            j = 0;\n            while (j < jlen) {\n                result[result.length] = [\n                    a[idx],\n                    b[j]\n                ];\n                j += 1;\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Creates a new list out of the two supplied by pairing up\n     * equally-positioned items from both lists.  The returned list is\n     * truncated to the length of the shorter of the two input lists.\n     * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n     * @example\n     *\n     *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n     */\n    var zip = _curry2(function zip(a, b) {\n        var rv = [];\n        var idx = 0;\n        var len = Math.min(a.length, b.length);\n        while (idx < len) {\n            rv[idx] = [\n                a[idx],\n                b[idx]\n            ];\n            idx += 1;\n        }\n        return rv;\n    });\n\n    /**\n     * Creates a new object out of a list of keys and a list of values.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [String] -> [*] -> {String: *}\n     * @param {Array} keys The array that will be properties on the output object.\n     * @param {Array} values The list of values on the output object.\n     * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n     * @example\n     *\n     *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n     */\n    var zipObj = _curry2(function zipObj(keys, values) {\n        var idx = 0, len = keys.length, out = {};\n        while (idx < len) {\n            out[keys[idx]] = values[idx];\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Creates a new list out of the two supplied by applying the function to\n     * each equally-positioned pair in the lists. The returned list is\n     * truncated to the length of the shorter of the two input lists.\n     *\n     * @function\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> c) -> [a] -> [b] -> [c]\n     * @param {Function} fn The function used to combine the two elements into one value.\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n     *         using `fn`.\n     * @example\n     *\n     *      var f = function(x, y) {\n     *        // ...\n     *      };\n     *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n     *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n     */\n    var zipWith = _curry3(function zipWith(fn, a, b) {\n        var rv = [], idx = 0, len = Math.min(a.length, b.length);\n        while (idx < len) {\n            rv[idx] = fn(a[idx], b[idx]);\n            idx += 1;\n        }\n        return rv;\n    });\n\n    /**\n     * A function that always returns `false`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig * -> false\n     * @return {Boolean} false\n     * @see R.always, R.T\n     * @example\n     *\n     *      R.F(); //=> false\n     */\n    var F = always(false);\n\n    /**\n     * A function that always returns `true`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig * -> true\n     * @return {Boolean} `true`.\n     * @see R.always, R.F\n     * @example\n     *\n     *      R.T(); //=> true\n     */\n    var T = always(true);\n\n    /**\n     * Similar to hasMethod, this checks whether a function has a [methodname]\n     * function. If it isn't an array it will execute that function otherwise it will\n     * default to the ramda implementation.\n     *\n     * @private\n     * @param {Function} fn ramda implemtation\n     * @param {String} methodname property to check for a custom implementation\n     * @return {Object} Whatever the return value of the method is.\n     */\n    var _checkForMethod = function _checkForMethod(methodname, fn) {\n        return function () {\n            var length = arguments.length;\n            if (length === 0) {\n                return fn();\n            }\n            var obj = arguments[length - 1];\n            return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, _slice(arguments, 0, length - 1));\n        };\n    };\n\n    /**\n     * Copies an object.\n     *\n     * @private\n     * @param {*} value The value to be copied\n     * @param {Array} refFrom Array containing the source references\n     * @param {Array} refTo Array containing the copied source references\n     * @return {*} The copied value.\n     */\n    var _clone = function _clone(value, refFrom, refTo) {\n        var copy = function copy(copiedValue) {\n            var len = refFrom.length;\n            var idx = 0;\n            while (idx < len) {\n                if (value === refFrom[idx]) {\n                    return refTo[idx];\n                }\n                idx += 1;\n            }\n            refFrom[idx + 1] = value;\n            refTo[idx + 1] = copiedValue;\n            for (var key in value) {\n                copiedValue[key] = _clone(value[key], refFrom, refTo);\n            }\n            return copiedValue;\n        };\n        switch (type(value)) {\n        case 'Object':\n            return copy({});\n        case 'Array':\n            return copy([]);\n        case 'Date':\n            return new Date(value);\n        case 'RegExp':\n            return _cloneRegExp(value);\n        default:\n            return value;\n        }\n    };\n\n    var _createPartialApplicator = function _createPartialApplicator(concat) {\n        return function (fn) {\n            var args = _slice(arguments, 1);\n            return _arity(Math.max(0, fn.length - args.length), function () {\n                return fn.apply(this, concat(args, arguments));\n            });\n        };\n    };\n\n    /**\n     * Returns a function that dispatches with different strategies based on the\n     * object in list position (last argument). If it is an array, executes [fn].\n     * Otherwise, if it has a  function with [methodname], it will execute that\n     * function (functor case). Otherwise, if it is a transformer, uses transducer\n     * [xf] to return a new transformer (transducer case). Otherwise, it will\n     * default to executing [fn].\n     *\n     * @private\n     * @param {String} methodname property to check for a custom implementation\n     * @param {Function} xf transducer to initialize if object is transformer\n     * @param {Function} fn default ramda implementation\n     * @return {Function} A function that dispatches on object in list position\n     */\n    var _dispatchable = function _dispatchable(methodname, xf, fn) {\n        return function () {\n            var length = arguments.length;\n            if (length === 0) {\n                return fn();\n            }\n            var obj = arguments[length - 1];\n            if (!_isArray(obj)) {\n                var args = _slice(arguments, 0, length - 1);\n                if (typeof obj[methodname] === 'function') {\n                    return obj[methodname].apply(obj, args);\n                }\n                if (_isTransformer(obj)) {\n                    var transducer = xf.apply(null, args);\n                    return transducer(obj);\n                }\n            }\n            return fn.apply(this, arguments);\n        };\n    };\n\n    // The algorithm used to handle cyclic structures is\n    // inspired by underscore's isEqual\n    // RegExp equality algorithm: http://stackoverflow.com/a/10776635\n    var _equals = function _equals(a, b, stackA, stackB) {\n        var typeA = type(a);\n        if (typeA !== type(b)) {\n            return false;\n        }\n        if (typeA === 'Boolean' || typeA === 'Number' || typeA === 'String') {\n            return typeof a === 'object' ? typeof b === 'object' && identical(a.valueOf(), b.valueOf()) : identical(a, b);\n        }\n        if (identical(a, b)) {\n            return true;\n        }\n        if (typeA === 'RegExp') {\n            // RegExp equality algorithm: http://stackoverflow.com/a/10776635\n            return a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode;\n        }\n        if (Object(a) === a) {\n            if (typeA === 'Date' && a.getTime() !== b.getTime()) {\n                return false;\n            }\n            var keysA = keys(a);\n            if (keysA.length !== keys(b).length) {\n                return false;\n            }\n            var idx = stackA.length - 1;\n            while (idx >= 0) {\n                if (stackA[idx] === a) {\n                    return stackB[idx] === b;\n                }\n                idx -= 1;\n            }\n            stackA[stackA.length] = a;\n            stackB[stackB.length] = b;\n            idx = keysA.length - 1;\n            while (idx >= 0) {\n                var key = keysA[idx];\n                if (!_has(key, b) || !_equals(b[key], a[key], stackA, stackB)) {\n                    return false;\n                }\n                idx -= 1;\n            }\n            stackA.pop();\n            stackB.pop();\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * Private function that determines whether or not a provided object has a given method.\n     * Does not ignore methods stored on the object's prototype chain. Used for dynamically\n     * dispatching Ramda methods to non-Array objects.\n     *\n     * @private\n     * @param {String} methodName The name of the method to check for.\n     * @param {Object} obj The object to test.\n     * @return {Boolean} `true` has a given method, `false` otherwise.\n     * @example\n     *\n     *      var person = { name: 'John' };\n     *      person.shout = function() { alert(this.name); };\n     *\n     *      _hasMethod('shout', person); //=> true\n     *      _hasMethod('foo', person); //=> false\n     */\n    var _hasMethod = function _hasMethod(methodName, obj) {\n        return obj != null && !_isArray(obj) && typeof obj[methodName] === 'function';\n    };\n\n    /**\n     * `_makeFlat` is a helper function that returns a one-level or fully recursive function\n     * based on the flag passed in.\n     *\n     * @private\n     */\n    var _makeFlat = function _makeFlat(recursive) {\n        return function flatt(list) {\n            var value, result = [], idx = 0, j, ilen = list.length, jlen;\n            while (idx < ilen) {\n                if (isArrayLike(list[idx])) {\n                    value = recursive ? flatt(list[idx]) : list[idx];\n                    j = 0;\n                    jlen = value.length;\n                    while (j < jlen) {\n                        result[result.length] = value[j];\n                        j += 1;\n                    }\n                } else {\n                    result[result.length] = list[idx];\n                }\n                idx += 1;\n            }\n            return result;\n        };\n    };\n\n    var _reduce = function () {\n        function _arrayReduce(xf, acc, list) {\n            var idx = 0, len = list.length;\n            while (idx < len) {\n                acc = xf['@@transducer/step'](acc, list[idx]);\n                if (acc && acc['@@transducer/reduced']) {\n                    acc = acc['@@transducer/value'];\n                    break;\n                }\n                idx += 1;\n            }\n            return xf['@@transducer/result'](acc);\n        }\n        function _iterableReduce(xf, acc, iter) {\n            var step = iter.next();\n            while (!step.done) {\n                acc = xf['@@transducer/step'](acc, step.value);\n                if (acc && acc['@@transducer/reduced']) {\n                    acc = acc['@@transducer/value'];\n                    break;\n                }\n                step = iter.next();\n            }\n            return xf['@@transducer/result'](acc);\n        }\n        function _methodReduce(xf, acc, obj) {\n            return xf['@@transducer/result'](obj.reduce(bind(xf['@@transducer/step'], xf), acc));\n        }\n        var symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n        return function _reduce(fn, acc, list) {\n            if (typeof fn === 'function') {\n                fn = _xwrap(fn);\n            }\n            if (isArrayLike(list)) {\n                return _arrayReduce(fn, acc, list);\n            }\n            if (typeof list.reduce === 'function') {\n                return _methodReduce(fn, acc, list);\n            }\n            if (list[symIterator] != null) {\n                return _iterableReduce(fn, acc, list[symIterator]());\n            }\n            if (typeof list.next === 'function') {\n                return _iterableReduce(fn, acc, list);\n            }\n            throw new TypeError('reduce: list must be array or iterable');\n        };\n    }();\n\n    var _stepCat = function () {\n        var _stepCatArray = {\n            '@@transducer/init': Array,\n            '@@transducer/step': function (xs, x) {\n                return _concat(xs, [x]);\n            },\n            '@@transducer/result': _identity\n        };\n        var _stepCatString = {\n            '@@transducer/init': String,\n            '@@transducer/step': function (a, b) {\n                return a + b;\n            },\n            '@@transducer/result': _identity\n        };\n        var _stepCatObject = {\n            '@@transducer/init': Object,\n            '@@transducer/step': function (result, input) {\n                return merge(result, isArrayLike(input) ? createMapEntry(input[0], input[1]) : input);\n            },\n            '@@transducer/result': _identity\n        };\n        return function _stepCat(obj) {\n            if (_isTransformer(obj)) {\n                return obj;\n            }\n            if (isArrayLike(obj)) {\n                return _stepCatArray;\n            }\n            if (typeof obj === 'string') {\n                return _stepCatString;\n            }\n            if (typeof obj === 'object') {\n                return _stepCatObject;\n            }\n            throw new Error('Cannot create transformer for ' + obj);\n        };\n    }();\n\n    var _xall = function () {\n        function XAll(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.all = true;\n        }\n        XAll.prototype['@@transducer/init'] = _xfBase.init;\n        XAll.prototype['@@transducer/result'] = function (result) {\n            if (this.all) {\n                result = this.xf['@@transducer/step'](result, true);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XAll.prototype['@@transducer/step'] = function (result, input) {\n            if (!this.f(input)) {\n                this.all = false;\n                result = _reduced(this.xf['@@transducer/step'](result, false));\n            }\n            return result;\n        };\n        return _curry2(function _xall(f, xf) {\n            return new XAll(f, xf);\n        });\n    }();\n\n    var _xany = function () {\n        function XAny(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.any = false;\n        }\n        XAny.prototype['@@transducer/init'] = _xfBase.init;\n        XAny.prototype['@@transducer/result'] = function (result) {\n            if (!this.any) {\n                result = this.xf['@@transducer/step'](result, false);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XAny.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.any = true;\n                result = _reduced(this.xf['@@transducer/step'](result, true));\n            }\n            return result;\n        };\n        return _curry2(function _xany(f, xf) {\n            return new XAny(f, xf);\n        });\n    }();\n\n    var _xdrop = function () {\n        function XDrop(n, xf) {\n            this.xf = xf;\n            this.n = n;\n        }\n        XDrop.prototype['@@transducer/init'] = _xfBase.init;\n        XDrop.prototype['@@transducer/result'] = _xfBase.result;\n        XDrop.prototype['@@transducer/step'] = function (result, input) {\n            if (this.n > 0) {\n                this.n -= 1;\n                return result;\n            }\n            return this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdrop(n, xf) {\n            return new XDrop(n, xf);\n        });\n    }();\n\n    var _xdropWhile = function () {\n        function XDropWhile(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n        XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f) {\n                if (this.f(input)) {\n                    return result;\n                }\n                this.f = null;\n            }\n            return this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdropWhile(f, xf) {\n            return new XDropWhile(f, xf);\n        });\n    }();\n\n    var _xgroupBy = function () {\n        function XGroupBy(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.inputs = {};\n        }\n        XGroupBy.prototype['@@transducer/init'] = _xfBase.init;\n        XGroupBy.prototype['@@transducer/result'] = function (result) {\n            var key;\n            for (key in this.inputs) {\n                if (_has(key, this.inputs)) {\n                    result = this.xf['@@transducer/step'](result, this.inputs[key]);\n                    if (result['@@transducer/reduced']) {\n                        result = result['@@transducer/value'];\n                        break;\n                    }\n                }\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XGroupBy.prototype['@@transducer/step'] = function (result, input) {\n            var key = this.f(input);\n            this.inputs[key] = this.inputs[key] || [\n                key,\n                []\n            ];\n            this.inputs[key][1] = append(input, this.inputs[key][1]);\n            return result;\n        };\n        return _curry2(function _xgroupBy(f, xf) {\n            return new XGroupBy(f, xf);\n        });\n    }();\n\n    /**\n     * Creates a new list iteration function from an existing one by adding two new parameters\n     * to its callback function: the current index, and the entire list.\n     *\n     * This would turn, for instance, Ramda's simple `map` function into one that more closely\n     * resembles `Array.prototype.map`.  Note that this will only work for functions in which\n     * the iteration callback function is the first parameter, and where the list is the last\n     * parameter.  (This latter might be unimportant if the list parameter is not used.)\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @category List\n     * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n     * @param {Function} fn A list iteration function that does not pass index or list to its callback\n     * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n     * @example\n     *\n     *      var mapIndexed = R.addIndex(R.map);\n     *      mapIndexed(function(val, idx) {return idx + '-' + val;}, ['f', 'o', 'o', 'b', 'a', 'r']);\n     *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n     */\n    var addIndex = _curry1(function addIndex(fn) {\n        return curryN(fn.length, function () {\n            var idx = 0;\n            var origFn = arguments[0];\n            var list = arguments[arguments.length - 1];\n            var args = _slice(arguments);\n            args[0] = function () {\n                var result = origFn.apply(this, _concat(arguments, [\n                    idx,\n                    list\n                ]));\n                idx += 1;\n                return result;\n            };\n            return fn.apply(this, args);\n        });\n    });\n\n    /**\n     * Returns `true` if all elements of the list match the predicate, `false` if there are any\n     * that don't.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n     *         otherwise.\n     * @see R.any, R.none\n     * @example\n     *\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      var lessThan3 = R.flip(R.lt)(3);\n     *      R.all(lessThan2)([1, 2]); //=> false\n     *      R.all(lessThan3)([1, 2]); //=> true\n     */\n    var all = _curry2(_dispatchable('all', _xall, function all(fn, list) {\n        var idx = 0;\n        while (idx < list.length) {\n            if (!fn(list[idx])) {\n                return false;\n            }\n            idx += 1;\n        }\n        return true;\n    }));\n\n    /**\n     * A function that returns the first argument if it's falsy otherwise the second\n     * argument. Note that this is NOT short-circuited, meaning that if expressions\n     * are passed they are both evaluated.\n     *\n     * Dispatches to the `and` method of the first argument if applicable.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {*} a any value\n     * @param {*} b any other value\n     * @return {*} the first argument if falsy otherwise the second argument.\n     * @see R.both\n     * @example\n     *\n     *      R.and(false, true); //=> false\n     *      R.and(0, []); //=> 0\n     *      R.and(null, ''); => null\n     */\n    var and = _curry2(function and(a, b) {\n        return _hasMethod('and', a) ? a.and(b) : a && b;\n    });\n\n    /**\n     * Returns `true` if at least one of elements of the list match the predicate, `false`\n     * otherwise.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n     *         otherwise.\n     * @see R.all, R.none\n     * @example\n     *\n     *      var lessThan0 = R.flip(R.lt)(0);\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      R.any(lessThan0)([1, 2]); //=> false\n     *      R.any(lessThan2)([1, 2]); //=> true\n     */\n    var any = _curry2(_dispatchable('any', _xany, function any(fn, list) {\n        var idx = 0;\n        while (idx < list.length) {\n            if (fn(list[idx])) {\n                return true;\n            }\n            idx += 1;\n        }\n        return false;\n    }));\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts exactly 2\n     * parameters. Any extraneous parameters will not be passed to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> c) -> (a, b -> c)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 2.\n     * @example\n     *\n     *      var takesThreeArgs = function(a, b, c) {\n     *        return [a, b, c];\n     *      };\n     *      takesThreeArgs.length; //=> 3\n     *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      var takesTwoArgs = R.binary(takesThreeArgs);\n     *      takesTwoArgs.length; //=> 2\n     *      // Only 2 arguments are passed to the wrapped function\n     *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n     */\n    var binary = _curry1(function binary(fn) {\n        return nAry(2, fn);\n    });\n\n    /**\n     * Creates a deep copy of the value which may contain (nested) `Array`s and\n     * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n     * not copied, but assigned by their reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {*} -> {*}\n     * @param {*} value The object or array to clone\n     * @return {*} A new object or array.\n     * @example\n     *\n     *      var objects = [{}, {}, {}];\n     *      var objectsClone = R.clone(objects);\n     *      objects[0] === objectsClone[0]; //=> false\n     */\n    var clone = _curry1(function clone(value) {\n        return _clone(value, [], []);\n    });\n\n    /**\n     * Returns a new list consisting of the elements of the first list followed by the elements\n     * of the second.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The first list to merge.\n     * @param {Array} list2 The second set to merge.\n     * @return {Array} A new array consisting of the contents of `list1` followed by the\n     *         contents of `list2`. If, instead of an Array for `list1`, you pass an\n     *         object with a `concat` method on it, `concat` will call `list1.concat`\n     *         and pass it the value of `list2`.\n     *\n     * @example\n     *\n     *      R.concat([], []); //=> []\n     *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n     */\n    var concat = _curry2(function concat(set1, set2) {\n        if (_isArray(set2)) {\n            return _concat(set1, set2);\n        } else if (_hasMethod('concat', set1)) {\n            return set1.concat(set2);\n        } else {\n            throw new TypeError('can\\'t concat ' + typeof set1);\n        }\n    });\n\n    /**\n     * Returns a curried equivalent of the provided function. The curried\n     * function has two unusual capabilities. First, its arguments needn't\n     * be provided one at a time. If `f` is a ternary function and `g` is\n     * `R.curry(f)`, the following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`,\n     * the following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> a) -> (* -> a)\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curryN\n     * @example\n     *\n     *      var addFourNumbers = function(a, b, c, d) {\n     *        return a + b + c + d;\n     *      };\n     *\n     *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n    var curry = _curry1(function curry(fn) {\n        return curryN(fn.length, fn);\n    });\n\n    /**\n     * Returns a new list containing the last `n` elements of a given list, passing each value\n     * to the supplied predicate function, skipping elements while the predicate function returns\n     * `true`. The predicate function is passed one argument: *(value)*.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.takeWhile\n     * @example\n     *\n     *      var lteTwo = function(x) {\n     *        return x <= 2;\n     *      };\n     *\n     *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n     */\n    var dropWhile = _curry2(_dispatchable('dropWhile', _xdropWhile, function dropWhile(pred, list) {\n        var idx = 0, len = list.length;\n        while (idx < len && pred(list[idx])) {\n            idx += 1;\n        }\n        return _slice(list, idx);\n    }));\n\n    /**\n     * Returns `true` if its arguments are equivalent, `false` otherwise.\n     * Dispatches to an `equals` method if present. Handles cyclical data\n     * structures.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig a -> b -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      R.equals(1, 1); //=> true\n     *      R.equals(1, '1'); //=> false\n     *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n     *\n     *      var a = {}; a.v = a;\n     *      var b = {}; b.v = b;\n     *      R.equals(a, b); //=> true\n     */\n    var equals = _curry2(function equals(a, b) {\n        return _hasMethod('equals', a) ? a.equals(b) : _hasMethod('equals', b) ? b.equals(a) : _equals(a, b, [], []);\n    });\n\n    /**\n     * Returns a new list containing only those items that match a given predicate function.\n     * The predicate function is passed one argument: *(value)*.\n     *\n     * Note that `R.filter` does not skip deleted or unassigned indices, unlike the native\n     * `Array.prototype.filter` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter#Description\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} The new filtered array.\n     * @see R.reject\n     * @example\n     *\n     *      var isEven = function(n) {\n     *        return n % 2 === 0;\n     *      };\n     *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n     */\n    var filter = _curry2(_dispatchable('filter', _xfilter, _filter));\n\n    /**\n     * Returns the first element of the list which matches the predicate, or `undefined` if no\n     * element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     *        desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n     *      R.find(R.propEq('a', 4))(xs); //=> undefined\n     */\n    var find = _curry2(_dispatchable('find', _xfind, function find(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (fn(list[idx])) {\n                return list[idx];\n            }\n            idx += 1;\n        }\n    }));\n\n    /**\n     * Returns the index of the first element of the list which matches the predicate, or `-1`\n     * if no element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n     *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n    var findIndex = _curry2(_dispatchable('findIndex', _xfindIndex, function findIndex(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (fn(list[idx])) {\n                return idx;\n            }\n            idx += 1;\n        }\n        return -1;\n    }));\n\n    /**\n     * Returns the last element of the list which matches the predicate, or `undefined` if no\n     * element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n     *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n     */\n    var findLast = _curry2(_dispatchable('findLast', _xfindLast, function findLast(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            if (fn(list[idx])) {\n                return list[idx];\n            }\n            idx -= 1;\n        }\n    }));\n\n    /**\n     * Returns the index of the last element of the list which matches the predicate, or\n     * `-1` if no element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n     *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n    var findLastIndex = _curry2(_dispatchable('findLastIndex', _xfindLastIndex, function findLastIndex(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            if (fn(list[idx])) {\n                return idx;\n            }\n            idx -= 1;\n        }\n        return -1;\n    }));\n\n    /**\n     * Returns a new list by pulling every item out of it (and all its sub-arrays) and putting\n     * them in a new array, depth-first.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b]\n     * @param {Array} list The array to consider.\n     * @return {Array} The flattened list.\n     * @see R.unnest\n     * @example\n     *\n     *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n     *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n     */\n    var flatten = _curry1(_makeFlat(true));\n\n    /**\n     * Returns a new function much like the supplied one, except that the first two arguments'\n     * order is reversed.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)\n     * @param {Function} fn The function to invoke with its first two parameters reversed.\n     * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n     * @example\n     *\n     *      var mergeThree = function(a, b, c) {\n     *        return ([]).concat(a, b, c);\n     *      };\n     *\n     *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n     */\n    var flip = _curry1(function flip(fn) {\n        return curry(function (a, b) {\n            var args = _slice(arguments);\n            args[0] = b;\n            args[1] = a;\n            return fn.apply(this, args);\n        });\n    });\n\n    /**\n     * Iterate over an input `list`, calling a provided function `fn` for each element in the\n     * list.\n     *\n     * `fn` receives one argument: *(value)*.\n     *\n     * Note: `R.forEach` does not skip deleted or unassigned indices (sparse arrays), unlike\n     * the native `Array.prototype.forEach` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n     *\n     * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns the original\n     * array. In some libraries this function is named `each`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> *) -> [a] -> [a]\n     * @param {Function} fn The function to invoke. Receives one argument, `value`.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} The original list.\n     * @example\n     *\n     *      var printXPlusFive = function(x) { console.log(x + 5); };\n     *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n     *      //-> 6\n     *      //-> 7\n     *      //-> 8\n     */\n    var forEach = _curry2(_checkForMethod('forEach', function forEach(fn, list) {\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            fn(list[idx]);\n            idx += 1;\n        }\n        return list;\n    }));\n\n    /**\n     * Returns a list of function names of object's own functions\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {*} -> [String]\n     * @param {Object} obj The objects with functions in it\n     * @return {Array} A list of the object's own properties that map to functions.\n     * @example\n     *\n     *      R.functions(R); // returns list of ramda's own function names\n     *\n     *      var F = function() { this.x = function(){}; this.y = 1; }\n     *      F.prototype.z = function() {};\n     *      F.prototype.a = 100;\n     *      R.functions(new F()); //=> [\"x\"]\n     */\n    var functions = _curry1(_functionsWith(keys));\n\n    /**\n     * Returns a list of function names of object's own and prototype functions\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {*} -> [String]\n     * @param {Object} obj The objects with functions in it\n     * @return {Array} A list of the object's own properties and prototype\n     *         properties that map to functions.\n     * @example\n     *\n     *      R.functionsIn(R); // returns list of ramda's own and prototype function names\n     *\n     *      var F = function() { this.x = function(){}; this.y = 1; }\n     *      F.prototype.z = function() {};\n     *      F.prototype.a = 100;\n     *      R.functionsIn(new F()); //=> [\"x\", \"z\"]\n     */\n    var functionsIn = _curry1(_functionsWith(keysIn));\n\n    /**\n     * Splits a list into sub-lists stored in an object, based on the result of calling a String-returning function\n     * on each element, and grouping the results according to values returned.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> String) -> [a] -> {String: [a]}\n     * @param {Function} fn Function :: a -> String\n     * @param {Array} list The array to group\n     * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n     *         that produced that key when passed to `fn`.\n     * @example\n     *\n     *      var byGrade = R.groupBy(function(student) {\n     *        var score = student.score;\n     *        return score < 65 ? 'F' :\n     *               score < 70 ? 'D' :\n     *               score < 80 ? 'C' :\n     *               score < 90 ? 'B' : 'A';\n     *      });\n     *      var students = [{name: 'Abby', score: 84},\n     *                      {name: 'Eddy', score: 58},\n     *                      // ...\n     *                      {name: 'Jack', score: 69}];\n     *      byGrade(students);\n     *      // {\n     *      //   'A': [{name: 'Dianne', score: 99}],\n     *      //   'B': [{name: 'Abby', score: 84}]\n     *      //   // ...,\n     *      //   'F': [{name: 'Eddy', score: 58}]\n     *      // }\n     */\n    var groupBy = _curry2(_dispatchable('groupBy', _xgroupBy, function groupBy(fn, list) {\n        return _reduce(function (acc, elt) {\n            var key = fn(elt);\n            acc[key] = append(elt, acc[key] || (acc[key] = []));\n            return acc;\n        }, {}, list);\n    }));\n\n    /**\n     * Returns the first element of the given list or string. In some libraries\n     * this function is named `first`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.tail, R.init, R.last\n     * @sig [a] -> a | Undefined\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n     *      R.head([]); //=> undefined\n     *\n     *      R.head('abc'); //=> 'a'\n     *      R.head(''); //=> ''\n     */\n    var head = nth(0);\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those\n     * elements common to both lists.  Duplication is determined according\n     * to the value returned by applying the supplied predicate to two list\n     * elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a,a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate function that determines whether\n     *        the two supplied elements are equal.\n     * @param {Array} list1 One list of items to compare\n     * @param {Array} list2 A second list of items to compare\n     * @see R.intersection\n     * @return {Array} A new list containing those elements common to both lists.\n     * @example\n     *\n     *      var buffaloSpringfield = [\n     *        {id: 824, name: 'Richie Furay'},\n     *        {id: 956, name: 'Dewey Martin'},\n     *        {id: 313, name: 'Bruce Palmer'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *      var csny = [\n     *        {id: 204, name: 'David Crosby'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 539, name: 'Graham Nash'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *\n     *      var sameId = function(o1, o2) {return o1.id === o2.id;};\n     *\n     *      R.intersectionWith(sameId, buffaloSpringfield, csny);\n     *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n     */\n    var intersectionWith = _curry3(function intersectionWith(pred, list1, list2) {\n        var results = [], idx = 0;\n        while (idx < list1.length) {\n            if (_containsWith(pred, list1[idx], list2)) {\n                results[results.length] = list1[idx];\n            }\n            idx += 1;\n        }\n        return uniqWith(pred, results);\n    });\n\n    /**\n     * Creates a new list with the separator interposed between elements.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} separator The element to add to the list.\n     * @param {Array} list The list to be interposed.\n     * @return {Array} The new list.\n     * @example\n     *\n     *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n     */\n    var intersperse = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {\n        var out = [];\n        var idx = 0;\n        var length = list.length;\n        while (idx < length) {\n            if (idx === length - 1) {\n                out.push(list[idx]);\n            } else {\n                out.push(list[idx], separator);\n            }\n            idx += 1;\n        }\n        return out;\n    }));\n\n    /**\n     * Transforms the items of the list with the transducer and appends the transformed items to\n     * the accumulator using an appropriate iterator function based on the accumulator type.\n     *\n     * The accumulator can be an array, string, object or a transformer. Iterated items will\n     * be appended to arrays and concatenated to strings. Objects will be merged directly or 2-item\n     * arrays will be merged as key, value pairs.\n     *\n     * The accumulator can also be a transformer object that provides a 2-arity reducing iterator\n     * function, step, 0-arity initial value function, init, and 1-arity result extraction function\n     * result. The step function is used as the iterator function in reduce. The result function is\n     * used to convert the final accumulator into the return type and in most cases is R.identity.\n     * The init function is used to provide the initial accumulator.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> (b -> b) -> [c] -> a\n     * @param {*} acc The initial accumulator value.\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.into([], transducer, numbers); //=> [2, 3]\n     *\n     *      var intoArray = R.into([]);\n     *      intoArray(transducer, numbers); //=> [2, 3]\n     */\n    var into = _curry3(function into(acc, xf, list) {\n        return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), acc, list);\n    });\n\n    /**\n     * Same as R.invertObj, however this accounts for objects\n     * with duplicate values by putting the values into an\n     * array.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {s: x} -> {x: [ s, ... ]}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object with keys\n     * in an array.\n     * @example\n     *\n     *      var raceResultsByFirstName = {\n     *        first: 'alice',\n     *        second: 'jake',\n     *        third: 'alice',\n     *      };\n     *      R.invert(raceResultsByFirstName);\n     *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n     */\n    var invert = _curry1(function invert(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var idx = 0;\n        var out = {};\n        while (idx < len) {\n            var key = props[idx];\n            var val = obj[key];\n            var list = _has(val, out) ? out[val] : out[val] = [];\n            list[list.length] = key;\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new object with the keys of the given object\n     * as values, and the values of the given object as keys.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {s: x} -> {x: s}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object\n     * @example\n     *\n     *      var raceResults = {\n     *        first: 'alice',\n     *        second: 'jake'\n     *      };\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': 'first', 'jake':'second' }\n     *\n     *      // Alternatively:\n     *      var raceResults = ['alice', 'jake'];\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': '0', 'jake':'1' }\n     */\n    var invertObj = _curry1(function invertObj(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var idx = 0;\n        var out = {};\n        while (idx < len) {\n            var key = props[idx];\n            out[obj[key]] = key;\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns the last element of the given list or string.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.init, R.head, R.tail\n     * @sig [a] -> a | Undefined\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n     *      R.last([]); //=> undefined\n     *\n     *      R.last('abc'); //=> 'c'\n     *      R.last(''); //=> ''\n     */\n    var last = nth(-1);\n\n    /**\n     * Returns the position of the last occurrence of an item in\n     * an array, or -1 if the item is not included in the array.\n     * `R.equals` is used to determine equality.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} xs The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     * @see R.indexOf\n     * @example\n     *\n     *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n     *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n     */\n    var lastIndexOf = _curry2(function lastIndexOf(target, xs) {\n        if (_hasMethod('lastIndexOf', xs)) {\n            return xs.lastIndexOf(target);\n        } else {\n            var idx = xs.length - 1;\n            while (idx >= 0) {\n                if (equals(xs[idx], target)) {\n                    return idx;\n                }\n                idx -= 1;\n            }\n            return -1;\n        }\n    });\n\n    /**\n     * Returns a new list, constructed by applying the supplied function to every element of the\n     * supplied list.\n     *\n     * Note: `R.map` does not skip deleted or unassigned indices (sparse arrays), unlike the\n     * native `Array.prototype.map` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map#Description\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> b) -> [a] -> [b]\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {Array} list The list to be iterated over.\n     * @return {Array} The new list.\n     * @example\n     *\n     *      var double = function(x) {\n     *        return x * 2;\n     *      };\n     *\n     *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n     */\n    var map = _curry2(_dispatchable('map', _xmap, _map));\n\n    /**\n     * Map, but for objects. Creates an object with the same keys as `obj` and values\n     * generated by running each property of `obj` through `fn`. `fn` is passed one argument:\n     * *(value)*.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig (v -> v) -> {k: v} -> {k: v}\n     * @param {Function} fn A function called for each property in `obj`. Its return value will\n     * become a new property on the return object.\n     * @param {Object} obj The object to iterate over.\n     * @return {Object} A new object with the same keys as `obj` and values that are the result\n     *         of running each property through `fn`.\n     * @example\n     *\n     *      var values = { x: 1, y: 2, z: 3 };\n     *      var double = function(num) {\n     *        return num * 2;\n     *      };\n     *\n     *      R.mapObj(double, values); //=> { x: 2, y: 4, z: 6 }\n     */\n    var mapObj = _curry2(function mapObj(fn, obj) {\n        return _reduce(function (acc, key) {\n            acc[key] = fn(obj[key]);\n            return acc;\n        }, {}, keys(obj));\n    });\n\n    /**\n     * Like `mapObj`, but but passes additional arguments to the predicate function. The\n     * predicate function is passed three arguments: *(value, key, obj)*.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig (v, k, {k: v} -> v) -> {k: v} -> {k: v}\n     * @param {Function} fn A function called for each property in `obj`. Its return value will\n     *        become a new property on the return object.\n     * @param {Object} obj The object to iterate over.\n     * @return {Object} A new object with the same keys as `obj` and values that are the result\n     *         of running each property through `fn`.\n     * @example\n     *\n     *      var values = { x: 1, y: 2, z: 3 };\n     *      var prependKeyAndDouble = function(num, key, obj) {\n     *        return key + (num * 2);\n     *      };\n     *\n     *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n     */\n    var mapObjIndexed = _curry2(function mapObjIndexed(fn, obj) {\n        return _reduce(function (acc, key) {\n            acc[key] = fn(obj[key], key, obj);\n            return acc;\n        }, {}, keys(obj));\n    });\n\n    /**\n     * Returns `true` if no elements of the list match the predicate,\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n     * @see R.all, R.any\n     * @example\n     *\n     *      R.none(R.isNaN, [1, 2, 3]); //=> true\n     *      R.none(R.isNaN, [1, 2, 3, NaN]); //=> false\n     */\n    var none = _curry2(_complement(_dispatchable('any', _xany, any)));\n\n    /**\n     * A function that returns the first truthy of two arguments otherwise the\n     * last argument. Note that this is NOT short-circuited, meaning that if\n     * expressions are passed they are both evaluated.\n     *\n     * Dispatches to the `or` method of the first argument if applicable.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {*} a any value\n     * @param {*} b any other value\n     * @return {*} the first truthy argument, otherwise the last argument.\n     * @see R.either\n     * @example\n     *\n     *      R.or(false, true); //=> true\n     *      R.or(0, []); //=> []\n     *      R.or(null, ''); => ''\n     */\n    var or = _curry2(function or(a, b) {\n        return _hasMethod('or', a) ? a.or(b) : a || b;\n    });\n\n    /**\n     * Accepts as its arguments a function and any number of values and returns a function that,\n     * when invoked, calls the original function with all of the values prepended to the\n     * original function's arguments list. In some libraries this function is named `applyLeft`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> b -> ... -> i -> j -> ... -> m -> n) -> a -> b-> ... -> i -> (j -> ... -> m -> n)\n     * @param {Function} fn The function to invoke.\n     * @param {...*} [args] Arguments to prepend to `fn` when the returned function is invoked.\n     * @return {Function} A new function wrapping `fn`. When invoked, it will call `fn`\n     *         with `args` prepended to `fn`'s arguments list.\n     * @example\n     *\n     *      var multiply = function(a, b) { return a * b; };\n     *      var double = R.partial(multiply, 2);\n     *      double(2); //=> 4\n     *\n     *      var greet = function(salutation, title, firstName, lastName) {\n     *        return salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *      };\n     *      var sayHello = R.partial(greet, 'Hello');\n     *      var sayHelloToMs = R.partial(sayHello, 'Ms.');\n     *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n     */\n    var partial = curry(_createPartialApplicator(_concat));\n\n    /**\n     * Accepts as its arguments a function and any number of values and returns a function that,\n     * when invoked, calls the original function with all of the values appended to the original\n     * function's arguments list.\n     *\n     * Note that `partialRight` is the opposite of `partial`: `partialRight` fills `fn`'s arguments\n     * from the right to the left.  In some libraries this function is named `applyRight`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> b-> ... -> i -> j -> ... -> m -> n) -> j -> ... -> m -> n -> (a -> b-> ... -> i)\n     * @param {Function} fn The function to invoke.\n     * @param {...*} [args] Arguments to append to `fn` when the returned function is invoked.\n     * @return {Function} A new function wrapping `fn`. When invoked, it will call `fn` with\n     *         `args` appended to `fn`'s arguments list.\n     * @example\n     *\n     *      var greet = function(salutation, title, firstName, lastName) {\n     *        return salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *      };\n     *      var greetMsJaneJones = R.partialRight(greet, 'Ms.', 'Jane', 'Jones');\n     *\n     *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n     */\n    var partialRight = curry(_createPartialApplicator(flip(_concat)));\n\n    /**\n     * Takes a predicate and a list and returns the pair of lists of\n     * elements which do and do not satisfy the predicate, respectively.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [[a],[a]]\n     * @param {Function} pred A predicate to determine which array the element belongs to.\n     * @param {Array} list The array to partition.\n     * @return {Array} A nested array, containing first an array of elements that satisfied the predicate,\n     *         and second an array of elements that did not satisfy.\n     * @example\n     *\n     *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n     *      //=> [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n     */\n    var partition = _curry2(function partition(pred, list) {\n        return _reduce(function (acc, elt) {\n            var xs = acc[pred(elt) ? 0 : 1];\n            xs[xs.length] = elt;\n            return acc;\n        }, [\n            [],\n            []\n        ], list);\n    });\n\n    /**\n     * Determines whether a nested path on an object has a specific value,\n     * in `R.equals` terms. Most likely used to filter a list.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [String] -> * -> {String: *} -> Boolean\n     * @param {Array} path The path of the nested property to use\n     * @param {*} val The value to compare the nested property with\n     * @param {Object} obj The object to check the nested property in\n     * @return {Boolean} `true` if the value equals the nested object property,\n     *         `false` otherwise.\n     * @example\n     *\n     *      var user1 = { address: { zipCode: 90210 } };\n     *      var user2 = { address: { zipCode: 55555 } };\n     *      var user3 = { name: 'Bob' };\n     *      var users = [ user1, user2, user3 ];\n     *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n     *      R.filter(isFamous, users); //=> [ user1 ]\n     */\n    var pathEq = _curry3(function pathEq(_path, val, obj) {\n        return equals(path(_path, obj), val);\n    });\n\n    /**\n     * Returns a new list by plucking the same named property off all objects in the list supplied.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig k -> [{k: v}] -> [v]\n     * @param {Number|String} key The key name to pluck off of each object.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of values for the given key.\n     * @example\n     *\n     *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n     *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n     */\n    var pluck = _curry2(function pluck(p, list) {\n        return map(prop(p), list);\n    });\n\n    /**\n     * Returns `true` if the specified object property is equal, in `R.equals`\n     * terms, to the given value; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig String -> a -> Object -> Boolean\n     * @param {String} name\n     * @param {*} val\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.equals, R.propSatisfies\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n     *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n     *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n     *      var kids = [abby, fred, rusty, alois];\n     *      var hasBrownHair = R.propEq('hair', 'brown');\n     *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n     */\n    var propEq = _curry3(function propEq(name, val, obj) {\n        return propSatisfies(equals(val), name, obj);\n    });\n\n    /**\n     * Returns `true` if the specified object property is of the given type;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig Type -> String -> Object -> Boolean\n     * @param {Function} type\n     * @param {String} name\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.is\n     * @see R.propSatisfies\n     * @example\n     *\n     *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n     *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n     *      R.propIs(Number, 'x', {});            //=> false\n     */\n    var propIs = _curry3(function propIs(type, name, obj) {\n        return propSatisfies(is(type), name, obj);\n    });\n\n    /**\n     * Returns a single item by iterating through the list, successively calling the iterator\n     * function and passing it an accumulator value and the current value from the array, and\n     * then passing the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*.  It may use `R.reduced` to\n     * shortcut the iteration.\n     *\n     * Note: `R.reduce` does not skip deleted or unassigned indices (sparse arrays), unlike\n     * the native `Array.prototype.reduce` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n     * @see R.reduced\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3];\n     *      var add = function(a, b) {\n     *        return a + b;\n     *      };\n     *\n     *      R.reduce(add, 10, numbers); //=> 16\n     */\n    var reduce = _curry3(_reduce);\n\n    /**\n     * Similar to `filter`, except that it keeps only values for which the given predicate\n     * function returns falsy. The predicate function is passed one argument: *(value)*.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} The new filtered array.\n     * @see R.filter\n     * @example\n     *\n     *      var isOdd = function(n) {\n     *        return n % 2 === 1;\n     *      };\n     *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n     */\n    var reject = _curry2(function reject(fn, list) {\n        return filter(_complement(fn), list);\n    });\n\n    /**\n     * Returns a fixed list of size `n` containing a specified identical value.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> n -> [a]\n     * @param {*} value The value to repeat.\n     * @param {Number} n The desired size of the output list.\n     * @return {Array} A new array containing `n` `value`s.\n     * @example\n     *\n     *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n     *\n     *      var obj = {};\n     *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n     *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n     */\n    var repeat = _curry2(function repeat(value, n) {\n        return times(always(value), n);\n    });\n\n    /**\n     * Returns the elements of the given list or string (or object with a `slice`\n     * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @sig Number -> Number -> String -> String\n     * @param {Number} fromIndex The start index (inclusive).\n     * @param {Number} toIndex The end index (exclusive).\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n     *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n     *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n     *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n     *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n     */\n    var slice = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n        return Array.prototype.slice.call(list, fromIndex, toIndex);\n    }));\n\n    /**\n     * Splits a collection into slices of the specified length.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @sig Number -> String -> [String]\n     * @param {Number} n\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n     *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n     */\n    var splitEvery = _curry2(function splitEvery(n, list) {\n        if (n <= 0) {\n            throw new Error('First argument to splitEvery must be a positive integer');\n        }\n        var result = [];\n        var idx = 0;\n        while (idx < list.length) {\n            result.push(slice(idx, idx += n, list));\n        }\n        return result;\n    });\n\n    /**\n     * Adds together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The sum of all the numbers in the list.\n     * @see R.reduce\n     * @example\n     *\n     *      R.sum([2,4,6,8,100,1]); //=> 121\n     */\n    var sum = reduce(add, 0);\n\n    /**\n     * Returns all but the first element of the given list or string (or object\n     * with a `tail` method).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.head, R.init, R.last\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.tail([1, 2, 3]);  //=> [2, 3]\n     *      R.tail([1, 2]);     //=> [2]\n     *      R.tail([1]);        //=> []\n     *      R.tail([]);         //=> []\n     *\n     *      R.tail('abc');  //=> 'bc'\n     *      R.tail('ab');   //=> 'b'\n     *      R.tail('a');    //=> ''\n     *      R.tail('');     //=> ''\n     */\n    var tail = _checkForMethod('tail', slice(1, Infinity));\n\n    /**\n     * Returns the first `n` elements of the given list, string, or\n     * transducer/transformer (or object with a `take` method).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {*} list\n     * @return {*}\n     * @see R.drop\n     * @example\n     *\n     *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n     *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n     *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.take(3, 'ramda');               //=> 'ram'\n     *\n     *      var personnel = [\n     *        'Dave Brubeck',\n     *        'Paul Desmond',\n     *        'Eugene Wright',\n     *        'Joe Morello',\n     *        'Gerry Mulligan',\n     *        'Bob Bates',\n     *        'Joe Dodge',\n     *        'Ron Crotty'\n     *      ];\n     *\n     *      var takeFive = R.take(5);\n     *      takeFive(personnel);\n     *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n     */\n    var take = _curry2(_dispatchable('take', _xtake, function take(n, xs) {\n        return slice(0, n < 0 ? Infinity : n, xs);\n    }));\n\n    /**\n     * Returns a new list containing the first `n` elements of a given list, passing each value\n     * to the supplied predicate function, and terminating when the predicate function returns\n     * `false`. Excludes the element that caused the predicate function to fail. The predicate\n     * function is passed one argument: *(value)*.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.dropWhile\n     * @example\n     *\n     *      var isNotFour = function(x) {\n     *        return !(x === 4);\n     *      };\n     *\n     *      R.takeWhile(isNotFour, [1, 2, 3, 4]); //=> [1, 2, 3]\n     */\n    var takeWhile = _curry2(_dispatchable('takeWhile', _xtakeWhile, function takeWhile(fn, list) {\n        var idx = 0, len = list.length;\n        while (idx < len && fn(list[idx])) {\n            idx += 1;\n        }\n        return _slice(list, 0, idx);\n    }));\n\n    /**\n     * Initializes a transducer using supplied iterator function. Returns a single item by\n     * iterating through the list, successively calling the transformed iterator function and\n     * passing it an accumulator value and the current value from the array, and then passing\n     * the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*. It will be wrapped as a\n     * transformer to initialize the transducer. A transformer can be passed directly in place\n     * of an iterator function.  In both cases, iteration may be stopped early with the\n     * `R.reduced` function.\n     *\n     * A transducer is a function that accepts a transformer and returns a transformer and can\n     * be composed directly.\n     *\n     * A transformer is an an object that provides a 2-arity reducing iterator function, step,\n     * 0-arity initial value function, init, and 1-arity result extraction function, result.\n     * The step function is used as the iterator function in reduce. The result function is used\n     * to convert the final accumulator into the return type and in most cases is R.identity.\n     * The init function can be used to provide an initial accumulator, but is ignored by transduce.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.reduce, R.reduced, R.into\n     * @sig (c -> c) -> (a,b -> a) -> a -> [b] -> a\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array. Wrapped as transformer, if necessary, and used to\n     *        initialize the transducer\n     * @param {*} acc The initial accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n     */\n    var transduce = curryN(4, function transduce(xf, fn, acc, list) {\n        return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n    });\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the elements of each list.  Duplication is\n     * determined according to the value returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a,a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @see R.union\n     * @example\n     *\n     *      function cmp(x, y) { return x.a === y.a; }\n     *      var l1 = [{a: 1}, {a: 2}];\n     *      var l2 = [{a: 1}, {a: 4}];\n     *      R.unionWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n     */\n    var unionWith = _curry3(function unionWith(pred, list1, list2) {\n        return uniqWith(pred, _concat(list1, list2));\n    });\n\n    /**\n     * Returns a new list containing only one copy of each element in the original list.\n     * `R.equals` is used to determine equality.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n     *      R.uniq([1, '1']);     //=> [1, '1']\n     *      R.uniq([[42], [42]]); //=> [[42]]\n     */\n    var uniq = uniqWith(equals);\n\n    /**\n     * Returns a new list by pulling every item at the first level of nesting out, and putting\n     * them in a new array.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b]\n     * @param {Array} list The array to consider.\n     * @return {Array} The flattened list.\n     * @see R.flatten\n     * @example\n     *\n     *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n     *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n     */\n    var unnest = _curry1(_makeFlat(false));\n\n    /**\n     * Accepts a function `fn` and any number of transformer functions and returns a new\n     * function. When the new function is invoked, it calls the function `fn` with parameters\n     * consisting of the result of calling each supplied handler on successive arguments to the\n     * new function.\n     *\n     * If more arguments are passed to the returned function than transformer functions, those\n     * arguments are passed directly to `fn` as additional parameters. If you expect additional\n     * arguments that don't need to be transformed, although you can ignore them, it's best to\n     * pass an identity function so that the new function reports the correct arity.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (x1 -> x2 -> ... -> z) -> ((a -> x1), (b -> x2), ...) -> (a -> b -> ... -> z)\n     * @param {Function} fn The function to wrap.\n     * @param {...Function} transformers A variable number of transformer functions\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var double = function(y) { return y * 2; };\n     *      var square = function(x) { return x * x; };\n     *      var add = function(a, b) { return a + b; };\n     *      // Adds any number of arguments together\n     *      var addAll = function() {\n     *        return R.reduce(add, 0, arguments);\n     *      };\n     *\n     *      // Basic example\n     *      var addDoubleAndSquare = R.useWith(addAll, double, square);\n     *\n     *      //≅ addAll(double(10), square(5));\n     *      addDoubleAndSquare(10, 5); //=> 45\n     *\n     *      // Example of passing more arguments than transformers\n     *      //≅ addAll(double(10), square(5), 100);\n     *      addDoubleAndSquare(10, 5, 100); //=> 145\n     *\n     *      // If there are extra _expected_ arguments that don't need to be transformed, although\n     *      // you can ignore them, it might be best to pass in the identity function so that the new\n     *      // function correctly reports arity.\n     *      var addDoubleAndSquareWithExtraParams = R.useWith(addAll, double, square, R.identity);\n     *      // addDoubleAndSquareWithExtraParams.length //=> 3\n     *      //≅ addAll(double(10), square(5), R.identity(100));\n     *      addDoubleAndSquare(10, 5, 100); //=> 145\n     */\n    /*, transformers */\n    var useWith = curry(function useWith(fn) {\n        var transformers = _slice(arguments, 1);\n        var tlen = transformers.length;\n        return curry(_arity(tlen, function () {\n            var args = [], idx = 0;\n            while (idx < tlen) {\n                args[idx] = transformers[idx](arguments[idx]);\n                idx += 1;\n            }\n            return fn.apply(this, args.concat(_slice(arguments, tlen)));\n        }));\n    });\n\n    /**\n     * Takes a spec object and a test object; returns true if the test satisfies\n     * the spec, false otherwise. An object satisfies the spec if, for each of the\n     * spec's own properties, accessing that property of the object gives the same\n     * value (in `R.equals` terms) as accessing that property of the spec.\n     *\n     * `whereEq` is a specialization of [`where`](#where).\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {String: *} -> {String: *} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @see R.where\n     * @example\n     *\n     *      // pred :: Object -> Boolean\n     *      var pred = R.whereEq({a: 1, b: 2});\n     *\n     *      pred({a: 1});              //=> false\n     *      pred({a: 1, b: 2});        //=> true\n     *      pred({a: 1, b: 2, c: 3});  //=> true\n     *      pred({a: 1, b: 1});        //=> false\n     */\n    var whereEq = _curry2(function whereEq(spec, testObj) {\n        return where(mapObj(equals, spec), testObj);\n    });\n\n    var _flatCat = function () {\n        var preservingReduced = function (xf) {\n            return {\n                '@@transducer/init': _xfBase.init,\n                '@@transducer/result': function (result) {\n                    return xf['@@transducer/result'](result);\n                },\n                '@@transducer/step': function (result, input) {\n                    var ret = xf['@@transducer/step'](result, input);\n                    return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n                }\n            };\n        };\n        return function _xcat(xf) {\n            var rxf = preservingReduced(xf);\n            return {\n                '@@transducer/init': _xfBase.init,\n                '@@transducer/result': function (result) {\n                    return rxf['@@transducer/result'](result);\n                },\n                '@@transducer/step': function (result, input) {\n                    return !isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n                }\n            };\n        };\n    }();\n\n    var _indexOf = function _indexOf(list, item, from) {\n        var idx = from;\n        while (idx < list.length) {\n            if (equals(list[idx], item)) {\n                return idx;\n            }\n            idx += 1;\n        }\n        return -1;\n    };\n\n    /**\n     * Create a predicate wrapper which will call a pick function (all/any) for each predicate\n     *\n     * @private\n     * @see R.all\n     * @see R.any\n     */\n    // Call function immediately if given arguments\n    // Return a function which will call the predicates with the provided arguments\n    var _predicateWrap = function _predicateWrap(predPicker) {\n        return function (preds) {\n            var predIterator = function () {\n                var args = arguments;\n                return predPicker(function (predicate) {\n                    return predicate.apply(null, args);\n                }, preds);\n            };\n            return arguments.length > 1 ? // Call function immediately if given arguments\n            predIterator.apply(null, _slice(arguments, 1)) : // Return a function which will call the predicates with the provided arguments\n            _arity(Math.max.apply(Math, pluck('length', preds)), predIterator);\n        };\n    };\n\n    var _xchain = _curry2(function _xchain(f, xf) {\n        return map(f, _flatCat(xf));\n    });\n\n    /**\n     * Given a list of predicates, returns a new predicate that will be true exactly when all of them are.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} list An array of predicate functions\n     * @param {*} optional Any arguments to pass into the predicates\n     * @return {Function} a function that applies its arguments to each of\n     *         the predicates, returning `true` if all are satisfied.\n     * @see R.anyPass\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0};\n     *      var f = R.allPass([gt10, even]);\n     *      f(11); //=> false\n     *      f(12); //=> true\n     */\n    var allPass = _curry1(_predicateWrap(all));\n\n    /**\n     * Given a list of predicates returns a new predicate that will be true exactly when any one of them is.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} list An array of predicate functions\n     * @param {*} optional Any arguments to pass into the predicates\n     * @return {Function} A function that applies its arguments to each of the predicates, returning\n     *         `true` if all are satisfied.\n     * @see R.allPass\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0};\n     *      var f = R.anyPass([gt10, even]);\n     *      f(11); //=> true\n     *      f(8); //=> true\n     *      f(9); //=> false\n     */\n    var anyPass = _curry1(_predicateWrap(any));\n\n    /**\n     * ap applies a list of functions to a list of values.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig [f] -> [a] -> [f a]\n     * @param {Array} fns An array of functions\n     * @param {Array} vs An array of values\n     * @return {Array} An array of results of applying each of `fns` to all of `vs` in turn.\n     * @example\n     *\n     *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n     */\n    var ap = _curry2(function ap(fns, vs) {\n        return _hasMethod('ap', fns) ? fns.ap(vs) : _reduce(function (acc, fn) {\n            return _concat(acc, map(fn, vs));\n        }, [], fns);\n    });\n\n    /**\n     * Returns the result of calling its first argument with the remaining\n     * arguments. This is occasionally useful as a converging function for\n     * `R.converge`: the left branch can produce a function while the right\n     * branch produces a value to be passed to that function as an argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (*... -> a),*... -> a\n     * @param {Function} fn The function to apply to the remaining arguments.\n     * @param {...*} args Any number of positional arguments.\n     * @return {*}\n     * @see R.apply\n     * @example\n     *\n     *      var indentN = R.pipe(R.times(R.always(' ')),\n     *                           R.join(''),\n     *                           R.replace(/^(?!$)/gm));\n     *\n     *      var format = R.converge(R.call,\n     *                              R.pipe(R.prop('indent'), indentN),\n     *                              R.prop('value'));\n     *\n     *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n     */\n    var call = curry(function call(fn) {\n        return fn.apply(this, _slice(arguments, 1));\n    });\n\n    /**\n     * `chain` maps a function over a list and concatenates the results.\n     * This implementation is compatible with the\n     * Fantasy-land Chain spec, and will work with types that implement that spec.\n     * `chain` is also known as `flatMap` in some libraries\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> [b]) -> [a] -> [b]\n     * @param {Function} fn\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      var duplicate = function(n) {\n     *        return [n, n];\n     *      };\n     *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n     */\n    var chain = _curry2(_dispatchable('chain', _xchain, function chain(fn, list) {\n        return unnest(map(fn, list));\n    }));\n\n    /**\n     * Turns a list of Functors into a Functor of a list, applying\n     * a mapping function to the elements of the list along the way.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.commute\n     * @sig Functor f => (f a -> f b) -> (x -> f x) -> [f a] -> f [b]\n     * @param {Function} fn The transformation function\n     * @param {Function} of A function that returns the data type to return\n     * @param {Array} list An array of functors of the same type\n     * @return {*}\n     * @example\n     *\n     *      R.commuteMap(R.map(R.add(10)), R.of, [[1], [2, 3]]);   //=> [[11, 12], [11, 13]]\n     *      R.commuteMap(R.map(R.add(10)), R.of, [[1, 2], [3]]);   //=> [[11, 13], [12, 13]]\n     *      R.commuteMap(R.map(R.add(10)), R.of, [[1], [2], [3]]); //=> [[11, 12, 13]]\n     *      R.commuteMap(R.map(R.add(10)), Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([11, 12, 13])\n     *      R.commuteMap(R.map(R.add(10)), Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n     */\n    var commuteMap = _curry3(function commuteMap(fn, of, list) {\n        function consF(acc, ftor) {\n            return ap(map(append, fn(ftor)), acc);\n        }\n        return _reduce(consF, of([]), list);\n    });\n\n    /**\n     * Wraps a constructor function inside a curried function that can be called with the same\n     * arguments and returns the same type. The arity of the function returned is specified\n     * to allow using variadic constructor functions.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (* -> {*}) -> (* -> {*})\n     * @param {Number} n The arity of the constructor function.\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Variadic constructor function\n     *      var Widget = function() {\n     *        this.children = Array.prototype.slice.call(arguments);\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = [\n     *        // ...\n     *      ];\n     *      R.map(R.constructN(1, Widget), allConfigs); // a list of Widgets\n     */\n    var constructN = _curry2(function constructN(n, Fn) {\n        if (n > 10) {\n            throw new Error('Constructor with greater than ten arguments');\n        }\n        if (n === 0) {\n            return function () {\n                return new Fn();\n            };\n        }\n        return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n            switch (arguments.length) {\n            case 1:\n                return new Fn($0);\n            case 2:\n                return new Fn($0, $1);\n            case 3:\n                return new Fn($0, $1, $2);\n            case 4:\n                return new Fn($0, $1, $2, $3);\n            case 5:\n                return new Fn($0, $1, $2, $3, $4);\n            case 6:\n                return new Fn($0, $1, $2, $3, $4, $5);\n            case 7:\n                return new Fn($0, $1, $2, $3, $4, $5, $6);\n            case 8:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n            case 9:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n            case 10:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n            }\n        }));\n    });\n\n    /**\n     * Accepts at least three functions and returns a new function. When invoked, this new\n     * function will invoke the first function, `after`, passing as its arguments the\n     * results of invoking the subsequent functions with whatever arguments are passed to\n     * the new function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (x1 -> x2 -> ... -> z) -> ((a -> b -> ... -> x1), (a -> b -> ... -> x2), ...) -> (a -> b -> ... -> z)\n     * @param {Function} after A function. `after` will be invoked with the return values of\n     *        `fn1` and `fn2` as its arguments.\n     * @param {...Function} functions A variable number of functions.\n     * @return {Function} A new function.\n     * @example\n     *\n     *      var add = function(a, b) { return a + b; };\n     *      var multiply = function(a, b) { return a * b; };\n     *      var subtract = function(a, b) { return a - b; };\n     *\n     *      //≅ multiply( add(1, 2), subtract(1, 2) );\n     *      R.converge(multiply, add, subtract)(1, 2); //=> -3\n     *\n     *      var add3 = function(a, b, c) { return a + b + c; };\n     *      R.converge(add3, multiply, add, subtract)(1, 2); //=> 4\n     */\n    var converge = curryN(3, function converge(after) {\n        var fns = _slice(arguments, 1);\n        return curryN(Math.max.apply(Math, pluck('length', fns)), function () {\n            var args = arguments;\n            var context = this;\n            return after.apply(context, _map(function (fn) {\n                return fn.apply(context, args);\n            }, fns));\n        });\n    });\n\n    /**\n     * Returns all but the first `n` elements of the given list, string, or\n     * transducer/transformer (or object with a `drop` method).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.transduce\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {*} list\n     * @return {*}\n     * @see R.take\n     * @example\n     *\n     *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n     *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n     *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n     *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n     *      R.drop(3, 'ramda');               //=> 'da'\n     */\n    var drop = _curry2(_dispatchable('drop', _xdrop, function drop(n, xs) {\n        return slice(Math.max(0, n), Infinity, xs);\n    }));\n\n    /**\n     * Returns a list containing all but the last `n` elements of the given `list`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n The number of elements of `xs` to skip.\n     * @param {Array} xs The collection to consider.\n     * @return {Array}\n     * @see R.takeLast\n     * @example\n     *\n     *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n     *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n     *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n     *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n     *      R.dropLast(3, 'ramda');               //=> 'ra'\n     */\n    var dropLast = _curry2(function dropLast(n, xs) {\n        return take(n < xs.length ? xs.length - n : 0, xs);\n    });\n\n    /**\n     * Returns a new list without any consecutively repeating elements. Equality is\n     * determined by applying the supplied predicate two consecutive elements.\n     * The first element in a series of equal element is the one being preserved.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} `list` without repeating elements.\n     * @example\n     *\n     *      function lengthEq(x, y) { return Math.abs(x) === Math.abs(y); };\n     *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n     *      R.dropRepeatsWith(lengthEq, l); //=> [1, 3, 4, -5, 3]\n     */\n    var dropRepeatsWith = _curry2(_dispatchable('dropRepeatsWith', _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n        var result = [];\n        var idx = 1;\n        var len = list.length;\n        if (len !== 0) {\n            result[0] = list[0];\n            while (idx < len) {\n                if (!pred(last(result), list[idx])) {\n                    result[result.length] = list[idx];\n                }\n                idx += 1;\n            }\n        }\n        return result;\n    }));\n\n    /**\n     * Reports whether two objects have the same value, in `R.equals` terms,\n     * for the specified property. Useful as a curried predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig k -> {k: v} -> {k: v} -> Boolean\n     * @param {String} prop The name of the property to compare\n     * @param {Object} obj1\n     * @param {Object} obj2\n     * @return {Boolean}\n     *\n     * @example\n     *\n     *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n     *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n     *      R.eqProps('a', o1, o2); //=> false\n     *      R.eqProps('c', o1, o2); //=> true\n     */\n    var eqProps = _curry3(function eqProps(prop, obj1, obj2) {\n        return equals(obj1[prop], obj2[prop]);\n    });\n\n    /**\n     * Returns the position of the first occurrence of an item in an array,\n     * or -1 if the item is not included in the array. `R.equals` is used to\n     * determine equality.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} xs The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     * @see R.lastIndexOf\n     * @example\n     *\n     *      R.indexOf(3, [1,2,3,4]); //=> 2\n     *      R.indexOf(10, [1,2,3,4]); //=> -1\n     */\n    var indexOf = _curry2(function indexOf(target, xs) {\n        return _hasMethod('indexOf', xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n    });\n\n    /**\n     * Returns all but the last element of the given list or string.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.last, R.head, R.tail\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.init([1, 2, 3]);  //=> [1, 2]\n     *      R.init([1, 2]);     //=> [1]\n     *      R.init([1]);        //=> []\n     *      R.init([]);         //=> []\n     *\n     *      R.init('abc');  //=> 'ab'\n     *      R.init('ab');   //=> 'a'\n     *      R.init('a');    //=> ''\n     *      R.init('');     //=> ''\n     */\n    var init = slice(0, -1);\n\n    /**\n     * Returns `true` if all elements are unique, in `R.equals` terms,\n     * otherwise `false`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> Boolean\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if all elements are unique, else `false`.\n     * @example\n     *\n     *      R.isSet(['1', 1]); //=> true\n     *      R.isSet([1, 1]);   //=> false\n     *      R.isSet([[42], [42]]); //=> false\n     */\n    var isSet = _curry1(function isSet(list) {\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            if (_indexOf(list, list[idx], idx + 1) >= 0) {\n                return false;\n            }\n            idx += 1;\n        }\n        return true;\n    });\n\n    /**\n     * Returns a lens for the given getter and setter functions. The getter \"gets\"\n     * the value of the focus; the setter \"sets\" the value of the focus. The setter\n     * should not mutate the data structure.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n     * @param {Function} getter\n     * @param {Function} setter\n     * @return {Lens}\n     * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n     *\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n     */\n    var lens = _curry2(function lens(getter, setter) {\n        return function (f) {\n            return function (s) {\n                return map(function (v) {\n                    return setter(v, s);\n                }, f(getter(s)));\n            };\n        };\n    });\n\n    /**\n     * Returns a lens whose focus is the specified index.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Number -> Lens s a\n     * @param {Number} n\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var headLens = R.lensIndex(0);\n     *\n     *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n     *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n     *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n     */\n    var lensIndex = _curry1(function lensIndex(n) {\n        return lens(nth(n), update(n));\n    });\n\n    /**\n     * Returns a lens whose focus is the specified property.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig String -> Lens s a\n     * @param {String} k\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n     */\n    var lensProp = _curry1(function lensProp(k) {\n        return lens(prop(k), assoc(k));\n    });\n\n    /**\n     * \"lifts\" a function to be the specified arity, so that it may \"map over\" that many\n     * lists (or other Functors).\n     *\n     * @func\n     * @memberOf R\n     * @see R.lift\n     * @category Function\n     * @sig Number -> (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The function `fn` applicable to mappable objects.\n     * @example\n     *\n     *      var madd3 = R.liftN(3, R.curryN(3, function() {\n     *        return R.reduce(R.add, 0, arguments);\n     *      }));\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     */\n    var liftN = _curry2(function liftN(arity, fn) {\n        var lifted = curryN(arity, fn);\n        return curryN(arity, function () {\n            return _reduce(ap, map(lifted, arguments[0]), _slice(arguments, 1));\n        });\n    });\n\n    /**\n     * Returns the mean of the given list of numbers.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list\n     * @return {Number}\n     * @example\n     *\n     *      R.mean([2, 7, 9]); //=> 6\n     *      R.mean([]); //=> NaN\n     */\n    var mean = _curry1(function mean(list) {\n        return sum(list) / list.length;\n    });\n\n    /**\n     * Returns the median of the given list of numbers.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list\n     * @return {Number}\n     * @example\n     *\n     *      R.median([2, 9, 7]); //=> 7\n     *      R.median([7, 2, 10, 9]); //=> 8\n     *      R.median([]); //=> NaN\n     */\n    var median = _curry1(function median(list) {\n        var len = list.length;\n        if (len === 0) {\n            return NaN;\n        }\n        var width = 2 - len % 2;\n        var idx = (len - width) / 2;\n        return mean(_slice(list).sort(function (a, b) {\n            return a < b ? -1 : a > b ? 1 : 0;\n        }).slice(idx, idx + width));\n    });\n\n    /**\n     * Merges a list of objects together into one object.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [{k: v}] -> {k: v}\n     * @param {Array} list An array of objects\n     * @return {Object} A merged object.\n     * @see R.reduce\n     * @example\n     *\n     *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n     *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n     */\n    var mergeAll = _curry1(function mergeAll(list) {\n        return reduce(merge, {}, list);\n    });\n\n    /**\n     * Performs left-to-right function composition. The leftmost function may have\n     * any arity; the remaining functions must be unary.\n     *\n     * In some libraries this function is named `sequence`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> (a -> b -> ... -> n -> z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.compose\n     * @example\n     *\n     *      var f = R.pipe(Math.pow, R.negate, R.inc);\n     *\n     *      f(3, 4); // -(3^4) + 1\n     */\n    var pipe = function pipe() {\n        if (arguments.length === 0) {\n            throw new Error('pipe requires at least one argument');\n        }\n        return curryN(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n    };\n\n    /**\n     * Performs left-to-right composition of one or more Promise-returning\n     * functions. The leftmost function may have any arity; the remaining\n     * functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.composeP\n     * @example\n     *\n     *      //  followersForUser :: String -> Promise [User]\n     *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n     */\n    var pipeP = function pipeP() {\n        if (arguments.length === 0) {\n            throw new Error('pipeP requires at least one argument');\n        }\n        return curryN(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n    };\n\n    /**\n     * Multiplies together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The product of all the numbers in the list.\n     * @see R.reduce\n     * @example\n     *\n     *      R.product([2,4,6,8,100,1]); //=> 38400\n     */\n    var product = reduce(multiply, 1);\n\n    /**\n     * Reasonable analog to SQL `select` statement.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @category Relation\n     * @sig [k] -> [{k: v}] -> [{k: v}]\n     * @param {Array} props The property names to project\n     * @param {Array} objs The objects to query\n     * @return {Array} An array of objects with just the `props` properties.\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n     *      var kids = [abby, fred];\n     *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n     */\n    // passing `identity` gives correct arity\n    var project = useWith(_map, pickAll, identity);\n\n    /**\n     * Returns a new list containing the last `n` elements of the given list.\n     * If `n > list.length`, returns a list of `list.length` elements.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n The number of elements to return.\n     * @param {Array} xs The collection to consider.\n     * @return {Array}\n     * @see R.dropLast\n     * @example\n     *\n     *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n     *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['for', 'baz']\n     *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.takeLast(3, 'ramda');               //=> 'mda'\n     */\n    var takeLast = _curry2(function takeLast(n, xs) {\n        return drop(n >= 0 ? xs.length - n : 0, xs);\n    });\n\n    var _contains = function _contains(a, list) {\n        return _indexOf(list, a, 0) >= 0;\n    };\n\n    //  mapPairs :: (Object, [String]) -> [String]\n    // Function, RegExp, user-defined types\n    var _toString = function _toString(x, seen) {\n        var recur = function recur(y) {\n            var xs = seen.concat([x]);\n            return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n        };\n        //  mapPairs :: (Object, [String]) -> [String]\n        var mapPairs = function (obj, keys) {\n            return _map(function (k) {\n                return _quote(k) + ': ' + recur(obj[k]);\n            }, keys.slice().sort());\n        };\n        switch (Object.prototype.toString.call(x)) {\n        case '[object Arguments]':\n            return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n        case '[object Array]':\n            return '[' + _map(recur, x).concat(mapPairs(x, reject(test(/^\\d+$/), keys(x)))).join(', ') + ']';\n        case '[object Boolean]':\n            return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n        case '[object Date]':\n            return 'new Date(' + _quote(_toISOString(x)) + ')';\n        case '[object Null]':\n            return 'null';\n        case '[object Number]':\n            return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n        case '[object String]':\n            return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n        case '[object Undefined]':\n            return 'undefined';\n        default:\n            return typeof x.constructor === 'function' && x.constructor.name !== 'Object' && typeof x.toString === 'function' && x.toString() !== '[object Object]' ? x.toString() : // Function, RegExp, user-defined types\n            '{' + mapPairs(x, keys(x)).join(', ') + '}';\n        }\n    };\n\n    /**\n     * Turns a list of Functors into a Functor of a list.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.commuteMap\n     * @sig Functor f => (x -> f x) -> [f a] -> f [a]\n     * @param {Function} of A function that returns the data type to return\n     * @param {Array} list An array of functors of the same type\n     * @return {*}\n     * @example\n     *\n     *      R.commute(R.of, [[1], [2, 3]]);   //=> [[1, 2], [1, 3]]\n     *      R.commute(R.of, [[1, 2], [3]]);   //=> [[1, 3], [2, 3]]\n     *      R.commute(R.of, [[1], [2], [3]]); //=> [[1, 2, 3]]\n     *      R.commute(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n     *      R.commute(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n     */\n    var commute = commuteMap(identity);\n\n    /**\n     * Performs right-to-left function composition. The rightmost function may have\n     * any arity; the remaining functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> (a -> b -> ... -> n -> z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.pipe\n     * @example\n     *\n     *      var f = R.compose(R.inc, R.negate, Math.pow);\n     *\n     *      f(3, 4); // -(3^4) + 1\n     */\n    var compose = function compose() {\n        if (arguments.length === 0) {\n            throw new Error('compose requires at least one argument');\n        }\n        return pipe.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Returns the right-to-left Kleisli composition of the provided functions,\n     * each of which must return a value of a type supported by [`chain`](#chain).\n     *\n     * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @see R.pipeK\n     * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (m a -> m z)\n     * @param {...Function}\n     * @return {Function}\n     * @example\n     *\n     *      //  parseJson :: String -> Maybe *\n     *      //  get :: String -> Object -> Maybe *\n     *\n     *      //  getStateCode :: Maybe String -> Maybe String\n     *      var getStateCode = R.composeK(\n     *        R.compose(Maybe.of, R.toUpper),\n     *        get('state'),\n     *        get('address'),\n     *        get('user'),\n     *        parseJson\n     *      );\n     *\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n     *      //=> Just('NY')\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\n     *      //=> Nothing()\n     */\n    var composeK = function composeK() {\n        return arguments.length === 0 ? identity : compose.apply(this, map(chain, arguments));\n    };\n\n    /**\n     * Performs right-to-left composition of one or more Promise-returning\n     * functions. The rightmost function may have any arity; the remaining\n     * functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.pipeP\n     * @example\n     *\n     *      //  followersForUser :: String -> Promise [User]\n     *      var followersForUser = R.composeP(db.getFollowers, db.getUserById);\n     */\n    var composeP = function composeP() {\n        if (arguments.length === 0) {\n            throw new Error('composeP requires at least one argument');\n        }\n        return pipeP.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Wraps a constructor function inside a curried function that can be called with the same\n     * arguments and returns the same type.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> {*}) -> (* -> {*})\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Constructor function\n     *      var Widget = function(config) {\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = [\n     *        // ...\n     *      ];\n     *      R.map(R.construct(Widget), allConfigs); // a list of Widgets\n     */\n    var construct = _curry1(function construct(Fn) {\n        return constructN(Fn.length, Fn);\n    });\n\n    /**\n     * Returns `true` if the specified value is equal, in `R.equals` terms,\n     * to at least one element of the given list; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> Boolean\n     * @param {Object} a The item to compare against.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the item is in the list, `false` otherwise.\n     *\n     * @example\n     *\n     *      R.contains(3, [1, 2, 3]); //=> true\n     *      R.contains(4, [1, 2, 3]); //=> false\n     *      R.contains([42], [[42]]); //=> true\n     */\n    var contains = _curry2(_contains);\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not contained in the second list.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @see R.differenceWith\n     * @example\n     *\n     *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n     *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n     */\n    var difference = _curry2(function difference(first, second) {\n        var out = [];\n        var idx = 0;\n        var firstLen = first.length;\n        while (idx < firstLen) {\n            if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n                out[out.length] = first[idx];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new list without any consecutively repeating elements.\n     * `R.equals` is used to determine equality.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} `list` without repeating elements.\n     * @example\n     *\n     *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n     */\n    var dropRepeats = _curry1(_dispatchable('dropRepeats', _xdropRepeatsWith(equals), dropRepeatsWith(equals)));\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those elements common to both lists.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @see R.intersectionWith\n     * @return {Array} The list of elements found in both `list1` and `list2`.\n     * @example\n     *\n     *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n     */\n    var intersection = _curry2(function intersection(list1, list2) {\n        return uniq(_filter(flip(_contains)(list1), list2));\n    });\n\n    /**\n     * \"lifts\" a function of arity > 1 so that it may \"map over\" an Array or\n     * other Functor.\n     *\n     * @func\n     * @memberOf R\n     * @see R.liftN\n     * @category Function\n     * @sig (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The function `fn` applicable to mappable objects.\n     * @example\n     *\n     *      var madd3 = R.lift(R.curry(function(a, b, c) {\n     *        return a + b + c;\n     *      }));\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     *\n     *      var madd5 = R.lift(R.curry(function(a, b, c, d, e) {\n     *        return a + b + c + d + e;\n     *      }));\n     *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n     */\n    var lift = _curry1(function lift(fn) {\n        return liftN(fn.length, fn);\n    });\n\n    /**\n     * Returns a partial copy of an object omitting the keys specified.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> {String: *} -> {String: *}\n     * @param {Array} names an array of String property names to omit from the new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with properties from `names` not on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n     */\n    var omit = _curry2(function omit(names, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (!_contains(prop, names)) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns the left-to-right Kleisli composition of the provided functions,\n     * each of which must return a value of a type supported by [`chain`](#chain).\n     *\n     * `R.pipeK(f, g, h)` is equivalent to `R.pipe(R.chain(f), R.chain(g), R.chain(h))`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @see R.composeK\n     * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (m a -> m z)\n     * @param {...Function}\n     * @return {Function}\n     * @example\n     *\n     *      //  parseJson :: String -> Maybe *\n     *      //  get :: String -> Object -> Maybe *\n     *\n     *      //  getStateCode :: Maybe String -> Maybe String\n     *      var getStateCode = R.pipeK(\n     *        parseJson,\n     *        get('user'),\n     *        get('address'),\n     *        get('state'),\n     *        R.compose(Maybe.of, R.toUpper)\n     *      );\n     *\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n     *      //=> Just('NY')\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\n     *      //=> Nothing()\n     */\n    var pipeK = function pipeK() {\n        return composeK.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Returns the string representation of the given value. `eval`'ing the output\n     * should result in a value equivalent to the input value. Many of the built-in\n     * `toString` methods do not satisfy this requirement.\n     *\n     * If the given value is an `[object Object]` with a `toString` method other\n     * than `Object.prototype.toString`, this method is invoked with no arguments\n     * to produce the return value. This means user-defined constructor functions\n     * can provide a suitable `toString` method. For example:\n     *\n     *     function Point(x, y) {\n     *       this.x = x;\n     *       this.y = y;\n     *     }\n     *\n     *     Point.prototype.toString = function() {\n     *       return 'new Point(' + this.x + ', ' + this.y + ')';\n     *     };\n     *\n     *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig * -> String\n     * @param {*} val\n     * @return {String}\n     * @example\n     *\n     *      R.toString(42); //=> '42'\n     *      R.toString('abc'); //=> '\"abc\"'\n     *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n     *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n     *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n     */\n    var toString = _curry1(function toString(val) {\n        return _toString(val, []);\n    });\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the\n     * elements of each list.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @example\n     *\n     *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n     */\n    var union = _curry2(compose(uniq, _concat));\n\n    /**\n     * Returns a new list containing only one copy of each element in the\n     * original list, based upon the value returned by applying the supplied\n     * function to each list element. Prefers the first item if the supplied\n     * function produces the same value on two items. `R.equals` is used for\n     * comparison.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> b) -> [a] -> [a]\n     * @param {Function} fn A function used to produce a value to use during comparisons.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n     */\n    var uniqBy = _curry2(function uniqBy(fn, list) {\n        var idx = 0, applied = [], result = [], appliedItem, item;\n        while (idx < list.length) {\n            item = list[idx];\n            appliedItem = fn(item);\n            if (!_contains(appliedItem, applied)) {\n                result.push(item);\n                applied.push(appliedItem);\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Turns a named method with a specified arity into a function\n     * that can be called directly supplied with arguments and a target object.\n     *\n     * The returned function is curried and accepts `arity + 1` parameters where\n     * the final parameter is the target object.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n     * @param {Number} arity Number of arguments the returned function should take\n     *        before the target object.\n     * @param {Function} method Name of the method to call.\n     * @return {Function} A new curried function.\n     * @example\n     *\n     *      var sliceFrom = R.invoker(1, 'slice');\n     *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n     *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n     *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n     */\n    var invoker = _curry2(function invoker(arity, method) {\n        return curryN(arity + 1, function () {\n            var target = arguments[arity];\n            if (target != null && is(Function, target[method])) {\n                return target[method].apply(target, _slice(arguments, 0, arity));\n            }\n            throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n        });\n    });\n\n    /**\n     * Returns a string made by inserting the `separator` between each\n     * element and concatenating all the elements into a single string.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig String -> [a] -> String\n     * @param {Number|String} separator The string used to separate the elements.\n     * @param {Array} xs The elements to join into a string.\n     * @return {String} str The string made by concatenating `xs` with `separator`.\n     * @see R.split\n     * @example\n     *\n     *      var spacer = R.join(' ');\n     *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n     *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n     */\n    var join = invoker(1, 'join');\n\n    /**\n     * Creates a new function that, when invoked, caches the result of calling `fn` for a given\n     * argument set and returns the result. Subsequent calls to the memoized `fn` with the same\n     * argument set will not result in an additional call to `fn`; instead, the cached result\n     * for that set of arguments will be returned.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (*... -> a) -> (*... -> a)\n     * @param {Function} fn The function to memoize.\n     * @return {Function} Memoized version of `fn`.\n     * @example\n     *\n     *      var count = 0;\n     *      var factorial = R.memoize(function(n) {\n     *        count += 1;\n     *        return R.product(R.range(1, n + 1));\n     *      });\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      count; //=> 1\n     */\n    var memoize = _curry1(function memoize(fn) {\n        var cache = {};\n        return function () {\n            var key = toString(arguments);\n            if (!_has(key, cache)) {\n                cache[key] = fn.apply(this, arguments);\n            }\n            return cache[key];\n        };\n    });\n\n    /**\n     * Splits a string into an array of strings based on the given\n     * separator.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String -> [String]\n     * @param {String} sep The separator string.\n     * @param {String} str The string to separate into an array.\n     * @return {Array} The array of strings from `str` separated by `str`.\n     * @see R.join\n     * @example\n     *\n     *      var pathComponents = R.split('/');\n     *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n     *\n     *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n     */\n    var split = invoker(1, 'split');\n\n    /**\n     * The lower case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to lower case.\n     * @return {String} The lower case version of `str`.\n     * @see R.toUpper\n     * @example\n     *\n     *      R.toLower('XYZ'); //=> 'xyz'\n     */\n    var toLower = invoker(0, 'toLowerCase');\n\n    /**\n     * The upper case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to upper case.\n     * @return {String} The upper case version of `str`.\n     * @see R.toLower\n     * @example\n     *\n     *      R.toUpper('abc'); //=> 'ABC'\n     */\n    var toUpper = invoker(0, 'toUpperCase');\n\n    var R = {\n        F: F,\n        T: T,\n        __: __,\n        add: add,\n        addIndex: addIndex,\n        adjust: adjust,\n        all: all,\n        allPass: allPass,\n        always: always,\n        and: and,\n        any: any,\n        anyPass: anyPass,\n        ap: ap,\n        aperture: aperture,\n        append: append,\n        apply: apply,\n        assoc: assoc,\n        assocPath: assocPath,\n        binary: binary,\n        bind: bind,\n        both: both,\n        call: call,\n        chain: chain,\n        clone: clone,\n        commute: commute,\n        commuteMap: commuteMap,\n        comparator: comparator,\n        complement: complement,\n        compose: compose,\n        composeK: composeK,\n        composeP: composeP,\n        concat: concat,\n        cond: cond,\n        construct: construct,\n        constructN: constructN,\n        contains: contains,\n        containsWith: containsWith,\n        converge: converge,\n        countBy: countBy,\n        createMapEntry: createMapEntry,\n        curry: curry,\n        curryN: curryN,\n        dec: dec,\n        defaultTo: defaultTo,\n        difference: difference,\n        differenceWith: differenceWith,\n        dissoc: dissoc,\n        dissocPath: dissocPath,\n        divide: divide,\n        drop: drop,\n        dropLast: dropLast,\n        dropLastWhile: dropLastWhile,\n        dropRepeats: dropRepeats,\n        dropRepeatsWith: dropRepeatsWith,\n        dropWhile: dropWhile,\n        either: either,\n        empty: empty,\n        eqProps: eqProps,\n        equals: equals,\n        evolve: evolve,\n        filter: filter,\n        find: find,\n        findIndex: findIndex,\n        findLast: findLast,\n        findLastIndex: findLastIndex,\n        flatten: flatten,\n        flip: flip,\n        forEach: forEach,\n        fromPairs: fromPairs,\n        functions: functions,\n        functionsIn: functionsIn,\n        groupBy: groupBy,\n        gt: gt,\n        gte: gte,\n        has: has,\n        hasIn: hasIn,\n        head: head,\n        identical: identical,\n        identity: identity,\n        ifElse: ifElse,\n        inc: inc,\n        indexOf: indexOf,\n        init: init,\n        insert: insert,\n        insertAll: insertAll,\n        intersection: intersection,\n        intersectionWith: intersectionWith,\n        intersperse: intersperse,\n        into: into,\n        invert: invert,\n        invertObj: invertObj,\n        invoker: invoker,\n        is: is,\n        isArrayLike: isArrayLike,\n        isEmpty: isEmpty,\n        isNil: isNil,\n        isSet: isSet,\n        join: join,\n        keys: keys,\n        keysIn: keysIn,\n        last: last,\n        lastIndexOf: lastIndexOf,\n        length: length,\n        lens: lens,\n        lensIndex: lensIndex,\n        lensProp: lensProp,\n        lift: lift,\n        liftN: liftN,\n        lt: lt,\n        lte: lte,\n        map: map,\n        mapAccum: mapAccum,\n        mapAccumRight: mapAccumRight,\n        mapObj: mapObj,\n        mapObjIndexed: mapObjIndexed,\n        match: match,\n        mathMod: mathMod,\n        max: max,\n        maxBy: maxBy,\n        mean: mean,\n        median: median,\n        memoize: memoize,\n        merge: merge,\n        mergeAll: mergeAll,\n        min: min,\n        minBy: minBy,\n        modulo: modulo,\n        multiply: multiply,\n        nAry: nAry,\n        negate: negate,\n        none: none,\n        not: not,\n        nth: nth,\n        nthArg: nthArg,\n        nthChar: nthChar,\n        nthCharCode: nthCharCode,\n        of: of,\n        omit: omit,\n        once: once,\n        or: or,\n        over: over,\n        partial: partial,\n        partialRight: partialRight,\n        partition: partition,\n        path: path,\n        pathEq: pathEq,\n        pick: pick,\n        pickAll: pickAll,\n        pickBy: pickBy,\n        pipe: pipe,\n        pipeK: pipeK,\n        pipeP: pipeP,\n        pluck: pluck,\n        prepend: prepend,\n        product: product,\n        project: project,\n        prop: prop,\n        propEq: propEq,\n        propIs: propIs,\n        propOr: propOr,\n        propSatisfies: propSatisfies,\n        props: props,\n        range: range,\n        reduce: reduce,\n        reduceRight: reduceRight,\n        reduced: reduced,\n        reject: reject,\n        remove: remove,\n        repeat: repeat,\n        replace: replace,\n        reverse: reverse,\n        scan: scan,\n        set: set,\n        slice: slice,\n        sort: sort,\n        sortBy: sortBy,\n        split: split,\n        splitEvery: splitEvery,\n        subtract: subtract,\n        sum: sum,\n        tail: tail,\n        take: take,\n        takeLast: takeLast,\n        takeLastWhile: takeLastWhile,\n        takeWhile: takeWhile,\n        tap: tap,\n        test: test,\n        times: times,\n        toLower: toLower,\n        toPairs: toPairs,\n        toPairsIn: toPairsIn,\n        toString: toString,\n        toUpper: toUpper,\n        transduce: transduce,\n        trim: trim,\n        type: type,\n        unapply: unapply,\n        unary: unary,\n        uncurryN: uncurryN,\n        unfold: unfold,\n        union: union,\n        unionWith: unionWith,\n        uniq: uniq,\n        uniqBy: uniqBy,\n        uniqWith: uniqWith,\n        unnest: unnest,\n        update: update,\n        useWith: useWith,\n        values: values,\n        valuesIn: valuesIn,\n        view: view,\n        where: where,\n        whereEq: whereEq,\n        wrap: wrap,\n        xprod: xprod,\n        zip: zip,\n        zipObj: zipObj,\n        zipWith: zipWith\n    };\n\n  /* TEST_ENTRY_POINT */\n\n  if (true) {\n    module.exports = R;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function() { return R; });\n  } else {\n    this.R = R;\n  }\n\n}.call(this));\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getNative = __webpack_require__(27),\n    root = __webpack_require__(16);\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is loosely based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar eq = __webpack_require__(98);\n\n/**\n * Gets the index at which the first occurrence of `key` is found in `array`\n * of key-value pairs.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getNative = __webpack_require__(22);\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module, global) {var checkGlobal = __webpack_require__(106);\n\n/** Used to determine if values are of the language type `Object`. */\nvar objectTypes = {\n  'function': true,\n  'object': true\n};\n\n/** Detect free variable `exports`. */\nvar freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType) ? exports : null;\n\n/** Detect free variable `module`. */\nvar freeModule = (objectTypes[typeof module] && module && !module.nodeType) ? module : null;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);\n\n/** Detect free variable `self`. */\nvar freeSelf = checkGlobal(objectTypes[typeof self] && self);\n\n/** Detect free variable `window`. */\nvar freeWindow = checkGlobal(objectTypes[typeof window] && window);\n\n/** Detect `this` as the global object. */\nvar thisGlobal = checkGlobal(objectTypes[typeof this] && this);\n\n/**\n * Used as a reference to the global object.\n *\n * The `this` value is used if it's the global object to avoid Greasemonkey's\n * restricted `window` object, otherwise the `window` object is used.\n */\nvar root = freeGlobal || ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) || freeSelf || thisGlobal || Function('return this')();\n\nmodule.exports = root;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(41)(module), __webpack_require__(18)))\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'number' || type == 'boolean' ||\n    (type == 'string' && value !== '__proto__') || value == null;\n}\n\nmodule.exports = isKeyable;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is loosely based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar eq = __webpack_require__(168);\n\n/**\n * Gets the index at which the first occurrence of `key` is found in `array`\n * of key-value pairs.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getNative = __webpack_require__(27);\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module, global) {var checkGlobal = __webpack_require__(176);\n\n/** Used to determine if values are of the language type `Object`. */\nvar objectTypes = {\n  'function': true,\n  'object': true\n};\n\n/** Detect free variable `exports`. */\nvar freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType) ? exports : null;\n\n/** Detect free variable `module`. */\nvar freeModule = (objectTypes[typeof module] && module && !module.nodeType) ? module : null;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);\n\n/** Detect free variable `self`. */\nvar freeSelf = checkGlobal(objectTypes[typeof self] && self);\n\n/** Detect free variable `window`. */\nvar freeWindow = checkGlobal(objectTypes[typeof window] && window);\n\n/** Detect `this` as the global object. */\nvar thisGlobal = checkGlobal(objectTypes[typeof this] && this);\n\n/**\n * Used as a reference to the global object.\n *\n * The `this` value is used if it's the global object to avoid Greasemonkey's\n * restricted `window` object, otherwise the `window` object is used.\n */\nvar root = freeGlobal || ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) || freeSelf || thisGlobal || Function('return this')();\n\nmodule.exports = root;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(41)(module), __webpack_require__(18)))\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'number' || type == 'boolean' ||\n    (type == 'string' && value !== '__proto__') || value == null;\n}\n\nmodule.exports = isKeyable;\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\nmodule.exports = isHostObject;\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseHas = __webpack_require__(30),\n    baseKeys = __webpack_require__(87),\n    indexKeys = __webpack_require__(88),\n    isArrayLike = __webpack_require__(32),\n    isIndex = __webpack_require__(36),\n    isPrototype = __webpack_require__(92);\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  var isProto = isPrototype(object);\n  if (!(isProto || isArrayLike(object))) {\n    return baseKeys(object);\n  }\n  var indexes = indexKeys(object),\n      skipIndexes = !!indexes,\n      result = indexes || [],\n      length = result.length;\n\n  for (var key in object) {\n    if (baseHas(object, key) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n        !(isProto && key == 'constructor')) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keys;\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isNative = __webpack_require__(105);\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = __webpack_require__(0);\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (typeof value == 'number') {\n    return true;\n  }\n  return !isArray(value) &&\n    (reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n      (object != null && value in Object(object)));\n}\n\nmodule.exports = isKey;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\nmodule.exports = isHostObject;\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseHas = __webpack_require__(50),\n    baseKeys = __webpack_require__(157),\n    indexKeys = __webpack_require__(158),\n    isArrayLike = __webpack_require__(52),\n    isIndex = __webpack_require__(56),\n    isPrototype = __webpack_require__(162);\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  var isProto = isPrototype(object);\n  if (!(isProto || isArrayLike(object))) {\n    return baseKeys(object);\n  }\n  var indexes = indexKeys(object),\n      skipIndexes = !!indexes,\n      result = indexes || [],\n      length = result.length;\n\n  for (var key in object) {\n    if (baseHas(object, key) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n        !(isProto && key == 'constructor')) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keys;\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isNative = __webpack_require__(175);\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = __webpack_require__(1);\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (typeof value == 'number') {\n    return true;\n  }\n  return !isArray(value) &&\n    (reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n      (object != null && value in Object(object)));\n}\n\nmodule.exports = isKey;\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar asap = __webpack_require__(72);\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar getPrototypeOf = Object.getPrototypeOf;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n  // that are composed entirely of index properties, return `false` for\n  // `hasOwnProperty` checks of them.\n  return hasOwnProperty.call(object, key) ||\n    (typeof object == 'object' && key in object && getPrototypeOf(object) === null);\n}\n\nmodule.exports = baseHas;\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArrayLikeObject = __webpack_require__(90);\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\nmodule.exports = isArguments;\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getLength = __webpack_require__(91),\n    isFunction = __webpack_require__(34),\n    isLength = __webpack_require__(8);\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null &&\n    !(typeof value == 'function' && isFunction(value)) && isLength(getLength(value));\n}\n\nmodule.exports = isArrayLike;\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(21);\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array constructors, and\n  // PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\nmodule.exports = isFunction;\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = __webpack_require__(0),\n    isObjectLike = __webpack_require__(2);\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\nmodule.exports = isString;\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar stackClear = __webpack_require__(96),\n    stackDelete = __webpack_require__(97),\n    stackGet = __webpack_require__(99),\n    stackHas = __webpack_require__(100),\n    stackSet = __webpack_require__(101);\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @param {Array} [values] The values to cache.\n */\nfunction Stack(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = values[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add functions to the `Stack` cache.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assocIndexOf = __webpack_require__(9);\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the associative array.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction assocDelete(array, key) {\n  var index = assocIndexOf(array, key);\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = array.length - 1;\n  if (index == lastIndex) {\n    array.pop();\n  } else {\n    splice.call(array, index, 1);\n  }\n  return true;\n}\n\nmodule.exports = assocDelete;\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assocIndexOf = __webpack_require__(9);\n\n/**\n * Gets the associative array value for `key`.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction assocGet(array, key) {\n  var index = assocIndexOf(array, key);\n  return index < 0 ? undefined : array[index][1];\n}\n\nmodule.exports = assocGet;\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assocIndexOf = __webpack_require__(9);\n\n/**\n * Checks if an associative array value for `key` exists.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction assocHas(array, key) {\n  return assocIndexOf(array, key) > -1;\n}\n\nmodule.exports = assocHas;\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar nativeCreate = __webpack_require__(10);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @param {Object} hash The hash to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(hash, key) {\n  return nativeCreate ? hash[key] !== undefined : hasOwnProperty.call(hash, key);\n}\n\nmodule.exports = hashHas;\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assocIndexOf = __webpack_require__(9);\n\n/**\n * Sets the associative array `key` to `value`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n */\nfunction assocSet(array, key, value) {\n  var index = assocIndexOf(array, key);\n  if (index < 0) {\n    array.push([key, value]);\n  } else {\n    array[index][1] = value;\n  }\n}\n\nmodule.exports = assocSet;\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseIsEqualDeep = __webpack_require__(114),\n    isObject = __webpack_require__(21),\n    isObjectLike = __webpack_require__(2);\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {boolean} [bitmask] The bitmask of comparison flags.\n *  The bitmask may be composed of the following flags:\n *     1 - Unordered comparison\n *     2 - Partial comparison\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, bitmask, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n}\n\nmodule.exports = baseIsEqual;\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar root = __webpack_require__(11);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseGet = __webpack_require__(47);\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined` the `defaultValue` is used in its place.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseToPath = __webpack_require__(48),\n    isKey = __webpack_require__(23);\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path + ''] : baseToPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[path[index++]];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = __webpack_require__(0),\n    stringToPath = __webpack_require__(131);\n\n/**\n * The base implementation of `_.toPath` which only converts `value` to a\n * path if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Array} Returns the property path array.\n */\nfunction baseToPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\nmodule.exports = baseToPath;\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.default = functor;\n\nvar _ramda = __webpack_require__(4);\n\nfunction functor(v) {\n  return (0, _ramda.is)(Function, v) ? v : function () {\n    return v;\n  };\n}\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports) {\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar getPrototypeOf = Object.getPrototypeOf;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n  // that are composed entirely of index properties, return `false` for\n  // `hasOwnProperty` checks of them.\n  return hasOwnProperty.call(object, key) ||\n    (typeof object == 'object' && key in object && getPrototypeOf(object) === null);\n}\n\nmodule.exports = baseHas;\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArrayLikeObject = __webpack_require__(160);\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\nmodule.exports = isArguments;\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getLength = __webpack_require__(161),\n    isFunction = __webpack_require__(54),\n    isLength = __webpack_require__(13);\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null &&\n    !(typeof value == 'function' && isFunction(value)) && isLength(getLength(value));\n}\n\nmodule.exports = isArrayLike;\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports) {\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(26);\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array constructors, and\n  // PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\nmodule.exports = isFunction;\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = __webpack_require__(1),\n    isObjectLike = __webpack_require__(3);\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\nmodule.exports = isString;\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports) {\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar stackClear = __webpack_require__(166),\n    stackDelete = __webpack_require__(167),\n    stackGet = __webpack_require__(169),\n    stackHas = __webpack_require__(170),\n    stackSet = __webpack_require__(171);\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @param {Array} [values] The values to cache.\n */\nfunction Stack(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = values[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add functions to the `Stack` cache.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assocIndexOf = __webpack_require__(14);\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the associative array.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction assocDelete(array, key) {\n  var index = assocIndexOf(array, key);\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = array.length - 1;\n  if (index == lastIndex) {\n    array.pop();\n  } else {\n    splice.call(array, index, 1);\n  }\n  return true;\n}\n\nmodule.exports = assocDelete;\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assocIndexOf = __webpack_require__(14);\n\n/**\n * Gets the associative array value for `key`.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction assocGet(array, key) {\n  var index = assocIndexOf(array, key);\n  return index < 0 ? undefined : array[index][1];\n}\n\nmodule.exports = assocGet;\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assocIndexOf = __webpack_require__(14);\n\n/**\n * Checks if an associative array value for `key` exists.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction assocHas(array, key) {\n  return assocIndexOf(array, key) > -1;\n}\n\nmodule.exports = assocHas;\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar nativeCreate = __webpack_require__(15);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @param {Object} hash The hash to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(hash, key) {\n  return nativeCreate ? hash[key] !== undefined : hasOwnProperty.call(hash, key);\n}\n\nmodule.exports = hashHas;\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assocIndexOf = __webpack_require__(14);\n\n/**\n * Sets the associative array `key` to `value`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n */\nfunction assocSet(array, key, value) {\n  var index = assocIndexOf(array, key);\n  if (index < 0) {\n    array.push([key, value]);\n  } else {\n    array[index][1] = value;\n  }\n}\n\nmodule.exports = assocSet;\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseIsEqualDeep = __webpack_require__(184),\n    isObject = __webpack_require__(26),\n    isObjectLike = __webpack_require__(3);\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {boolean} [bitmask] The bitmask of comparison flags.\n *  The bitmask may be composed of the following flags:\n *     1 - Unordered comparison\n *     2 - Partial comparison\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, bitmask, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n}\n\nmodule.exports = baseIsEqual;\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar root = __webpack_require__(16);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseGet = __webpack_require__(66);\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined` the `defaultValue` is used in its place.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseToPath = __webpack_require__(67),\n    isKey = __webpack_require__(28);\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path + ''] : baseToPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[path[index++]];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = __webpack_require__(1),\n    stringToPath = __webpack_require__(201);\n\n/**\n * The base implementation of `_.toPath` which only converts `value` to a\n * path if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Array} Returns the property path array.\n */\nfunction baseToPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\nmodule.exports = baseToPath;\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.default = functor;\n\nvar _ramda = __webpack_require__(6);\n\nfunction functor(v) {\n  return (0, _ramda.is)(Function, v) ? v : function () {\n    return v;\n  };\n}\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(70);\nmodule.exports = __webpack_require__(76);\n\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n// @remove-on-eject-end\n\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  __webpack_require__(71).enable();\n  window.Promise = __webpack_require__(73);\n}\n\n// fetch() polyfill for making API calls.\n__webpack_require__(74);\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = __webpack_require__(75);\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Promise = __webpack_require__(29);\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._47 = null;\n  Promise._71 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._47 = function (promise) {\n    if (\n      promise._83 === 2 && // IS REJECTED\n      rejections[promise._56]\n    ) {\n      if (rejections[promise._56].logged) {\n        onHandled(promise._56);\n      } else {\n        clearTimeout(rejections[promise._56].timeout);\n      }\n      delete rejections[promise._56];\n    }\n  };\n  Promise._71 = function (promise, err) {\n    if (promise._75 === 0) { // not yet handled\n      promise._56 = id++;\n      rejections[promise._56] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._56),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(18)))\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = __webpack_require__(29);\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports) {\n\n(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_state_visualizer__ = __webpack_require__(77);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_state_visualizer___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_d3_state_visualizer__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_before_fix_charts_tree_tree__ = __webpack_require__(149);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_immutability_helper__ = __webpack_require__(219);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_immutability_helper___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_immutability_helper__);\nvar defaultAppState={test:[0],todoStore:{todos:[{title:'d3'},{title:'state'},{title:'visualizer'},{title:'tree'}],completedCount:1}};var appStates=[defaultAppState];appStates.push(__WEBPACK_IMPORTED_MODULE_2_immutability_helper___default()(appStates[appStates.length-1],{todoStore:{todos:{$unshift:[{title:'hey'}]}}}));appStates.push(__WEBPACK_IMPORTED_MODULE_2_immutability_helper___default()(appStates[appStates.length-1],{test:{$push:[1]}}));appStates.push(__WEBPACK_IMPORTED_MODULE_2_immutability_helper___default()(appStates[appStates.length-1],{test:{$push:[2]}}));appStates.push(__WEBPACK_IMPORTED_MODULE_2_immutability_helper___default()(appStates[appStates.length-1],{test:{$push:[3]}}));appStates.push(__WEBPACK_IMPORTED_MODULE_2_immutability_helper___default()(appStates[appStates.length-1],{test:{1:{$set:[42]},3:{$set:[42]}}}));appStates.push(__WEBPACK_IMPORTED_MODULE_2_immutability_helper___default()(appStates[appStates.length-1],{todoStore:{$set:{}}}));var config={state:defaultAppState,id:'treeExample',size:600,aspectRatio:0.5,isSorted:false,widthBetweenNodesCoeff:1.5,heightBetweenNodesCoeff:2,style:{border:'1px solid black'},tooltipOptions:{offset:{left:30,top:10},indentationSize:2},transitionDuration:700};var stateDuration=2000;var oldRender=Object(__WEBPACK_IMPORTED_MODULE_1__lib_before_fix_charts_tree_tree__[\"a\" /* default */])(document.getElementById('oldRoot'),__WEBPACK_IMPORTED_MODULE_2_immutability_helper___default()(config,{id:{$set:'oldTreeExample'}}));var render=Object(__WEBPACK_IMPORTED_MODULE_0_d3_state_visualizer__[\"tree\"])(document.getElementById('root'),config);var i=0;var updateState=function updateState(){i=(i+1)%appStates.length;oldRender(appStates[i]);render(appStates[i]);};setInterval(updateState,stateDuration);updateState();\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.tree = undefined;\n\nvar _charts = __webpack_require__(78);\n\nObject.defineProperty(exports, 'tree', {\n  enumerable: true,\n  get: function get() {\n    return _charts.tree;\n  }\n});\n\nvar charts = _interopRequireWildcard(_charts);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.default = charts;\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.tree = undefined;\n\nvar _tree2 = __webpack_require__(79);\n\nvar _tree3 = _interopRequireDefault(_tree2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.tree = _tree3.default;\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function (DOMNode) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _deepmerge = (0, _deepmerge3.default)(defaultOptions, options),\n      id = _deepmerge.id,\n      style = _deepmerge.style,\n      size = _deepmerge.size,\n      aspectRatio = _deepmerge.aspectRatio,\n      initialZoom = _deepmerge.initialZoom,\n      margin = _deepmerge.margin,\n      isSorted = _deepmerge.isSorted,\n      widthBetweenNodesCoeff = _deepmerge.widthBetweenNodesCoeff,\n      heightBetweenNodesCoeff = _deepmerge.heightBetweenNodesCoeff,\n      transitionDuration = _deepmerge.transitionDuration,\n      blinkDuration = _deepmerge.blinkDuration,\n      state = _deepmerge.state,\n      rootKeyName = _deepmerge.rootKeyName,\n      pushMethod = _deepmerge.pushMethod,\n      tree = _deepmerge.tree,\n      tooltipOptions = _deepmerge.tooltipOptions,\n      onClickText = _deepmerge.onClickText;\n\n  var width = size - margin.left - margin.right;\n  var height = size * aspectRatio - margin.top - margin.bottom;\n  var fullWidth = size;\n  var fullHeight = size * aspectRatio;\n\n  var attr = {\n    id: id,\n    preserveAspectRatio: 'xMinYMin slice'\n  };\n\n  if (!style.width) {\n    attr.width = fullWidth;\n  }\n\n  if (!style.width || !style.height) {\n    attr.viewBox = '0 0 ' + fullWidth + ' ' + fullHeight;\n  }\n\n  var root = _d4.default.select(DOMNode);\n  var zoom = _d4.default.behavior.zoom().scaleExtent([0.1, 3]).scale(initialZoom);\n  var vis = root.append('svg').attr(attr).style(_extends({ cursor: '-webkit-grab' }, style)).call(zoom.on('zoom', function () {\n    var _d3$event = _d4.default.event,\n        translate = _d3$event.translate,\n        scale = _d3$event.scale;\n\n    vis.attr('transform', 'translate(' + translate + ')scale(' + scale + ')');\n  })).append('g').attr({\n    transform: 'translate(' + (margin.left + style.node.radius) + ', ' + margin.top + ') scale(' + initialZoom + ')'\n  });\n\n  var layout = _d4.default.layout.tree().size([width, height]);\n  var data = void 0;\n\n  if (isSorted) {\n    layout.sort(function (a, b) {\n      return b.name.toLowerCase() < a.name.toLowerCase() ? 1 : -1;\n    });\n  }\n\n  // previousNodePositionsById stores node x and y\n  // as well as hierarchy (id / parentId);\n  // helps animating transitions\n  var previousNodePositionsById = {\n    root: {\n      id: 'root',\n      parentId: null,\n      x: height / 2,\n      y: 0\n    }\n\n    // traverses a map with node positions by going through the chain\n    // of parent ids; once a parent that matches the given filter is found,\n    // the parent position gets returned\n  };function findParentNodePosition(nodePositionsById, nodeId, filter) {\n    var currentPosition = nodePositionsById[nodeId];\n    while (currentPosition) {\n      currentPosition = nodePositionsById[currentPosition.parentId];\n      if (!currentPosition) {\n        return null;\n      }\n      if (!filter || filter(currentPosition)) {\n        return currentPosition;\n      }\n    }\n  }\n\n  return function renderChart() {\n    var nextState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : tree || state;\n\n    data = !tree ? (0, _map2tree2.default)(nextState, { key: rootKeyName, pushMethod: pushMethod }) : nextState;\n\n    if ((0, _ramda.isEmpty)(data) || !data.name) {\n      data = { name: 'error', message: 'Please provide a state map or a tree structure' };\n    }\n\n    var nodeIndex = 0;\n    var maxLabelLength = 0;\n\n    // nodes are assigned with string ids, which reflect their location\n    // within the hierarcy; e.g. \"root|branch|subBranch|subBranch[0]|property\"\n    // top-level elemnt always has id \"root\"\n    (0, _utils.visit)(data, function (node) {\n      maxLabelLength = Math.max(node.name.length, maxLabelLength);\n      node.id = node.id || 'root';\n    }, function (node) {\n      return node.children && node.children.length > 0 ? node.children.map(function (c) {\n        c.id = (node.id || '') + '|' + c.name;\n        return c;\n      }) : null;\n    });\n\n    /*eslint-disable*/\n    update();\n    /*eslint-enable*/\n\n    function update() {\n      // path generator for links\n      var diagonal = _d4.default.svg.diagonal().projection(function (d) {\n        return [d.y, d.x];\n      });\n      // set tree dimensions and spacing between branches and nodes\n      var maxNodeCountByLevel = Math.max.apply(Math, (0, _utils.getNodeGroupByDepthCount)(data));\n\n      layout = layout.size([maxNodeCountByLevel * 25 * heightBetweenNodesCoeff, width]);\n\n      var nodes = layout.nodes(data);\n      var links = layout.links(nodes);\n\n      nodes.forEach(function (node) {\n        return node.y = node.depth * (maxLabelLength * 7 * widthBetweenNodesCoeff);\n      });\n\n      var nodePositions = nodes.map(function (n) {\n        return {\n          parentId: n.parent && n.parent.id,\n          id: n.id,\n          x: n.x,\n          y: n.y\n        };\n      });\n      var nodePositionsById = {};\n      nodePositions.forEach(function (node) {\n        return nodePositionsById[node.id] = node;\n      });\n\n      // process the node selection\n      var node = vis.selectAll('g.node').property('__oldData__', function (d) {\n        return d;\n      }).data(nodes, function (d) {\n        return d.id || (d.id = ++nodeIndex);\n      });\n      var nodeEnter = node.enter().append('g').attr({\n        'class': 'node',\n        transform: function transform(d) {\n          var position = findParentNodePosition(nodePositionsById, d.id, function (n) {\n            return previousNodePositionsById[n.id];\n          });\n          var previousPosition = position && previousNodePositionsById[position.id] || previousNodePositionsById.root;\n          return 'translate(' + previousPosition.y + ',' + previousPosition.x + ')';\n        }\n      }).style({\n        fill: style.text.colors.default,\n        cursor: 'pointer'\n      }).on({\n        mouseover: function mouseover() {\n          _d4.default.select(this).style({\n            fill: style.text.colors.hover\n          });\n        },\n        mouseout: function mouseout() {\n          _d4.default.select(this).style({\n            fill: style.text.colors.default\n          });\n        }\n      });\n\n      if (!tooltipOptions.disabled) {\n        nodeEnter.call((0, _d3tooltip2.default)(_d4.default, 'tooltip', _extends({}, tooltipOptions, { root: root })).text(function (d, i) {\n          return (0, _utils.getTooltipString)(d, i, tooltipOptions);\n        }).style(tooltipOptions.style));\n      }\n\n      // g inside node contains circle and text\n      // this extra wrapper helps run d3 transitions in parallel\n      var nodeEnterInnerGroup = nodeEnter.append('g');\n      nodeEnterInnerGroup.append('circle').attr({\n        'class': 'nodeCircle',\n        r: 0\n      }).on({\n        click: function click(clickedNode) {\n          if (_d4.default.event.defaultPrevented) return;\n          (0, _utils.toggleChildren)(clickedNode);\n          update();\n        }\n      });\n\n      nodeEnterInnerGroup.append('text').attr({\n        'class': 'nodeText',\n        'text-anchor': 'middle',\n        'transform': 'translate(0,0)',\n        dy: '.35em'\n      }).style({\n        'fill-opacity': 0\n      }).text(function (d) {\n        return d.name;\n      }).on({\n        click: onClickText\n      });\n\n      // update the text to reflect whether node has children or not\n      node.select('text').text(function (d) {\n        return d.name;\n      });\n\n      // change the circle fill depending on whether it has children and is collapsed\n      node.select('circle').style({\n        stroke: 'black',\n        'stroke-width': '1.5px',\n        fill: function fill(d) {\n          return d._children ? style.node.colors.collapsed : d.children ? style.node.colors.parent : style.node.colors.default;\n        }\n      });\n\n      // transition nodes to their new position\n      var nodeUpdate = node.transition().duration(transitionDuration).attr({\n        transform: function transform(d) {\n          return 'translate(' + d.y + ',' + d.x + ')';\n        }\n      });\n\n      // ensure circle radius is correct\n      nodeUpdate.select('circle').attr('r', style.node.radius);\n\n      // fade the text in and align it\n      nodeUpdate.select('text').style('fill-opacity', 1).attr({\n        transform: function transform(d) {\n          var x = (d.children || d._children ? -1 : 1) * (this.getBBox().width / 2 + style.node.radius + 5);\n          return 'translate(' + x + ',0)';\n        }\n      });\n\n      // blink updated nodes\n      node.filter(function flick(d) {\n        // test whether the relevant properties of d match\n        // the equivalent property of the oldData\n        // also test whether the old data exists,\n        // to catch the entering elements!\n        return this.__oldData__ && d.value !== this.__oldData__.value;\n      }).select('g').style('opacity', '0.3').transition().duration(blinkDuration).style('opacity', '1');\n\n      // transition exiting nodes to the parent's new position\n      var nodeExit = node.exit().transition().duration(transitionDuration).attr({\n        transform: function transform(d) {\n          var position = findParentNodePosition(previousNodePositionsById, d.id, function (n) {\n            return nodePositionsById[n.id];\n          });\n          var futurePosition = position && nodePositionsById[position.id] || nodePositionsById.root;\n          return 'translate(' + futurePosition.y + ',' + futurePosition.x + ')';\n        }\n      }).remove();\n\n      nodeExit.select('circle').attr('r', 0);\n\n      nodeExit.select('text').style('fill-opacity', 0);\n\n      // update the links\n      var link = vis.selectAll('path.link').data(links, function (d) {\n        return d.target.id;\n      });\n\n      // enter any new links at the parent's previous position\n      link.enter().insert('path', 'g').attr({\n        'class': 'link',\n        d: function d(_d) {\n          var position = findParentNodePosition(nodePositionsById, _d.target.id, function (n) {\n            return previousNodePositionsById[n.id];\n          });\n          var previousPosition = position && previousNodePositionsById[position.id] || previousNodePositionsById.root;\n          return diagonal({\n            source: previousPosition,\n            target: previousPosition\n          });\n        }\n      }).style(style.link);\n\n      // transition links to their new position\n      link.transition().duration(transitionDuration).attr({\n        d: diagonal\n      });\n\n      // transition exiting nodes to the parent's new position\n      link.exit().transition().duration(transitionDuration).attr({\n        d: function d(_d2) {\n          var position = findParentNodePosition(previousNodePositionsById, _d2.target.id, function (n) {\n            return nodePositionsById[n.id];\n          });\n          var futurePosition = position && nodePositionsById[position.id] || nodePositionsById.root;\n          return diagonal({\n            source: futurePosition,\n            target: futurePosition\n          });\n        }\n      }).remove();\n\n      // delete the old data once it's no longer needed\n      node.property('__oldData__', null);\n\n      // stash the old positions for transition\n      previousNodePositionsById = nodePositionsById;\n    }\n  };\n};\n\nvar _d3 = __webpack_require__(80);\n\nvar _d4 = _interopRequireDefault(_d3);\n\nvar _ramda = __webpack_require__(4);\n\nvar _map2tree = __webpack_require__(81);\n\nvar _map2tree2 = _interopRequireDefault(_map2tree);\n\nvar _deepmerge2 = __webpack_require__(143);\n\nvar _deepmerge3 = _interopRequireDefault(_deepmerge2);\n\nvar _utils = __webpack_require__(144);\n\nvar _d3tooltip = __webpack_require__(146);\n\nvar _d3tooltip2 = _interopRequireDefault(_d3tooltip);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultOptions = {\n  state: undefined,\n  rootKeyName: 'state',\n  pushMethod: 'push',\n  tree: undefined,\n  id: 'd3svg',\n  style: {\n    node: {\n      colors: {\n        'default': '#ccc',\n        collapsed: 'lightsteelblue',\n        parent: 'white'\n      },\n      radius: 7\n    },\n    text: {\n      colors: {\n        'default': 'black',\n        hover: 'skyblue'\n      }\n    },\n    link: {\n      stroke: '#000',\n      fill: 'none'\n    }\n  },\n  size: 500,\n  aspectRatio: 1.0,\n  initialZoom: 1,\n  margin: {\n    top: 10,\n    right: 10,\n    bottom: 10,\n    left: 50\n  },\n  isSorted: false,\n  heightBetweenNodesCoeff: 2,\n  widthBetweenNodesCoeff: 1,\n  transitionDuration: 750,\n  blinkDuration: 100,\n  onClickText: function onClickText() {},\n  tooltipOptions: {\n    disabled: false,\n    left: undefined,\n    right: undefined,\n    offset: {\n      left: 0,\n      top: 0\n    },\n    style: undefined\n  }\n};\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.default = map2tree;\n\nvar _isArray = __webpack_require__(0);\n\nvar _isArray2 = _interopRequireDefault(_isArray);\n\nvar _isPlainObject = __webpack_require__(82);\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _mapValues = __webpack_require__(83);\n\nvar _mapValues2 = _interopRequireDefault(_mapValues);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction visit(parent, visitFn, childrenFn) {\n  if (!parent) return;\n\n  visitFn(parent);\n\n  var children = childrenFn(parent);\n  if (children) {\n    var count = children.length;\n    for (var i = 0; i < count; i++) {\n      visit(children[i], visitFn, childrenFn);\n    }\n  }\n}\n\nfunction getNode(tree, key) {\n  var node = null;\n\n  visit(tree, function (d) {\n    if (d.name === key) {\n      node = d;\n    }\n  }, function (d) {\n    return d.children;\n  });\n\n  return node;\n}\n\nfunction map2tree(root) {\n  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n  var tree = arguments.length <= 2 || arguments[2] === undefined ? { name: options.key || 'state', children: [] } : arguments[2];\n\n  if (!(0, _isPlainObject2.default)(root) && root && !root.toJS) {\n    return {};\n  }\n\n  var _options$key = options.key;\n  var rootNodeKey = _options$key === undefined ? 'state' : _options$key;\n  var _options$pushMethod = options.pushMethod;\n  var pushMethod = _options$pushMethod === undefined ? 'push' : _options$pushMethod;\n\n  var currentNode = getNode(tree, rootNodeKey);\n\n  if (currentNode === null) {\n    return {};\n  }\n\n  (0, _mapValues2.default)(root && root.toJS ? root.toJS() : root, function (maybeImmutable, key) {\n    var value = maybeImmutable && maybeImmutable.toJS ? maybeImmutable.toJS() : maybeImmutable;\n    var newNode = { name: key };\n\n    if ((0, _isArray2.default)(value)) {\n      newNode.children = [];\n\n      for (var i = 0; i < value.length; i++) {\n        var _newNode$children$pus;\n\n        newNode.children[pushMethod]((_newNode$children$pus = {\n          name: key + '[' + i + ']'\n        }, _newNode$children$pus[(0, _isPlainObject2.default)(value[i]) ? 'object' : 'value'] = value[i], _newNode$children$pus));\n      }\n    } else if ((0, _isPlainObject2.default)(value)) {\n      newNode.children = [];\n    } else {\n      newNode.value = value;\n    }\n\n    currentNode.children[pushMethod](newNode);\n\n    map2tree(value, { key: key, pushMethod: pushMethod }, tree);\n  });\n\n  return tree;\n}\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isHostObject = __webpack_require__(19),\n    isObjectLike = __webpack_require__(2);\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar getPrototypeOf = Object.getPrototypeOf;\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = objectProto;\n  if (typeof value.constructor == 'function') {\n    proto = getPrototypeOf(value);\n  }\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseForOwn = __webpack_require__(84),\n    baseIteratee = __webpack_require__(93);\n\n/**\n * Creates an object with the same keys as `object` and values generated by\n * running each own enumerable property of `object` through `iteratee`. The\n * iteratee function is invoked with three arguments: (value, key, object).\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    result[key] = iteratee(value, key, object);\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseFor = __webpack_require__(85),\n    keys = __webpack_require__(20);\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createBaseFor = __webpack_require__(86);\n\n/**\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\n * each property. Iteratee functions may exit iteration early by explicitly\n * returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports) {\n\n/**\n * Creates a base function for methods like `_.forIn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports) {\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = Object.keys;\n\n/**\n * The base implementation of `_.keys` which doesn't skip the constructor\n * property of prototypes or treat sparse arrays as dense.\n *\n * @private\n * @type Function\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  return nativeKeys(Object(object));\n}\n\nmodule.exports = baseKeys;\n\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseTimes = __webpack_require__(89),\n    isArguments = __webpack_require__(31),\n    isArray = __webpack_require__(0),\n    isLength = __webpack_require__(8),\n    isString = __webpack_require__(35);\n\n/**\n * Creates an array of index keys for `object` values of arrays,\n * `arguments` objects, and strings, otherwise `null` is returned.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array|null} Returns index keys, else `null`.\n */\nfunction indexKeys(object) {\n  var length = object ? object.length : undefined;\n  if (isLength(length) &&\n      (isArray(object) || isString(object) || isArguments(object))) {\n    return baseTimes(length, String);\n  }\n  return null;\n}\n\nmodule.exports = indexKeys;\n\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports) {\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArrayLike = __webpack_require__(32),\n    isObjectLike = __webpack_require__(2);\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object, else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseProperty = __webpack_require__(33);\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\nmodule.exports = getLength;\n\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports) {\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseMatches = __webpack_require__(94),\n    baseMatchesProperty = __webpack_require__(130),\n    identity = __webpack_require__(140),\n    isArray = __webpack_require__(0),\n    property = __webpack_require__(141);\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  var type = typeof value;\n  if (type == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (type == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseIsMatch = __webpack_require__(95),\n    getMatchData = __webpack_require__(125);\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    var key = matchData[0][0],\n        value = matchData[0][1];\n\n    return function(object) {\n      if (object == null) {\n        return false;\n      }\n      return object[key] === value &&\n        (value !== undefined || (key in Object(object)));\n    };\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Stack = __webpack_require__(37),\n    baseIsEqual = __webpack_require__(44);\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack,\n          result = customizer ? customizer(objValue, srcValue, key, object, source, stack) : undefined;\n\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports) {\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = { 'array': [], 'map': null };\n}\n\nmodule.exports = stackClear;\n\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assocDelete = __webpack_require__(38);\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      array = data.array;\n\n  return array ? assocDelete(array, key) : data.map['delete'](key);\n}\n\nmodule.exports = stackDelete;\n\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports) {\n\n/**\n * Performs a [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'user': 'fred' };\n * var other = { 'user': 'fred' };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assocGet = __webpack_require__(39);\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  var data = this.__data__,\n      array = data.array;\n\n  return array ? assocGet(array, key) : data.map.get(key);\n}\n\nmodule.exports = stackGet;\n\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assocHas = __webpack_require__(40);\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  var data = this.__data__,\n      array = data.array;\n\n  return array ? assocHas(array, key) : data.map.has(key);\n}\n\nmodule.exports = stackHas;\n\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar MapCache = __webpack_require__(102),\n    assocSet = __webpack_require__(43);\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache object.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__,\n      array = data.array;\n\n  if (array) {\n    if (array.length < (LARGE_ARRAY_SIZE - 1)) {\n      assocSet(array, key, value);\n    } else {\n      data.array = null;\n      data.map = new MapCache(array);\n    }\n  }\n  var map = data.map;\n  if (map) {\n    map.set(key, value);\n  }\n  return this;\n}\n\nmodule.exports = stackSet;\n\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar mapClear = __webpack_require__(103),\n    mapDelete = __webpack_require__(107),\n    mapGet = __webpack_require__(109),\n    mapHas = __webpack_require__(111),\n    mapSet = __webpack_require__(112);\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @param {Array} [values] The values to cache.\n */\nfunction MapCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = values[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add functions to the `MapCache`.\nMapCache.prototype.clear = mapClear;\nMapCache.prototype['delete'] = mapDelete;\nMapCache.prototype.get = mapGet;\nMapCache.prototype.has = mapHas;\nMapCache.prototype.set = mapSet;\n\nmodule.exports = MapCache;\n\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Hash = __webpack_require__(104),\n    Map = __webpack_require__(5);\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapClear() {\n  this.__data__ = { 'hash': new Hash, 'map': Map ? new Map : [], 'string': new Hash };\n}\n\nmodule.exports = mapClear;\n\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar nativeCreate = __webpack_require__(10);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Creates an hash object.\n *\n * @private\n * @returns {Object} Returns the new hash object.\n */\nfunction Hash() {}\n\n// Avoid inheriting from `Object.prototype` when possible.\nHash.prototype = nativeCreate ? nativeCreate(null) : objectProto;\n\nmodule.exports = Hash;\n\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isFunction = __webpack_require__(34),\n    isHostObject = __webpack_require__(19),\n    isObjectLike = __webpack_require__(2);\n\n/** Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns). */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(funcToString.call(value));\n  }\n  return isObjectLike(value) &&\n    (isHostObject(value) ? reIsNative : reIsHostCtor).test(value);\n}\n\nmodule.exports = isNative;\n\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is a global object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n */\nfunction checkGlobal(value) {\n  return (value && value.Object === Object) ? value : null;\n}\n\nmodule.exports = checkGlobal;\n\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Map = __webpack_require__(5),\n    assocDelete = __webpack_require__(38),\n    hashDelete = __webpack_require__(108),\n    isKeyable = __webpack_require__(12);\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapDelete(key) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    return hashDelete(typeof key == 'string' ? data.string : data.hash, key);\n  }\n  return Map ? data.map['delete'](key) : assocDelete(data.map, key);\n}\n\nmodule.exports = mapDelete;\n\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar hashHas = __webpack_require__(42);\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(hash, key) {\n  return hashHas(hash, key) && delete hash[key];\n}\n\nmodule.exports = hashDelete;\n\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Map = __webpack_require__(5),\n    assocGet = __webpack_require__(39),\n    hashGet = __webpack_require__(110),\n    isKeyable = __webpack_require__(12);\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapGet(key) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    return hashGet(typeof key == 'string' ? data.string : data.hash, key);\n  }\n  return Map ? data.map.get(key) : assocGet(data.map, key);\n}\n\nmodule.exports = mapGet;\n\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar nativeCreate = __webpack_require__(10);\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @param {Object} hash The hash to query.\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(hash, key) {\n  if (nativeCreate) {\n    var result = hash[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(hash, key) ? hash[key] : undefined;\n}\n\nmodule.exports = hashGet;\n\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Map = __webpack_require__(5),\n    assocHas = __webpack_require__(40),\n    hashHas = __webpack_require__(42),\n    isKeyable = __webpack_require__(12);\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapHas(key) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    return hashHas(typeof key == 'string' ? data.string : data.hash, key);\n  }\n  return Map ? data.map.has(key) : assocHas(data.map, key);\n}\n\nmodule.exports = mapHas;\n\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Map = __webpack_require__(5),\n    assocSet = __webpack_require__(43),\n    hashSet = __webpack_require__(113),\n    isKeyable = __webpack_require__(12);\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache object.\n */\nfunction mapSet(key, value) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    hashSet(typeof key == 'string' ? data.string : data.hash, key, value);\n  } else if (Map) {\n    data.map.set(key, value);\n  } else {\n    assocSet(data.map, key, value);\n  }\n  return this;\n}\n\nmodule.exports = mapSet;\n\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar nativeCreate = __webpack_require__(10);\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n */\nfunction hashSet(hash, key, value) {\n  hash[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n}\n\nmodule.exports = hashSet;\n\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Stack = __webpack_require__(37),\n    equalArrays = __webpack_require__(115),\n    equalByTag = __webpack_require__(117),\n    equalObjects = __webpack_require__(121),\n    getTag = __webpack_require__(122),\n    isArray = __webpack_require__(0),\n    isHostObject = __webpack_require__(19),\n    isTypedArray = __webpack_require__(124);\n\n/** Used to compose bitmasks for comparison styles. */\nvar PARTIAL_COMPARE_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = getTag(object);\n    if (objTag == argsTag) {\n      objTag = objectTag;\n    } else if (objTag != objectTag) {\n      objIsArr = isTypedArray(object);\n    }\n  }\n  if (!othIsArr) {\n    othTag = getTag(other);\n    if (othTag == argsTag) {\n      othTag = objectTag;\n    } else if (othTag != objectTag) {\n      othIsArr = isTypedArray(other);\n    }\n  }\n  var objIsObj = objTag == objectTag && !isHostObject(object),\n      othIsObj = othTag == objectTag && !isHostObject(other),\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !(objIsArr || objIsObj)) {\n    return equalByTag(object, other, objTag, equalFunc, customizer, bitmask);\n  }\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n  if (!isPartial) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, bitmask, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, bitmask, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar arraySome = __webpack_require__(116);\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n * @param {Object} [stack] Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n  var index = -1,\n      isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      isUnordered = bitmask & UNORDERED_COMPARE_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(array, other);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (isUnordered) {\n      if (!arraySome(other, function(othValue) {\n            return arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack);\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  return result;\n}\n\nmodule.exports = equalArrays;\n\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports) {\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Symbol = __webpack_require__(45),\n    Uint8Array = __webpack_require__(118),\n    mapToArray = __webpack_require__(119),\n    setToArray = __webpack_require__(120);\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = Symbol ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, equalFunc, customizer, bitmask) {\n  switch (tag) {\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n      // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n      // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n      return +object == +other;\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case numberTag:\n      // Treat `NaN` vs. `NaN` as equal.\n      return (object != +object) ? other != +other : object == +other;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings primitives and string\n      // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n      convert || (convert = setToArray);\n\n      // Recursively compare objects (susceptible to call stack limits).\n      return (isPartial || object.size == other.size) &&\n        equalFunc(convert(object), convert(other), customizer, bitmask | UNORDERED_COMPARE_FLAG);\n\n    case symbolTag:\n      return !!Symbol && (symbolValueOf.call(object) == symbolValueOf.call(other));\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar root = __webpack_require__(11);\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports) {\n\n/**\n * Converts `map` to an array.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports) {\n\n/**\n * Converts `set` to an array.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseHas = __webpack_require__(30),\n    keys = __webpack_require__(20);\n\n/** Used to compose bitmasks for comparison styles. */\nvar PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : baseHas(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  return result;\n}\n\nmodule.exports = equalObjects;\n\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Map = __webpack_require__(5),\n    Set = __webpack_require__(123);\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect maps and sets. */\nvar mapCtorString = Map ? funcToString.call(Map) : '',\n    setCtorString = Set ? funcToString.call(Set) : '';\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction getTag(value) {\n  return objectToString.call(value);\n}\n\n// Fallback for IE 11 providing `toStringTag` values for maps and sets.\nif ((Map && getTag(new Map) != mapTag) || (Set && getTag(new Set) != setTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : null,\n        ctorString = typeof Ctor == 'function' ? funcToString.call(Ctor) : '';\n\n    if (ctorString) {\n      if (ctorString == mapCtorString) {\n        return mapTag;\n      }\n      if (ctorString == setCtorString) {\n        return setTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getNative = __webpack_require__(22),\n    root = __webpack_require__(11);\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isLength = __webpack_require__(8),\n    isObjectLike = __webpack_require__(2);\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dateTag] = typedArrayTags[errorTag] =\ntypedArrayTags[funcTag] = typedArrayTags[mapTag] =\ntypedArrayTags[numberTag] = typedArrayTags[objectTag] =\ntypedArrayTags[regexpTag] = typedArrayTags[setTag] =\ntypedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nfunction isTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n}\n\nmodule.exports = isTypedArray;\n\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isStrictComparable = __webpack_require__(126),\n    toPairs = __webpack_require__(127);\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = toPairs(object),\n      length = result.length;\n\n  while (length--) {\n    result[length][2] = isStrictComparable(result[length][1]);\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(21);\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseToPairs = __webpack_require__(128),\n    keys = __webpack_require__(20);\n\n/**\n * Creates an array of own enumerable key-value pairs for `object`.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the new array of key-value pairs.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.toPairs(new Foo);\n * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n */\nfunction toPairs(object) {\n  return baseToPairs(object, keys(object));\n}\n\nmodule.exports = toPairs;\n\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar arrayMap = __webpack_require__(129);\n\n/**\n * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n * of key-value pairs for `object` corresponding to the property names of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the new array of key-value pairs.\n */\nfunction baseToPairs(object, props) {\n  return arrayMap(props, function(key) {\n    return [key, object[key]];\n  });\n}\n\nmodule.exports = baseToPairs;\n\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports) {\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseIsEqual = __webpack_require__(44),\n    get = __webpack_require__(46),\n    hasIn = __webpack_require__(134);\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toString = __webpack_require__(132);\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nfunction stringToPath(string) {\n  var result = [];\n  toString(string).replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n}\n\nmodule.exports = stringToPath;\n\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Symbol = __webpack_require__(45),\n    isSymbol = __webpack_require__(133);\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = Symbol ? symbolProto.toString : undefined;\n\n/**\n * Converts `value` to a string if it's not one. An empty string is returned\n * for `null` and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (value == null) {\n    return '';\n  }\n  if (isSymbol(value)) {\n    return Symbol ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toString;\n\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObjectLike = __webpack_require__(2);\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseHasIn = __webpack_require__(135),\n    hasPath = __webpack_require__(136);\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b.c');\n * // => true\n *\n * _.hasIn(object, ['a', 'b', 'c']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports) {\n\n/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseToPath = __webpack_require__(48),\n    isArguments = __webpack_require__(31),\n    isArray = __webpack_require__(0),\n    isIndex = __webpack_require__(36),\n    isKey = __webpack_require__(23),\n    isLength = __webpack_require__(8),\n    isString = __webpack_require__(35),\n    last = __webpack_require__(137),\n    parent = __webpack_require__(138);\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  if (object == null) {\n    return false;\n  }\n  var result = hasFunc(object, path);\n  if (!result && !isKey(path)) {\n    path = baseToPath(path);\n    object = parent(object, path);\n    if (object != null) {\n      path = last(path);\n      result = hasFunc(object, path);\n    }\n  }\n  var length = object ? object.length : undefined;\n  return result || (\n    !!length && isLength(length) && isIndex(path, length) &&\n    (isArray(object) || isString(object) || isArguments(object))\n  );\n}\n\nmodule.exports = hasPath;\n\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports) {\n\n/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array ? array.length : 0;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseSlice = __webpack_require__(139),\n    get = __webpack_require__(46);\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length == 1 ? object : get(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports) {\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports) {\n\n/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseProperty = __webpack_require__(33),\n    basePropertyDeep = __webpack_require__(142),\n    isKey = __webpack_require__(23);\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': { 'c': 2 } } },\n *   { 'a': { 'b': { 'c': 1 } } }\n * ];\n *\n * _.map(objects, _.property('a.b.c'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseGet = __webpack_require__(47);\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.deepmerge = factory();\n    }\n}(this, function () {\n\nreturn function deepmerge(target, src) {\n    var array = Array.isArray(src);\n    var dst = array && [] || {};\n\n    if (array) {\n        target = target || [];\n        dst = dst.concat(target);\n        src.forEach(function(e, i) {\n            if (typeof dst[i] === 'undefined') {\n                dst[i] = e;\n            } else if (typeof e === 'object') {\n                dst[i] = deepmerge(target[i], e);\n            } else {\n                if (target.indexOf(e) === -1) {\n                    dst.push(e);\n                }\n            }\n        });\n    } else {\n        if (target && typeof target === 'object') {\n            Object.keys(target).forEach(function (key) {\n                dst[key] = target[key];\n            })\n        }\n        Object.keys(src).forEach(function (key) {\n            if (typeof src[key] !== 'object' || !src[key]) {\n                dst[key] = src[key];\n            }\n            else {\n                if (!target[key]) {\n                    dst[key] = src[key];\n                } else {\n                    dst[key] = deepmerge(target[key], src[key]);\n                }\n            }\n        });\n    }\n\n    return dst;\n}\n\n}));\n\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.collapseChildren = collapseChildren;\nexports.expandChildren = expandChildren;\nexports.toggleChildren = toggleChildren;\nexports.visit = visit;\nexports.getNodeGroupByDepthCount = getNodeGroupByDepthCount;\nexports.getTooltipString = getTooltipString;\n\nvar _ramda = __webpack_require__(4);\n\nvar _sortAndSerialize = __webpack_require__(145);\n\nvar _sortAndSerialize2 = _interopRequireDefault(_sortAndSerialize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction collapseChildren(node) {\n  if (node.children) {\n    node._children = node.children;\n    node._children.forEach(collapseChildren);\n    node.children = null;\n  }\n}\n\nfunction expandChildren(node) {\n  if (node._children) {\n    node.children = node._children;\n    node.children.forEach(expandChildren);\n    node._children = null;\n  }\n}\n\nfunction toggleChildren(node) {\n  if (node.children) {\n    node._children = node.children;\n    node.children = null;\n  } else if (node._children) {\n    node.children = node._children;\n    node._children = null;\n  }\n  return node;\n}\n\nfunction visit(parent, visitFn, childrenFn) {\n  if (!parent) {\n    return;\n  }\n\n  visitFn(parent);\n\n  var children = childrenFn(parent);\n  if (children) {\n    var count = children.length;\n\n    for (var i = 0; i < count; i++) {\n      visit(children[i], visitFn, childrenFn);\n    }\n  }\n}\n\nfunction getNodeGroupByDepthCount(rootNode) {\n  var nodeGroupByDepthCount = [1];\n\n  var traverseFrom = function traverseFrom(node) {\n    var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (!node.children || node.children.length === 0) {\n      return 0;\n    }\n\n    if (nodeGroupByDepthCount.length <= depth + 1) {\n      nodeGroupByDepthCount.push(0);\n    }\n\n    nodeGroupByDepthCount[depth + 1] += node.children.length;\n\n    node.children.forEach(function (childNode) {\n      traverseFrom(childNode, depth + 1);\n    });\n  };\n\n  traverseFrom(rootNode);\n  return nodeGroupByDepthCount;\n}\n\nfunction getTooltipString(node, i, _ref) {\n  var _ref$indentationSize = _ref.indentationSize,\n      indentationSize = _ref$indentationSize === undefined ? 4 : _ref$indentationSize;\n\n  if (!(0, _ramda.is)(Object, node)) return '';\n\n  var spacer = (0, _ramda.join)('&nbsp;&nbsp;');\n  var cr2br = (0, _ramda.replace)(/\\n/g, '<br/>');\n  var spaces2nbsp = (0, _ramda.replace)(/\\s{2}/g, spacer(new Array(indentationSize)));\n  var json2html = (0, _ramda.pipe)(_sortAndSerialize2.default, cr2br, spaces2nbsp);\n\n  var children = node.children || node._children;\n\n  if (typeof node.value !== 'undefined') return json2html(node.value);\n  if (typeof node.object !== 'undefined') return json2html(node.object);\n  if (children && children.length) return 'childrenCount: ' + children.length;\n  return 'empty';\n}\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = sortAndSerialize;\n\nvar _ramda = __webpack_require__(4);\n\nfunction sortObject(obj, strict) {\n  if (obj instanceof Array) {\n    var ary = void 0;\n    if (strict) {\n      ary = obj.sort();\n    } else {\n      ary = obj;\n    }\n    return ary;\n  }\n\n  if (obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {\n    var tObj = {};\n    Object.keys(obj).sort().forEach(function (key) {\n      return tObj[key] = sortObject(obj[key]);\n    });\n    return tObj;\n  }\n\n  return obj;\n}\n\nfunction sortAndSerialize(obj) {\n  return JSON.stringify(sortObject(obj, true), undefined, 2);\n}\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.__esModule = true;\nexports.default = tooltip;\n\nvar _ramda = __webpack_require__(4);\n\nvar _utils = __webpack_require__(147);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _ref = _utils2.default.default || _utils2.default;\n\nvar prependClass = _ref.prependClass;\nvar functor = _ref.functor;\n\nvar defaultOptions = {\n  left: undefined, // mouseX\n  top: undefined, // mouseY\n  offset: { left: 0, top: 0 },\n  root: undefined\n};\n\nfunction tooltip(d3) {\n  var className = arguments.length <= 1 || arguments[1] === undefined ? 'tooltip' : arguments[1];\n  var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n  var _defaultOptions$optio = _extends({}, defaultOptions, options);\n\n  var left = _defaultOptions$optio.left;\n  var top = _defaultOptions$optio.top;\n  var offset = _defaultOptions$optio.offset;\n  var root = _defaultOptions$optio.root;\n\n  var attrs = { 'class': className };\n  var text = function text() {\n    return '';\n  };\n  var styles = {};\n\n  var el = undefined;\n  var anchor = root || d3.select('body');\n  var rootNode = anchor.node();\n\n  function tip(selection) {\n    selection.on({\n      'mouseover.tip': function mouseoverTip(node) {\n        var _d3$mouse = d3.mouse(rootNode);\n\n        var mouseX = _d3$mouse[0];\n        var mouseY = _d3$mouse[1];\n        var x = left || mouseX + offset.left;\n        var y = top || mouseY - offset.top;\n\n        anchor.selectAll('div.' + className).remove();\n\n        el = anchor.append('div').attr(prependClass(className)(attrs)).style(_extends({\n          position: 'absolute',\n          'z-index': 1001,\n          left: x + 'px',\n          top: y + 'px'\n        }, styles)).html(function () {\n          return text(node);\n        });\n      },\n\n      'mousemove.tip': function mousemoveTip(node) {\n        var _d3$mouse2 = d3.mouse(rootNode);\n\n        var mouseX = _d3$mouse2[0];\n        var mouseY = _d3$mouse2[1];\n        var x = left || mouseX + offset.left;\n        var y = top || mouseY - offset.top;\n\n        el.style({\n          left: x + 'px',\n          top: y + 'px'\n        }).html(function () {\n          return text(node);\n        });\n      },\n\n      'mouseout.tip': function mouseoutTip() {\n        return el.remove();\n      }\n    });\n  }\n\n  tip.attr = function setAttr(d) {\n    if ((0, _ramda.is)(Object, d)) {\n      attrs = _extends({}, attrs, d);\n    }\n    return this;\n  };\n\n  tip.style = function setStyle(d) {\n    if ((0, _ramda.is)(Object, d)) {\n      styles = _extends({}, styles, d);\n    }\n    return this;\n  };\n\n  tip.text = function setText(d) {\n    text = functor(d);\n    return this;\n  };\n\n  return tip;\n}\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _prependClass = __webpack_require__(148);\n\nvar _prependClass2 = _interopRequireDefault(_prependClass);\n\nvar _functor = __webpack_require__(49);\n\nvar _functor2 = _interopRequireDefault(_functor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  prependClass: _prependClass2.default,\n  functor: _functor2.default\n};\n\n/***/ }),\n/* 148 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nexports.__esModule = true;\nexports.default = prependClass;\n\nvar _ramda = __webpack_require__(4);\n\nvar _functor = __webpack_require__(49);\n\nvar _functor2 = _interopRequireDefault(_functor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction prependClass(className) {\n  return (0, _ramda.mapObjIndexed)(function (value, key) {\n    if (key === 'class') {\n      var _ret = function () {\n        var fn = (0, _functor2.default)(value);\n\n        return {\n          v: function v(d, i) {\n            var classNames = fn(d, i);\n            if (classNames !== className) {\n              return (0, _ramda.join)(' ', [className, classNames]);\n            }\n            return classNames;\n          }\n        };\n      }();\n\n      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n    }\n\n    return value;\n  });\n}\n\n/***/ }),\n/* 149 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3__ = __webpack_require__(150);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_d3__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ramda__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ramda___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_ramda__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_map2tree__ = __webpack_require__(151);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_map2tree___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_map2tree__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_deepmerge__ = __webpack_require__(213);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_deepmerge___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_deepmerge__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utils__ = __webpack_require__(214);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_d3tooltip__ = __webpack_require__(216);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_d3tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_d3tooltip__);\nfunction _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}var defaultOptions={state:undefined,rootKeyName:'state',pushMethod:'push',tree:undefined,id:'d3svg',style:{node:{colors:{'default':'#ccc',collapsed:'lightsteelblue',parent:'white'},radius:5},text:{colors:{'default':'black',hover:'skyblue'}},link:{stroke:'#000',fill:'none'}},size:500,aspectRatio:1.0,initialZoom:1,margin:{top:10,right:10,bottom:10,left:50},isSorted:false,heightBetweenNodesCoeff:2,widthBetweenNodesCoeff:1,transitionDuration:750,onClickText:function onClickText(){},tooltipOptions:{disabled:false,left:undefined,right:undefined,offset:{left:0,top:0},style:undefined}};/* harmony default export */ __webpack_exports__[\"a\"] = (function(DOMNode){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _deepmerge=__WEBPACK_IMPORTED_MODULE_3_deepmerge___default()(defaultOptions,options),id=_deepmerge.id,style=_deepmerge.style,size=_deepmerge.size,aspectRatio=_deepmerge.aspectRatio,initialZoom=_deepmerge.initialZoom,margin=_deepmerge.margin,isSorted=_deepmerge.isSorted,widthBetweenNodesCoeff=_deepmerge.widthBetweenNodesCoeff,heightBetweenNodesCoeff=_deepmerge.heightBetweenNodesCoeff,transitionDuration=_deepmerge.transitionDuration,state=_deepmerge.state,rootKeyName=_deepmerge.rootKeyName,pushMethod=_deepmerge.pushMethod,tree=_deepmerge.tree,tooltipOptions=_deepmerge.tooltipOptions,onClickText=_deepmerge.onClickText;var width=size-margin.left-margin.right;var height=size*aspectRatio-margin.top-margin.bottom;var fullWidth=size;var fullHeight=size*aspectRatio;var attr={id:id,preserveAspectRatio:'xMinYMin slice'};if(!style.width){attr.width=fullWidth;}if(!style.width||!style.height){attr.viewBox='0 0 '+fullWidth+' '+fullHeight;}var root=__WEBPACK_IMPORTED_MODULE_0_d3___default.a.select(DOMNode);var zoom=__WEBPACK_IMPORTED_MODULE_0_d3___default.a.behavior.zoom().scaleExtent([0.1,3]).scale(initialZoom);var vis=root.append('svg').attr(attr).style(Object.assign({cursor:'-webkit-grab'},style)).call(zoom.on('zoom',function(){var _d3$event=__WEBPACK_IMPORTED_MODULE_0_d3___default.a.event,translate=_d3$event.translate,scale=_d3$event.scale;vis.attr('transform','translate('+translate+')scale('+scale+')');})).append('g').attr({transform:'translate('+(margin.left+style.node.radius)+', '+margin.top+') scale('+initialZoom+')'});var layout=__WEBPACK_IMPORTED_MODULE_0_d3___default.a.layout.tree().size([width,height]);var data=void 0;if(isSorted){layout.sort(function(a,b){return b.name.toLowerCase()<a.name.toLowerCase()?1:-1;});}return function renderChart(){var nextState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:tree||state;data=!tree?__WEBPACK_IMPORTED_MODULE_2_map2tree___default()(nextState,{key:rootKeyName,pushMethod:pushMethod}):nextState;if(Object(__WEBPACK_IMPORTED_MODULE_1_ramda__[\"isEmpty\"])(data)||!data.name){data={name:'error',message:'Please provide a state map or a tree structure'};}var nodeIndex=0;var maxLabelLength=0;Object(__WEBPACK_IMPORTED_MODULE_4__utils__[\"d\" /* visit */])(data,function(node){return maxLabelLength=Math.max(node.name.length,maxLabelLength);},function(node){return node.children&&node.children.length>0?node.children:null;});data.x0=height/2;data.y0=0;/*eslint-disable*/update(data);/*eslint-enable*/function update(source){// path generator for links\nvar diagonal=__WEBPACK_IMPORTED_MODULE_0_d3___default.a.svg.diagonal().projection(function(d){return[d.y,d.x];});// set tree dimensions and spacing between branches and nodes\nvar maxNodeCountByLevel=Math.max.apply(Math,_toConsumableArray(Object(__WEBPACK_IMPORTED_MODULE_4__utils__[\"a\" /* getNodeGroupByDepthCount */])(data)));layout=layout.size([maxNodeCountByLevel*25*heightBetweenNodesCoeff,width]);var nodes=layout.nodes(data);var links=layout.links(nodes);nodes.forEach(function(node){return node.y=node.depth*(maxLabelLength*7*widthBetweenNodesCoeff);});// process the node selection\nvar node=vis.selectAll('g.node').property('__oldData__',function(d){return d;}).data(nodes,function(d){return d.id||(d.id=++nodeIndex);});var nodeEnter=node.enter().append('g').attr({'class':'node',transform:function transform(d){return'translate('+source.y0+','+source.x0+')';}}).style({fill:style.text.colors.default,cursor:'pointer'}).on({mouseover:function mouseover(d,i){__WEBPACK_IMPORTED_MODULE_0_d3___default.a.select(this).style({fill:style.text.colors.hover});},mouseout:function mouseout(d,i){__WEBPACK_IMPORTED_MODULE_0_d3___default.a.select(this).style({fill:style.text.colors.default});}});if(!tooltipOptions.disabled){nodeEnter.call(__WEBPACK_IMPORTED_MODULE_5_d3tooltip___default()(__WEBPACK_IMPORTED_MODULE_0_d3___default.a,'tooltip',Object.assign({},tooltipOptions,{root:root})).text(function(d,i){return Object(__WEBPACK_IMPORTED_MODULE_4__utils__[\"b\" /* getTooltipString */])(d,i,tooltipOptions);}).style(tooltipOptions.style));}nodeEnter.append('circle').attr({'class':'nodeCircle'}).on({click:function click(clickedNode){if(__WEBPACK_IMPORTED_MODULE_0_d3___default.a.event.defaultPrevented)return;update(Object(__WEBPACK_IMPORTED_MODULE_4__utils__[\"c\" /* toggleChildren */])(clickedNode));}});nodeEnter.append('text').attr({'class':'nodeText',dy:'.35em'}).style({'fill-opacity':0}).text(function(d){return d.name;}).on({click:onClickText});// update the text to reflect whether node has children or not\nnode.select('text').attr({x:function x(d){return d.children||d._children?-(style.node.radius+10):style.node.radius+10;},'text-anchor':function textAnchor(d){return d.children||d._children?'end':'start';}}).text(function(d){return d.name;});// change the circle fill depending on whether it has children and is collapsed\nnode.select('circle.nodeCircle').attr({r:style.node.radius}).style({stroke:'black','stroke-width':'1.5px',fill:function fill(d){return d._children?style.node.colors.collapsed:d.children?style.node.colors.parent:style.node.colors.default;}});// transition nodes to their new position\nvar nodeUpdate=node.transition().duration(transitionDuration).attr({transform:function transform(d){return'translate('+d.y+','+d.x+')';}});// fade the text in\nnodeUpdate.select('text').style('fill-opacity',1);// restore the circle\nnodeUpdate.select('circle').attr('r',7);// blink updated nodes\nnodeUpdate.filter(function flick(d){// test whether the relevant properties of d match\n// the equivalent property of the oldData\n// also test whether the old data exists,\n// to catch the entering elements!\nreturn!this.__oldData__||d.value!==this.__oldData__.value;}).style('fill-opacity','0.3').transition().duration(100).style('fill-opacity','1');// transition exiting nodes to the parent's new position\nvar nodeExit=node.exit().transition().duration(transitionDuration).attr({transform:function transform(d){return'translate('+source.y+','+source.x+')';}}).remove();nodeExit.select('circle').attr('r',0);nodeExit.select('text').style('fill-opacity',0);// update the links\nvar link=vis.selectAll('path.link').data(links,function(d){return d.target.id;});// enter any new links at the parent's previous position\nlink.enter().insert('path','g').attr({'class':'link',d:function d(_d){var o={x:source.x0,y:source.y0};return diagonal({source:o,target:o});}}).style(style.link);// transition links to their new position\nlink.transition().duration(transitionDuration).attr({d:diagonal});// transition exiting nodes to the parent's new position\nlink.exit().transition().duration(transitionDuration).attr({d:function d(_d2){var o={x:source.x,y:source.y};return diagonal({source:o,target:o});}}).remove();// delete the old data once it's no longer needed\nnode.property('__oldData__',null);// stash the old positions for transition\nnodes.forEach(function(d){d.x0=d.x;d.y0=d.y;});}};});\n\n/***/ }),\n/* 150 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n/***/ }),\n/* 151 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.default = map2tree;\n\nvar _isArray = __webpack_require__(1);\n\nvar _isArray2 = _interopRequireDefault(_isArray);\n\nvar _isPlainObject = __webpack_require__(152);\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _mapValues = __webpack_require__(153);\n\nvar _mapValues2 = _interopRequireDefault(_mapValues);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction visit(parent, visitFn, childrenFn) {\n  if (!parent) return;\n\n  visitFn(parent);\n\n  var children = childrenFn(parent);\n  if (children) {\n    var count = children.length;\n    for (var i = 0; i < count; i++) {\n      visit(children[i], visitFn, childrenFn);\n    }\n  }\n}\n\nfunction getNode(tree, key) {\n  var node = null;\n\n  visit(tree, function (d) {\n    if (d.name === key) {\n      node = d;\n    }\n  }, function (d) {\n    return d.children;\n  });\n\n  return node;\n}\n\nfunction map2tree(root) {\n  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n  var tree = arguments.length <= 2 || arguments[2] === undefined ? { name: options.key || 'state', children: [] } : arguments[2];\n\n  if (!(0, _isPlainObject2.default)(root) && root && !root.toJS) {\n    return {};\n  }\n\n  var _options$key = options.key;\n  var rootNodeKey = _options$key === undefined ? 'state' : _options$key;\n  var _options$pushMethod = options.pushMethod;\n  var pushMethod = _options$pushMethod === undefined ? 'push' : _options$pushMethod;\n\n  var currentNode = getNode(tree, rootNodeKey);\n\n  if (currentNode === null) {\n    return {};\n  }\n\n  (0, _mapValues2.default)(root && root.toJS ? root.toJS() : root, function (maybeImmutable, key) {\n    var value = maybeImmutable && maybeImmutable.toJS ? maybeImmutable.toJS() : maybeImmutable;\n    var newNode = { name: key };\n\n    if ((0, _isArray2.default)(value)) {\n      newNode.children = [];\n\n      for (var i = 0; i < value.length; i++) {\n        var _newNode$children$pus;\n\n        newNode.children[pushMethod]((_newNode$children$pus = {\n          name: key + '[' + i + ']'\n        }, _newNode$children$pus[(0, _isPlainObject2.default)(value[i]) ? 'object' : 'value'] = value[i], _newNode$children$pus));\n      }\n    } else if ((0, _isPlainObject2.default)(value)) {\n      newNode.children = [];\n    } else {\n      newNode.value = value;\n    }\n\n    currentNode.children[pushMethod](newNode);\n\n    map2tree(value, { key: key, pushMethod: pushMethod }, tree);\n  });\n\n  return tree;\n}\n\n/***/ }),\n/* 152 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isHostObject = __webpack_require__(24),\n    isObjectLike = __webpack_require__(3);\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar getPrototypeOf = Object.getPrototypeOf;\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = objectProto;\n  if (typeof value.constructor == 'function') {\n    proto = getPrototypeOf(value);\n  }\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n\n\n/***/ }),\n/* 153 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseForOwn = __webpack_require__(154),\n    baseIteratee = __webpack_require__(163);\n\n/**\n * Creates an object with the same keys as `object` and values generated by\n * running each own enumerable property of `object` through `iteratee`. The\n * iteratee function is invoked with three arguments: (value, key, object).\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    result[key] = iteratee(value, key, object);\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n\n\n/***/ }),\n/* 154 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseFor = __webpack_require__(155),\n    keys = __webpack_require__(25);\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n\n\n/***/ }),\n/* 155 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createBaseFor = __webpack_require__(156);\n\n/**\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\n * each property. Iteratee functions may exit iteration early by explicitly\n * returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n\n\n/***/ }),\n/* 156 */\n/***/ (function(module, exports) {\n\n/**\n * Creates a base function for methods like `_.forIn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n\n\n/***/ }),\n/* 157 */\n/***/ (function(module, exports) {\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = Object.keys;\n\n/**\n * The base implementation of `_.keys` which doesn't skip the constructor\n * property of prototypes or treat sparse arrays as dense.\n *\n * @private\n * @type Function\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  return nativeKeys(Object(object));\n}\n\nmodule.exports = baseKeys;\n\n\n/***/ }),\n/* 158 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseTimes = __webpack_require__(159),\n    isArguments = __webpack_require__(51),\n    isArray = __webpack_require__(1),\n    isLength = __webpack_require__(13),\n    isString = __webpack_require__(55);\n\n/**\n * Creates an array of index keys for `object` values of arrays,\n * `arguments` objects, and strings, otherwise `null` is returned.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array|null} Returns index keys, else `null`.\n */\nfunction indexKeys(object) {\n  var length = object ? object.length : undefined;\n  if (isLength(length) &&\n      (isArray(object) || isString(object) || isArguments(object))) {\n    return baseTimes(length, String);\n  }\n  return null;\n}\n\nmodule.exports = indexKeys;\n\n\n/***/ }),\n/* 159 */\n/***/ (function(module, exports) {\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n\n\n/***/ }),\n/* 160 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArrayLike = __webpack_require__(52),\n    isObjectLike = __webpack_require__(3);\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object, else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n\n\n/***/ }),\n/* 161 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseProperty = __webpack_require__(53);\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\nmodule.exports = getLength;\n\n\n/***/ }),\n/* 162 */\n/***/ (function(module, exports) {\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n\n\n/***/ }),\n/* 163 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseMatches = __webpack_require__(164),\n    baseMatchesProperty = __webpack_require__(200),\n    identity = __webpack_require__(210),\n    isArray = __webpack_require__(1),\n    property = __webpack_require__(211);\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  var type = typeof value;\n  if (type == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (type == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n\n\n/***/ }),\n/* 164 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseIsMatch = __webpack_require__(165),\n    getMatchData = __webpack_require__(195);\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    var key = matchData[0][0],\n        value = matchData[0][1];\n\n    return function(object) {\n      if (object == null) {\n        return false;\n      }\n      return object[key] === value &&\n        (value !== undefined || (key in Object(object)));\n    };\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n\n\n/***/ }),\n/* 165 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Stack = __webpack_require__(57),\n    baseIsEqual = __webpack_require__(63);\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack,\n          result = customizer ? customizer(objValue, srcValue, key, object, source, stack) : undefined;\n\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n\n\n/***/ }),\n/* 166 */\n/***/ (function(module, exports) {\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = { 'array': [], 'map': null };\n}\n\nmodule.exports = stackClear;\n\n\n/***/ }),\n/* 167 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assocDelete = __webpack_require__(58);\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      array = data.array;\n\n  return array ? assocDelete(array, key) : data.map['delete'](key);\n}\n\nmodule.exports = stackDelete;\n\n\n/***/ }),\n/* 168 */\n/***/ (function(module, exports) {\n\n/**\n * Performs a [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'user': 'fred' };\n * var other = { 'user': 'fred' };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n\n\n/***/ }),\n/* 169 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assocGet = __webpack_require__(59);\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  var data = this.__data__,\n      array = data.array;\n\n  return array ? assocGet(array, key) : data.map.get(key);\n}\n\nmodule.exports = stackGet;\n\n\n/***/ }),\n/* 170 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assocHas = __webpack_require__(60);\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  var data = this.__data__,\n      array = data.array;\n\n  return array ? assocHas(array, key) : data.map.has(key);\n}\n\nmodule.exports = stackHas;\n\n\n/***/ }),\n/* 171 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar MapCache = __webpack_require__(172),\n    assocSet = __webpack_require__(62);\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache object.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__,\n      array = data.array;\n\n  if (array) {\n    if (array.length < (LARGE_ARRAY_SIZE - 1)) {\n      assocSet(array, key, value);\n    } else {\n      data.array = null;\n      data.map = new MapCache(array);\n    }\n  }\n  var map = data.map;\n  if (map) {\n    map.set(key, value);\n  }\n  return this;\n}\n\nmodule.exports = stackSet;\n\n\n/***/ }),\n/* 172 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar mapClear = __webpack_require__(173),\n    mapDelete = __webpack_require__(177),\n    mapGet = __webpack_require__(179),\n    mapHas = __webpack_require__(181),\n    mapSet = __webpack_require__(182);\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @param {Array} [values] The values to cache.\n */\nfunction MapCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = values[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add functions to the `MapCache`.\nMapCache.prototype.clear = mapClear;\nMapCache.prototype['delete'] = mapDelete;\nMapCache.prototype.get = mapGet;\nMapCache.prototype.has = mapHas;\nMapCache.prototype.set = mapSet;\n\nmodule.exports = MapCache;\n\n\n/***/ }),\n/* 173 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Hash = __webpack_require__(174),\n    Map = __webpack_require__(7);\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapClear() {\n  this.__data__ = { 'hash': new Hash, 'map': Map ? new Map : [], 'string': new Hash };\n}\n\nmodule.exports = mapClear;\n\n\n/***/ }),\n/* 174 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar nativeCreate = __webpack_require__(15);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Creates an hash object.\n *\n * @private\n * @returns {Object} Returns the new hash object.\n */\nfunction Hash() {}\n\n// Avoid inheriting from `Object.prototype` when possible.\nHash.prototype = nativeCreate ? nativeCreate(null) : objectProto;\n\nmodule.exports = Hash;\n\n\n/***/ }),\n/* 175 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isFunction = __webpack_require__(54),\n    isHostObject = __webpack_require__(24),\n    isObjectLike = __webpack_require__(3);\n\n/** Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns). */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(funcToString.call(value));\n  }\n  return isObjectLike(value) &&\n    (isHostObject(value) ? reIsNative : reIsHostCtor).test(value);\n}\n\nmodule.exports = isNative;\n\n\n/***/ }),\n/* 176 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is a global object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n */\nfunction checkGlobal(value) {\n  return (value && value.Object === Object) ? value : null;\n}\n\nmodule.exports = checkGlobal;\n\n\n/***/ }),\n/* 177 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Map = __webpack_require__(7),\n    assocDelete = __webpack_require__(58),\n    hashDelete = __webpack_require__(178),\n    isKeyable = __webpack_require__(17);\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapDelete(key) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    return hashDelete(typeof key == 'string' ? data.string : data.hash, key);\n  }\n  return Map ? data.map['delete'](key) : assocDelete(data.map, key);\n}\n\nmodule.exports = mapDelete;\n\n\n/***/ }),\n/* 178 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar hashHas = __webpack_require__(61);\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(hash, key) {\n  return hashHas(hash, key) && delete hash[key];\n}\n\nmodule.exports = hashDelete;\n\n\n/***/ }),\n/* 179 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Map = __webpack_require__(7),\n    assocGet = __webpack_require__(59),\n    hashGet = __webpack_require__(180),\n    isKeyable = __webpack_require__(17);\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapGet(key) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    return hashGet(typeof key == 'string' ? data.string : data.hash, key);\n  }\n  return Map ? data.map.get(key) : assocGet(data.map, key);\n}\n\nmodule.exports = mapGet;\n\n\n/***/ }),\n/* 180 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar nativeCreate = __webpack_require__(15);\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @param {Object} hash The hash to query.\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(hash, key) {\n  if (nativeCreate) {\n    var result = hash[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(hash, key) ? hash[key] : undefined;\n}\n\nmodule.exports = hashGet;\n\n\n/***/ }),\n/* 181 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Map = __webpack_require__(7),\n    assocHas = __webpack_require__(60),\n    hashHas = __webpack_require__(61),\n    isKeyable = __webpack_require__(17);\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapHas(key) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    return hashHas(typeof key == 'string' ? data.string : data.hash, key);\n  }\n  return Map ? data.map.has(key) : assocHas(data.map, key);\n}\n\nmodule.exports = mapHas;\n\n\n/***/ }),\n/* 182 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Map = __webpack_require__(7),\n    assocSet = __webpack_require__(62),\n    hashSet = __webpack_require__(183),\n    isKeyable = __webpack_require__(17);\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache object.\n */\nfunction mapSet(key, value) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    hashSet(typeof key == 'string' ? data.string : data.hash, key, value);\n  } else if (Map) {\n    data.map.set(key, value);\n  } else {\n    assocSet(data.map, key, value);\n  }\n  return this;\n}\n\nmodule.exports = mapSet;\n\n\n/***/ }),\n/* 183 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar nativeCreate = __webpack_require__(15);\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n */\nfunction hashSet(hash, key, value) {\n  hash[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n}\n\nmodule.exports = hashSet;\n\n\n/***/ }),\n/* 184 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Stack = __webpack_require__(57),\n    equalArrays = __webpack_require__(185),\n    equalByTag = __webpack_require__(187),\n    equalObjects = __webpack_require__(191),\n    getTag = __webpack_require__(192),\n    isArray = __webpack_require__(1),\n    isHostObject = __webpack_require__(24),\n    isTypedArray = __webpack_require__(194);\n\n/** Used to compose bitmasks for comparison styles. */\nvar PARTIAL_COMPARE_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = getTag(object);\n    if (objTag == argsTag) {\n      objTag = objectTag;\n    } else if (objTag != objectTag) {\n      objIsArr = isTypedArray(object);\n    }\n  }\n  if (!othIsArr) {\n    othTag = getTag(other);\n    if (othTag == argsTag) {\n      othTag = objectTag;\n    } else if (othTag != objectTag) {\n      othIsArr = isTypedArray(other);\n    }\n  }\n  var objIsObj = objTag == objectTag && !isHostObject(object),\n      othIsObj = othTag == objectTag && !isHostObject(other),\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !(objIsArr || objIsObj)) {\n    return equalByTag(object, other, objTag, equalFunc, customizer, bitmask);\n  }\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n  if (!isPartial) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, bitmask, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, bitmask, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n\n\n/***/ }),\n/* 185 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar arraySome = __webpack_require__(186);\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n * @param {Object} [stack] Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n  var index = -1,\n      isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      isUnordered = bitmask & UNORDERED_COMPARE_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(array, other);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (isUnordered) {\n      if (!arraySome(other, function(othValue) {\n            return arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack);\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  return result;\n}\n\nmodule.exports = equalArrays;\n\n\n/***/ }),\n/* 186 */\n/***/ (function(module, exports) {\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n\n\n/***/ }),\n/* 187 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Symbol = __webpack_require__(64),\n    Uint8Array = __webpack_require__(188),\n    mapToArray = __webpack_require__(189),\n    setToArray = __webpack_require__(190);\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = Symbol ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, equalFunc, customizer, bitmask) {\n  switch (tag) {\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n      // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n      // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n      return +object == +other;\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case numberTag:\n      // Treat `NaN` vs. `NaN` as equal.\n      return (object != +object) ? other != +other : object == +other;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings primitives and string\n      // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n      convert || (convert = setToArray);\n\n      // Recursively compare objects (susceptible to call stack limits).\n      return (isPartial || object.size == other.size) &&\n        equalFunc(convert(object), convert(other), customizer, bitmask | UNORDERED_COMPARE_FLAG);\n\n    case symbolTag:\n      return !!Symbol && (symbolValueOf.call(object) == symbolValueOf.call(other));\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n\n\n/***/ }),\n/* 188 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar root = __webpack_require__(16);\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n\n\n/***/ }),\n/* 189 */\n/***/ (function(module, exports) {\n\n/**\n * Converts `map` to an array.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n\n\n/***/ }),\n/* 190 */\n/***/ (function(module, exports) {\n\n/**\n * Converts `set` to an array.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n\n\n/***/ }),\n/* 191 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseHas = __webpack_require__(50),\n    keys = __webpack_require__(25);\n\n/** Used to compose bitmasks for comparison styles. */\nvar PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : baseHas(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  return result;\n}\n\nmodule.exports = equalObjects;\n\n\n/***/ }),\n/* 192 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Map = __webpack_require__(7),\n    Set = __webpack_require__(193);\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect maps and sets. */\nvar mapCtorString = Map ? funcToString.call(Map) : '',\n    setCtorString = Set ? funcToString.call(Set) : '';\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction getTag(value) {\n  return objectToString.call(value);\n}\n\n// Fallback for IE 11 providing `toStringTag` values for maps and sets.\nif ((Map && getTag(new Map) != mapTag) || (Set && getTag(new Set) != setTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : null,\n        ctorString = typeof Ctor == 'function' ? funcToString.call(Ctor) : '';\n\n    if (ctorString) {\n      if (ctorString == mapCtorString) {\n        return mapTag;\n      }\n      if (ctorString == setCtorString) {\n        return setTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n\n\n/***/ }),\n/* 193 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getNative = __webpack_require__(27),\n    root = __webpack_require__(16);\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n\n\n/***/ }),\n/* 194 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isLength = __webpack_require__(13),\n    isObjectLike = __webpack_require__(3);\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dateTag] = typedArrayTags[errorTag] =\ntypedArrayTags[funcTag] = typedArrayTags[mapTag] =\ntypedArrayTags[numberTag] = typedArrayTags[objectTag] =\ntypedArrayTags[regexpTag] = typedArrayTags[setTag] =\ntypedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nfunction isTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n}\n\nmodule.exports = isTypedArray;\n\n\n/***/ }),\n/* 195 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isStrictComparable = __webpack_require__(196),\n    toPairs = __webpack_require__(197);\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = toPairs(object),\n      length = result.length;\n\n  while (length--) {\n    result[length][2] = isStrictComparable(result[length][1]);\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n\n\n/***/ }),\n/* 196 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(26);\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n\n\n/***/ }),\n/* 197 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseToPairs = __webpack_require__(198),\n    keys = __webpack_require__(25);\n\n/**\n * Creates an array of own enumerable key-value pairs for `object`.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the new array of key-value pairs.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.toPairs(new Foo);\n * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n */\nfunction toPairs(object) {\n  return baseToPairs(object, keys(object));\n}\n\nmodule.exports = toPairs;\n\n\n/***/ }),\n/* 198 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar arrayMap = __webpack_require__(199);\n\n/**\n * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n * of key-value pairs for `object` corresponding to the property names of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the new array of key-value pairs.\n */\nfunction baseToPairs(object, props) {\n  return arrayMap(props, function(key) {\n    return [key, object[key]];\n  });\n}\n\nmodule.exports = baseToPairs;\n\n\n/***/ }),\n/* 199 */\n/***/ (function(module, exports) {\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n\n\n/***/ }),\n/* 200 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseIsEqual = __webpack_require__(63),\n    get = __webpack_require__(65),\n    hasIn = __webpack_require__(204);\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n\n\n/***/ }),\n/* 201 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toString = __webpack_require__(202);\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nfunction stringToPath(string) {\n  var result = [];\n  toString(string).replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n}\n\nmodule.exports = stringToPath;\n\n\n/***/ }),\n/* 202 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Symbol = __webpack_require__(64),\n    isSymbol = __webpack_require__(203);\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = Symbol ? symbolProto.toString : undefined;\n\n/**\n * Converts `value` to a string if it's not one. An empty string is returned\n * for `null` and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (value == null) {\n    return '';\n  }\n  if (isSymbol(value)) {\n    return Symbol ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toString;\n\n\n/***/ }),\n/* 203 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObjectLike = __webpack_require__(3);\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n\n\n/***/ }),\n/* 204 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseHasIn = __webpack_require__(205),\n    hasPath = __webpack_require__(206);\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b.c');\n * // => true\n *\n * _.hasIn(object, ['a', 'b', 'c']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n\n\n/***/ }),\n/* 205 */\n/***/ (function(module, exports) {\n\n/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n\n\n/***/ }),\n/* 206 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseToPath = __webpack_require__(67),\n    isArguments = __webpack_require__(51),\n    isArray = __webpack_require__(1),\n    isIndex = __webpack_require__(56),\n    isKey = __webpack_require__(28),\n    isLength = __webpack_require__(13),\n    isString = __webpack_require__(55),\n    last = __webpack_require__(207),\n    parent = __webpack_require__(208);\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  if (object == null) {\n    return false;\n  }\n  var result = hasFunc(object, path);\n  if (!result && !isKey(path)) {\n    path = baseToPath(path);\n    object = parent(object, path);\n    if (object != null) {\n      path = last(path);\n      result = hasFunc(object, path);\n    }\n  }\n  var length = object ? object.length : undefined;\n  return result || (\n    !!length && isLength(length) && isIndex(path, length) &&\n    (isArray(object) || isString(object) || isArguments(object))\n  );\n}\n\nmodule.exports = hasPath;\n\n\n/***/ }),\n/* 207 */\n/***/ (function(module, exports) {\n\n/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array ? array.length : 0;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n\n\n/***/ }),\n/* 208 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseSlice = __webpack_require__(209),\n    get = __webpack_require__(65);\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length == 1 ? object : get(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n\n\n/***/ }),\n/* 209 */\n/***/ (function(module, exports) {\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n\n\n/***/ }),\n/* 210 */\n/***/ (function(module, exports) {\n\n/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n\n\n/***/ }),\n/* 211 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseProperty = __webpack_require__(53),\n    basePropertyDeep = __webpack_require__(212),\n    isKey = __webpack_require__(28);\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': { 'c': 2 } } },\n *   { 'a': { 'b': { 'c': 1 } } }\n * ];\n *\n * _.map(objects, _.property('a.b.c'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n\n\n/***/ }),\n/* 212 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseGet = __webpack_require__(66);\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n\n\n/***/ }),\n/* 213 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.deepmerge = factory();\n    }\n}(this, function () {\n\nreturn function deepmerge(target, src) {\n    var array = Array.isArray(src);\n    var dst = array && [] || {};\n\n    if (array) {\n        target = target || [];\n        dst = dst.concat(target);\n        src.forEach(function(e, i) {\n            if (typeof dst[i] === 'undefined') {\n                dst[i] = e;\n            } else if (typeof e === 'object') {\n                dst[i] = deepmerge(target[i], e);\n            } else {\n                if (target.indexOf(e) === -1) {\n                    dst.push(e);\n                }\n            }\n        });\n    } else {\n        if (target && typeof target === 'object') {\n            Object.keys(target).forEach(function (key) {\n                dst[key] = target[key];\n            })\n        }\n        Object.keys(src).forEach(function (key) {\n            if (typeof src[key] !== 'object' || !src[key]) {\n                dst[key] = src[key];\n            }\n            else {\n                if (!target[key]) {\n                    dst[key] = src[key];\n                } else {\n                    dst[key] = deepmerge(target[key], src[key]);\n                }\n            }\n        });\n    }\n\n    return dst;\n}\n\n}));\n\n\n/***/ }),\n/* 214 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export collapseChildren */\n/* unused harmony export expandChildren */\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = toggleChildren;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = visit;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getNodeGroupByDepthCount;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = getTooltipString;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_ramda__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_ramda___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_ramda__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__sortAndSerialize__ = __webpack_require__(215);\nfunction collapseChildren(node){if(node.children){node._children=node.children;node._children.forEach(collapseChildren);node.children=null;}}function expandChildren(node){if(node._children){node.children=node._children;node.children.forEach(expandChildren);node._children=null;}}function toggleChildren(node){if(node.children){node._children=node.children;node.children=null;}else if(node._children){node.children=node._children;node._children=null;}return node;}function visit(parent,visitFn,childrenFn){if(!parent){return;}visitFn(parent);var children=childrenFn(parent);if(children){var count=children.length;for(var i=0;i<count;i++){visit(children[i],visitFn,childrenFn);}}}function getNodeGroupByDepthCount(rootNode){var nodeGroupByDepthCount=[1];var traverseFrom=function traverseFrom(node){var depth=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;if(!node.children||node.children.length===0){return 0;}if(nodeGroupByDepthCount.length<=depth+1){nodeGroupByDepthCount.push(0);}nodeGroupByDepthCount[depth+1]+=node.children.length;node.children.forEach(function(childNode){traverseFrom(childNode,depth+1);});};traverseFrom(rootNode);return nodeGroupByDepthCount;}function getTooltipString(node,i,_ref){var _ref$indentationSize=_ref.indentationSize,indentationSize=_ref$indentationSize===undefined?4:_ref$indentationSize;if(!Object(__WEBPACK_IMPORTED_MODULE_0_ramda__[\"is\"])(Object,node))return'';var spacer=Object(__WEBPACK_IMPORTED_MODULE_0_ramda__[\"join\"])('&nbsp;&nbsp;');var cr2br=Object(__WEBPACK_IMPORTED_MODULE_0_ramda__[\"replace\"])(/\\n/g,'<br/>');var spaces2nbsp=Object(__WEBPACK_IMPORTED_MODULE_0_ramda__[\"replace\"])(/\\s{2}/g,spacer(new Array(indentationSize)));var json2html=Object(__WEBPACK_IMPORTED_MODULE_0_ramda__[\"pipe\"])(__WEBPACK_IMPORTED_MODULE_1__sortAndSerialize__[\"a\" /* default */],cr2br,spaces2nbsp);var children=node.children||node._children;if(typeof node.value!=='undefined')return json2html(node.value);if(typeof node.object!=='undefined')return json2html(node.object);if(children&&children.length)return'childrenCount: '+children.length;return'empty';}\n\n/***/ }),\n/* 215 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = sortAndSerialize;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_ramda__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_ramda___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_ramda__);\nvar _typeof=typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};function sortObject(obj,strict){if(obj instanceof Array){var ary=void 0;if(strict){ary=obj.sort();}else{ary=obj;}return ary;}if(obj&&(typeof obj==='undefined'?'undefined':_typeof(obj))==='object'){var tObj={};Object.keys(obj).sort().forEach(function(key){return tObj[key]=sortObject(obj[key]);});return tObj;}return obj;}function sortAndSerialize(obj){return JSON.stringify(sortObject(obj,true),undefined,2);}\n\n/***/ }),\n/* 216 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.__esModule = true;\nexports.default = tooltip;\n\nvar _ramda = __webpack_require__(6);\n\nvar _utils = __webpack_require__(217);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _ref = _utils2.default.default || _utils2.default;\n\nvar prependClass = _ref.prependClass;\nvar functor = _ref.functor;\n\nvar defaultOptions = {\n  left: undefined, // mouseX\n  top: undefined, // mouseY\n  offset: { left: 0, top: 0 },\n  root: undefined\n};\n\nfunction tooltip(d3) {\n  var className = arguments.length <= 1 || arguments[1] === undefined ? 'tooltip' : arguments[1];\n  var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n  var _defaultOptions$optio = _extends({}, defaultOptions, options);\n\n  var left = _defaultOptions$optio.left;\n  var top = _defaultOptions$optio.top;\n  var offset = _defaultOptions$optio.offset;\n  var root = _defaultOptions$optio.root;\n\n  var attrs = { 'class': className };\n  var text = function text() {\n    return '';\n  };\n  var styles = {};\n\n  var el = undefined;\n  var anchor = root || d3.select('body');\n  var rootNode = anchor.node();\n\n  function tip(selection) {\n    selection.on({\n      'mouseover.tip': function mouseoverTip(node) {\n        var _d3$mouse = d3.mouse(rootNode);\n\n        var mouseX = _d3$mouse[0];\n        var mouseY = _d3$mouse[1];\n        var x = left || mouseX + offset.left;\n        var y = top || mouseY - offset.top;\n\n        anchor.selectAll('div.' + className).remove();\n\n        el = anchor.append('div').attr(prependClass(className)(attrs)).style(_extends({\n          position: 'absolute',\n          'z-index': 1001,\n          left: x + 'px',\n          top: y + 'px'\n        }, styles)).html(function () {\n          return text(node);\n        });\n      },\n\n      'mousemove.tip': function mousemoveTip(node) {\n        var _d3$mouse2 = d3.mouse(rootNode);\n\n        var mouseX = _d3$mouse2[0];\n        var mouseY = _d3$mouse2[1];\n        var x = left || mouseX + offset.left;\n        var y = top || mouseY - offset.top;\n\n        el.style({\n          left: x + 'px',\n          top: y + 'px'\n        }).html(function () {\n          return text(node);\n        });\n      },\n\n      'mouseout.tip': function mouseoutTip() {\n        return el.remove();\n      }\n    });\n  }\n\n  tip.attr = function setAttr(d) {\n    if ((0, _ramda.is)(Object, d)) {\n      attrs = _extends({}, attrs, d);\n    }\n    return this;\n  };\n\n  tip.style = function setStyle(d) {\n    if ((0, _ramda.is)(Object, d)) {\n      styles = _extends({}, styles, d);\n    }\n    return this;\n  };\n\n  tip.text = function setText(d) {\n    text = functor(d);\n    return this;\n  };\n\n  return tip;\n}\n\n/***/ }),\n/* 217 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _prependClass = __webpack_require__(218);\n\nvar _prependClass2 = _interopRequireDefault(_prependClass);\n\nvar _functor = __webpack_require__(68);\n\nvar _functor2 = _interopRequireDefault(_functor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  prependClass: _prependClass2.default,\n  functor: _functor2.default\n};\n\n/***/ }),\n/* 218 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nexports.__esModule = true;\nexports.default = prependClass;\n\nvar _ramda = __webpack_require__(6);\n\nvar _functor = __webpack_require__(68);\n\nvar _functor2 = _interopRequireDefault(_functor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction prependClass(className) {\n  return (0, _ramda.mapObjIndexed)(function (value, key) {\n    if (key === 'class') {\n      var _ret = function () {\n        var fn = (0, _functor2.default)(value);\n\n        return {\n          v: function v(d, i) {\n            var classNames = fn(d, i);\n            if (classNames !== className) {\n              return (0, _ramda.join)(' ', [className, classNames]);\n            }\n            return classNames;\n          }\n        };\n      }();\n\n      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n    }\n\n    return value;\n  });\n}\n\n/***/ }),\n/* 219 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar invariant = __webpack_require__(220);\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar splice = Array.prototype.splice;\n\nvar assign = Object.assign || /* istanbul ignore next */ function assign(target, source) {\n  getAllKeys(source).forEach(function(key) {\n    if (hasOwnProperty.call(source, key)) {\n      target[key] = source[key];\n    }\n  });\n  return target;\n};\n\nvar getAllKeys = typeof Object.getOwnPropertySymbols === 'function' ?\n  function(obj) { return Object.keys(obj).concat(Object.getOwnPropertySymbols(obj)) } :\n  /* istanbul ignore next */ function(obj) { return Object.keys(obj) };\n\n/* istanbul ignore next */\nfunction copy(object) {\n  if (object instanceof Array) {\n    return assign(object.constructor(object.length), object)\n  } else if (object && typeof object === 'object') {\n    var prototype = object.constructor && object.constructor.prototype\n    return assign(Object.create(prototype || null), object);\n  } else {\n    return object;\n  }\n}\n\nfunction newContext() {\n  var commands = assign({}, defaultCommands);\n  update.extend = function(directive, fn) {\n    commands[directive] = fn;\n  };\n  update.isEquals = function(a, b) { return a === b; };\n\n  return update;\n\n  function update(object, spec) {\n    if (!(Array.isArray(object) && Array.isArray(spec))) {\n      invariant(\n        !Array.isArray(spec),\n        'update(): You provided an invalid spec to update(). The spec may ' +\n        'not contain an array except as the value of $set, $push, $unshift, ' +\n        '$splice or any custom command allowing an array value.'\n      );\n    }\n\n    invariant(\n      typeof spec === 'object' && spec !== null,\n      'update(): You provided an invalid spec to update(). The spec and ' +\n      'every included key path must be plain objects containing one of the ' +\n      'following commands: %s.',\n      Object.keys(commands).join(', ')\n    );\n\n    var nextObject = object;\n    var index, key;\n    getAllKeys(spec).forEach(function(key) {\n      if (hasOwnProperty.call(commands, key)) {\n        var objectWasNextObject = object === nextObject;\n        nextObject = commands[key](spec[key], nextObject, spec, object);\n        if (objectWasNextObject && update.isEquals(nextObject, object)) {\n          nextObject = object;\n        }\n      } else {\n        var nextValueForKey = update(object[key], spec[key]);\n        if (!update.isEquals(nextValueForKey, nextObject[key]) || typeof nextValueForKey === 'undefined' && !hasOwnProperty.call(object, key)) {\n          if (nextObject === object) {\n            nextObject = copy(object);\n          }\n          nextObject[key] = nextValueForKey;\n        }\n      }\n    })\n    return nextObject;\n  }\n\n}\n\nvar defaultCommands = {\n  $push: function(value, nextObject, spec) {\n    invariantPushAndUnshift(nextObject, spec, '$push');\n    return value.length ? nextObject.concat(value) : nextObject;\n  },\n  $unshift: function(value, nextObject, spec) {\n    invariantPushAndUnshift(nextObject, spec, '$unshift');\n    return value.length ? value.concat(nextObject) : nextObject;\n  },\n  $splice: function(value, nextObject, spec, originalObject) {\n    invariantSplices(nextObject, spec);\n    value.forEach(function(args) {\n      invariantSplice(args);\n      if (nextObject === originalObject && args.length) nextObject = copy(originalObject);\n      splice.apply(nextObject, args);\n    });\n    return nextObject;\n  },\n  $set: function(value, nextObject, spec) {\n    invariantSet(spec);\n    return value;\n  },\n  $unset: function(value, nextObject, spec, originalObject) {\n    invariant(\n      Array.isArray(value),\n      'update(): expected spec of $unset to be an array; got %s. ' +\n      'Did you forget to wrap the key(s) in an array?',\n      value\n    );\n    value.forEach(function(key) {\n      if (Object.hasOwnProperty.call(nextObject, key)) {\n        if (nextObject === originalObject) nextObject = copy(originalObject);\n        delete nextObject[key];\n      }\n    });\n    return nextObject;\n  },\n  $merge: function(value, nextObject, spec, originalObject) {\n    invariantMerge(nextObject, value);\n    getAllKeys(value).forEach(function(key) {\n      if (value[key] !== nextObject[key]) {\n        if (nextObject === originalObject) nextObject = copy(originalObject);\n        nextObject[key] = value[key];\n      }\n    });\n    return nextObject;\n  },\n  $apply: function(value, original) {\n    invariantApply(value);\n    return value(original);\n  }\n};\n\nmodule.exports = newContext();\nmodule.exports.newContext = newContext;\n\n// invariants\n\nfunction invariantPushAndUnshift(value, spec, command) {\n  invariant(\n    Array.isArray(value),\n    'update(): expected target of %s to be an array; got %s.',\n    command,\n    value\n  );\n  var specValue = spec[command];\n  invariant(\n    Array.isArray(specValue),\n    'update(): expected spec of %s to be an array; got %s. ' +\n    'Did you forget to wrap your parameter in an array?',\n    command,\n    specValue\n  );\n}\n\nfunction invariantSplices(value, spec) {\n  invariant(\n    Array.isArray(value),\n    'Expected $splice target to be an array; got %s',\n    value\n  );\n  invariantSplice(spec['$splice']);\n}\n\nfunction invariantSplice(value) {\n  invariant(\n    Array.isArray(value),\n    'update(): expected spec of $splice to be an array of arrays; got %s. ' +\n    'Did you forget to wrap your parameters in an array?',\n    value\n  );\n}\n\nfunction invariantApply(fn) {\n  invariant(\n    typeof fn === 'function',\n    'update(): expected spec of $apply to be a function; got %s.',\n    fn\n  );\n}\n\nfunction invariantSet(spec) {\n  invariant(\n    Object.keys(spec).length === 1,\n    'Cannot have more than one key in an object with $set'\n  );\n}\n\nfunction invariantMerge(target, specValue) {\n  invariant(\n    specValue && typeof specValue === 'object',\n    'update(): $merge expects a spec of type \\'object\\'; got %s',\n    specValue\n  );\n  invariant(\n    target && typeof target === 'object',\n    'update(): $merge expects a target of type \\'object\\'; got %s',\n    target\n  );\n}\n\n\n/***/ }),\n/* 220 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (false) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// static/js/main.78644bf7.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/d3-state-visualizer-test/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 69);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 28e5ffa64fe0e4f9ee4e","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/isArray.js\n// module id = 0\n// module chunks = 0","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/isArray.js\n// module id = 1\n// module chunks = 0","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/isObjectLike.js\n// module id = 2\n// module chunks = 0","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/isObjectLike.js\n// module id = 3\n// module chunks = 0","//  Ramda v0.17.1\n//  https://github.com/ramda/ramda\n//  (c) 2013-2015 Scott Sauyet, Michael Hurley, and David Chambers\n//  Ramda may be freely distributed under the MIT license.\n\n;(function() {\n\n  'use strict';\n\n  /**\n     * A special placeholder value used to specify \"gaps\" within curried functions,\n     * allowing partial application of any combination of arguments,\n     * regardless of their positions.\n     *\n     * If `g` is a curried ternary function and `_` is `R.__`, the following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2, _)(1, 3)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @constant\n     * @memberOf R\n     * @category Function\n     * @example\n     *\n     *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n     *      greet('Alice'); //=> 'Hello, Alice!'\n     */\n    var __ = { '@@functional/placeholder': true };\n\n    // jshint unused:vars\n    var _arity = function _arity(n, fn) {\n        // jshint unused:vars\n        switch (n) {\n        case 0:\n            return function () {\n                return fn.apply(this, arguments);\n            };\n        case 1:\n            return function (a0) {\n                return fn.apply(this, arguments);\n            };\n        case 2:\n            return function (a0, a1) {\n                return fn.apply(this, arguments);\n            };\n        case 3:\n            return function (a0, a1, a2) {\n                return fn.apply(this, arguments);\n            };\n        case 4:\n            return function (a0, a1, a2, a3) {\n                return fn.apply(this, arguments);\n            };\n        case 5:\n            return function (a0, a1, a2, a3, a4) {\n                return fn.apply(this, arguments);\n            };\n        case 6:\n            return function (a0, a1, a2, a3, a4, a5) {\n                return fn.apply(this, arguments);\n            };\n        case 7:\n            return function (a0, a1, a2, a3, a4, a5, a6) {\n                return fn.apply(this, arguments);\n            };\n        case 8:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                return fn.apply(this, arguments);\n            };\n        case 9:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                return fn.apply(this, arguments);\n            };\n        case 10:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                return fn.apply(this, arguments);\n            };\n        default:\n            throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n        }\n    };\n\n    var _cloneRegExp = function _cloneRegExp(pattern) {\n        return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n    };\n\n    var _complement = function _complement(f) {\n        return function () {\n            return !f.apply(this, arguments);\n        };\n    };\n\n    /**\n     * Private `concat` function to merge two array-like objects.\n     *\n     * @private\n     * @param {Array|Arguments} [set1=[]] An array-like object.\n     * @param {Array|Arguments} [set2=[]] An array-like object.\n     * @return {Array} A new, merged array.\n     * @example\n     *\n     *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     */\n    var _concat = function _concat(set1, set2) {\n        set1 = set1 || [];\n        set2 = set2 || [];\n        var idx;\n        var len1 = set1.length;\n        var len2 = set2.length;\n        var result = [];\n        idx = 0;\n        while (idx < len1) {\n            result[result.length] = set1[idx];\n            idx += 1;\n        }\n        idx = 0;\n        while (idx < len2) {\n            result[result.length] = set2[idx];\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _containsWith = function _containsWith(pred, x, list) {\n        var idx = 0, len = list.length;\n        while (idx < len) {\n            if (pred(x, list[idx])) {\n                return true;\n            }\n            idx += 1;\n        }\n        return false;\n    };\n\n    /**\n     * Optimized internal two-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry1 = function _curry1(fn) {\n        return function f1(a) {\n            if (arguments.length === 0) {\n                return f1;\n            } else if (a != null && a['@@functional/placeholder'] === true) {\n                return f1;\n            } else {\n                return fn.apply(this, arguments);\n            }\n        };\n    };\n\n    /**\n     * Optimized internal two-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry2 = function _curry2(fn) {\n        return function f2(a, b) {\n            var n = arguments.length;\n            if (n === 0) {\n                return f2;\n            } else if (n === 1 && a != null && a['@@functional/placeholder'] === true) {\n                return f2;\n            } else if (n === 1) {\n                return _curry1(function (b) {\n                    return fn(a, b);\n                });\n            } else if (n === 2 && a != null && a['@@functional/placeholder'] === true && b != null && b['@@functional/placeholder'] === true) {\n                return f2;\n            } else if (n === 2 && a != null && a['@@functional/placeholder'] === true) {\n                return _curry1(function (a) {\n                    return fn(a, b);\n                });\n            } else if (n === 2 && b != null && b['@@functional/placeholder'] === true) {\n                return _curry1(function (b) {\n                    return fn(a, b);\n                });\n            } else {\n                return fn(a, b);\n            }\n        };\n    };\n\n    /**\n     * Optimized internal three-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry3 = function _curry3(fn) {\n        return function f3(a, b, c) {\n            var n = arguments.length;\n            if (n === 0) {\n                return f3;\n            } else if (n === 1 && a != null && a['@@functional/placeholder'] === true) {\n                return f3;\n            } else if (n === 1) {\n                return _curry2(function (b, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 2 && a != null && a['@@functional/placeholder'] === true && b != null && b['@@functional/placeholder'] === true) {\n                return f3;\n            } else if (n === 2 && a != null && a['@@functional/placeholder'] === true) {\n                return _curry2(function (a, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 2 && b != null && b['@@functional/placeholder'] === true) {\n                return _curry2(function (b, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 2) {\n                return _curry1(function (c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && a != null && a['@@functional/placeholder'] === true && b != null && b['@@functional/placeholder'] === true && c != null && c['@@functional/placeholder'] === true) {\n                return f3;\n            } else if (n === 3 && a != null && a['@@functional/placeholder'] === true && b != null && b['@@functional/placeholder'] === true) {\n                return _curry2(function (a, b) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && a != null && a['@@functional/placeholder'] === true && c != null && c['@@functional/placeholder'] === true) {\n                return _curry2(function (a, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && b != null && b['@@functional/placeholder'] === true && c != null && c['@@functional/placeholder'] === true) {\n                return _curry2(function (b, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && a != null && a['@@functional/placeholder'] === true) {\n                return _curry1(function (a) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && b != null && b['@@functional/placeholder'] === true) {\n                return _curry1(function (b) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && c != null && c['@@functional/placeholder'] === true) {\n                return _curry1(function (c) {\n                    return fn(a, b, c);\n                });\n            } else {\n                return fn(a, b, c);\n            }\n        };\n    };\n\n    /**\n     * Internal curryN function.\n     *\n     * @private\n     * @category Function\n     * @param {Number} length The arity of the curried function.\n     * @return {array} An array of arguments received thus far.\n     * @param {Function} fn The function to curry.\n     */\n    var _curryN = function _curryN(length, received, fn) {\n        return function () {\n            var combined = [];\n            var argsIdx = 0;\n            var left = length;\n            var combinedIdx = 0;\n            while (combinedIdx < received.length || argsIdx < arguments.length) {\n                var result;\n                if (combinedIdx < received.length && (received[combinedIdx] == null || received[combinedIdx]['@@functional/placeholder'] !== true || argsIdx >= arguments.length)) {\n                    result = received[combinedIdx];\n                } else {\n                    result = arguments[argsIdx];\n                    argsIdx += 1;\n                }\n                combined[combinedIdx] = result;\n                if (result == null || result['@@functional/placeholder'] !== true) {\n                    left -= 1;\n                }\n                combinedIdx += 1;\n            }\n            return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n        };\n    };\n\n    var _filter = function _filter(fn, list) {\n        var idx = 0, len = list.length, result = [];\n        while (idx < len) {\n            if (fn(list[idx])) {\n                result[result.length] = list[idx];\n            }\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _forceReduced = function _forceReduced(x) {\n        return {\n            '@@transducer/value': x,\n            '@@transducer/reduced': true\n        };\n    };\n\n    /**\n     * @private\n     * @param {Function} fn The strategy for extracting function names from an object\n     * @return {Function} A function that takes an object and returns an array of function names.\n     */\n    var _functionsWith = function _functionsWith(fn) {\n        return function (obj) {\n            return _filter(function (key) {\n                return typeof obj[key] === 'function';\n            }, fn(obj));\n        };\n    };\n\n    var _has = function _has(prop, obj) {\n        return Object.prototype.hasOwnProperty.call(obj, prop);\n    };\n\n    var _identity = function _identity(x) {\n        return x;\n    };\n\n    /**\n     * Tests whether or not an object is an array.\n     *\n     * @private\n     * @param {*} val The object to test.\n     * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n     * @example\n     *\n     *      _isArray([]); //=> true\n     *      _isArray(null); //=> false\n     *      _isArray({}); //=> false\n     */\n    var _isArray = Array.isArray || function _isArray(val) {\n        return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n    };\n\n    /**\n     * Determine if the passed argument is an integer.\n     *\n     * @private\n     * @param {*} n\n     * @category Type\n     * @return {Boolean}\n     */\n    var _isInteger = Number.isInteger || function _isInteger(n) {\n        return n << 0 === n;\n    };\n\n    var _isNumber = function _isNumber(x) {\n        return Object.prototype.toString.call(x) === '[object Number]';\n    };\n\n    var _isString = function _isString(x) {\n        return Object.prototype.toString.call(x) === '[object String]';\n    };\n\n    var _isTransformer = function _isTransformer(obj) {\n        return typeof obj['@@transducer/step'] === 'function';\n    };\n\n    var _map = function _map(fn, list) {\n        var idx = 0, len = list.length, result = Array(len);\n        while (idx < len) {\n            result[idx] = fn(list[idx]);\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _pipe = function _pipe(f, g) {\n        return function () {\n            return g.call(this, f.apply(this, arguments));\n        };\n    };\n\n    var _pipeP = function _pipeP(f, g) {\n        return function () {\n            var ctx = this;\n            return f.apply(ctx, arguments).then(function (x) {\n                return g.call(ctx, x);\n            });\n        };\n    };\n\n    var _quote = function _quote(s) {\n        return '\"' + s.replace(/\"/g, '\\\\\"') + '\"';\n    };\n\n    var _reduced = function _reduced(x) {\n        return x && x['@@transducer/reduced'] ? x : {\n            '@@transducer/value': x,\n            '@@transducer/reduced': true\n        };\n    };\n\n    /**\n     * An optimized, private array `slice` implementation.\n     *\n     * @private\n     * @param {Arguments|Array} args The array or arguments object to consider.\n     * @param {Number} [from=0] The array index to slice from, inclusive.\n     * @param {Number} [to=args.length] The array index to slice to, exclusive.\n     * @return {Array} A new, sliced array.\n     * @example\n     *\n     *      _slice([1, 2, 3, 4, 5], 1, 3); //=> [2, 3]\n     *\n     *      var firstThreeArgs = function(a, b, c, d) {\n     *        return _slice(arguments, 0, 3);\n     *      };\n     *      firstThreeArgs(1, 2, 3, 4); //=> [1, 2, 3]\n     */\n    var _slice = function _slice(args, from, to) {\n        switch (arguments.length) {\n        case 1:\n            return _slice(args, 0, args.length);\n        case 2:\n            return _slice(args, from, args.length);\n        default:\n            var list = [];\n            var idx = 0;\n            var len = Math.max(0, Math.min(args.length, to) - from);\n            while (idx < len) {\n                list[idx] = args[from + idx];\n                idx += 1;\n            }\n            return list;\n        }\n    };\n\n    /**\n     * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n     */\n    var _toISOString = function () {\n        var pad = function pad(n) {\n            return (n < 10 ? '0' : '') + n;\n        };\n        return typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n            return d.toISOString();\n        } : function _toISOString(d) {\n            return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n        };\n    }();\n\n    var _xdropRepeatsWith = function () {\n        function XDropRepeatsWith(pred, xf) {\n            this.xf = xf;\n            this.pred = pred;\n            this.lastValue = undefined;\n            this.seenFirstValue = false;\n        }\n        XDropRepeatsWith.prototype['@@transducer/init'] = function () {\n            return this.xf['@@transducer/init']();\n        };\n        XDropRepeatsWith.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](result);\n        };\n        XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n            var sameAsLast = false;\n            if (!this.seenFirstValue) {\n                this.seenFirstValue = true;\n            } else if (this.pred(this.lastValue, input)) {\n                sameAsLast = true;\n            }\n            this.lastValue = input;\n            return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdropRepeatsWith(pred, xf) {\n            return new XDropRepeatsWith(pred, xf);\n        });\n    }();\n\n    var _xfBase = {\n        init: function () {\n            return this.xf['@@transducer/init']();\n        },\n        result: function (result) {\n            return this.xf['@@transducer/result'](result);\n        }\n    };\n\n    var _xfilter = function () {\n        function XFilter(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XFilter.prototype['@@transducer/init'] = _xfBase.init;\n        XFilter.prototype['@@transducer/result'] = _xfBase.result;\n        XFilter.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n        };\n        return _curry2(function _xfilter(f, xf) {\n            return new XFilter(f, xf);\n        });\n    }();\n\n    var _xfind = function () {\n        function XFind(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.found = false;\n        }\n        XFind.prototype['@@transducer/init'] = _xfBase.init;\n        XFind.prototype['@@transducer/result'] = function (result) {\n            if (!this.found) {\n                result = this.xf['@@transducer/step'](result, void 0);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XFind.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.found = true;\n                result = _reduced(this.xf['@@transducer/step'](result, input));\n            }\n            return result;\n        };\n        return _curry2(function _xfind(f, xf) {\n            return new XFind(f, xf);\n        });\n    }();\n\n    var _xfindIndex = function () {\n        function XFindIndex(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.idx = -1;\n            this.found = false;\n        }\n        XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n        XFindIndex.prototype['@@transducer/result'] = function (result) {\n            if (!this.found) {\n                result = this.xf['@@transducer/step'](result, -1);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n            this.idx += 1;\n            if (this.f(input)) {\n                this.found = true;\n                result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n            }\n            return result;\n        };\n        return _curry2(function _xfindIndex(f, xf) {\n            return new XFindIndex(f, xf);\n        });\n    }();\n\n    var _xfindLast = function () {\n        function XFindLast(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n        XFindLast.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n        };\n        XFindLast.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.last = input;\n            }\n            return result;\n        };\n        return _curry2(function _xfindLast(f, xf) {\n            return new XFindLast(f, xf);\n        });\n    }();\n\n    var _xfindLastIndex = function () {\n        function XFindLastIndex(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.idx = -1;\n            this.lastIdx = -1;\n        }\n        XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n        XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n        };\n        XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n            this.idx += 1;\n            if (this.f(input)) {\n                this.lastIdx = this.idx;\n            }\n            return result;\n        };\n        return _curry2(function _xfindLastIndex(f, xf) {\n            return new XFindLastIndex(f, xf);\n        });\n    }();\n\n    var _xmap = function () {\n        function XMap(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XMap.prototype['@@transducer/init'] = _xfBase.init;\n        XMap.prototype['@@transducer/result'] = _xfBase.result;\n        XMap.prototype['@@transducer/step'] = function (result, input) {\n            return this.xf['@@transducer/step'](result, this.f(input));\n        };\n        return _curry2(function _xmap(f, xf) {\n            return new XMap(f, xf);\n        });\n    }();\n\n    var _xtake = function () {\n        function XTake(n, xf) {\n            this.xf = xf;\n            this.n = n;\n        }\n        XTake.prototype['@@transducer/init'] = _xfBase.init;\n        XTake.prototype['@@transducer/result'] = _xfBase.result;\n        XTake.prototype['@@transducer/step'] = function (result, input) {\n            if (this.n === 0) {\n                return _reduced(result);\n            } else {\n                this.n -= 1;\n                return this.xf['@@transducer/step'](result, input);\n            }\n        };\n        return _curry2(function _xtake(n, xf) {\n            return new XTake(n, xf);\n        });\n    }();\n\n    var _xtakeWhile = function () {\n        function XTakeWhile(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n        XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n        };\n        return _curry2(function _xtakeWhile(f, xf) {\n            return new XTakeWhile(f, xf);\n        });\n    }();\n\n    var _xwrap = function () {\n        function XWrap(fn) {\n            this.f = fn;\n        }\n        XWrap.prototype['@@transducer/init'] = function () {\n            throw new Error('init not implemented on XWrap');\n        };\n        XWrap.prototype['@@transducer/result'] = function (acc) {\n            return acc;\n        };\n        XWrap.prototype['@@transducer/step'] = function (acc, x) {\n            return this.f(acc, x);\n        };\n        return function _xwrap(fn) {\n            return new XWrap(fn);\n        };\n    }();\n\n    /**\n     * Adds two numbers. Equivalent to `a + b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Number}\n     * @see R.subtract\n     * @example\n     *\n     *      R.add(2, 3);       //=>  5\n     *      R.add(7)(10);      //=> 17\n     */\n    var add = _curry2(function add(a, b) {\n        return a + b;\n    });\n\n    /**\n     * Applies a function to the value at the given index of an array,\n     * returning a new copy of the array with the element at the given\n     * index replaced with the result of the function application.\n     * @see R.update\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> a) -> Number -> [a] -> [a]\n     * @param {Function} fn The function to apply.\n     * @param {Number} idx The index.\n     * @param {Array|Arguments} list An array-like object whose value\n     *        at the supplied index will be replaced.\n     * @return {Array} A copy of the supplied array-like object with\n     *         the element at index `idx` replaced with the value\n     *         returned by applying `fn` to the existing element.\n     * @example\n     *\n     *      R.adjust(R.add(10), 1, [0, 1, 2]);     //=> [0, 11, 2]\n     *      R.adjust(R.add(10))(1)([0, 1, 2]);     //=> [0, 11, 2]\n     */\n    var adjust = _curry3(function adjust(fn, idx, list) {\n        if (idx >= list.length || idx < -list.length) {\n            return list;\n        }\n        var start = idx < 0 ? list.length : 0;\n        var _idx = start + idx;\n        var _list = _concat(list);\n        _list[_idx] = fn(list[_idx]);\n        return _list;\n    });\n\n    /**\n     * Returns a function that always returns the given value. Note that for\n     * non-primitives the value returned is a reference to the original value.\n     *\n     * This function is known as `const`, `constant`, or `K` (for K combinator)\n     * in other languages and libraries.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> (* -> a)\n     * @param {*} val The value to wrap in a function\n     * @return {Function} A Function :: * -> val.\n     * @example\n     *\n     *      var t = R.always('Tee');\n     *      t(); //=> 'Tee'\n     */\n    var always = _curry1(function always(val) {\n        return function () {\n            return val;\n        };\n    });\n\n    /**\n     * Returns a new list, composed of n-tuples of consecutive elements\n     * If `n` is greater than the length of the list, an empty list is returned.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @param {Number} n The size of the tuples to create\n     * @param {Array} list The list to split into `n`-tuples\n     * @return {Array} The new list.\n     * @example\n     *\n     *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n     *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n     *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n     */\n    var aperture = _curry2(function aperture(n, list) {\n        var idx = 0;\n        var limit = list.length - (n - 1);\n        var acc = new Array(limit >= 0 ? limit : 0);\n        while (idx < limit) {\n            acc[idx] = _slice(list, idx, idx + n);\n            idx += 1;\n        }\n        return acc;\n    });\n\n    /**\n     * Returns a new list containing the contents of the given list, followed by the given\n     * element.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The element to add to the end of the new list.\n     * @param {Array} list The list whose contents will be added to the beginning of the output\n     *        list.\n     * @return {Array} A new list containing the contents of the old list followed by `el`.\n     * @see R.prepend\n     * @example\n     *\n     *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n     *      R.append('tests', []); //=> ['tests']\n     *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n     */\n    var append = _curry2(function append(el, list) {\n        return _concat(list, [el]);\n    });\n\n    /**\n     * Applies function `fn` to the argument list `args`. This is useful for\n     * creating a fixed-arity function from a variadic function. `fn` should\n     * be a bound function if context is significant.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (*... -> a) -> [*] -> a\n     * @param {Function} fn\n     * @param {Array} args\n     * @return {*}\n     * @see R.call, R.unapply\n     * @example\n     *\n     *      var nums = [1, 2, 3, -99, 42, 6, 7];\n     *      R.apply(Math.max, nums); //=> 42\n     */\n    var apply = _curry2(function apply(fn, args) {\n        return fn.apply(this, args);\n    });\n\n    /**\n     * Makes a shallow clone of an object, setting or overriding the specified\n     * property with the given value.  Note that this copies and flattens\n     * prototype properties onto the new object as well.  All non-primitive\n     * properties are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig String -> a -> {k: v} -> {k: v}\n     * @param {String} prop the property name to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except for the specified property.\n     * @see R.dissoc\n     * @example\n     *\n     *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n     */\n    var assoc = _curry3(function assoc(prop, val, obj) {\n        var result = {};\n        for (var p in obj) {\n            result[p] = obj[p];\n        }\n        result[prop] = val;\n        return result;\n    });\n\n    /**\n     * Makes a shallow clone of an object, setting or overriding the nodes\n     * required to create the given path, and placing the specific value at the\n     * tail end of that path.  Note that this copies and flattens prototype\n     * properties onto the new object as well.  All non-primitive properties\n     * are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> a -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except along the specified path.\n     * @see R.dissocPath\n     * @example\n     *\n     *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n     */\n    var assocPath = _curry3(function assocPath(path, val, obj) {\n        switch (path.length) {\n        case 0:\n            return obj;\n        case 1:\n            return assoc(path[0], val, obj);\n        default:\n            return assoc(path[0], assocPath(_slice(path, 1), val, Object(obj[path[0]])), obj);\n        }\n    });\n\n    /**\n     * Creates a function that is bound to a context.\n     * Note: `R.bind` does not provide the additional argument-binding capabilities of\n     * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @category Object\n     * @see R.partial\n     * @sig (* -> *) -> {*} -> (* -> *)\n     * @param {Function} fn The function to bind to context\n     * @param {Object} thisObj The context to bind `fn` to\n     * @return {Function} A function that will execute in the context of `thisObj`.\n     */\n    var bind = _curry2(function bind(fn, thisObj) {\n        return _arity(fn.length, function () {\n            return fn.apply(thisObj, arguments);\n        });\n    });\n\n    /**\n     * A function wrapping calls to the two functions in an `&&` operation, returning the result of the first\n     * function if it is false-y and the result of the second function otherwise.  Note that this is\n     * short-circuited, meaning that the second function will not be invoked if the first returns a false-y\n     * value.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n     * @see R.and\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0 };\n     *      var f = R.both(gt10, even);\n     *      f(100); //=> true\n     *      f(101); //=> false\n     */\n    var both = _curry2(function both(f, g) {\n        return function _both() {\n            return f.apply(this, arguments) && g.apply(this, arguments);\n        };\n    });\n\n    /**\n     * Makes a comparator function out of a function that reports whether the first element is less than the second.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a, b -> Boolean) -> (a, b -> Number)\n     * @param {Function} pred A predicate function of arity two.\n     * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`.\n     * @example\n     *\n     *      var cmp = R.comparator(function(a, b) {\n     *        return a.age < b.age;\n     *      });\n     *      var people = [\n     *        // ...\n     *      ];\n     *      R.sort(cmp, people);\n     */\n    var comparator = _curry1(function comparator(pred) {\n        return function (a, b) {\n            return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n        };\n    });\n\n    /**\n     * Takes a function `f` and returns a function `g` such that:\n     *\n     *   - applying `g` to zero or more arguments will give __true__ if applying\n     *     the same arguments to `f` gives a logical __false__ value; and\n     *\n     *   - applying `g` to zero or more arguments will give __false__ if applying\n     *     the same arguments to `f` gives a logical __true__ value.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> *) -> (*... -> Boolean)\n     * @param {Function} f\n     * @return {Function}\n     * @see R.not\n     * @example\n     *\n     *      var isEven = function(n) { return n % 2 === 0; };\n     *      var isOdd = R.complement(isEven);\n     *      isOdd(21); //=> true\n     *      isOdd(42); //=> false\n     */\n    var complement = _curry1(_complement);\n\n    /**\n     * Returns a function, `fn`, which encapsulates if/else-if/else logic.\n     * `R.cond` takes a list of [predicate, transform] pairs. All of the\n     * arguments to `fn` are applied to each of the predicates in turn\n     * until one returns a \"truthy\" value, at which point `fn` returns the\n     * result of applying its arguments to the corresponding transformer.\n     * If none of the predicates matches, `fn` returns undefined.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n     * @param {Array} pairs\n     * @return {Function}\n     * @example\n     *\n     *      var fn = R.cond([\n     *        [R.equals(0),   R.always('water freezes at 0°C')],\n     *        [R.equals(100), R.always('water boils at 100°C')],\n     *        [R.T,           function(temp) { return 'nothing special happens at ' + temp + '°C'; }]\n     *      ]);\n     *      fn(0); //=> 'water freezes at 0°C'\n     *      fn(50); //=> 'nothing special happens at 50°C'\n     *      fn(100); //=> 'water boils at 100°C'\n     */\n    var cond = _curry1(function cond(pairs) {\n        return function () {\n            var idx = 0;\n            while (idx < pairs.length) {\n                if (pairs[idx][0].apply(this, arguments)) {\n                    return pairs[idx][1].apply(this, arguments);\n                }\n                idx += 1;\n            }\n        };\n    });\n\n    /**\n     * Returns `true` if the `x` is found in the `list`, using `pred` as an\n     * equality predicate for `x`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a, a -> Boolean) -> a -> [a] -> Boolean\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {*} x The item to find\n     * @param {Array} list The list to iterate over\n     * @return {Boolean} `true` if `x` is in `list`, else `false`.\n     * @example\n     *\n     *      var xs = [{x: 12}, {x: 11}, {x: 10}];\n     *      R.containsWith(function(a, b) { return a.x === b.x; }, {x: 10}, xs); //=> true\n     *      R.containsWith(function(a, b) { return a.x === b.x; }, {x: 1}, xs); //=> false\n     */\n    var containsWith = _curry3(_containsWith);\n\n    /**\n     * Counts the elements of a list according to how many match each value\n     * of a key generated by the supplied function. Returns an object\n     * mapping the keys produced by `fn` to the number of occurrences in\n     * the list. Note that all keys are coerced to strings because of how\n     * JavaScript objects work.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a -> String) -> [a] -> {*}\n     * @param {Function} fn The function used to map values to keys.\n     * @param {Array} list The list to count elements from.\n     * @return {Object} An object mapping keys to number of occurrences in the list.\n     * @example\n     *\n     *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n     *      var letters = R.split('', 'abcABCaaaBBc');\n     *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n     *      R.countBy(R.toLower)(letters);   //=> {'a': 5, 'b': 4, 'c': 3}\n     */\n    var countBy = _curry2(function countBy(fn, list) {\n        var counts = {};\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            var key = fn(list[idx]);\n            counts[key] = (_has(key, counts) ? counts[key] : 0) + 1;\n            idx += 1;\n        }\n        return counts;\n    });\n\n    /**\n     * Creates an object containing a single key:value pair.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig String -> a -> {String:a}\n     * @param {String} key\n     * @param {*} val\n     * @return {Object}\n     * @example\n     *\n     *      var matchPhrases = R.compose(\n     *        R.createMapEntry('must'),\n     *        R.map(R.createMapEntry('match_phrase'))\n     *      );\n     *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n     */\n    var createMapEntry = _curry2(function createMapEntry(key, val) {\n        var obj = {};\n        obj[key] = val;\n        return obj;\n    });\n\n    /**\n     * Returns a curried equivalent of the provided function, with the\n     * specified arity. The curried function has two unusual capabilities.\n     * First, its arguments needn't be provided one at a time. If `g` is\n     * `R.curryN(3, f)`, the following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`,\n     * the following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curry\n     * @example\n     *\n     *      var addFourNumbers = function() {\n     *        return R.sum([].slice.call(arguments, 0, 4));\n     *      };\n     *\n     *      var curriedAddFourNumbers = R.curryN(4, addFourNumbers);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n    var curryN = _curry2(function curryN(length, fn) {\n        if (length === 1) {\n            return _curry1(fn);\n        }\n        return _arity(length, _curryN(length, [], fn));\n    });\n\n    /**\n     * Decrements its argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @see R.inc\n     * @example\n     *\n     *      R.dec(42); //=> 41\n     */\n    var dec = add(-1);\n\n    /**\n     * Returns the second argument if it is not null or undefined. If it is null\n     * or undefined, the first (default) argument is returned.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig a -> b -> a | b\n     * @param {a} val The default value.\n     * @param {b} val The value to return if it is not null or undefined\n     * @return {*} The the second value or the default value\n     * @example\n     *\n     *      var defaultTo42 = defaultTo(42);\n     *\n     *      defaultTo42(null);  //=> 42\n     *      defaultTo42(undefined);  //=> 42\n     *      defaultTo42('Ramda');  //=> 'Ramda'\n     */\n    var defaultTo = _curry2(function defaultTo(d, v) {\n        return v == null ? d : v;\n    });\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not contained in the second list.\n     * Duplication is determined according to the value returned by applying the supplied predicate to two list\n     * elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a,a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @see R.difference\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @example\n     *\n     *      function cmp(x, y) { return x.a === y.a; }\n     *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n     *      var l2 = [{a: 3}, {a: 4}];\n     *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n     */\n    var differenceWith = _curry3(function differenceWith(pred, first, second) {\n        var out = [];\n        var idx = 0;\n        var firstLen = first.length;\n        var containsPred = containsWith(pred);\n        while (idx < firstLen) {\n            if (!containsPred(first[idx], second) && !containsPred(first[idx], out)) {\n                out[out.length] = first[idx];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new object that does not contain a `prop` property.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig String -> {k: v} -> {k: v}\n     * @param {String} prop the name of the property to dissociate\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original but without the specified property\n     * @see R.assoc\n     * @example\n     *\n     *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n     */\n    var dissoc = _curry2(function dissoc(prop, obj) {\n        var result = {};\n        for (var p in obj) {\n            if (p !== prop) {\n                result[p] = obj[p];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Makes a shallow clone of an object, omitting the property at the\n     * given path. Note that this copies and flattens prototype properties\n     * onto the new object as well.  All non-primitive properties are copied\n     * by reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object without the property at path\n     * @see R.assocPath\n     * @example\n     *\n     *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n     */\n    var dissocPath = _curry2(function dissocPath(path, obj) {\n        switch (path.length) {\n        case 0:\n            return obj;\n        case 1:\n            return dissoc(path[0], obj);\n        default:\n            var head = path[0];\n            var tail = _slice(path, 1);\n            return obj[head] == null ? obj : assoc(head, dissocPath(tail, obj[head]), obj);\n        }\n    });\n\n    /**\n     * Divides two numbers. Equivalent to `a / b`.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a / b`.\n     * @see R.multiply\n     * @example\n     *\n     *      R.divide(71, 100); //=> 0.71\n     *\n     *      var half = R.divide(R.__, 2);\n     *      half(42); //=> 21\n     *\n     *      var reciprocal = R.divide(1);\n     *      reciprocal(4);   //=> 0.25\n     */\n    var divide = _curry2(function divide(a, b) {\n        return a / b;\n    });\n\n    /**\n     * Returns a new list containing all but last the`n` elements of a given list,\n     * passing each value from the right to the supplied predicate function, skipping\n     * elements while the predicate function returns `true`. The predicate function\n     * is passed one argument: (value)*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.takeLastWhile\n     * @example\n     *\n     *      var lteThree = function(x) {\n     *        return x <= 3;\n     *      };\n     *\n     *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2]\n     */\n    var dropLastWhile = _curry2(function dropLastWhile(pred, list) {\n        var idx = list.length - 1;\n        while (idx >= 0 && pred(list[idx])) {\n            idx -= 1;\n        }\n        return _slice(list, 0, idx + 1);\n    });\n\n    /**\n     * A function wrapping calls to the two functions in an `||` operation, returning the result of the first\n     * function if it is truth-y and the result of the second function otherwise.  Note that this is\n     * short-circuited, meaning that the second function will not be invoked if the first returns a truth-y\n     * value.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n     * @see R.or\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0 };\n     *      var f = R.either(gt10, even);\n     *      f(101); //=> true\n     *      f(8); //=> true\n     */\n    var either = _curry2(function either(f, g) {\n        return function _either() {\n            return f.apply(this, arguments) || g.apply(this, arguments);\n        };\n    });\n\n    /**\n     * Returns the empty value of its argument's type. Ramda defines the empty\n     * value of Array (`[]`), Object (`{}`), and String (`''`). Other types are\n     * supported if they define `<Type>.empty` and/or `<Type>.prototype.empty`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> a\n     * @param {*} x\n     * @return {*}\n     * @example\n     *\n     *      R.empty(Just(42));      //=> Nothing()\n     *      R.empty([1, 2, 3]);     //=> []\n     *      R.empty('unicorns');    //=> ''\n     *      R.empty({x: 1, y: 2});  //=> {}\n     */\n    var empty = _curry1(function empty(x) {\n        if (x != null && typeof x.empty === 'function') {\n            return x.empty();\n        } else if (x != null && typeof x.constructor != null && typeof x.constructor.empty === 'function') {\n            return x.constructor.empty();\n        } else {\n            switch (Object.prototype.toString.call(x)) {\n            case '[object Array]':\n                return [];\n            case '[object Object]':\n                return {};\n            case '[object String]':\n                return '';\n            }\n        }\n    });\n\n    /**\n     * Creates a new object by recursively evolving a shallow copy of `object`, according to the\n     * `transformation` functions. All non-primitive properties are copied by reference.\n     *\n     * A `tranformation` function will not be invoked if its corresponding key does not exist in\n     * the evolved object.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n     * @param {Object} transformations The object specifying transformation functions to apply\n     *        to the object.\n     * @param {Object} object The object to be transformed.\n     * @return {Object} The transformed object.\n     * @example\n     *\n     *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n     *      var transformations = {\n     *        firstName: R.trim,\n     *        lastName: R.trim, // Will not get invoked.\n     *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n     *      };\n     *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n     */\n    var evolve = _curry2(function evolve(transformations, object) {\n        var transformation, key, type, result = {};\n        for (key in object) {\n            transformation = transformations[key];\n            type = typeof transformation;\n            result[key] = type === 'function' ? transformation(object[key]) : type === 'object' ? evolve(transformations[key], object[key]) : object[key];\n        }\n        return result;\n    });\n\n    /**\n     * Creates a new object out of a list key-value pairs.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [[k,v]] -> {k: v}\n     * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n     * @return {Object} The object made by pairing up `keys` and `values`.\n     * @see R.toPairs\n     * @example\n     *\n     *      R.fromPairs([['a', 1], ['b', 2],  ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n     */\n    var fromPairs = _curry1(function fromPairs(pairs) {\n        var idx = 0, len = pairs.length, out = {};\n        while (idx < len) {\n            if (_isArray(pairs[idx]) && pairs[idx].length) {\n                out[pairs[idx][0]] = pairs[idx][1];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns `true` if the first argument is greater than the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @see R.lt\n     * @example\n     *\n     *      R.gt(2, 1); //=> true\n     *      R.gt(2, 2); //=> false\n     *      R.gt(2, 3); //=> false\n     *      R.gt('a', 'z'); //=> false\n     *      R.gt('z', 'a'); //=> true\n     */\n    var gt = _curry2(function gt(a, b) {\n        return a > b;\n    });\n\n    /**\n     * Returns `true` if the first argument is greater than or equal to the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean}\n     * @see R.lte\n     * @example\n     *\n     *      R.gte(2, 1); //=> true\n     *      R.gte(2, 2); //=> true\n     *      R.gte(2, 3); //=> false\n     *      R.gte('a', 'z'); //=> false\n     *      R.gte('z', 'a'); //=> true\n     */\n    var gte = _curry2(function gte(a, b) {\n        return a >= b;\n    });\n\n    /**\n     * Returns whether or not an object has an own property with\n     * the specified name\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      var hasName = R.has('name');\n     *      hasName({name: 'alice'});   //=> true\n     *      hasName({name: 'bob'});     //=> true\n     *      hasName({});                //=> false\n     *\n     *      var point = {x: 0, y: 0};\n     *      var pointHas = R.has(R.__, point);\n     *      pointHas('x');  //=> true\n     *      pointHas('y');  //=> true\n     *      pointHas('z');  //=> false\n     */\n    var has = _curry2(_has);\n\n    /**\n     * Returns whether or not an object or its prototype chain has\n     * a property with the specified name\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      function Rectangle(width, height) {\n     *        this.width = width;\n     *        this.height = height;\n     *      }\n     *      Rectangle.prototype.area = function() {\n     *        return this.width * this.height;\n     *      };\n     *\n     *      var square = new Rectangle(2, 2);\n     *      R.hasIn('width', square);  //=> true\n     *      R.hasIn('area', square);  //=> true\n     */\n    var hasIn = _curry2(function hasIn(prop, obj) {\n        return prop in obj;\n    });\n\n    /**\n     * Returns true if its arguments are identical, false otherwise. Values are\n     * identical if they reference the same memory. `NaN` is identical to `NaN`;\n     * `0` and `-0` are not identical.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      var o = {};\n     *      R.identical(o, o); //=> true\n     *      R.identical(1, 1); //=> true\n     *      R.identical(1, '1'); //=> false\n     *      R.identical([], []); //=> false\n     *      R.identical(0, -0); //=> false\n     *      R.identical(NaN, NaN); //=> true\n     */\n    // SameValue algorithm\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Step 6.a: NaN == NaN\n    var identical = _curry2(function identical(a, b) {\n        // SameValue algorithm\n        if (a === b) {\n            // Steps 1-5, 7-10\n            // Steps 6.b-6.e: +0 != -0\n            return a !== 0 || 1 / a === 1 / b;\n        } else {\n            // Step 6.a: NaN == NaN\n            return a !== a && b !== b;\n        }\n    });\n\n    /**\n     * A function that does nothing but return the parameter supplied to it. Good as a default\n     * or placeholder function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> a\n     * @param {*} x The value to return.\n     * @return {*} The input value, `x`.\n     * @example\n     *\n     *      R.identity(1); //=> 1\n     *\n     *      var obj = {};\n     *      R.identity(obj) === obj; //=> true\n     */\n    var identity = _curry1(_identity);\n\n    /**\n     * Creates a function that will process either the `onTrue` or the `onFalse` function depending\n     * upon the result of the `condition` predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n     * @param {Function} condition A predicate function\n     * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n     * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n     * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n     *                    function depending upon the result of the `condition` predicate.\n     * @example\n     *\n     *      // Flatten all arrays in the list but leave other values alone.\n     *      var flattenArrays = R.map(R.ifElse(Array.isArray, R.flatten, R.identity));\n     *\n     *      flattenArrays([[0], [[10], [8]], 1234, {}]); //=> [[0], [10, 8], 1234, {}]\n     *      flattenArrays([[[10], 123], [8, [10]], \"hello\"]); //=> [[10, 123], [8, 10], \"hello\"]\n     */\n    var ifElse = _curry3(function ifElse(condition, onTrue, onFalse) {\n        return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n            return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n        });\n    });\n\n    /**\n     * Increments its argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @see R.dec\n     * @example\n     *\n     *      R.inc(42); //=> 43\n     */\n    var inc = add(1);\n\n    /**\n     * Inserts the supplied element into the list, at index `index`.  _Note\n     * that this is not destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} index The position to insert the element\n     * @param {*} elt The element to insert into the Array\n     * @param {Array} list The list to insert into\n     * @return {Array} A new Array with `elt` inserted at `index`.\n     * @example\n     *\n     *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n     */\n    var insert = _curry3(function insert(idx, elt, list) {\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\n        var result = _slice(list);\n        result.splice(idx, 0, elt);\n        return result;\n    });\n\n    /**\n     * Inserts the sub-list into the list, at index `index`.  _Note  that this\n     * is not destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a] -> [a]\n     * @param {Number} index The position to insert the sub-list\n     * @param {Array} elts The sub-list to insert into the Array\n     * @param {Array} list The list to insert the sub-list into\n     * @return {Array} A new Array with `elts` inserted starting at `index`.\n     * @example\n     *\n     *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n     */\n    var insertAll = _curry3(function insertAll(idx, elts, list) {\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\n        return _concat(_concat(_slice(list, 0, idx), elts), _slice(list, idx));\n    });\n\n    /**\n     * See if an object (`val`) is an instance of the supplied constructor.\n     * This function will check up the inheritance chain, if any.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig (* -> {*}) -> a -> Boolean\n     * @param {Object} ctor A constructor\n     * @param {*} val The value to test\n     * @return {Boolean}\n     * @example\n     *\n     *      R.is(Object, {}); //=> true\n     *      R.is(Number, 1); //=> true\n     *      R.is(Object, 1); //=> false\n     *      R.is(String, 's'); //=> true\n     *      R.is(String, new String('')); //=> true\n     *      R.is(Object, new String('')); //=> true\n     *      R.is(Object, 's'); //=> false\n     *      R.is(Number, {}); //=> false\n     */\n    var is = _curry2(function is(Ctor, val) {\n        return val != null && val.constructor === Ctor || val instanceof Ctor;\n    });\n\n    /**\n     * Tests whether or not an object is similar to an array.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @category List\n     * @sig * -> Boolean\n     * @param {*} x The object to test.\n     * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n     * @example\n     *\n     *      R.isArrayLike([]); //=> true\n     *      R.isArrayLike(true); //=> false\n     *      R.isArrayLike({}); //=> false\n     *      R.isArrayLike({length: 10}); //=> false\n     *      R.isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n     */\n    var isArrayLike = _curry1(function isArrayLike(x) {\n        if (_isArray(x)) {\n            return true;\n        }\n        if (!x) {\n            return false;\n        }\n        if (typeof x !== 'object') {\n            return false;\n        }\n        if (x instanceof String) {\n            return false;\n        }\n        if (x.nodeType === 1) {\n            return !!x.length;\n        }\n        if (x.length === 0) {\n            return true;\n        }\n        if (x.length > 0) {\n            return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n        }\n        return false;\n    });\n\n    /**\n     * Reports whether the list has zero elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [a] -> Boolean\n     * @param {Array} list\n     * @return {Boolean}\n     * @example\n     *\n     *      R.isEmpty([1, 2, 3]);   //=> false\n     *      R.isEmpty([]);          //=> true\n     *      R.isEmpty('');          //=> true\n     *      R.isEmpty(null);        //=> false\n     *      R.isEmpty(R.keys({}));  //=> true\n     *      R.isEmpty({});          //=> false ({} does not have a length property)\n     *      R.isEmpty({length: 0}); //=> true\n     */\n    var isEmpty = _curry1(function isEmpty(list) {\n        return Object(list).length === 0;\n    });\n\n    /**\n     * Checks if the input value is `null` or `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig * -> Boolean\n     * @param {*} x The value to test.\n     * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n     * @example\n     *\n     *      R.isNil(null); //=> true\n     *      R.isNil(undefined); //=> true\n     *      R.isNil(0); //=> false\n     *      R.isNil([]); //=> false\n     */\n    var isNil = _curry1(function isNil(x) {\n        return x == null;\n    });\n\n    /**\n     * Returns a list containing the names of all the enumerable own\n     * properties of the supplied object.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own properties.\n     * @example\n     *\n     *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n     */\n    // cover IE < 9 keys issues\n    var keys = function () {\n        // cover IE < 9 keys issues\n        var hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');\n        var nonEnumerableProps = [\n            'constructor',\n            'valueOf',\n            'isPrototypeOf',\n            'toString',\n            'propertyIsEnumerable',\n            'hasOwnProperty',\n            'toLocaleString'\n        ];\n        var contains = function contains(list, item) {\n            var idx = 0;\n            while (idx < list.length) {\n                if (list[idx] === item) {\n                    return true;\n                }\n                idx += 1;\n            }\n            return false;\n        };\n        return typeof Object.keys === 'function' ? _curry1(function keys(obj) {\n            return Object(obj) !== obj ? [] : Object.keys(obj);\n        }) : _curry1(function keys(obj) {\n            if (Object(obj) !== obj) {\n                return [];\n            }\n            var prop, ks = [], nIdx;\n            for (prop in obj) {\n                if (_has(prop, obj)) {\n                    ks[ks.length] = prop;\n                }\n            }\n            if (hasEnumBug) {\n                nIdx = nonEnumerableProps.length - 1;\n                while (nIdx >= 0) {\n                    prop = nonEnumerableProps[nIdx];\n                    if (_has(prop, obj) && !contains(ks, prop)) {\n                        ks[ks.length] = prop;\n                    }\n                    nIdx -= 1;\n                }\n            }\n            return ks;\n        });\n    }();\n\n    /**\n     * Returns a list containing the names of all the\n     * properties of the supplied object, including prototype properties.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.keysIn(f); //=> ['x', 'y']\n     */\n    var keysIn = _curry1(function keysIn(obj) {\n        var prop, ks = [];\n        for (prop in obj) {\n            ks[ks.length] = prop;\n        }\n        return ks;\n    });\n\n    /**\n     * Returns the number of elements in the array by returning `list.length`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> Number\n     * @param {Array} list The array to inspect.\n     * @return {Number} The length of the array.\n     * @example\n     *\n     *      R.length([]); //=> 0\n     *      R.length([1, 2, 3]); //=> 3\n     */\n    var length = _curry1(function length(list) {\n        return list != null && is(Number, list.length) ? list.length : NaN;\n    });\n\n    /**\n     * Returns `true` if the first argument is less than the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @see R.gt\n     * @example\n     *\n     *      R.lt(2, 1); //=> false\n     *      R.lt(2, 2); //=> false\n     *      R.lt(2, 3); //=> true\n     *      R.lt('a', 'z'); //=> true\n     *      R.lt('z', 'a'); //=> false\n     */\n    var lt = _curry2(function lt(a, b) {\n        return a < b;\n    });\n\n    /**\n     * Returns `true` if the first argument is less than or equal to the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean}\n     * @see R.gte\n     * @example\n     *\n     *      R.lte(2, 1); //=> false\n     *      R.lte(2, 2); //=> true\n     *      R.lte(2, 3); //=> true\n     *      R.lte('a', 'z'); //=> true\n     *      R.lte('z', 'a'); //=> false\n     */\n    var lte = _curry2(function lte(a, b) {\n        return a <= b;\n    });\n\n    /**\n     * The mapAccum function behaves like a combination of map and reduce; it applies a\n     * function to each element of a list, passing an accumulating parameter from left to\n     * right, and returning a final value of this accumulator together with the new list.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should return\n     * a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var append = function(a, b) {\n     *        return [a + b, a + b];\n     *      }\n     *\n     *      R.mapAccum(append, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n     */\n    var mapAccum = _curry3(function mapAccum(fn, acc, list) {\n        var idx = 0, len = list.length, result = [], tuple = [acc];\n        while (idx < len) {\n            tuple = fn(tuple[0], list[idx]);\n            result[idx] = tuple[1];\n            idx += 1;\n        }\n        return [\n            tuple[0],\n            result\n        ];\n    });\n\n    /**\n     * The mapAccumRight function behaves like a combination of map and reduce; it applies a\n     * function to each element of a list, passing an accumulating parameter from right\n     * to left, and returning a final value of this accumulator together with the new list.\n     *\n     * Similar to `mapAccum`, except moves through the input list from the right to the\n     * left.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should return\n     * a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var append = function(a, b) {\n     *        return [a + b, a + b];\n     *      }\n     *\n     *      R.mapAccumRight(append, 0, digits); //=> ['04321', ['04321', '0432', '043', '04']]\n     */\n    var mapAccumRight = _curry3(function mapAccumRight(fn, acc, list) {\n        var idx = list.length - 1, result = [], tuple = [acc];\n        while (idx >= 0) {\n            tuple = fn(tuple[0], list[idx]);\n            result[idx] = tuple[1];\n            idx -= 1;\n        }\n        return [\n            tuple[0],\n            result\n        ];\n    });\n\n    /**\n     * Tests a regular expression against a String. Note that this function\n     * will return an empty array when there are no matches. This differs\n     * from [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n     * which returns `null` when there are no matches.\n     *\n     * @func\n     * @memberOf R\n     * @see R.test\n     * @category String\n     * @sig RegExp -> String -> [String | Undefined]\n     * @param {RegExp} rx A regular expression.\n     * @param {String} str The string to match against\n     * @return {Array} The list of matches or empty array.\n     * @example\n     *\n     *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n     *      R.match(/a/, 'b'); //=> []\n     *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n     */\n    var match = _curry2(function match(rx, str) {\n        return str.match(rx) || [];\n    });\n\n    /**\n     * mathMod behaves like the modulo operator should mathematically, unlike the `%`\n     * operator (and by extension, R.modulo). So while \"-17 % 5\" is -2,\n     * mathMod(-17, 5) is 3. mathMod requires Integer arguments, and returns NaN\n     * when the modulus is zero or negative.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} m The dividend.\n     * @param {Number} p the modulus.\n     * @return {Number} The result of `b mod a`.\n     * @example\n     *\n     *      R.mathMod(-17, 5);  //=> 3\n     *      R.mathMod(17, 5);   //=> 2\n     *      R.mathMod(17, -5);  //=> NaN\n     *      R.mathMod(17, 0);   //=> NaN\n     *      R.mathMod(17.2, 5); //=> NaN\n     *      R.mathMod(17, 5.3); //=> NaN\n     *\n     *      var clock = R.mathMod(R.__, 12);\n     *      clock(15); //=> 3\n     *      clock(24); //=> 0\n     *\n     *      var seventeenMod = R.mathMod(17);\n     *      seventeenMod(3);  //=> 2\n     *      seventeenMod(4);  //=> 1\n     *      seventeenMod(10); //=> 7\n     */\n    var mathMod = _curry2(function mathMod(m, p) {\n        if (!_isInteger(m)) {\n            return NaN;\n        }\n        if (!_isInteger(p) || p < 1) {\n            return NaN;\n        }\n        return (m % p + p) % p;\n    });\n\n    /**\n     * Returns the larger of its two arguments.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> a\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.maxBy, R.min\n     * @example\n     *\n     *      R.max(789, 123); //=> 789\n     *      R.max('a', 'b'); //=> 'b'\n     */\n    var max = _curry2(function max(a, b) {\n        return b > a ? b : a;\n    });\n\n    /**\n     * Takes a function and two values, and returns whichever value produces\n     * the larger result when passed to the provided function.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord b => (a -> b) -> a -> a -> a\n     * @param {Function} f\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.max, R.minBy\n     * @example\n     *\n     *      R.maxBy(function(n) { return n * n; }, -3, 2); //=> -3\n     */\n    var maxBy = _curry3(function maxBy(f, a, b) {\n        return f(b) > f(a) ? b : a;\n    });\n\n    /**\n     * Create a new object with the own properties of `a`\n     * merged with the own properties of object `b`.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> {k: v} -> {k: v}\n     * @param {Object} a\n     * @param {Object} b\n     * @return {Object}\n     * @example\n     *\n     *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n     *      //=> { 'name': 'fred', 'age': 40 }\n     *\n     *      var resetToDefault = R.merge(R.__, {x: 0});\n     *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n     */\n    var merge = _curry2(function merge(a, b) {\n        var result = {};\n        var ks = keys(a);\n        var idx = 0;\n        while (idx < ks.length) {\n            result[ks[idx]] = a[ks[idx]];\n            idx += 1;\n        }\n        ks = keys(b);\n        idx = 0;\n        while (idx < ks.length) {\n            result[ks[idx]] = b[ks[idx]];\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns the smaller of its two arguments.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> a\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.minBy, R.max\n     * @example\n     *\n     *      R.min(789, 123); //=> 123\n     *      R.min('a', 'b'); //=> 'a'\n     */\n    var min = _curry2(function min(a, b) {\n        return b < a ? b : a;\n    });\n\n    /**\n     * Takes a function and two values, and returns whichever value produces\n     * the smaller result when passed to the provided function.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord b => (a -> b) -> a -> a -> a\n     * @param {Function} f\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.min, R.maxBy\n     * @example\n     *\n     *      R.minBy(function(n) { return n * n; }, -3, 2); //=> 2\n     */\n    var minBy = _curry3(function minBy(f, a, b) {\n        return f(b) < f(a) ? b : a;\n    });\n\n    /**\n     * Divides the second parameter by the first and returns the remainder.\n     * Note that this functions preserves the JavaScript-style behavior for\n     * modulo. For mathematical modulo see `mathMod`\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The value to the divide.\n     * @param {Number} b The pseudo-modulus\n     * @return {Number} The result of `b % a`.\n     * @see R.mathMod\n     * @example\n     *\n     *      R.modulo(17, 3); //=> 2\n     *      // JS behavior:\n     *      R.modulo(-17, 3); //=> -2\n     *      R.modulo(17, -3); //=> 2\n     *\n     *      var isOdd = R.modulo(R.__, 2);\n     *      isOdd(42); //=> 0\n     *      isOdd(21); //=> 1\n     */\n    var modulo = _curry2(function modulo(a, b) {\n        return a % b;\n    });\n\n    /**\n     * Multiplies two numbers. Equivalent to `a * b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a * b`.\n     * @see R.divide\n     * @example\n     *\n     *      var double = R.multiply(2);\n     *      var triple = R.multiply(3);\n     *      double(3);       //=>  6\n     *      triple(4);       //=> 12\n     *      R.multiply(2, 5);  //=> 10\n     */\n    var multiply = _curry2(function multiply(a, b) {\n        return a * b;\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts exactly `n`\n     * parameters. Any extraneous parameters will not be passed to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} n The desired arity of the new function.\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity `n`.\n     * @example\n     *\n     *      var takesTwoArgs = function(a, b) {\n     *        return [a, b];\n     *      };\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.nAry(1, takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only `n` arguments are passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n    var nAry = _curry2(function nAry(n, fn) {\n        switch (n) {\n        case 0:\n            return function () {\n                return fn.call(this);\n            };\n        case 1:\n            return function (a0) {\n                return fn.call(this, a0);\n            };\n        case 2:\n            return function (a0, a1) {\n                return fn.call(this, a0, a1);\n            };\n        case 3:\n            return function (a0, a1, a2) {\n                return fn.call(this, a0, a1, a2);\n            };\n        case 4:\n            return function (a0, a1, a2, a3) {\n                return fn.call(this, a0, a1, a2, a3);\n            };\n        case 5:\n            return function (a0, a1, a2, a3, a4) {\n                return fn.call(this, a0, a1, a2, a3, a4);\n            };\n        case 6:\n            return function (a0, a1, a2, a3, a4, a5) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5);\n            };\n        case 7:\n            return function (a0, a1, a2, a3, a4, a5, a6) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n            };\n        case 8:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n            };\n        case 9:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n            };\n        case 10:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n            };\n        default:\n            throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n        }\n    });\n\n    /**\n     * Negates its argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @example\n     *\n     *      R.negate(42); //=> -42\n     */\n    var negate = _curry1(function negate(n) {\n        return -n;\n    });\n\n    /**\n     * A function that returns the `!` of its argument. It will return `true` when\n     * passed false-y value, and `false` when passed a truth-y one.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig * -> Boolean\n     * @param {*} a any value\n     * @return {Boolean} the logical inverse of passed argument.\n     * @see R.complement\n     * @example\n     *\n     *      R.not(true); //=> false\n     *      R.not(false); //=> true\n     *      R.not(0); => true\n     *      R.not(1); => false\n     */\n    var not = _curry1(function not(a) {\n        return !a;\n    });\n\n    /**\n     * Returns the nth element of the given list or string.\n     * If n is negative the element at index length + n is returned.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> a | Undefined\n     * @sig Number -> String -> String\n     * @param {Number} offset\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      var list = ['foo', 'bar', 'baz', 'quux'];\n     *      R.nth(1, list); //=> 'bar'\n     *      R.nth(-1, list); //=> 'quux'\n     *      R.nth(-99, list); //=> undefined\n     *\n     *      R.nth('abc', 2); //=> 'c'\n     *      R.nth('abc', 3); //=> ''\n     */\n    var nth = _curry2(function nth(offset, list) {\n        var idx = offset < 0 ? list.length + offset : offset;\n        return _isString(list) ? list.charAt(idx) : list[idx];\n    });\n\n    /**\n     * Returns a function which returns its nth argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> *... -> *\n     * @param {Number} n\n     * @return {Function}\n     * @example\n     *\n     *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n     *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n     */\n    var nthArg = _curry1(function nthArg(n) {\n        return function () {\n            return nth(n, arguments);\n        };\n    });\n\n    /**\n     * Returns the nth character of the given string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {String} str\n     * @return {String}\n     * @deprecated since v0.16.0\n     * @example\n     *\n     *      R.nthChar(2, 'Ramda'); //=> 'm'\n     *      R.nthChar(-2, 'Ramda'); //=> 'd'\n     */\n    var nthChar = _curry2(function nthChar(n, str) {\n        return str.charAt(n < 0 ? str.length + n : n);\n    });\n\n    /**\n     * Returns the character code of the nth character of the given string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig Number -> String -> Number\n     * @param {Number} n\n     * @param {String} str\n     * @return {Number}\n     * @deprecated since v0.16.0\n     * @example\n     *\n     *      R.nthCharCode(2, 'Ramda'); //=> 'm'.charCodeAt(0)\n     *      R.nthCharCode(-2, 'Ramda'); //=> 'd'.charCodeAt(0)\n     */\n    var nthCharCode = _curry2(function nthCharCode(n, str) {\n        return str.charCodeAt(n < 0 ? str.length + n : n);\n    });\n\n    /**\n     * Returns a singleton array containing the value provided.\n     *\n     * Note this `of` is different from the ES6 `of`; See\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> [a]\n     * @param {*} x any value\n     * @return {Array} An array wrapping `x`.\n     * @example\n     *\n     *      R.of(null); //=> [null]\n     *      R.of([42]); //=> [[42]]\n     */\n    var of = _curry1(function of(x) {\n        return [x];\n    });\n\n    /**\n     * Accepts a function `fn` and returns a function that guards invocation of `fn` such that\n     * `fn` can only ever be called once, no matter how many times the returned function is\n     * invoked.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a... -> b) -> (a... -> b)\n     * @param {Function} fn The function to wrap in a call-only-once wrapper.\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var addOneOnce = R.once(function(x){ return x + 1; });\n     *      addOneOnce(10); //=> 11\n     *      addOneOnce(addOneOnce(50)); //=> 11\n     */\n    var once = _curry1(function once(fn) {\n        var called = false, result;\n        return function () {\n            if (called) {\n                return result;\n            }\n            called = true;\n            result = fn.apply(this, arguments);\n            return result;\n        };\n    });\n\n    /**\n     * Returns the result of \"setting\" the portion of the given data structure\n     * focused by the given lens to the given value.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> (a -> a) -> s -> s\n     * @param {Lens} lens\n     * @param {*} v\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var headLens = R.lensIndex(0);\n     *\n     *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n     */\n    var over = function () {\n        var Identity = function (x) {\n            return {\n                value: x,\n                map: function (f) {\n                    return Identity(f(x));\n                }\n            };\n        };\n        return _curry3(function over(lens, f, x) {\n            return lens(function (y) {\n                return Identity(f(y));\n            })(x).value;\n        });\n    }();\n\n    /**\n     * Retrieve the value at a given path.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> {k: v} -> v | Undefined\n     * @param {Array} path The path to use.\n     * @return {*} The data at `path`.\n     * @example\n     *\n     *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n     *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n     */\n    var path = _curry2(function path(paths, obj) {\n        if (obj == null) {\n            return;\n        } else {\n            var val = obj;\n            for (var idx = 0, len = paths.length; idx < len && val != null; idx += 1) {\n                val = val[paths[idx]];\n            }\n            return val;\n        }\n    });\n\n    /**\n     * Returns a partial copy of an object containing only the keys specified.  If the key does not exist, the\n     * property is ignored.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.omit\n     * @example\n     *\n     *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n     */\n    var pick = _curry2(function pick(names, obj) {\n        var result = {};\n        var idx = 0;\n        while (idx < names.length) {\n            if (names[idx] in obj) {\n                result[names[idx]] = obj[names[idx]];\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Similar to `pick` except that this one includes a `key: undefined` pair for properties that don't exist.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n     */\n    var pickAll = _curry2(function pickAll(names, obj) {\n        var result = {};\n        var idx = 0;\n        var len = names.length;\n        while (idx < len) {\n            var name = names[idx];\n            result[name] = obj[name];\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a partial copy of an object containing only the keys that\n     * satisfy the supplied predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig (v, k -> Boolean) -> {k: v} -> {k: v}\n     * @param {Function} pred A predicate to determine whether or not a key\n     *        should be included on the output object.\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties that satisfy `pred`\n     *         on it.\n     * @see R.pick\n     * @example\n     *\n     *      var isUpperCase = function(val, key) { return key.toUpperCase() === key; }\n     *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n     */\n    var pickBy = _curry2(function pickBy(test, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (test(obj[prop], prop, obj)) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list with the given element at the front, followed by the contents of the\n     * list.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The item to add to the head of the output list.\n     * @param {Array} list The array to add to the tail of the output list.\n     * @return {Array} A new array.\n     * @see R.append\n     * @example\n     *\n     *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n     */\n    var prepend = _curry2(function prepend(el, list) {\n        return _concat([el], list);\n    });\n\n    /**\n     * Returns a function that when supplied an object returns the indicated property of that object, if it exists.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig s -> {s: a} -> a | Undefined\n     * @param {String} p The property name\n     * @param {Object} obj The object to query\n     * @return {*} The value at `obj.p`.\n     * @example\n     *\n     *      R.prop('x', {x: 100}); //=> 100\n     *      R.prop('x', {}); //=> undefined\n     */\n    var prop = _curry2(function prop(p, obj) {\n        return obj[p];\n    });\n\n    /**\n     * If the given, non-null object has an own property with the specified name,\n     * returns the value of that property.\n     * Otherwise returns the provided default value.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig a -> String -> Object -> a\n     * @param {*} val The default value.\n     * @param {String} p The name of the property to return.\n     * @param {Object} obj The object to query.\n     * @return {*} The value of given property of the supplied object or the default value.\n     * @example\n     *\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var favorite = R.prop('favoriteLibrary');\n     *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n     *\n     *      favorite(alice);  //=> undefined\n     *      favoriteWithDefault(alice);  //=> 'Ramda'\n     */\n    var propOr = _curry3(function propOr(val, p, obj) {\n        return obj != null && _has(p, obj) ? obj[p] : val;\n    });\n\n    /**\n     * Returns `true` if the specified object property satisfies the given\n     * predicate; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n     * @param {Function} pred\n     * @param {String} name\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.propEq\n     * @see R.propIs\n     * @example\n     *\n     *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n     */\n    var propSatisfies = _curry3(function propSatisfies(pred, name, obj) {\n        return pred(obj[name]);\n    });\n\n    /**\n     * Acts as multiple `prop`: array of keys in, array of values out. Preserves order.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [k] -> {k: v} -> [v]\n     * @param {Array} ps The property names to fetch\n     * @param {Object} obj The object to query\n     * @return {Array} The corresponding values or partially applied function.\n     * @example\n     *\n     *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n     *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n     *\n     *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n     *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n     */\n    var props = _curry2(function props(ps, obj) {\n        var len = ps.length;\n        var out = [];\n        var idx = 0;\n        while (idx < len) {\n            out[idx] = obj[ps[idx]];\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a list of numbers from `from` (inclusive) to `to`\n     * (exclusive).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> Number -> [Number]\n     * @param {Number} from The first number in the list.\n     * @param {Number} to One more than the last number in the list.\n     * @return {Array} The list of numbers in tthe set `[a, b)`.\n     * @example\n     *\n     *      R.range(1, 5);    //=> [1, 2, 3, 4]\n     *      R.range(50, 53);  //=> [50, 51, 52]\n     */\n    var range = _curry2(function range(from, to) {\n        if (!(_isNumber(from) && _isNumber(to))) {\n            throw new TypeError('Both arguments to range must be numbers');\n        }\n        var result = [];\n        var n = from;\n        while (n < to) {\n            result.push(n);\n            n += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a single item by iterating through the list, successively calling the iterator\n     * function and passing it an accumulator value and the current value from the array, and\n     * then passing the result to the next call.\n     *\n     * Similar to `reduce`, except moves through the input list from the right to the left.\n     *\n     * The iterator function receives two values: *(acc, value)*\n     *\n     * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse arrays), unlike\n     * the native `Array.prototype.reduce` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var pairs = [ ['a', 1], ['b', 2], ['c', 3] ];\n     *      var flattenPairs = function(acc, pair) {\n     *        return acc.concat(pair);\n     *      };\n     *\n     *      R.reduceRight(flattenPairs, [], pairs); //=> [ 'c', 3, 'b', 2, 'a', 1 ]\n     */\n    var reduceRight = _curry3(function reduceRight(fn, acc, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            acc = fn(acc, list[idx]);\n            idx -= 1;\n        }\n        return acc;\n    });\n\n    /**\n     * Returns a value wrapped to indicate that it is the final value of the\n     * reduce and transduce functions.  The returned value\n     * should be considered a black box: the internal structure is not\n     * guaranteed to be stable.\n     *\n     * Note: this optimization is unavailable to functions not explicitly listed\n     * above.  For instance, it is not currently supported by reduceIndexed,\n     * reduceRight, or reduceRightIndexed.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.reduce, R.transduce\n     * @sig a -> *\n     * @param {*} x The final value of the reduce.\n     * @return {*} The wrapped value.\n     * @example\n     *\n     *      R.reduce(\n     *        R.pipe(R.add, R.ifElse(R.lte(10), R.reduced, R.identity)),\n     *        0,\n     *        [1, 2, 3, 4, 5]) // 10\n     */\n    var reduced = _curry1(_reduced);\n\n    /**\n     * Removes the sub-list of `list` starting at index `start` and containing\n     * `count` elements.  _Note that this is not destructive_: it returns a\n     * copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @param {Number} start The position to start removing elements\n     * @param {Number} count The number of elements to remove\n     * @param {Array} list The list to remove from\n     * @return {Array} A new Array with `count` elements from `start` removed.\n     * @example\n     *\n     *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n     */\n    var remove = _curry3(function remove(start, count, list) {\n        return _concat(_slice(list, 0, Math.min(start, list.length)), _slice(list, Math.min(list.length, start + count)));\n    });\n\n    /**\n     * Replace a substring or regex match in a string with a replacement.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig RegExp|String -> String -> String -> String\n     * @param {RegExp|String} pattern A regular expression or a substring to match.\n     * @param {String} replacement The string to replace the matches with.\n     * @param {String} str The String to do the search and replacement in.\n     * @return {String} The result.\n     * @example\n     *\n     *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *\n     *      // Use the \"g\" (global) flag to replace all occurrences:\n     *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n     */\n    var replace = _curry3(function replace(regex, replacement, str) {\n        return str.replace(regex, replacement);\n    });\n\n    /**\n     * Returns a new list with the same elements as the original list, just\n     * in the reverse order.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The list to reverse.\n     * @return {Array} A copy of the list in reverse order.\n     * @example\n     *\n     *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n     *      R.reverse([1, 2]);     //=> [2, 1]\n     *      R.reverse([1]);        //=> [1]\n     *      R.reverse([]);         //=> []\n     */\n    var reverse = _curry1(function reverse(list) {\n        return _slice(list).reverse();\n    });\n\n    /**\n     * Scan is similar to reduce, but returns a list of successively reduced values from the left\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> [a]\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} A list of all intermediately reduced values.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n     */\n    var scan = _curry3(function scan(fn, acc, list) {\n        var idx = 0, len = list.length, result = [acc];\n        while (idx < len) {\n            acc = fn(acc, list[idx]);\n            result[idx + 1] = acc;\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns the result of \"setting\" the portion of the given data structure\n     * focused by the given lens to the given value.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> a -> s -> s\n     * @param {Lens} lens\n     * @param {*} v\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n     *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n     */\n    var set = _curry3(function set(lens, v, x) {\n        return over(lens, always(v), x);\n    });\n\n    /**\n     * Returns a copy of the list, sorted according to the comparator function, which should accept two values at a\n     * time and return a negative number if the first value is smaller, a positive number if it's larger, and zero\n     * if they are equal.  Please note that this is a **copy** of the list.  It does not modify the original.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,a -> Number) -> [a] -> [a]\n     * @param {Function} comparator A sorting function :: a -> b -> Int\n     * @param {Array} list The list to sort\n     * @return {Array} a new array with its elements sorted by the comparator function.\n     * @example\n     *\n     *      var diff = function(a, b) { return a - b; };\n     *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n     */\n    var sort = _curry2(function sort(comparator, list) {\n        return _slice(list).sort(comparator);\n    });\n\n    /**\n     * Sorts the list according to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord b => (a -> b) -> [a] -> [a]\n     * @param {Function} fn\n     * @param {Array} list The list to sort.\n     * @return {Array} A new list sorted by the keys generated by `fn`.\n     * @example\n     *\n     *      var sortByFirstItem = R.sortBy(prop(0));\n     *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n     *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n     *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var bob = {\n     *        name: 'Bob',\n     *        age: -10\n     *      };\n     *      var clara = {\n     *        name: 'clara',\n     *        age: 314.159\n     *      };\n     *      var people = [clara, bob, alice];\n     *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n     */\n    var sortBy = _curry2(function sortBy(fn, list) {\n        return _slice(list).sort(function (a, b) {\n            var aa = fn(a);\n            var bb = fn(b);\n            return aa < bb ? -1 : aa > bb ? 1 : 0;\n        });\n    });\n\n    /**\n     * Subtracts two numbers. Equivalent to `a - b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a - b`.\n     * @see R.add\n     * @example\n     *\n     *      R.subtract(10, 8); //=> 2\n     *\n     *      var minus5 = R.subtract(R.__, 5);\n     *      minus5(17); //=> 12\n     *\n     *      var complementaryAngle = R.subtract(90);\n     *      complementaryAngle(30); //=> 60\n     *      complementaryAngle(72); //=> 18\n     */\n    var subtract = _curry2(function subtract(a, b) {\n        return a - b;\n    });\n\n    /**\n     * Returns a new list containing the last `n` elements of a given list, passing each value\n     * to the supplied predicate function, and terminating when the predicate function returns\n     * `false`. Excludes the element that caused the predicate function to fail. The predicate\n     * function is passed one argument: *(value)*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.dropLastWhile\n     * @example\n     *\n     *      var isNotOne = function(x) {\n     *        return !(x === 1);\n     *      };\n     *\n     *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n     */\n    var takeLastWhile = _curry2(function takeLastWhile(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0 && fn(list[idx])) {\n            idx -= 1;\n        }\n        return _slice(list, idx + 1, Infinity);\n    });\n\n    /**\n     * Runs the given function with the supplied object, then returns the object.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> *) -> a -> a\n     * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n     * @param {*} x\n     * @return {*} `x`.\n     * @example\n     *\n     *      var sayX = function(x) { console.log('x is ' + x); };\n     *      R.tap(sayX, 100); //=> 100\n     *      //-> 'x is 100'\n     */\n    var tap = _curry2(function tap(fn, x) {\n        fn(x);\n        return x;\n    });\n\n    /**\n     * Determines whether a given string matches a given regular expression.\n     *\n     * @func\n     * @memberOf R\n     * @see R.match\n     * @category String\n     * @sig RegExp -> String -> Boolean\n     * @param {RegExp} pattern\n     * @param {String} str\n     * @return {Boolean}\n     * @example\n     *\n     *      R.test(/^x/, 'xyz'); //=> true\n     *      R.test(/^y/, 'xyz'); //=> false\n     */\n    var test = _curry2(function test(pattern, str) {\n        return _cloneRegExp(pattern).test(str);\n    });\n\n    /**\n     * Calls an input function `n` times, returning an array containing the results of those\n     * function calls.\n     *\n     * `fn` is passed one argument: The current value of `n`, which begins at `0` and is\n     * gradually incremented to `n - 1`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (i -> a) -> i -> [a]\n     * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n     * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n     * @return {Array} An array containing the return values of all calls to `fn`.\n     * @example\n     *\n     *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n     */\n    var times = _curry2(function times(fn, n) {\n        var len = Number(n);\n        var list = new Array(len);\n        var idx = 0;\n        while (idx < len) {\n            list[idx] = fn(idx);\n            idx += 1;\n        }\n        return list;\n    });\n\n    /**\n     * Converts an object into an array of key, value arrays.\n     * Only the object's own properties are used.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own properties.\n     * @see R.fromPairs\n     * @example\n     *\n     *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n     */\n    var toPairs = _curry1(function toPairs(obj) {\n        var pairs = [];\n        for (var prop in obj) {\n            if (_has(prop, obj)) {\n                pairs[pairs.length] = [\n                    prop,\n                    obj[prop]\n                ];\n            }\n        }\n        return pairs;\n    });\n\n    /**\n     * Converts an object into an array of key, value arrays.\n     * The object's own properties and prototype properties are used.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own\n     *         and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n     */\n    var toPairsIn = _curry1(function toPairsIn(obj) {\n        var pairs = [];\n        for (var prop in obj) {\n            pairs[pairs.length] = [\n                prop,\n                obj[prop]\n            ];\n        }\n        return pairs;\n    });\n\n    /**\n     * Removes (strips) whitespace from both ends of the string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to trim.\n     * @return {String} Trimmed version of `str`.\n     * @example\n     *\n     *      R.trim('   xyz  '); //=> 'xyz'\n     *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n     */\n    var trim = function () {\n        var ws = '\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\n        var zeroWidth = '\\u200B';\n        var hasProtoTrim = typeof String.prototype.trim === 'function';\n        if (!hasProtoTrim || (ws.trim() || !zeroWidth.trim())) {\n            return _curry1(function trim(str) {\n                var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n                var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n                return str.replace(beginRx, '').replace(endRx, '');\n            });\n        } else {\n            return _curry1(function trim(str) {\n                return str.trim();\n            });\n        }\n    }();\n\n    /**\n     * Gives a single-word string description of the (native) type of a value, returning such\n     * answers as 'Object', 'Number', 'Array', or 'Null'.  Does not attempt to distinguish user\n     * Object types any further, reporting them all as 'Object'.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig (* -> {*}) -> String\n     * @param {*} val The value to test\n     * @return {String}\n     * @example\n     *\n     *      R.type({}); //=> \"Object\"\n     *      R.type(1); //=> \"Number\"\n     *      R.type(false); //=> \"Boolean\"\n     *      R.type('s'); //=> \"String\"\n     *      R.type(null); //=> \"Null\"\n     *      R.type([]); //=> \"Array\"\n     *      R.type(/[A-z]/); //=> \"RegExp\"\n     */\n    var type = _curry1(function type(val) {\n        return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n    });\n\n    /**\n     * Takes a function `fn`, which takes a single array argument, and returns\n     * a function which:\n     *\n     *   - takes any number of positional arguments;\n     *   - passes these arguments to `fn` as an array; and\n     *   - returns the result.\n     *\n     * In other words, R.unapply derives a variadic function from a function\n     * which takes an array. R.unapply is the inverse of R.apply.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ([*...] -> a) -> (*... -> a)\n     * @param {Function} fn\n     * @return {Function}\n     * @see R.apply\n     * @example\n     *\n     *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n     */\n    var unapply = _curry1(function unapply(fn) {\n        return function () {\n            return fn(_slice(arguments));\n        };\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts exactly 1\n     * parameter. Any extraneous parameters will not be passed to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> b) -> (a -> b)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 1.\n     * @example\n     *\n     *      var takesTwoArgs = function(a, b) {\n     *        return [a, b];\n     *      };\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.unary(takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only 1 argument is passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n    var unary = _curry1(function unary(fn) {\n        return nAry(1, fn);\n    });\n\n    /**\n     * Returns a function of arity `n` from a (manually) curried function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (a -> b) -> (a -> c)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to uncurry.\n     * @return {Function} A new function.\n     * @see R.curry\n     * @example\n     *\n     *      var addFour = function(a) {\n     *        return function(b) {\n     *          return function(c) {\n     *            return function(d) {\n     *              return a + b + c + d;\n     *            };\n     *          };\n     *        };\n     *      };\n     *\n     *      var uncurriedAddFour = R.uncurryN(4, addFour);\n     *      curriedAddFour(1, 2, 3, 4); //=> 10\n     */\n    var uncurryN = _curry2(function uncurryN(depth, fn) {\n        return curryN(depth, function () {\n            var currentDepth = 1;\n            var value = fn;\n            var idx = 0;\n            var endIdx;\n            while (currentDepth <= depth && typeof value === 'function') {\n                endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n                value = value.apply(this, _slice(arguments, idx, endIdx));\n                currentDepth += 1;\n                idx = endIdx;\n            }\n            return value;\n        });\n    });\n\n    /**\n     * Builds a list from a seed value. Accepts an iterator function, which returns either false\n     * to stop iteration or an array of length 2 containing the value to add to the resulting\n     * list and the seed to be used in the next call to the iterator function.\n     *\n     * The iterator function receives one argument: *(seed)*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> [b]) -> * -> [b]\n     * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n     *        either false to quit iteration or an array of length two to proceed. The element\n     *        at index 0 of this array will be added to the resulting array, and the element\n     *        at index 1 will be passed to the next call to `fn`.\n     * @param {*} seed The seed value.\n     * @return {Array} The final list.\n     * @example\n     *\n     *      var f = function(n) { return n > 50 ? false : [-n, n + 10] };\n     *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n     */\n    var unfold = _curry2(function unfold(fn, seed) {\n        var pair = fn(seed);\n        var result = [];\n        while (pair && pair.length) {\n            result[result.length] = pair[0];\n            pair = fn(pair[1]);\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list containing only one copy of each element in the original list, based\n     * upon the value returned by applying the supplied predicate to two list elements. Prefers\n     * the first item if two items compare equal based on the predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      var strEq = function(a, b) { return String(a) === String(b); };\n     *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n     *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n     *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n     *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n     */\n    var uniqWith = _curry2(function uniqWith(pred, list) {\n        var idx = 0, len = list.length;\n        var result = [], item;\n        while (idx < len) {\n            item = list[idx];\n            if (!_containsWith(pred, item, result)) {\n                result[result.length] = item;\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new copy of the array with the element at the\n     * provided index replaced with the given value.\n     * @see R.adjust\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} idx The index to update.\n     * @param {*} x The value to exist at the given index of the returned array.\n     * @param {Array|Arguments} list The source array-like object to be updated.\n     * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n     * @example\n     *\n     *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n     *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n     */\n    var update = _curry3(function update(idx, x, list) {\n        return adjust(always(x), idx, list);\n    });\n\n    /**\n     * Returns a list of all the enumerable own properties of the supplied object.\n     * Note that the order of the output array is not guaranteed across\n     * different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own properties.\n     * @example\n     *\n     *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n     */\n    var values = _curry1(function values(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var vals = [];\n        var idx = 0;\n        while (idx < len) {\n            vals[idx] = obj[props[idx]];\n            idx += 1;\n        }\n        return vals;\n    });\n\n    /**\n     * Returns a list of all the properties, including prototype properties,\n     * of the supplied object.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.valuesIn(f); //=> ['X', 'Y']\n     */\n    var valuesIn = _curry1(function valuesIn(obj) {\n        var prop, vs = [];\n        for (prop in obj) {\n            vs[vs.length] = obj[prop];\n        }\n        return vs;\n    });\n\n    /**\n     * Returns a \"view\" of the given data structure, determined by the given lens.\n     * The lens's focus determines which portion of the data structure is visible.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> s -> a\n     * @param {Lens} lens\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.view(xLens, {x: 1, y: 2});  //=> 1\n     *      R.view(xLens, {x: 4, y: 2});  //=> 4\n     */\n    var view = function () {\n        var Const = function (x) {\n            return {\n                value: x,\n                map: function () {\n                    return this;\n                }\n            };\n        };\n        return _curry2(function view(lens, x) {\n            return lens(Const)(x).value;\n        });\n    }();\n\n    /**\n     * Takes a spec object and a test object; returns true if the test satisfies\n     * the spec. Each of the spec's own properties must be a predicate function.\n     * Each predicate is applied to the value of the corresponding property of\n     * the test object. `where` returns true if all the predicates return true,\n     * false otherwise.\n     *\n     * `where` is well suited to declaratively expressing constraints for other\n     * functions such as `filter` and `find`.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @example\n     *\n     *      // pred :: Object -> Boolean\n     *      var pred = R.where({\n     *        a: R.equals('foo'),\n     *        b: R.complement(R.equals('bar')),\n     *        x: R.gt(_, 10),\n     *        y: R.lt(_, 20)\n     *      });\n     *\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n     *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n     */\n    var where = _curry2(function where(spec, testObj) {\n        for (var prop in spec) {\n            if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n                return false;\n            }\n        }\n        return true;\n    });\n\n    /**\n     * Wrap a function inside another to allow you to make adjustments to the parameters, or do\n     * other processing either before the internal function is called or with its results.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a... -> b) -> ((a... -> b) -> a... -> c) -> (a... -> c)\n     * @param {Function} fn The function to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var greet = function(name) {return 'Hello ' + name;};\n     *\n     *      var shoutedGreet = R.wrap(greet, function(gr, name) {\n     *        return gr(name).toUpperCase();\n     *      });\n     *      shoutedGreet(\"Kathy\"); //=> \"HELLO KATHY\"\n     *\n     *      var shortenedGreet = R.wrap(greet, function(gr, name) {\n     *        return gr(name.substring(0, 3));\n     *      });\n     *      shortenedGreet(\"Robert\"); //=> \"Hello Rob\"\n     */\n    var wrap = _curry2(function wrap(fn, wrapper) {\n        return curryN(fn.length, function () {\n            return wrapper.apply(this, _concat([fn], arguments));\n        });\n    });\n\n    /**\n     * Creates a new list out of the two supplied by creating each possible\n     * pair from the lists.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The list made by combining each possible pair from\n     *         `as` and `bs` into pairs (`[a, b]`).\n     * @example\n     *\n     *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n     */\n    // = xprodWith(prepend); (takes about 3 times as long...)\n    var xprod = _curry2(function xprod(a, b) {\n        // = xprodWith(prepend); (takes about 3 times as long...)\n        var idx = 0;\n        var ilen = a.length;\n        var j;\n        var jlen = b.length;\n        var result = [];\n        while (idx < ilen) {\n            j = 0;\n            while (j < jlen) {\n                result[result.length] = [\n                    a[idx],\n                    b[j]\n                ];\n                j += 1;\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Creates a new list out of the two supplied by pairing up\n     * equally-positioned items from both lists.  The returned list is\n     * truncated to the length of the shorter of the two input lists.\n     * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n     * @example\n     *\n     *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n     */\n    var zip = _curry2(function zip(a, b) {\n        var rv = [];\n        var idx = 0;\n        var len = Math.min(a.length, b.length);\n        while (idx < len) {\n            rv[idx] = [\n                a[idx],\n                b[idx]\n            ];\n            idx += 1;\n        }\n        return rv;\n    });\n\n    /**\n     * Creates a new object out of a list of keys and a list of values.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [String] -> [*] -> {String: *}\n     * @param {Array} keys The array that will be properties on the output object.\n     * @param {Array} values The list of values on the output object.\n     * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n     * @example\n     *\n     *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n     */\n    var zipObj = _curry2(function zipObj(keys, values) {\n        var idx = 0, len = keys.length, out = {};\n        while (idx < len) {\n            out[keys[idx]] = values[idx];\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Creates a new list out of the two supplied by applying the function to\n     * each equally-positioned pair in the lists. The returned list is\n     * truncated to the length of the shorter of the two input lists.\n     *\n     * @function\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> c) -> [a] -> [b] -> [c]\n     * @param {Function} fn The function used to combine the two elements into one value.\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n     *         using `fn`.\n     * @example\n     *\n     *      var f = function(x, y) {\n     *        // ...\n     *      };\n     *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n     *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n     */\n    var zipWith = _curry3(function zipWith(fn, a, b) {\n        var rv = [], idx = 0, len = Math.min(a.length, b.length);\n        while (idx < len) {\n            rv[idx] = fn(a[idx], b[idx]);\n            idx += 1;\n        }\n        return rv;\n    });\n\n    /**\n     * A function that always returns `false`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig * -> false\n     * @return {Boolean} false\n     * @see R.always, R.T\n     * @example\n     *\n     *      R.F(); //=> false\n     */\n    var F = always(false);\n\n    /**\n     * A function that always returns `true`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig * -> true\n     * @return {Boolean} `true`.\n     * @see R.always, R.F\n     * @example\n     *\n     *      R.T(); //=> true\n     */\n    var T = always(true);\n\n    /**\n     * Similar to hasMethod, this checks whether a function has a [methodname]\n     * function. If it isn't an array it will execute that function otherwise it will\n     * default to the ramda implementation.\n     *\n     * @private\n     * @param {Function} fn ramda implemtation\n     * @param {String} methodname property to check for a custom implementation\n     * @return {Object} Whatever the return value of the method is.\n     */\n    var _checkForMethod = function _checkForMethod(methodname, fn) {\n        return function () {\n            var length = arguments.length;\n            if (length === 0) {\n                return fn();\n            }\n            var obj = arguments[length - 1];\n            return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, _slice(arguments, 0, length - 1));\n        };\n    };\n\n    /**\n     * Copies an object.\n     *\n     * @private\n     * @param {*} value The value to be copied\n     * @param {Array} refFrom Array containing the source references\n     * @param {Array} refTo Array containing the copied source references\n     * @return {*} The copied value.\n     */\n    var _clone = function _clone(value, refFrom, refTo) {\n        var copy = function copy(copiedValue) {\n            var len = refFrom.length;\n            var idx = 0;\n            while (idx < len) {\n                if (value === refFrom[idx]) {\n                    return refTo[idx];\n                }\n                idx += 1;\n            }\n            refFrom[idx + 1] = value;\n            refTo[idx + 1] = copiedValue;\n            for (var key in value) {\n                copiedValue[key] = _clone(value[key], refFrom, refTo);\n            }\n            return copiedValue;\n        };\n        switch (type(value)) {\n        case 'Object':\n            return copy({});\n        case 'Array':\n            return copy([]);\n        case 'Date':\n            return new Date(value);\n        case 'RegExp':\n            return _cloneRegExp(value);\n        default:\n            return value;\n        }\n    };\n\n    var _createPartialApplicator = function _createPartialApplicator(concat) {\n        return function (fn) {\n            var args = _slice(arguments, 1);\n            return _arity(Math.max(0, fn.length - args.length), function () {\n                return fn.apply(this, concat(args, arguments));\n            });\n        };\n    };\n\n    /**\n     * Returns a function that dispatches with different strategies based on the\n     * object in list position (last argument). If it is an array, executes [fn].\n     * Otherwise, if it has a  function with [methodname], it will execute that\n     * function (functor case). Otherwise, if it is a transformer, uses transducer\n     * [xf] to return a new transformer (transducer case). Otherwise, it will\n     * default to executing [fn].\n     *\n     * @private\n     * @param {String} methodname property to check for a custom implementation\n     * @param {Function} xf transducer to initialize if object is transformer\n     * @param {Function} fn default ramda implementation\n     * @return {Function} A function that dispatches on object in list position\n     */\n    var _dispatchable = function _dispatchable(methodname, xf, fn) {\n        return function () {\n            var length = arguments.length;\n            if (length === 0) {\n                return fn();\n            }\n            var obj = arguments[length - 1];\n            if (!_isArray(obj)) {\n                var args = _slice(arguments, 0, length - 1);\n                if (typeof obj[methodname] === 'function') {\n                    return obj[methodname].apply(obj, args);\n                }\n                if (_isTransformer(obj)) {\n                    var transducer = xf.apply(null, args);\n                    return transducer(obj);\n                }\n            }\n            return fn.apply(this, arguments);\n        };\n    };\n\n    // The algorithm used to handle cyclic structures is\n    // inspired by underscore's isEqual\n    // RegExp equality algorithm: http://stackoverflow.com/a/10776635\n    var _equals = function _equals(a, b, stackA, stackB) {\n        var typeA = type(a);\n        if (typeA !== type(b)) {\n            return false;\n        }\n        if (typeA === 'Boolean' || typeA === 'Number' || typeA === 'String') {\n            return typeof a === 'object' ? typeof b === 'object' && identical(a.valueOf(), b.valueOf()) : identical(a, b);\n        }\n        if (identical(a, b)) {\n            return true;\n        }\n        if (typeA === 'RegExp') {\n            // RegExp equality algorithm: http://stackoverflow.com/a/10776635\n            return a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode;\n        }\n        if (Object(a) === a) {\n            if (typeA === 'Date' && a.getTime() !== b.getTime()) {\n                return false;\n            }\n            var keysA = keys(a);\n            if (keysA.length !== keys(b).length) {\n                return false;\n            }\n            var idx = stackA.length - 1;\n            while (idx >= 0) {\n                if (stackA[idx] === a) {\n                    return stackB[idx] === b;\n                }\n                idx -= 1;\n            }\n            stackA[stackA.length] = a;\n            stackB[stackB.length] = b;\n            idx = keysA.length - 1;\n            while (idx >= 0) {\n                var key = keysA[idx];\n                if (!_has(key, b) || !_equals(b[key], a[key], stackA, stackB)) {\n                    return false;\n                }\n                idx -= 1;\n            }\n            stackA.pop();\n            stackB.pop();\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * Private function that determines whether or not a provided object has a given method.\n     * Does not ignore methods stored on the object's prototype chain. Used for dynamically\n     * dispatching Ramda methods to non-Array objects.\n     *\n     * @private\n     * @param {String} methodName The name of the method to check for.\n     * @param {Object} obj The object to test.\n     * @return {Boolean} `true` has a given method, `false` otherwise.\n     * @example\n     *\n     *      var person = { name: 'John' };\n     *      person.shout = function() { alert(this.name); };\n     *\n     *      _hasMethod('shout', person); //=> true\n     *      _hasMethod('foo', person); //=> false\n     */\n    var _hasMethod = function _hasMethod(methodName, obj) {\n        return obj != null && !_isArray(obj) && typeof obj[methodName] === 'function';\n    };\n\n    /**\n     * `_makeFlat` is a helper function that returns a one-level or fully recursive function\n     * based on the flag passed in.\n     *\n     * @private\n     */\n    var _makeFlat = function _makeFlat(recursive) {\n        return function flatt(list) {\n            var value, result = [], idx = 0, j, ilen = list.length, jlen;\n            while (idx < ilen) {\n                if (isArrayLike(list[idx])) {\n                    value = recursive ? flatt(list[idx]) : list[idx];\n                    j = 0;\n                    jlen = value.length;\n                    while (j < jlen) {\n                        result[result.length] = value[j];\n                        j += 1;\n                    }\n                } else {\n                    result[result.length] = list[idx];\n                }\n                idx += 1;\n            }\n            return result;\n        };\n    };\n\n    var _reduce = function () {\n        function _arrayReduce(xf, acc, list) {\n            var idx = 0, len = list.length;\n            while (idx < len) {\n                acc = xf['@@transducer/step'](acc, list[idx]);\n                if (acc && acc['@@transducer/reduced']) {\n                    acc = acc['@@transducer/value'];\n                    break;\n                }\n                idx += 1;\n            }\n            return xf['@@transducer/result'](acc);\n        }\n        function _iterableReduce(xf, acc, iter) {\n            var step = iter.next();\n            while (!step.done) {\n                acc = xf['@@transducer/step'](acc, step.value);\n                if (acc && acc['@@transducer/reduced']) {\n                    acc = acc['@@transducer/value'];\n                    break;\n                }\n                step = iter.next();\n            }\n            return xf['@@transducer/result'](acc);\n        }\n        function _methodReduce(xf, acc, obj) {\n            return xf['@@transducer/result'](obj.reduce(bind(xf['@@transducer/step'], xf), acc));\n        }\n        var symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n        return function _reduce(fn, acc, list) {\n            if (typeof fn === 'function') {\n                fn = _xwrap(fn);\n            }\n            if (isArrayLike(list)) {\n                return _arrayReduce(fn, acc, list);\n            }\n            if (typeof list.reduce === 'function') {\n                return _methodReduce(fn, acc, list);\n            }\n            if (list[symIterator] != null) {\n                return _iterableReduce(fn, acc, list[symIterator]());\n            }\n            if (typeof list.next === 'function') {\n                return _iterableReduce(fn, acc, list);\n            }\n            throw new TypeError('reduce: list must be array or iterable');\n        };\n    }();\n\n    var _stepCat = function () {\n        var _stepCatArray = {\n            '@@transducer/init': Array,\n            '@@transducer/step': function (xs, x) {\n                return _concat(xs, [x]);\n            },\n            '@@transducer/result': _identity\n        };\n        var _stepCatString = {\n            '@@transducer/init': String,\n            '@@transducer/step': function (a, b) {\n                return a + b;\n            },\n            '@@transducer/result': _identity\n        };\n        var _stepCatObject = {\n            '@@transducer/init': Object,\n            '@@transducer/step': function (result, input) {\n                return merge(result, isArrayLike(input) ? createMapEntry(input[0], input[1]) : input);\n            },\n            '@@transducer/result': _identity\n        };\n        return function _stepCat(obj) {\n            if (_isTransformer(obj)) {\n                return obj;\n            }\n            if (isArrayLike(obj)) {\n                return _stepCatArray;\n            }\n            if (typeof obj === 'string') {\n                return _stepCatString;\n            }\n            if (typeof obj === 'object') {\n                return _stepCatObject;\n            }\n            throw new Error('Cannot create transformer for ' + obj);\n        };\n    }();\n\n    var _xall = function () {\n        function XAll(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.all = true;\n        }\n        XAll.prototype['@@transducer/init'] = _xfBase.init;\n        XAll.prototype['@@transducer/result'] = function (result) {\n            if (this.all) {\n                result = this.xf['@@transducer/step'](result, true);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XAll.prototype['@@transducer/step'] = function (result, input) {\n            if (!this.f(input)) {\n                this.all = false;\n                result = _reduced(this.xf['@@transducer/step'](result, false));\n            }\n            return result;\n        };\n        return _curry2(function _xall(f, xf) {\n            return new XAll(f, xf);\n        });\n    }();\n\n    var _xany = function () {\n        function XAny(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.any = false;\n        }\n        XAny.prototype['@@transducer/init'] = _xfBase.init;\n        XAny.prototype['@@transducer/result'] = function (result) {\n            if (!this.any) {\n                result = this.xf['@@transducer/step'](result, false);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XAny.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.any = true;\n                result = _reduced(this.xf['@@transducer/step'](result, true));\n            }\n            return result;\n        };\n        return _curry2(function _xany(f, xf) {\n            return new XAny(f, xf);\n        });\n    }();\n\n    var _xdrop = function () {\n        function XDrop(n, xf) {\n            this.xf = xf;\n            this.n = n;\n        }\n        XDrop.prototype['@@transducer/init'] = _xfBase.init;\n        XDrop.prototype['@@transducer/result'] = _xfBase.result;\n        XDrop.prototype['@@transducer/step'] = function (result, input) {\n            if (this.n > 0) {\n                this.n -= 1;\n                return result;\n            }\n            return this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdrop(n, xf) {\n            return new XDrop(n, xf);\n        });\n    }();\n\n    var _xdropWhile = function () {\n        function XDropWhile(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n        XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f) {\n                if (this.f(input)) {\n                    return result;\n                }\n                this.f = null;\n            }\n            return this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdropWhile(f, xf) {\n            return new XDropWhile(f, xf);\n        });\n    }();\n\n    var _xgroupBy = function () {\n        function XGroupBy(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.inputs = {};\n        }\n        XGroupBy.prototype['@@transducer/init'] = _xfBase.init;\n        XGroupBy.prototype['@@transducer/result'] = function (result) {\n            var key;\n            for (key in this.inputs) {\n                if (_has(key, this.inputs)) {\n                    result = this.xf['@@transducer/step'](result, this.inputs[key]);\n                    if (result['@@transducer/reduced']) {\n                        result = result['@@transducer/value'];\n                        break;\n                    }\n                }\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XGroupBy.prototype['@@transducer/step'] = function (result, input) {\n            var key = this.f(input);\n            this.inputs[key] = this.inputs[key] || [\n                key,\n                []\n            ];\n            this.inputs[key][1] = append(input, this.inputs[key][1]);\n            return result;\n        };\n        return _curry2(function _xgroupBy(f, xf) {\n            return new XGroupBy(f, xf);\n        });\n    }();\n\n    /**\n     * Creates a new list iteration function from an existing one by adding two new parameters\n     * to its callback function: the current index, and the entire list.\n     *\n     * This would turn, for instance, Ramda's simple `map` function into one that more closely\n     * resembles `Array.prototype.map`.  Note that this will only work for functions in which\n     * the iteration callback function is the first parameter, and where the list is the last\n     * parameter.  (This latter might be unimportant if the list parameter is not used.)\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @category List\n     * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n     * @param {Function} fn A list iteration function that does not pass index or list to its callback\n     * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n     * @example\n     *\n     *      var mapIndexed = R.addIndex(R.map);\n     *      mapIndexed(function(val, idx) {return idx + '-' + val;}, ['f', 'o', 'o', 'b', 'a', 'r']);\n     *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n     */\n    var addIndex = _curry1(function addIndex(fn) {\n        return curryN(fn.length, function () {\n            var idx = 0;\n            var origFn = arguments[0];\n            var list = arguments[arguments.length - 1];\n            var args = _slice(arguments);\n            args[0] = function () {\n                var result = origFn.apply(this, _concat(arguments, [\n                    idx,\n                    list\n                ]));\n                idx += 1;\n                return result;\n            };\n            return fn.apply(this, args);\n        });\n    });\n\n    /**\n     * Returns `true` if all elements of the list match the predicate, `false` if there are any\n     * that don't.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n     *         otherwise.\n     * @see R.any, R.none\n     * @example\n     *\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      var lessThan3 = R.flip(R.lt)(3);\n     *      R.all(lessThan2)([1, 2]); //=> false\n     *      R.all(lessThan3)([1, 2]); //=> true\n     */\n    var all = _curry2(_dispatchable('all', _xall, function all(fn, list) {\n        var idx = 0;\n        while (idx < list.length) {\n            if (!fn(list[idx])) {\n                return false;\n            }\n            idx += 1;\n        }\n        return true;\n    }));\n\n    /**\n     * A function that returns the first argument if it's falsy otherwise the second\n     * argument. Note that this is NOT short-circuited, meaning that if expressions\n     * are passed they are both evaluated.\n     *\n     * Dispatches to the `and` method of the first argument if applicable.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {*} a any value\n     * @param {*} b any other value\n     * @return {*} the first argument if falsy otherwise the second argument.\n     * @see R.both\n     * @example\n     *\n     *      R.and(false, true); //=> false\n     *      R.and(0, []); //=> 0\n     *      R.and(null, ''); => null\n     */\n    var and = _curry2(function and(a, b) {\n        return _hasMethod('and', a) ? a.and(b) : a && b;\n    });\n\n    /**\n     * Returns `true` if at least one of elements of the list match the predicate, `false`\n     * otherwise.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n     *         otherwise.\n     * @see R.all, R.none\n     * @example\n     *\n     *      var lessThan0 = R.flip(R.lt)(0);\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      R.any(lessThan0)([1, 2]); //=> false\n     *      R.any(lessThan2)([1, 2]); //=> true\n     */\n    var any = _curry2(_dispatchable('any', _xany, function any(fn, list) {\n        var idx = 0;\n        while (idx < list.length) {\n            if (fn(list[idx])) {\n                return true;\n            }\n            idx += 1;\n        }\n        return false;\n    }));\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts exactly 2\n     * parameters. Any extraneous parameters will not be passed to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> c) -> (a, b -> c)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 2.\n     * @example\n     *\n     *      var takesThreeArgs = function(a, b, c) {\n     *        return [a, b, c];\n     *      };\n     *      takesThreeArgs.length; //=> 3\n     *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      var takesTwoArgs = R.binary(takesThreeArgs);\n     *      takesTwoArgs.length; //=> 2\n     *      // Only 2 arguments are passed to the wrapped function\n     *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n     */\n    var binary = _curry1(function binary(fn) {\n        return nAry(2, fn);\n    });\n\n    /**\n     * Creates a deep copy of the value which may contain (nested) `Array`s and\n     * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n     * not copied, but assigned by their reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {*} -> {*}\n     * @param {*} value The object or array to clone\n     * @return {*} A new object or array.\n     * @example\n     *\n     *      var objects = [{}, {}, {}];\n     *      var objectsClone = R.clone(objects);\n     *      objects[0] === objectsClone[0]; //=> false\n     */\n    var clone = _curry1(function clone(value) {\n        return _clone(value, [], []);\n    });\n\n    /**\n     * Returns a new list consisting of the elements of the first list followed by the elements\n     * of the second.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The first list to merge.\n     * @param {Array} list2 The second set to merge.\n     * @return {Array} A new array consisting of the contents of `list1` followed by the\n     *         contents of `list2`. If, instead of an Array for `list1`, you pass an\n     *         object with a `concat` method on it, `concat` will call `list1.concat`\n     *         and pass it the value of `list2`.\n     *\n     * @example\n     *\n     *      R.concat([], []); //=> []\n     *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n     */\n    var concat = _curry2(function concat(set1, set2) {\n        if (_isArray(set2)) {\n            return _concat(set1, set2);\n        } else if (_hasMethod('concat', set1)) {\n            return set1.concat(set2);\n        } else {\n            throw new TypeError('can\\'t concat ' + typeof set1);\n        }\n    });\n\n    /**\n     * Returns a curried equivalent of the provided function. The curried\n     * function has two unusual capabilities. First, its arguments needn't\n     * be provided one at a time. If `f` is a ternary function and `g` is\n     * `R.curry(f)`, the following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`,\n     * the following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> a) -> (* -> a)\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curryN\n     * @example\n     *\n     *      var addFourNumbers = function(a, b, c, d) {\n     *        return a + b + c + d;\n     *      };\n     *\n     *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n    var curry = _curry1(function curry(fn) {\n        return curryN(fn.length, fn);\n    });\n\n    /**\n     * Returns a new list containing the last `n` elements of a given list, passing each value\n     * to the supplied predicate function, skipping elements while the predicate function returns\n     * `true`. The predicate function is passed one argument: *(value)*.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.takeWhile\n     * @example\n     *\n     *      var lteTwo = function(x) {\n     *        return x <= 2;\n     *      };\n     *\n     *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n     */\n    var dropWhile = _curry2(_dispatchable('dropWhile', _xdropWhile, function dropWhile(pred, list) {\n        var idx = 0, len = list.length;\n        while (idx < len && pred(list[idx])) {\n            idx += 1;\n        }\n        return _slice(list, idx);\n    }));\n\n    /**\n     * Returns `true` if its arguments are equivalent, `false` otherwise.\n     * Dispatches to an `equals` method if present. Handles cyclical data\n     * structures.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig a -> b -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      R.equals(1, 1); //=> true\n     *      R.equals(1, '1'); //=> false\n     *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n     *\n     *      var a = {}; a.v = a;\n     *      var b = {}; b.v = b;\n     *      R.equals(a, b); //=> true\n     */\n    var equals = _curry2(function equals(a, b) {\n        return _hasMethod('equals', a) ? a.equals(b) : _hasMethod('equals', b) ? b.equals(a) : _equals(a, b, [], []);\n    });\n\n    /**\n     * Returns a new list containing only those items that match a given predicate function.\n     * The predicate function is passed one argument: *(value)*.\n     *\n     * Note that `R.filter` does not skip deleted or unassigned indices, unlike the native\n     * `Array.prototype.filter` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter#Description\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} The new filtered array.\n     * @see R.reject\n     * @example\n     *\n     *      var isEven = function(n) {\n     *        return n % 2 === 0;\n     *      };\n     *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n     */\n    var filter = _curry2(_dispatchable('filter', _xfilter, _filter));\n\n    /**\n     * Returns the first element of the list which matches the predicate, or `undefined` if no\n     * element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     *        desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n     *      R.find(R.propEq('a', 4))(xs); //=> undefined\n     */\n    var find = _curry2(_dispatchable('find', _xfind, function find(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (fn(list[idx])) {\n                return list[idx];\n            }\n            idx += 1;\n        }\n    }));\n\n    /**\n     * Returns the index of the first element of the list which matches the predicate, or `-1`\n     * if no element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n     *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n    var findIndex = _curry2(_dispatchable('findIndex', _xfindIndex, function findIndex(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (fn(list[idx])) {\n                return idx;\n            }\n            idx += 1;\n        }\n        return -1;\n    }));\n\n    /**\n     * Returns the last element of the list which matches the predicate, or `undefined` if no\n     * element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n     *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n     */\n    var findLast = _curry2(_dispatchable('findLast', _xfindLast, function findLast(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            if (fn(list[idx])) {\n                return list[idx];\n            }\n            idx -= 1;\n        }\n    }));\n\n    /**\n     * Returns the index of the last element of the list which matches the predicate, or\n     * `-1` if no element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n     *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n    var findLastIndex = _curry2(_dispatchable('findLastIndex', _xfindLastIndex, function findLastIndex(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            if (fn(list[idx])) {\n                return idx;\n            }\n            idx -= 1;\n        }\n        return -1;\n    }));\n\n    /**\n     * Returns a new list by pulling every item out of it (and all its sub-arrays) and putting\n     * them in a new array, depth-first.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b]\n     * @param {Array} list The array to consider.\n     * @return {Array} The flattened list.\n     * @see R.unnest\n     * @example\n     *\n     *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n     *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n     */\n    var flatten = _curry1(_makeFlat(true));\n\n    /**\n     * Returns a new function much like the supplied one, except that the first two arguments'\n     * order is reversed.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)\n     * @param {Function} fn The function to invoke with its first two parameters reversed.\n     * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n     * @example\n     *\n     *      var mergeThree = function(a, b, c) {\n     *        return ([]).concat(a, b, c);\n     *      };\n     *\n     *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n     */\n    var flip = _curry1(function flip(fn) {\n        return curry(function (a, b) {\n            var args = _slice(arguments);\n            args[0] = b;\n            args[1] = a;\n            return fn.apply(this, args);\n        });\n    });\n\n    /**\n     * Iterate over an input `list`, calling a provided function `fn` for each element in the\n     * list.\n     *\n     * `fn` receives one argument: *(value)*.\n     *\n     * Note: `R.forEach` does not skip deleted or unassigned indices (sparse arrays), unlike\n     * the native `Array.prototype.forEach` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n     *\n     * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns the original\n     * array. In some libraries this function is named `each`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> *) -> [a] -> [a]\n     * @param {Function} fn The function to invoke. Receives one argument, `value`.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} The original list.\n     * @example\n     *\n     *      var printXPlusFive = function(x) { console.log(x + 5); };\n     *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n     *      //-> 6\n     *      //-> 7\n     *      //-> 8\n     */\n    var forEach = _curry2(_checkForMethod('forEach', function forEach(fn, list) {\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            fn(list[idx]);\n            idx += 1;\n        }\n        return list;\n    }));\n\n    /**\n     * Returns a list of function names of object's own functions\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {*} -> [String]\n     * @param {Object} obj The objects with functions in it\n     * @return {Array} A list of the object's own properties that map to functions.\n     * @example\n     *\n     *      R.functions(R); // returns list of ramda's own function names\n     *\n     *      var F = function() { this.x = function(){}; this.y = 1; }\n     *      F.prototype.z = function() {};\n     *      F.prototype.a = 100;\n     *      R.functions(new F()); //=> [\"x\"]\n     */\n    var functions = _curry1(_functionsWith(keys));\n\n    /**\n     * Returns a list of function names of object's own and prototype functions\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {*} -> [String]\n     * @param {Object} obj The objects with functions in it\n     * @return {Array} A list of the object's own properties and prototype\n     *         properties that map to functions.\n     * @example\n     *\n     *      R.functionsIn(R); // returns list of ramda's own and prototype function names\n     *\n     *      var F = function() { this.x = function(){}; this.y = 1; }\n     *      F.prototype.z = function() {};\n     *      F.prototype.a = 100;\n     *      R.functionsIn(new F()); //=> [\"x\", \"z\"]\n     */\n    var functionsIn = _curry1(_functionsWith(keysIn));\n\n    /**\n     * Splits a list into sub-lists stored in an object, based on the result of calling a String-returning function\n     * on each element, and grouping the results according to values returned.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> String) -> [a] -> {String: [a]}\n     * @param {Function} fn Function :: a -> String\n     * @param {Array} list The array to group\n     * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n     *         that produced that key when passed to `fn`.\n     * @example\n     *\n     *      var byGrade = R.groupBy(function(student) {\n     *        var score = student.score;\n     *        return score < 65 ? 'F' :\n     *               score < 70 ? 'D' :\n     *               score < 80 ? 'C' :\n     *               score < 90 ? 'B' : 'A';\n     *      });\n     *      var students = [{name: 'Abby', score: 84},\n     *                      {name: 'Eddy', score: 58},\n     *                      // ...\n     *                      {name: 'Jack', score: 69}];\n     *      byGrade(students);\n     *      // {\n     *      //   'A': [{name: 'Dianne', score: 99}],\n     *      //   'B': [{name: 'Abby', score: 84}]\n     *      //   // ...,\n     *      //   'F': [{name: 'Eddy', score: 58}]\n     *      // }\n     */\n    var groupBy = _curry2(_dispatchable('groupBy', _xgroupBy, function groupBy(fn, list) {\n        return _reduce(function (acc, elt) {\n            var key = fn(elt);\n            acc[key] = append(elt, acc[key] || (acc[key] = []));\n            return acc;\n        }, {}, list);\n    }));\n\n    /**\n     * Returns the first element of the given list or string. In some libraries\n     * this function is named `first`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.tail, R.init, R.last\n     * @sig [a] -> a | Undefined\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n     *      R.head([]); //=> undefined\n     *\n     *      R.head('abc'); //=> 'a'\n     *      R.head(''); //=> ''\n     */\n    var head = nth(0);\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those\n     * elements common to both lists.  Duplication is determined according\n     * to the value returned by applying the supplied predicate to two list\n     * elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a,a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate function that determines whether\n     *        the two supplied elements are equal.\n     * @param {Array} list1 One list of items to compare\n     * @param {Array} list2 A second list of items to compare\n     * @see R.intersection\n     * @return {Array} A new list containing those elements common to both lists.\n     * @example\n     *\n     *      var buffaloSpringfield = [\n     *        {id: 824, name: 'Richie Furay'},\n     *        {id: 956, name: 'Dewey Martin'},\n     *        {id: 313, name: 'Bruce Palmer'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *      var csny = [\n     *        {id: 204, name: 'David Crosby'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 539, name: 'Graham Nash'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *\n     *      var sameId = function(o1, o2) {return o1.id === o2.id;};\n     *\n     *      R.intersectionWith(sameId, buffaloSpringfield, csny);\n     *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n     */\n    var intersectionWith = _curry3(function intersectionWith(pred, list1, list2) {\n        var results = [], idx = 0;\n        while (idx < list1.length) {\n            if (_containsWith(pred, list1[idx], list2)) {\n                results[results.length] = list1[idx];\n            }\n            idx += 1;\n        }\n        return uniqWith(pred, results);\n    });\n\n    /**\n     * Creates a new list with the separator interposed between elements.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} separator The element to add to the list.\n     * @param {Array} list The list to be interposed.\n     * @return {Array} The new list.\n     * @example\n     *\n     *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n     */\n    var intersperse = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {\n        var out = [];\n        var idx = 0;\n        var length = list.length;\n        while (idx < length) {\n            if (idx === length - 1) {\n                out.push(list[idx]);\n            } else {\n                out.push(list[idx], separator);\n            }\n            idx += 1;\n        }\n        return out;\n    }));\n\n    /**\n     * Transforms the items of the list with the transducer and appends the transformed items to\n     * the accumulator using an appropriate iterator function based on the accumulator type.\n     *\n     * The accumulator can be an array, string, object or a transformer. Iterated items will\n     * be appended to arrays and concatenated to strings. Objects will be merged directly or 2-item\n     * arrays will be merged as key, value pairs.\n     *\n     * The accumulator can also be a transformer object that provides a 2-arity reducing iterator\n     * function, step, 0-arity initial value function, init, and 1-arity result extraction function\n     * result. The step function is used as the iterator function in reduce. The result function is\n     * used to convert the final accumulator into the return type and in most cases is R.identity.\n     * The init function is used to provide the initial accumulator.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> (b -> b) -> [c] -> a\n     * @param {*} acc The initial accumulator value.\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.into([], transducer, numbers); //=> [2, 3]\n     *\n     *      var intoArray = R.into([]);\n     *      intoArray(transducer, numbers); //=> [2, 3]\n     */\n    var into = _curry3(function into(acc, xf, list) {\n        return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), acc, list);\n    });\n\n    /**\n     * Same as R.invertObj, however this accounts for objects\n     * with duplicate values by putting the values into an\n     * array.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {s: x} -> {x: [ s, ... ]}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object with keys\n     * in an array.\n     * @example\n     *\n     *      var raceResultsByFirstName = {\n     *        first: 'alice',\n     *        second: 'jake',\n     *        third: 'alice',\n     *      };\n     *      R.invert(raceResultsByFirstName);\n     *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n     */\n    var invert = _curry1(function invert(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var idx = 0;\n        var out = {};\n        while (idx < len) {\n            var key = props[idx];\n            var val = obj[key];\n            var list = _has(val, out) ? out[val] : out[val] = [];\n            list[list.length] = key;\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new object with the keys of the given object\n     * as values, and the values of the given object as keys.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {s: x} -> {x: s}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object\n     * @example\n     *\n     *      var raceResults = {\n     *        first: 'alice',\n     *        second: 'jake'\n     *      };\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': 'first', 'jake':'second' }\n     *\n     *      // Alternatively:\n     *      var raceResults = ['alice', 'jake'];\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': '0', 'jake':'1' }\n     */\n    var invertObj = _curry1(function invertObj(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var idx = 0;\n        var out = {};\n        while (idx < len) {\n            var key = props[idx];\n            out[obj[key]] = key;\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns the last element of the given list or string.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.init, R.head, R.tail\n     * @sig [a] -> a | Undefined\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n     *      R.last([]); //=> undefined\n     *\n     *      R.last('abc'); //=> 'c'\n     *      R.last(''); //=> ''\n     */\n    var last = nth(-1);\n\n    /**\n     * Returns the position of the last occurrence of an item in\n     * an array, or -1 if the item is not included in the array.\n     * `R.equals` is used to determine equality.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} xs The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     * @see R.indexOf\n     * @example\n     *\n     *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n     *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n     */\n    var lastIndexOf = _curry2(function lastIndexOf(target, xs) {\n        if (_hasMethod('lastIndexOf', xs)) {\n            return xs.lastIndexOf(target);\n        } else {\n            var idx = xs.length - 1;\n            while (idx >= 0) {\n                if (equals(xs[idx], target)) {\n                    return idx;\n                }\n                idx -= 1;\n            }\n            return -1;\n        }\n    });\n\n    /**\n     * Returns a new list, constructed by applying the supplied function to every element of the\n     * supplied list.\n     *\n     * Note: `R.map` does not skip deleted or unassigned indices (sparse arrays), unlike the\n     * native `Array.prototype.map` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map#Description\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> b) -> [a] -> [b]\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {Array} list The list to be iterated over.\n     * @return {Array} The new list.\n     * @example\n     *\n     *      var double = function(x) {\n     *        return x * 2;\n     *      };\n     *\n     *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n     */\n    var map = _curry2(_dispatchable('map', _xmap, _map));\n\n    /**\n     * Map, but for objects. Creates an object with the same keys as `obj` and values\n     * generated by running each property of `obj` through `fn`. `fn` is passed one argument:\n     * *(value)*.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig (v -> v) -> {k: v} -> {k: v}\n     * @param {Function} fn A function called for each property in `obj`. Its return value will\n     * become a new property on the return object.\n     * @param {Object} obj The object to iterate over.\n     * @return {Object} A new object with the same keys as `obj` and values that are the result\n     *         of running each property through `fn`.\n     * @example\n     *\n     *      var values = { x: 1, y: 2, z: 3 };\n     *      var double = function(num) {\n     *        return num * 2;\n     *      };\n     *\n     *      R.mapObj(double, values); //=> { x: 2, y: 4, z: 6 }\n     */\n    var mapObj = _curry2(function mapObj(fn, obj) {\n        return _reduce(function (acc, key) {\n            acc[key] = fn(obj[key]);\n            return acc;\n        }, {}, keys(obj));\n    });\n\n    /**\n     * Like `mapObj`, but but passes additional arguments to the predicate function. The\n     * predicate function is passed three arguments: *(value, key, obj)*.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig (v, k, {k: v} -> v) -> {k: v} -> {k: v}\n     * @param {Function} fn A function called for each property in `obj`. Its return value will\n     *        become a new property on the return object.\n     * @param {Object} obj The object to iterate over.\n     * @return {Object} A new object with the same keys as `obj` and values that are the result\n     *         of running each property through `fn`.\n     * @example\n     *\n     *      var values = { x: 1, y: 2, z: 3 };\n     *      var prependKeyAndDouble = function(num, key, obj) {\n     *        return key + (num * 2);\n     *      };\n     *\n     *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n     */\n    var mapObjIndexed = _curry2(function mapObjIndexed(fn, obj) {\n        return _reduce(function (acc, key) {\n            acc[key] = fn(obj[key], key, obj);\n            return acc;\n        }, {}, keys(obj));\n    });\n\n    /**\n     * Returns `true` if no elements of the list match the predicate,\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n     * @see R.all, R.any\n     * @example\n     *\n     *      R.none(R.isNaN, [1, 2, 3]); //=> true\n     *      R.none(R.isNaN, [1, 2, 3, NaN]); //=> false\n     */\n    var none = _curry2(_complement(_dispatchable('any', _xany, any)));\n\n    /**\n     * A function that returns the first truthy of two arguments otherwise the\n     * last argument. Note that this is NOT short-circuited, meaning that if\n     * expressions are passed they are both evaluated.\n     *\n     * Dispatches to the `or` method of the first argument if applicable.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {*} a any value\n     * @param {*} b any other value\n     * @return {*} the first truthy argument, otherwise the last argument.\n     * @see R.either\n     * @example\n     *\n     *      R.or(false, true); //=> true\n     *      R.or(0, []); //=> []\n     *      R.or(null, ''); => ''\n     */\n    var or = _curry2(function or(a, b) {\n        return _hasMethod('or', a) ? a.or(b) : a || b;\n    });\n\n    /**\n     * Accepts as its arguments a function and any number of values and returns a function that,\n     * when invoked, calls the original function with all of the values prepended to the\n     * original function's arguments list. In some libraries this function is named `applyLeft`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> b -> ... -> i -> j -> ... -> m -> n) -> a -> b-> ... -> i -> (j -> ... -> m -> n)\n     * @param {Function} fn The function to invoke.\n     * @param {...*} [args] Arguments to prepend to `fn` when the returned function is invoked.\n     * @return {Function} A new function wrapping `fn`. When invoked, it will call `fn`\n     *         with `args` prepended to `fn`'s arguments list.\n     * @example\n     *\n     *      var multiply = function(a, b) { return a * b; };\n     *      var double = R.partial(multiply, 2);\n     *      double(2); //=> 4\n     *\n     *      var greet = function(salutation, title, firstName, lastName) {\n     *        return salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *      };\n     *      var sayHello = R.partial(greet, 'Hello');\n     *      var sayHelloToMs = R.partial(sayHello, 'Ms.');\n     *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n     */\n    var partial = curry(_createPartialApplicator(_concat));\n\n    /**\n     * Accepts as its arguments a function and any number of values and returns a function that,\n     * when invoked, calls the original function with all of the values appended to the original\n     * function's arguments list.\n     *\n     * Note that `partialRight` is the opposite of `partial`: `partialRight` fills `fn`'s arguments\n     * from the right to the left.  In some libraries this function is named `applyRight`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> b-> ... -> i -> j -> ... -> m -> n) -> j -> ... -> m -> n -> (a -> b-> ... -> i)\n     * @param {Function} fn The function to invoke.\n     * @param {...*} [args] Arguments to append to `fn` when the returned function is invoked.\n     * @return {Function} A new function wrapping `fn`. When invoked, it will call `fn` with\n     *         `args` appended to `fn`'s arguments list.\n     * @example\n     *\n     *      var greet = function(salutation, title, firstName, lastName) {\n     *        return salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *      };\n     *      var greetMsJaneJones = R.partialRight(greet, 'Ms.', 'Jane', 'Jones');\n     *\n     *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n     */\n    var partialRight = curry(_createPartialApplicator(flip(_concat)));\n\n    /**\n     * Takes a predicate and a list and returns the pair of lists of\n     * elements which do and do not satisfy the predicate, respectively.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [[a],[a]]\n     * @param {Function} pred A predicate to determine which array the element belongs to.\n     * @param {Array} list The array to partition.\n     * @return {Array} A nested array, containing first an array of elements that satisfied the predicate,\n     *         and second an array of elements that did not satisfy.\n     * @example\n     *\n     *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n     *      //=> [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n     */\n    var partition = _curry2(function partition(pred, list) {\n        return _reduce(function (acc, elt) {\n            var xs = acc[pred(elt) ? 0 : 1];\n            xs[xs.length] = elt;\n            return acc;\n        }, [\n            [],\n            []\n        ], list);\n    });\n\n    /**\n     * Determines whether a nested path on an object has a specific value,\n     * in `R.equals` terms. Most likely used to filter a list.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [String] -> * -> {String: *} -> Boolean\n     * @param {Array} path The path of the nested property to use\n     * @param {*} val The value to compare the nested property with\n     * @param {Object} obj The object to check the nested property in\n     * @return {Boolean} `true` if the value equals the nested object property,\n     *         `false` otherwise.\n     * @example\n     *\n     *      var user1 = { address: { zipCode: 90210 } };\n     *      var user2 = { address: { zipCode: 55555 } };\n     *      var user3 = { name: 'Bob' };\n     *      var users = [ user1, user2, user3 ];\n     *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n     *      R.filter(isFamous, users); //=> [ user1 ]\n     */\n    var pathEq = _curry3(function pathEq(_path, val, obj) {\n        return equals(path(_path, obj), val);\n    });\n\n    /**\n     * Returns a new list by plucking the same named property off all objects in the list supplied.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig k -> [{k: v}] -> [v]\n     * @param {Number|String} key The key name to pluck off of each object.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of values for the given key.\n     * @example\n     *\n     *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n     *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n     */\n    var pluck = _curry2(function pluck(p, list) {\n        return map(prop(p), list);\n    });\n\n    /**\n     * Returns `true` if the specified object property is equal, in `R.equals`\n     * terms, to the given value; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig String -> a -> Object -> Boolean\n     * @param {String} name\n     * @param {*} val\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.equals, R.propSatisfies\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n     *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n     *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n     *      var kids = [abby, fred, rusty, alois];\n     *      var hasBrownHair = R.propEq('hair', 'brown');\n     *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n     */\n    var propEq = _curry3(function propEq(name, val, obj) {\n        return propSatisfies(equals(val), name, obj);\n    });\n\n    /**\n     * Returns `true` if the specified object property is of the given type;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig Type -> String -> Object -> Boolean\n     * @param {Function} type\n     * @param {String} name\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.is\n     * @see R.propSatisfies\n     * @example\n     *\n     *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n     *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n     *      R.propIs(Number, 'x', {});            //=> false\n     */\n    var propIs = _curry3(function propIs(type, name, obj) {\n        return propSatisfies(is(type), name, obj);\n    });\n\n    /**\n     * Returns a single item by iterating through the list, successively calling the iterator\n     * function and passing it an accumulator value and the current value from the array, and\n     * then passing the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*.  It may use `R.reduced` to\n     * shortcut the iteration.\n     *\n     * Note: `R.reduce` does not skip deleted or unassigned indices (sparse arrays), unlike\n     * the native `Array.prototype.reduce` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n     * @see R.reduced\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3];\n     *      var add = function(a, b) {\n     *        return a + b;\n     *      };\n     *\n     *      R.reduce(add, 10, numbers); //=> 16\n     */\n    var reduce = _curry3(_reduce);\n\n    /**\n     * Similar to `filter`, except that it keeps only values for which the given predicate\n     * function returns falsy. The predicate function is passed one argument: *(value)*.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} The new filtered array.\n     * @see R.filter\n     * @example\n     *\n     *      var isOdd = function(n) {\n     *        return n % 2 === 1;\n     *      };\n     *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n     */\n    var reject = _curry2(function reject(fn, list) {\n        return filter(_complement(fn), list);\n    });\n\n    /**\n     * Returns a fixed list of size `n` containing a specified identical value.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> n -> [a]\n     * @param {*} value The value to repeat.\n     * @param {Number} n The desired size of the output list.\n     * @return {Array} A new array containing `n` `value`s.\n     * @example\n     *\n     *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n     *\n     *      var obj = {};\n     *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n     *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n     */\n    var repeat = _curry2(function repeat(value, n) {\n        return times(always(value), n);\n    });\n\n    /**\n     * Returns the elements of the given list or string (or object with a `slice`\n     * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @sig Number -> Number -> String -> String\n     * @param {Number} fromIndex The start index (inclusive).\n     * @param {Number} toIndex The end index (exclusive).\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n     *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n     *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n     *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n     *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n     */\n    var slice = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n        return Array.prototype.slice.call(list, fromIndex, toIndex);\n    }));\n\n    /**\n     * Splits a collection into slices of the specified length.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @sig Number -> String -> [String]\n     * @param {Number} n\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n     *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n     */\n    var splitEvery = _curry2(function splitEvery(n, list) {\n        if (n <= 0) {\n            throw new Error('First argument to splitEvery must be a positive integer');\n        }\n        var result = [];\n        var idx = 0;\n        while (idx < list.length) {\n            result.push(slice(idx, idx += n, list));\n        }\n        return result;\n    });\n\n    /**\n     * Adds together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The sum of all the numbers in the list.\n     * @see R.reduce\n     * @example\n     *\n     *      R.sum([2,4,6,8,100,1]); //=> 121\n     */\n    var sum = reduce(add, 0);\n\n    /**\n     * Returns all but the first element of the given list or string (or object\n     * with a `tail` method).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.head, R.init, R.last\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.tail([1, 2, 3]);  //=> [2, 3]\n     *      R.tail([1, 2]);     //=> [2]\n     *      R.tail([1]);        //=> []\n     *      R.tail([]);         //=> []\n     *\n     *      R.tail('abc');  //=> 'bc'\n     *      R.tail('ab');   //=> 'b'\n     *      R.tail('a');    //=> ''\n     *      R.tail('');     //=> ''\n     */\n    var tail = _checkForMethod('tail', slice(1, Infinity));\n\n    /**\n     * Returns the first `n` elements of the given list, string, or\n     * transducer/transformer (or object with a `take` method).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {*} list\n     * @return {*}\n     * @see R.drop\n     * @example\n     *\n     *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n     *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n     *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.take(3, 'ramda');               //=> 'ram'\n     *\n     *      var personnel = [\n     *        'Dave Brubeck',\n     *        'Paul Desmond',\n     *        'Eugene Wright',\n     *        'Joe Morello',\n     *        'Gerry Mulligan',\n     *        'Bob Bates',\n     *        'Joe Dodge',\n     *        'Ron Crotty'\n     *      ];\n     *\n     *      var takeFive = R.take(5);\n     *      takeFive(personnel);\n     *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n     */\n    var take = _curry2(_dispatchable('take', _xtake, function take(n, xs) {\n        return slice(0, n < 0 ? Infinity : n, xs);\n    }));\n\n    /**\n     * Returns a new list containing the first `n` elements of a given list, passing each value\n     * to the supplied predicate function, and terminating when the predicate function returns\n     * `false`. Excludes the element that caused the predicate function to fail. The predicate\n     * function is passed one argument: *(value)*.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.dropWhile\n     * @example\n     *\n     *      var isNotFour = function(x) {\n     *        return !(x === 4);\n     *      };\n     *\n     *      R.takeWhile(isNotFour, [1, 2, 3, 4]); //=> [1, 2, 3]\n     */\n    var takeWhile = _curry2(_dispatchable('takeWhile', _xtakeWhile, function takeWhile(fn, list) {\n        var idx = 0, len = list.length;\n        while (idx < len && fn(list[idx])) {\n            idx += 1;\n        }\n        return _slice(list, 0, idx);\n    }));\n\n    /**\n     * Initializes a transducer using supplied iterator function. Returns a single item by\n     * iterating through the list, successively calling the transformed iterator function and\n     * passing it an accumulator value and the current value from the array, and then passing\n     * the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*. It will be wrapped as a\n     * transformer to initialize the transducer. A transformer can be passed directly in place\n     * of an iterator function.  In both cases, iteration may be stopped early with the\n     * `R.reduced` function.\n     *\n     * A transducer is a function that accepts a transformer and returns a transformer and can\n     * be composed directly.\n     *\n     * A transformer is an an object that provides a 2-arity reducing iterator function, step,\n     * 0-arity initial value function, init, and 1-arity result extraction function, result.\n     * The step function is used as the iterator function in reduce. The result function is used\n     * to convert the final accumulator into the return type and in most cases is R.identity.\n     * The init function can be used to provide an initial accumulator, but is ignored by transduce.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.reduce, R.reduced, R.into\n     * @sig (c -> c) -> (a,b -> a) -> a -> [b] -> a\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array. Wrapped as transformer, if necessary, and used to\n     *        initialize the transducer\n     * @param {*} acc The initial accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n     */\n    var transduce = curryN(4, function transduce(xf, fn, acc, list) {\n        return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n    });\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the elements of each list.  Duplication is\n     * determined according to the value returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a,a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @see R.union\n     * @example\n     *\n     *      function cmp(x, y) { return x.a === y.a; }\n     *      var l1 = [{a: 1}, {a: 2}];\n     *      var l2 = [{a: 1}, {a: 4}];\n     *      R.unionWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n     */\n    var unionWith = _curry3(function unionWith(pred, list1, list2) {\n        return uniqWith(pred, _concat(list1, list2));\n    });\n\n    /**\n     * Returns a new list containing only one copy of each element in the original list.\n     * `R.equals` is used to determine equality.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n     *      R.uniq([1, '1']);     //=> [1, '1']\n     *      R.uniq([[42], [42]]); //=> [[42]]\n     */\n    var uniq = uniqWith(equals);\n\n    /**\n     * Returns a new list by pulling every item at the first level of nesting out, and putting\n     * them in a new array.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b]\n     * @param {Array} list The array to consider.\n     * @return {Array} The flattened list.\n     * @see R.flatten\n     * @example\n     *\n     *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n     *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n     */\n    var unnest = _curry1(_makeFlat(false));\n\n    /**\n     * Accepts a function `fn` and any number of transformer functions and returns a new\n     * function. When the new function is invoked, it calls the function `fn` with parameters\n     * consisting of the result of calling each supplied handler on successive arguments to the\n     * new function.\n     *\n     * If more arguments are passed to the returned function than transformer functions, those\n     * arguments are passed directly to `fn` as additional parameters. If you expect additional\n     * arguments that don't need to be transformed, although you can ignore them, it's best to\n     * pass an identity function so that the new function reports the correct arity.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (x1 -> x2 -> ... -> z) -> ((a -> x1), (b -> x2), ...) -> (a -> b -> ... -> z)\n     * @param {Function} fn The function to wrap.\n     * @param {...Function} transformers A variable number of transformer functions\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var double = function(y) { return y * 2; };\n     *      var square = function(x) { return x * x; };\n     *      var add = function(a, b) { return a + b; };\n     *      // Adds any number of arguments together\n     *      var addAll = function() {\n     *        return R.reduce(add, 0, arguments);\n     *      };\n     *\n     *      // Basic example\n     *      var addDoubleAndSquare = R.useWith(addAll, double, square);\n     *\n     *      //≅ addAll(double(10), square(5));\n     *      addDoubleAndSquare(10, 5); //=> 45\n     *\n     *      // Example of passing more arguments than transformers\n     *      //≅ addAll(double(10), square(5), 100);\n     *      addDoubleAndSquare(10, 5, 100); //=> 145\n     *\n     *      // If there are extra _expected_ arguments that don't need to be transformed, although\n     *      // you can ignore them, it might be best to pass in the identity function so that the new\n     *      // function correctly reports arity.\n     *      var addDoubleAndSquareWithExtraParams = R.useWith(addAll, double, square, R.identity);\n     *      // addDoubleAndSquareWithExtraParams.length //=> 3\n     *      //≅ addAll(double(10), square(5), R.identity(100));\n     *      addDoubleAndSquare(10, 5, 100); //=> 145\n     */\n    /*, transformers */\n    var useWith = curry(function useWith(fn) {\n        var transformers = _slice(arguments, 1);\n        var tlen = transformers.length;\n        return curry(_arity(tlen, function () {\n            var args = [], idx = 0;\n            while (idx < tlen) {\n                args[idx] = transformers[idx](arguments[idx]);\n                idx += 1;\n            }\n            return fn.apply(this, args.concat(_slice(arguments, tlen)));\n        }));\n    });\n\n    /**\n     * Takes a spec object and a test object; returns true if the test satisfies\n     * the spec, false otherwise. An object satisfies the spec if, for each of the\n     * spec's own properties, accessing that property of the object gives the same\n     * value (in `R.equals` terms) as accessing that property of the spec.\n     *\n     * `whereEq` is a specialization of [`where`](#where).\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {String: *} -> {String: *} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @see R.where\n     * @example\n     *\n     *      // pred :: Object -> Boolean\n     *      var pred = R.whereEq({a: 1, b: 2});\n     *\n     *      pred({a: 1});              //=> false\n     *      pred({a: 1, b: 2});        //=> true\n     *      pred({a: 1, b: 2, c: 3});  //=> true\n     *      pred({a: 1, b: 1});        //=> false\n     */\n    var whereEq = _curry2(function whereEq(spec, testObj) {\n        return where(mapObj(equals, spec), testObj);\n    });\n\n    var _flatCat = function () {\n        var preservingReduced = function (xf) {\n            return {\n                '@@transducer/init': _xfBase.init,\n                '@@transducer/result': function (result) {\n                    return xf['@@transducer/result'](result);\n                },\n                '@@transducer/step': function (result, input) {\n                    var ret = xf['@@transducer/step'](result, input);\n                    return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n                }\n            };\n        };\n        return function _xcat(xf) {\n            var rxf = preservingReduced(xf);\n            return {\n                '@@transducer/init': _xfBase.init,\n                '@@transducer/result': function (result) {\n                    return rxf['@@transducer/result'](result);\n                },\n                '@@transducer/step': function (result, input) {\n                    return !isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n                }\n            };\n        };\n    }();\n\n    var _indexOf = function _indexOf(list, item, from) {\n        var idx = from;\n        while (idx < list.length) {\n            if (equals(list[idx], item)) {\n                return idx;\n            }\n            idx += 1;\n        }\n        return -1;\n    };\n\n    /**\n     * Create a predicate wrapper which will call a pick function (all/any) for each predicate\n     *\n     * @private\n     * @see R.all\n     * @see R.any\n     */\n    // Call function immediately if given arguments\n    // Return a function which will call the predicates with the provided arguments\n    var _predicateWrap = function _predicateWrap(predPicker) {\n        return function (preds) {\n            var predIterator = function () {\n                var args = arguments;\n                return predPicker(function (predicate) {\n                    return predicate.apply(null, args);\n                }, preds);\n            };\n            return arguments.length > 1 ? // Call function immediately if given arguments\n            predIterator.apply(null, _slice(arguments, 1)) : // Return a function which will call the predicates with the provided arguments\n            _arity(Math.max.apply(Math, pluck('length', preds)), predIterator);\n        };\n    };\n\n    var _xchain = _curry2(function _xchain(f, xf) {\n        return map(f, _flatCat(xf));\n    });\n\n    /**\n     * Given a list of predicates, returns a new predicate that will be true exactly when all of them are.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} list An array of predicate functions\n     * @param {*} optional Any arguments to pass into the predicates\n     * @return {Function} a function that applies its arguments to each of\n     *         the predicates, returning `true` if all are satisfied.\n     * @see R.anyPass\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0};\n     *      var f = R.allPass([gt10, even]);\n     *      f(11); //=> false\n     *      f(12); //=> true\n     */\n    var allPass = _curry1(_predicateWrap(all));\n\n    /**\n     * Given a list of predicates returns a new predicate that will be true exactly when any one of them is.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} list An array of predicate functions\n     * @param {*} optional Any arguments to pass into the predicates\n     * @return {Function} A function that applies its arguments to each of the predicates, returning\n     *         `true` if all are satisfied.\n     * @see R.allPass\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0};\n     *      var f = R.anyPass([gt10, even]);\n     *      f(11); //=> true\n     *      f(8); //=> true\n     *      f(9); //=> false\n     */\n    var anyPass = _curry1(_predicateWrap(any));\n\n    /**\n     * ap applies a list of functions to a list of values.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig [f] -> [a] -> [f a]\n     * @param {Array} fns An array of functions\n     * @param {Array} vs An array of values\n     * @return {Array} An array of results of applying each of `fns` to all of `vs` in turn.\n     * @example\n     *\n     *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n     */\n    var ap = _curry2(function ap(fns, vs) {\n        return _hasMethod('ap', fns) ? fns.ap(vs) : _reduce(function (acc, fn) {\n            return _concat(acc, map(fn, vs));\n        }, [], fns);\n    });\n\n    /**\n     * Returns the result of calling its first argument with the remaining\n     * arguments. This is occasionally useful as a converging function for\n     * `R.converge`: the left branch can produce a function while the right\n     * branch produces a value to be passed to that function as an argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (*... -> a),*... -> a\n     * @param {Function} fn The function to apply to the remaining arguments.\n     * @param {...*} args Any number of positional arguments.\n     * @return {*}\n     * @see R.apply\n     * @example\n     *\n     *      var indentN = R.pipe(R.times(R.always(' ')),\n     *                           R.join(''),\n     *                           R.replace(/^(?!$)/gm));\n     *\n     *      var format = R.converge(R.call,\n     *                              R.pipe(R.prop('indent'), indentN),\n     *                              R.prop('value'));\n     *\n     *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n     */\n    var call = curry(function call(fn) {\n        return fn.apply(this, _slice(arguments, 1));\n    });\n\n    /**\n     * `chain` maps a function over a list and concatenates the results.\n     * This implementation is compatible with the\n     * Fantasy-land Chain spec, and will work with types that implement that spec.\n     * `chain` is also known as `flatMap` in some libraries\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> [b]) -> [a] -> [b]\n     * @param {Function} fn\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      var duplicate = function(n) {\n     *        return [n, n];\n     *      };\n     *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n     */\n    var chain = _curry2(_dispatchable('chain', _xchain, function chain(fn, list) {\n        return unnest(map(fn, list));\n    }));\n\n    /**\n     * Turns a list of Functors into a Functor of a list, applying\n     * a mapping function to the elements of the list along the way.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.commute\n     * @sig Functor f => (f a -> f b) -> (x -> f x) -> [f a] -> f [b]\n     * @param {Function} fn The transformation function\n     * @param {Function} of A function that returns the data type to return\n     * @param {Array} list An array of functors of the same type\n     * @return {*}\n     * @example\n     *\n     *      R.commuteMap(R.map(R.add(10)), R.of, [[1], [2, 3]]);   //=> [[11, 12], [11, 13]]\n     *      R.commuteMap(R.map(R.add(10)), R.of, [[1, 2], [3]]);   //=> [[11, 13], [12, 13]]\n     *      R.commuteMap(R.map(R.add(10)), R.of, [[1], [2], [3]]); //=> [[11, 12, 13]]\n     *      R.commuteMap(R.map(R.add(10)), Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([11, 12, 13])\n     *      R.commuteMap(R.map(R.add(10)), Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n     */\n    var commuteMap = _curry3(function commuteMap(fn, of, list) {\n        function consF(acc, ftor) {\n            return ap(map(append, fn(ftor)), acc);\n        }\n        return _reduce(consF, of([]), list);\n    });\n\n    /**\n     * Wraps a constructor function inside a curried function that can be called with the same\n     * arguments and returns the same type. The arity of the function returned is specified\n     * to allow using variadic constructor functions.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (* -> {*}) -> (* -> {*})\n     * @param {Number} n The arity of the constructor function.\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Variadic constructor function\n     *      var Widget = function() {\n     *        this.children = Array.prototype.slice.call(arguments);\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = [\n     *        // ...\n     *      ];\n     *      R.map(R.constructN(1, Widget), allConfigs); // a list of Widgets\n     */\n    var constructN = _curry2(function constructN(n, Fn) {\n        if (n > 10) {\n            throw new Error('Constructor with greater than ten arguments');\n        }\n        if (n === 0) {\n            return function () {\n                return new Fn();\n            };\n        }\n        return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n            switch (arguments.length) {\n            case 1:\n                return new Fn($0);\n            case 2:\n                return new Fn($0, $1);\n            case 3:\n                return new Fn($0, $1, $2);\n            case 4:\n                return new Fn($0, $1, $2, $3);\n            case 5:\n                return new Fn($0, $1, $2, $3, $4);\n            case 6:\n                return new Fn($0, $1, $2, $3, $4, $5);\n            case 7:\n                return new Fn($0, $1, $2, $3, $4, $5, $6);\n            case 8:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n            case 9:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n            case 10:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n            }\n        }));\n    });\n\n    /**\n     * Accepts at least three functions and returns a new function. When invoked, this new\n     * function will invoke the first function, `after`, passing as its arguments the\n     * results of invoking the subsequent functions with whatever arguments are passed to\n     * the new function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (x1 -> x2 -> ... -> z) -> ((a -> b -> ... -> x1), (a -> b -> ... -> x2), ...) -> (a -> b -> ... -> z)\n     * @param {Function} after A function. `after` will be invoked with the return values of\n     *        `fn1` and `fn2` as its arguments.\n     * @param {...Function} functions A variable number of functions.\n     * @return {Function} A new function.\n     * @example\n     *\n     *      var add = function(a, b) { return a + b; };\n     *      var multiply = function(a, b) { return a * b; };\n     *      var subtract = function(a, b) { return a - b; };\n     *\n     *      //≅ multiply( add(1, 2), subtract(1, 2) );\n     *      R.converge(multiply, add, subtract)(1, 2); //=> -3\n     *\n     *      var add3 = function(a, b, c) { return a + b + c; };\n     *      R.converge(add3, multiply, add, subtract)(1, 2); //=> 4\n     */\n    var converge = curryN(3, function converge(after) {\n        var fns = _slice(arguments, 1);\n        return curryN(Math.max.apply(Math, pluck('length', fns)), function () {\n            var args = arguments;\n            var context = this;\n            return after.apply(context, _map(function (fn) {\n                return fn.apply(context, args);\n            }, fns));\n        });\n    });\n\n    /**\n     * Returns all but the first `n` elements of the given list, string, or\n     * transducer/transformer (or object with a `drop` method).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.transduce\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {*} list\n     * @return {*}\n     * @see R.take\n     * @example\n     *\n     *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n     *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n     *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n     *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n     *      R.drop(3, 'ramda');               //=> 'da'\n     */\n    var drop = _curry2(_dispatchable('drop', _xdrop, function drop(n, xs) {\n        return slice(Math.max(0, n), Infinity, xs);\n    }));\n\n    /**\n     * Returns a list containing all but the last `n` elements of the given `list`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n The number of elements of `xs` to skip.\n     * @param {Array} xs The collection to consider.\n     * @return {Array}\n     * @see R.takeLast\n     * @example\n     *\n     *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n     *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n     *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n     *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n     *      R.dropLast(3, 'ramda');               //=> 'ra'\n     */\n    var dropLast = _curry2(function dropLast(n, xs) {\n        return take(n < xs.length ? xs.length - n : 0, xs);\n    });\n\n    /**\n     * Returns a new list without any consecutively repeating elements. Equality is\n     * determined by applying the supplied predicate two consecutive elements.\n     * The first element in a series of equal element is the one being preserved.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} `list` without repeating elements.\n     * @example\n     *\n     *      function lengthEq(x, y) { return Math.abs(x) === Math.abs(y); };\n     *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n     *      R.dropRepeatsWith(lengthEq, l); //=> [1, 3, 4, -5, 3]\n     */\n    var dropRepeatsWith = _curry2(_dispatchable('dropRepeatsWith', _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n        var result = [];\n        var idx = 1;\n        var len = list.length;\n        if (len !== 0) {\n            result[0] = list[0];\n            while (idx < len) {\n                if (!pred(last(result), list[idx])) {\n                    result[result.length] = list[idx];\n                }\n                idx += 1;\n            }\n        }\n        return result;\n    }));\n\n    /**\n     * Reports whether two objects have the same value, in `R.equals` terms,\n     * for the specified property. Useful as a curried predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig k -> {k: v} -> {k: v} -> Boolean\n     * @param {String} prop The name of the property to compare\n     * @param {Object} obj1\n     * @param {Object} obj2\n     * @return {Boolean}\n     *\n     * @example\n     *\n     *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n     *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n     *      R.eqProps('a', o1, o2); //=> false\n     *      R.eqProps('c', o1, o2); //=> true\n     */\n    var eqProps = _curry3(function eqProps(prop, obj1, obj2) {\n        return equals(obj1[prop], obj2[prop]);\n    });\n\n    /**\n     * Returns the position of the first occurrence of an item in an array,\n     * or -1 if the item is not included in the array. `R.equals` is used to\n     * determine equality.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} xs The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     * @see R.lastIndexOf\n     * @example\n     *\n     *      R.indexOf(3, [1,2,3,4]); //=> 2\n     *      R.indexOf(10, [1,2,3,4]); //=> -1\n     */\n    var indexOf = _curry2(function indexOf(target, xs) {\n        return _hasMethod('indexOf', xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n    });\n\n    /**\n     * Returns all but the last element of the given list or string.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.last, R.head, R.tail\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.init([1, 2, 3]);  //=> [1, 2]\n     *      R.init([1, 2]);     //=> [1]\n     *      R.init([1]);        //=> []\n     *      R.init([]);         //=> []\n     *\n     *      R.init('abc');  //=> 'ab'\n     *      R.init('ab');   //=> 'a'\n     *      R.init('a');    //=> ''\n     *      R.init('');     //=> ''\n     */\n    var init = slice(0, -1);\n\n    /**\n     * Returns `true` if all elements are unique, in `R.equals` terms,\n     * otherwise `false`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> Boolean\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if all elements are unique, else `false`.\n     * @example\n     *\n     *      R.isSet(['1', 1]); //=> true\n     *      R.isSet([1, 1]);   //=> false\n     *      R.isSet([[42], [42]]); //=> false\n     */\n    var isSet = _curry1(function isSet(list) {\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            if (_indexOf(list, list[idx], idx + 1) >= 0) {\n                return false;\n            }\n            idx += 1;\n        }\n        return true;\n    });\n\n    /**\n     * Returns a lens for the given getter and setter functions. The getter \"gets\"\n     * the value of the focus; the setter \"sets\" the value of the focus. The setter\n     * should not mutate the data structure.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n     * @param {Function} getter\n     * @param {Function} setter\n     * @return {Lens}\n     * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n     *\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n     */\n    var lens = _curry2(function lens(getter, setter) {\n        return function (f) {\n            return function (s) {\n                return map(function (v) {\n                    return setter(v, s);\n                }, f(getter(s)));\n            };\n        };\n    });\n\n    /**\n     * Returns a lens whose focus is the specified index.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Number -> Lens s a\n     * @param {Number} n\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var headLens = R.lensIndex(0);\n     *\n     *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n     *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n     *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n     */\n    var lensIndex = _curry1(function lensIndex(n) {\n        return lens(nth(n), update(n));\n    });\n\n    /**\n     * Returns a lens whose focus is the specified property.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig String -> Lens s a\n     * @param {String} k\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n     */\n    var lensProp = _curry1(function lensProp(k) {\n        return lens(prop(k), assoc(k));\n    });\n\n    /**\n     * \"lifts\" a function to be the specified arity, so that it may \"map over\" that many\n     * lists (or other Functors).\n     *\n     * @func\n     * @memberOf R\n     * @see R.lift\n     * @category Function\n     * @sig Number -> (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The function `fn` applicable to mappable objects.\n     * @example\n     *\n     *      var madd3 = R.liftN(3, R.curryN(3, function() {\n     *        return R.reduce(R.add, 0, arguments);\n     *      }));\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     */\n    var liftN = _curry2(function liftN(arity, fn) {\n        var lifted = curryN(arity, fn);\n        return curryN(arity, function () {\n            return _reduce(ap, map(lifted, arguments[0]), _slice(arguments, 1));\n        });\n    });\n\n    /**\n     * Returns the mean of the given list of numbers.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list\n     * @return {Number}\n     * @example\n     *\n     *      R.mean([2, 7, 9]); //=> 6\n     *      R.mean([]); //=> NaN\n     */\n    var mean = _curry1(function mean(list) {\n        return sum(list) / list.length;\n    });\n\n    /**\n     * Returns the median of the given list of numbers.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list\n     * @return {Number}\n     * @example\n     *\n     *      R.median([2, 9, 7]); //=> 7\n     *      R.median([7, 2, 10, 9]); //=> 8\n     *      R.median([]); //=> NaN\n     */\n    var median = _curry1(function median(list) {\n        var len = list.length;\n        if (len === 0) {\n            return NaN;\n        }\n        var width = 2 - len % 2;\n        var idx = (len - width) / 2;\n        return mean(_slice(list).sort(function (a, b) {\n            return a < b ? -1 : a > b ? 1 : 0;\n        }).slice(idx, idx + width));\n    });\n\n    /**\n     * Merges a list of objects together into one object.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [{k: v}] -> {k: v}\n     * @param {Array} list An array of objects\n     * @return {Object} A merged object.\n     * @see R.reduce\n     * @example\n     *\n     *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n     *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n     */\n    var mergeAll = _curry1(function mergeAll(list) {\n        return reduce(merge, {}, list);\n    });\n\n    /**\n     * Performs left-to-right function composition. The leftmost function may have\n     * any arity; the remaining functions must be unary.\n     *\n     * In some libraries this function is named `sequence`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> (a -> b -> ... -> n -> z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.compose\n     * @example\n     *\n     *      var f = R.pipe(Math.pow, R.negate, R.inc);\n     *\n     *      f(3, 4); // -(3^4) + 1\n     */\n    var pipe = function pipe() {\n        if (arguments.length === 0) {\n            throw new Error('pipe requires at least one argument');\n        }\n        return curryN(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n    };\n\n    /**\n     * Performs left-to-right composition of one or more Promise-returning\n     * functions. The leftmost function may have any arity; the remaining\n     * functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.composeP\n     * @example\n     *\n     *      //  followersForUser :: String -> Promise [User]\n     *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n     */\n    var pipeP = function pipeP() {\n        if (arguments.length === 0) {\n            throw new Error('pipeP requires at least one argument');\n        }\n        return curryN(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n    };\n\n    /**\n     * Multiplies together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The product of all the numbers in the list.\n     * @see R.reduce\n     * @example\n     *\n     *      R.product([2,4,6,8,100,1]); //=> 38400\n     */\n    var product = reduce(multiply, 1);\n\n    /**\n     * Reasonable analog to SQL `select` statement.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @category Relation\n     * @sig [k] -> [{k: v}] -> [{k: v}]\n     * @param {Array} props The property names to project\n     * @param {Array} objs The objects to query\n     * @return {Array} An array of objects with just the `props` properties.\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n     *      var kids = [abby, fred];\n     *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n     */\n    // passing `identity` gives correct arity\n    var project = useWith(_map, pickAll, identity);\n\n    /**\n     * Returns a new list containing the last `n` elements of the given list.\n     * If `n > list.length`, returns a list of `list.length` elements.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n The number of elements to return.\n     * @param {Array} xs The collection to consider.\n     * @return {Array}\n     * @see R.dropLast\n     * @example\n     *\n     *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n     *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['for', 'baz']\n     *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.takeLast(3, 'ramda');               //=> 'mda'\n     */\n    var takeLast = _curry2(function takeLast(n, xs) {\n        return drop(n >= 0 ? xs.length - n : 0, xs);\n    });\n\n    var _contains = function _contains(a, list) {\n        return _indexOf(list, a, 0) >= 0;\n    };\n\n    //  mapPairs :: (Object, [String]) -> [String]\n    // Function, RegExp, user-defined types\n    var _toString = function _toString(x, seen) {\n        var recur = function recur(y) {\n            var xs = seen.concat([x]);\n            return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n        };\n        //  mapPairs :: (Object, [String]) -> [String]\n        var mapPairs = function (obj, keys) {\n            return _map(function (k) {\n                return _quote(k) + ': ' + recur(obj[k]);\n            }, keys.slice().sort());\n        };\n        switch (Object.prototype.toString.call(x)) {\n        case '[object Arguments]':\n            return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n        case '[object Array]':\n            return '[' + _map(recur, x).concat(mapPairs(x, reject(test(/^\\d+$/), keys(x)))).join(', ') + ']';\n        case '[object Boolean]':\n            return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n        case '[object Date]':\n            return 'new Date(' + _quote(_toISOString(x)) + ')';\n        case '[object Null]':\n            return 'null';\n        case '[object Number]':\n            return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n        case '[object String]':\n            return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n        case '[object Undefined]':\n            return 'undefined';\n        default:\n            return typeof x.constructor === 'function' && x.constructor.name !== 'Object' && typeof x.toString === 'function' && x.toString() !== '[object Object]' ? x.toString() : // Function, RegExp, user-defined types\n            '{' + mapPairs(x, keys(x)).join(', ') + '}';\n        }\n    };\n\n    /**\n     * Turns a list of Functors into a Functor of a list.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.commuteMap\n     * @sig Functor f => (x -> f x) -> [f a] -> f [a]\n     * @param {Function} of A function that returns the data type to return\n     * @param {Array} list An array of functors of the same type\n     * @return {*}\n     * @example\n     *\n     *      R.commute(R.of, [[1], [2, 3]]);   //=> [[1, 2], [1, 3]]\n     *      R.commute(R.of, [[1, 2], [3]]);   //=> [[1, 3], [2, 3]]\n     *      R.commute(R.of, [[1], [2], [3]]); //=> [[1, 2, 3]]\n     *      R.commute(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n     *      R.commute(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n     */\n    var commute = commuteMap(identity);\n\n    /**\n     * Performs right-to-left function composition. The rightmost function may have\n     * any arity; the remaining functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> (a -> b -> ... -> n -> z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.pipe\n     * @example\n     *\n     *      var f = R.compose(R.inc, R.negate, Math.pow);\n     *\n     *      f(3, 4); // -(3^4) + 1\n     */\n    var compose = function compose() {\n        if (arguments.length === 0) {\n            throw new Error('compose requires at least one argument');\n        }\n        return pipe.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Returns the right-to-left Kleisli composition of the provided functions,\n     * each of which must return a value of a type supported by [`chain`](#chain).\n     *\n     * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @see R.pipeK\n     * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (m a -> m z)\n     * @param {...Function}\n     * @return {Function}\n     * @example\n     *\n     *      //  parseJson :: String -> Maybe *\n     *      //  get :: String -> Object -> Maybe *\n     *\n     *      //  getStateCode :: Maybe String -> Maybe String\n     *      var getStateCode = R.composeK(\n     *        R.compose(Maybe.of, R.toUpper),\n     *        get('state'),\n     *        get('address'),\n     *        get('user'),\n     *        parseJson\n     *      );\n     *\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n     *      //=> Just('NY')\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\n     *      //=> Nothing()\n     */\n    var composeK = function composeK() {\n        return arguments.length === 0 ? identity : compose.apply(this, map(chain, arguments));\n    };\n\n    /**\n     * Performs right-to-left composition of one or more Promise-returning\n     * functions. The rightmost function may have any arity; the remaining\n     * functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.pipeP\n     * @example\n     *\n     *      //  followersForUser :: String -> Promise [User]\n     *      var followersForUser = R.composeP(db.getFollowers, db.getUserById);\n     */\n    var composeP = function composeP() {\n        if (arguments.length === 0) {\n            throw new Error('composeP requires at least one argument');\n        }\n        return pipeP.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Wraps a constructor function inside a curried function that can be called with the same\n     * arguments and returns the same type.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> {*}) -> (* -> {*})\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Constructor function\n     *      var Widget = function(config) {\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = [\n     *        // ...\n     *      ];\n     *      R.map(R.construct(Widget), allConfigs); // a list of Widgets\n     */\n    var construct = _curry1(function construct(Fn) {\n        return constructN(Fn.length, Fn);\n    });\n\n    /**\n     * Returns `true` if the specified value is equal, in `R.equals` terms,\n     * to at least one element of the given list; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> Boolean\n     * @param {Object} a The item to compare against.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the item is in the list, `false` otherwise.\n     *\n     * @example\n     *\n     *      R.contains(3, [1, 2, 3]); //=> true\n     *      R.contains(4, [1, 2, 3]); //=> false\n     *      R.contains([42], [[42]]); //=> true\n     */\n    var contains = _curry2(_contains);\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not contained in the second list.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @see R.differenceWith\n     * @example\n     *\n     *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n     *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n     */\n    var difference = _curry2(function difference(first, second) {\n        var out = [];\n        var idx = 0;\n        var firstLen = first.length;\n        while (idx < firstLen) {\n            if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n                out[out.length] = first[idx];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new list without any consecutively repeating elements.\n     * `R.equals` is used to determine equality.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} `list` without repeating elements.\n     * @example\n     *\n     *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n     */\n    var dropRepeats = _curry1(_dispatchable('dropRepeats', _xdropRepeatsWith(equals), dropRepeatsWith(equals)));\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those elements common to both lists.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @see R.intersectionWith\n     * @return {Array} The list of elements found in both `list1` and `list2`.\n     * @example\n     *\n     *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n     */\n    var intersection = _curry2(function intersection(list1, list2) {\n        return uniq(_filter(flip(_contains)(list1), list2));\n    });\n\n    /**\n     * \"lifts\" a function of arity > 1 so that it may \"map over\" an Array or\n     * other Functor.\n     *\n     * @func\n     * @memberOf R\n     * @see R.liftN\n     * @category Function\n     * @sig (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The function `fn` applicable to mappable objects.\n     * @example\n     *\n     *      var madd3 = R.lift(R.curry(function(a, b, c) {\n     *        return a + b + c;\n     *      }));\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     *\n     *      var madd5 = R.lift(R.curry(function(a, b, c, d, e) {\n     *        return a + b + c + d + e;\n     *      }));\n     *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n     */\n    var lift = _curry1(function lift(fn) {\n        return liftN(fn.length, fn);\n    });\n\n    /**\n     * Returns a partial copy of an object omitting the keys specified.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> {String: *} -> {String: *}\n     * @param {Array} names an array of String property names to omit from the new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with properties from `names` not on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n     */\n    var omit = _curry2(function omit(names, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (!_contains(prop, names)) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns the left-to-right Kleisli composition of the provided functions,\n     * each of which must return a value of a type supported by [`chain`](#chain).\n     *\n     * `R.pipeK(f, g, h)` is equivalent to `R.pipe(R.chain(f), R.chain(g), R.chain(h))`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @see R.composeK\n     * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (m a -> m z)\n     * @param {...Function}\n     * @return {Function}\n     * @example\n     *\n     *      //  parseJson :: String -> Maybe *\n     *      //  get :: String -> Object -> Maybe *\n     *\n     *      //  getStateCode :: Maybe String -> Maybe String\n     *      var getStateCode = R.pipeK(\n     *        parseJson,\n     *        get('user'),\n     *        get('address'),\n     *        get('state'),\n     *        R.compose(Maybe.of, R.toUpper)\n     *      );\n     *\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n     *      //=> Just('NY')\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\n     *      //=> Nothing()\n     */\n    var pipeK = function pipeK() {\n        return composeK.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Returns the string representation of the given value. `eval`'ing the output\n     * should result in a value equivalent to the input value. Many of the built-in\n     * `toString` methods do not satisfy this requirement.\n     *\n     * If the given value is an `[object Object]` with a `toString` method other\n     * than `Object.prototype.toString`, this method is invoked with no arguments\n     * to produce the return value. This means user-defined constructor functions\n     * can provide a suitable `toString` method. For example:\n     *\n     *     function Point(x, y) {\n     *       this.x = x;\n     *       this.y = y;\n     *     }\n     *\n     *     Point.prototype.toString = function() {\n     *       return 'new Point(' + this.x + ', ' + this.y + ')';\n     *     };\n     *\n     *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig * -> String\n     * @param {*} val\n     * @return {String}\n     * @example\n     *\n     *      R.toString(42); //=> '42'\n     *      R.toString('abc'); //=> '\"abc\"'\n     *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n     *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n     *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n     */\n    var toString = _curry1(function toString(val) {\n        return _toString(val, []);\n    });\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the\n     * elements of each list.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @example\n     *\n     *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n     */\n    var union = _curry2(compose(uniq, _concat));\n\n    /**\n     * Returns a new list containing only one copy of each element in the\n     * original list, based upon the value returned by applying the supplied\n     * function to each list element. Prefers the first item if the supplied\n     * function produces the same value on two items. `R.equals` is used for\n     * comparison.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> b) -> [a] -> [a]\n     * @param {Function} fn A function used to produce a value to use during comparisons.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n     */\n    var uniqBy = _curry2(function uniqBy(fn, list) {\n        var idx = 0, applied = [], result = [], appliedItem, item;\n        while (idx < list.length) {\n            item = list[idx];\n            appliedItem = fn(item);\n            if (!_contains(appliedItem, applied)) {\n                result.push(item);\n                applied.push(appliedItem);\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Turns a named method with a specified arity into a function\n     * that can be called directly supplied with arguments and a target object.\n     *\n     * The returned function is curried and accepts `arity + 1` parameters where\n     * the final parameter is the target object.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n     * @param {Number} arity Number of arguments the returned function should take\n     *        before the target object.\n     * @param {Function} method Name of the method to call.\n     * @return {Function} A new curried function.\n     * @example\n     *\n     *      var sliceFrom = R.invoker(1, 'slice');\n     *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n     *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n     *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n     */\n    var invoker = _curry2(function invoker(arity, method) {\n        return curryN(arity + 1, function () {\n            var target = arguments[arity];\n            if (target != null && is(Function, target[method])) {\n                return target[method].apply(target, _slice(arguments, 0, arity));\n            }\n            throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n        });\n    });\n\n    /**\n     * Returns a string made by inserting the `separator` between each\n     * element and concatenating all the elements into a single string.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig String -> [a] -> String\n     * @param {Number|String} separator The string used to separate the elements.\n     * @param {Array} xs The elements to join into a string.\n     * @return {String} str The string made by concatenating `xs` with `separator`.\n     * @see R.split\n     * @example\n     *\n     *      var spacer = R.join(' ');\n     *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n     *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n     */\n    var join = invoker(1, 'join');\n\n    /**\n     * Creates a new function that, when invoked, caches the result of calling `fn` for a given\n     * argument set and returns the result. Subsequent calls to the memoized `fn` with the same\n     * argument set will not result in an additional call to `fn`; instead, the cached result\n     * for that set of arguments will be returned.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (*... -> a) -> (*... -> a)\n     * @param {Function} fn The function to memoize.\n     * @return {Function} Memoized version of `fn`.\n     * @example\n     *\n     *      var count = 0;\n     *      var factorial = R.memoize(function(n) {\n     *        count += 1;\n     *        return R.product(R.range(1, n + 1));\n     *      });\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      count; //=> 1\n     */\n    var memoize = _curry1(function memoize(fn) {\n        var cache = {};\n        return function () {\n            var key = toString(arguments);\n            if (!_has(key, cache)) {\n                cache[key] = fn.apply(this, arguments);\n            }\n            return cache[key];\n        };\n    });\n\n    /**\n     * Splits a string into an array of strings based on the given\n     * separator.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String -> [String]\n     * @param {String} sep The separator string.\n     * @param {String} str The string to separate into an array.\n     * @return {Array} The array of strings from `str` separated by `str`.\n     * @see R.join\n     * @example\n     *\n     *      var pathComponents = R.split('/');\n     *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n     *\n     *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n     */\n    var split = invoker(1, 'split');\n\n    /**\n     * The lower case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to lower case.\n     * @return {String} The lower case version of `str`.\n     * @see R.toUpper\n     * @example\n     *\n     *      R.toLower('XYZ'); //=> 'xyz'\n     */\n    var toLower = invoker(0, 'toLowerCase');\n\n    /**\n     * The upper case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to upper case.\n     * @return {String} The upper case version of `str`.\n     * @see R.toLower\n     * @example\n     *\n     *      R.toUpper('abc'); //=> 'ABC'\n     */\n    var toUpper = invoker(0, 'toUpperCase');\n\n    var R = {\n        F: F,\n        T: T,\n        __: __,\n        add: add,\n        addIndex: addIndex,\n        adjust: adjust,\n        all: all,\n        allPass: allPass,\n        always: always,\n        and: and,\n        any: any,\n        anyPass: anyPass,\n        ap: ap,\n        aperture: aperture,\n        append: append,\n        apply: apply,\n        assoc: assoc,\n        assocPath: assocPath,\n        binary: binary,\n        bind: bind,\n        both: both,\n        call: call,\n        chain: chain,\n        clone: clone,\n        commute: commute,\n        commuteMap: commuteMap,\n        comparator: comparator,\n        complement: complement,\n        compose: compose,\n        composeK: composeK,\n        composeP: composeP,\n        concat: concat,\n        cond: cond,\n        construct: construct,\n        constructN: constructN,\n        contains: contains,\n        containsWith: containsWith,\n        converge: converge,\n        countBy: countBy,\n        createMapEntry: createMapEntry,\n        curry: curry,\n        curryN: curryN,\n        dec: dec,\n        defaultTo: defaultTo,\n        difference: difference,\n        differenceWith: differenceWith,\n        dissoc: dissoc,\n        dissocPath: dissocPath,\n        divide: divide,\n        drop: drop,\n        dropLast: dropLast,\n        dropLastWhile: dropLastWhile,\n        dropRepeats: dropRepeats,\n        dropRepeatsWith: dropRepeatsWith,\n        dropWhile: dropWhile,\n        either: either,\n        empty: empty,\n        eqProps: eqProps,\n        equals: equals,\n        evolve: evolve,\n        filter: filter,\n        find: find,\n        findIndex: findIndex,\n        findLast: findLast,\n        findLastIndex: findLastIndex,\n        flatten: flatten,\n        flip: flip,\n        forEach: forEach,\n        fromPairs: fromPairs,\n        functions: functions,\n        functionsIn: functionsIn,\n        groupBy: groupBy,\n        gt: gt,\n        gte: gte,\n        has: has,\n        hasIn: hasIn,\n        head: head,\n        identical: identical,\n        identity: identity,\n        ifElse: ifElse,\n        inc: inc,\n        indexOf: indexOf,\n        init: init,\n        insert: insert,\n        insertAll: insertAll,\n        intersection: intersection,\n        intersectionWith: intersectionWith,\n        intersperse: intersperse,\n        into: into,\n        invert: invert,\n        invertObj: invertObj,\n        invoker: invoker,\n        is: is,\n        isArrayLike: isArrayLike,\n        isEmpty: isEmpty,\n        isNil: isNil,\n        isSet: isSet,\n        join: join,\n        keys: keys,\n        keysIn: keysIn,\n        last: last,\n        lastIndexOf: lastIndexOf,\n        length: length,\n        lens: lens,\n        lensIndex: lensIndex,\n        lensProp: lensProp,\n        lift: lift,\n        liftN: liftN,\n        lt: lt,\n        lte: lte,\n        map: map,\n        mapAccum: mapAccum,\n        mapAccumRight: mapAccumRight,\n        mapObj: mapObj,\n        mapObjIndexed: mapObjIndexed,\n        match: match,\n        mathMod: mathMod,\n        max: max,\n        maxBy: maxBy,\n        mean: mean,\n        median: median,\n        memoize: memoize,\n        merge: merge,\n        mergeAll: mergeAll,\n        min: min,\n        minBy: minBy,\n        modulo: modulo,\n        multiply: multiply,\n        nAry: nAry,\n        negate: negate,\n        none: none,\n        not: not,\n        nth: nth,\n        nthArg: nthArg,\n        nthChar: nthChar,\n        nthCharCode: nthCharCode,\n        of: of,\n        omit: omit,\n        once: once,\n        or: or,\n        over: over,\n        partial: partial,\n        partialRight: partialRight,\n        partition: partition,\n        path: path,\n        pathEq: pathEq,\n        pick: pick,\n        pickAll: pickAll,\n        pickBy: pickBy,\n        pipe: pipe,\n        pipeK: pipeK,\n        pipeP: pipeP,\n        pluck: pluck,\n        prepend: prepend,\n        product: product,\n        project: project,\n        prop: prop,\n        propEq: propEq,\n        propIs: propIs,\n        propOr: propOr,\n        propSatisfies: propSatisfies,\n        props: props,\n        range: range,\n        reduce: reduce,\n        reduceRight: reduceRight,\n        reduced: reduced,\n        reject: reject,\n        remove: remove,\n        repeat: repeat,\n        replace: replace,\n        reverse: reverse,\n        scan: scan,\n        set: set,\n        slice: slice,\n        sort: sort,\n        sortBy: sortBy,\n        split: split,\n        splitEvery: splitEvery,\n        subtract: subtract,\n        sum: sum,\n        tail: tail,\n        take: take,\n        takeLast: takeLast,\n        takeLastWhile: takeLastWhile,\n        takeWhile: takeWhile,\n        tap: tap,\n        test: test,\n        times: times,\n        toLower: toLower,\n        toPairs: toPairs,\n        toPairsIn: toPairsIn,\n        toString: toString,\n        toUpper: toUpper,\n        transduce: transduce,\n        trim: trim,\n        type: type,\n        unapply: unapply,\n        unary: unary,\n        uncurryN: uncurryN,\n        unfold: unfold,\n        union: union,\n        unionWith: unionWith,\n        uniq: uniq,\n        uniqBy: uniqBy,\n        uniqWith: uniqWith,\n        unnest: unnest,\n        update: update,\n        useWith: useWith,\n        values: values,\n        valuesIn: valuesIn,\n        view: view,\n        where: where,\n        whereEq: whereEq,\n        wrap: wrap,\n        xprod: xprod,\n        zip: zip,\n        zipObj: zipObj,\n        zipWith: zipWith\n    };\n\n  /* TEST_ENTRY_POINT */\n\n  if (typeof exports === 'object') {\n    module.exports = R;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function() { return R; });\n  } else {\n    this.R = R;\n  }\n\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/ramda/dist/ramda.js\n// module id = 4\n// module chunks = 0","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_Map.js\n// module id = 5\n// module chunks = 0","//  Ramda v0.17.1\n//  https://github.com/ramda/ramda\n//  (c) 2013-2015 Scott Sauyet, Michael Hurley, and David Chambers\n//  Ramda may be freely distributed under the MIT license.\n\n;(function() {\n\n  'use strict';\n\n  /**\n     * A special placeholder value used to specify \"gaps\" within curried functions,\n     * allowing partial application of any combination of arguments,\n     * regardless of their positions.\n     *\n     * If `g` is a curried ternary function and `_` is `R.__`, the following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2, _)(1, 3)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @constant\n     * @memberOf R\n     * @category Function\n     * @example\n     *\n     *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n     *      greet('Alice'); //=> 'Hello, Alice!'\n     */\n    var __ = { '@@functional/placeholder': true };\n\n    // jshint unused:vars\n    var _arity = function _arity(n, fn) {\n        // jshint unused:vars\n        switch (n) {\n        case 0:\n            return function () {\n                return fn.apply(this, arguments);\n            };\n        case 1:\n            return function (a0) {\n                return fn.apply(this, arguments);\n            };\n        case 2:\n            return function (a0, a1) {\n                return fn.apply(this, arguments);\n            };\n        case 3:\n            return function (a0, a1, a2) {\n                return fn.apply(this, arguments);\n            };\n        case 4:\n            return function (a0, a1, a2, a3) {\n                return fn.apply(this, arguments);\n            };\n        case 5:\n            return function (a0, a1, a2, a3, a4) {\n                return fn.apply(this, arguments);\n            };\n        case 6:\n            return function (a0, a1, a2, a3, a4, a5) {\n                return fn.apply(this, arguments);\n            };\n        case 7:\n            return function (a0, a1, a2, a3, a4, a5, a6) {\n                return fn.apply(this, arguments);\n            };\n        case 8:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                return fn.apply(this, arguments);\n            };\n        case 9:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                return fn.apply(this, arguments);\n            };\n        case 10:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                return fn.apply(this, arguments);\n            };\n        default:\n            throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n        }\n    };\n\n    var _cloneRegExp = function _cloneRegExp(pattern) {\n        return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n    };\n\n    var _complement = function _complement(f) {\n        return function () {\n            return !f.apply(this, arguments);\n        };\n    };\n\n    /**\n     * Private `concat` function to merge two array-like objects.\n     *\n     * @private\n     * @param {Array|Arguments} [set1=[]] An array-like object.\n     * @param {Array|Arguments} [set2=[]] An array-like object.\n     * @return {Array} A new, merged array.\n     * @example\n     *\n     *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     */\n    var _concat = function _concat(set1, set2) {\n        set1 = set1 || [];\n        set2 = set2 || [];\n        var idx;\n        var len1 = set1.length;\n        var len2 = set2.length;\n        var result = [];\n        idx = 0;\n        while (idx < len1) {\n            result[result.length] = set1[idx];\n            idx += 1;\n        }\n        idx = 0;\n        while (idx < len2) {\n            result[result.length] = set2[idx];\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _containsWith = function _containsWith(pred, x, list) {\n        var idx = 0, len = list.length;\n        while (idx < len) {\n            if (pred(x, list[idx])) {\n                return true;\n            }\n            idx += 1;\n        }\n        return false;\n    };\n\n    /**\n     * Optimized internal two-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry1 = function _curry1(fn) {\n        return function f1(a) {\n            if (arguments.length === 0) {\n                return f1;\n            } else if (a != null && a['@@functional/placeholder'] === true) {\n                return f1;\n            } else {\n                return fn.apply(this, arguments);\n            }\n        };\n    };\n\n    /**\n     * Optimized internal two-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry2 = function _curry2(fn) {\n        return function f2(a, b) {\n            var n = arguments.length;\n            if (n === 0) {\n                return f2;\n            } else if (n === 1 && a != null && a['@@functional/placeholder'] === true) {\n                return f2;\n            } else if (n === 1) {\n                return _curry1(function (b) {\n                    return fn(a, b);\n                });\n            } else if (n === 2 && a != null && a['@@functional/placeholder'] === true && b != null && b['@@functional/placeholder'] === true) {\n                return f2;\n            } else if (n === 2 && a != null && a['@@functional/placeholder'] === true) {\n                return _curry1(function (a) {\n                    return fn(a, b);\n                });\n            } else if (n === 2 && b != null && b['@@functional/placeholder'] === true) {\n                return _curry1(function (b) {\n                    return fn(a, b);\n                });\n            } else {\n                return fn(a, b);\n            }\n        };\n    };\n\n    /**\n     * Optimized internal three-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry3 = function _curry3(fn) {\n        return function f3(a, b, c) {\n            var n = arguments.length;\n            if (n === 0) {\n                return f3;\n            } else if (n === 1 && a != null && a['@@functional/placeholder'] === true) {\n                return f3;\n            } else if (n === 1) {\n                return _curry2(function (b, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 2 && a != null && a['@@functional/placeholder'] === true && b != null && b['@@functional/placeholder'] === true) {\n                return f3;\n            } else if (n === 2 && a != null && a['@@functional/placeholder'] === true) {\n                return _curry2(function (a, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 2 && b != null && b['@@functional/placeholder'] === true) {\n                return _curry2(function (b, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 2) {\n                return _curry1(function (c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && a != null && a['@@functional/placeholder'] === true && b != null && b['@@functional/placeholder'] === true && c != null && c['@@functional/placeholder'] === true) {\n                return f3;\n            } else if (n === 3 && a != null && a['@@functional/placeholder'] === true && b != null && b['@@functional/placeholder'] === true) {\n                return _curry2(function (a, b) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && a != null && a['@@functional/placeholder'] === true && c != null && c['@@functional/placeholder'] === true) {\n                return _curry2(function (a, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && b != null && b['@@functional/placeholder'] === true && c != null && c['@@functional/placeholder'] === true) {\n                return _curry2(function (b, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && a != null && a['@@functional/placeholder'] === true) {\n                return _curry1(function (a) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && b != null && b['@@functional/placeholder'] === true) {\n                return _curry1(function (b) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && c != null && c['@@functional/placeholder'] === true) {\n                return _curry1(function (c) {\n                    return fn(a, b, c);\n                });\n            } else {\n                return fn(a, b, c);\n            }\n        };\n    };\n\n    /**\n     * Internal curryN function.\n     *\n     * @private\n     * @category Function\n     * @param {Number} length The arity of the curried function.\n     * @return {array} An array of arguments received thus far.\n     * @param {Function} fn The function to curry.\n     */\n    var _curryN = function _curryN(length, received, fn) {\n        return function () {\n            var combined = [];\n            var argsIdx = 0;\n            var left = length;\n            var combinedIdx = 0;\n            while (combinedIdx < received.length || argsIdx < arguments.length) {\n                var result;\n                if (combinedIdx < received.length && (received[combinedIdx] == null || received[combinedIdx]['@@functional/placeholder'] !== true || argsIdx >= arguments.length)) {\n                    result = received[combinedIdx];\n                } else {\n                    result = arguments[argsIdx];\n                    argsIdx += 1;\n                }\n                combined[combinedIdx] = result;\n                if (result == null || result['@@functional/placeholder'] !== true) {\n                    left -= 1;\n                }\n                combinedIdx += 1;\n            }\n            return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n        };\n    };\n\n    var _filter = function _filter(fn, list) {\n        var idx = 0, len = list.length, result = [];\n        while (idx < len) {\n            if (fn(list[idx])) {\n                result[result.length] = list[idx];\n            }\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _forceReduced = function _forceReduced(x) {\n        return {\n            '@@transducer/value': x,\n            '@@transducer/reduced': true\n        };\n    };\n\n    /**\n     * @private\n     * @param {Function} fn The strategy for extracting function names from an object\n     * @return {Function} A function that takes an object and returns an array of function names.\n     */\n    var _functionsWith = function _functionsWith(fn) {\n        return function (obj) {\n            return _filter(function (key) {\n                return typeof obj[key] === 'function';\n            }, fn(obj));\n        };\n    };\n\n    var _has = function _has(prop, obj) {\n        return Object.prototype.hasOwnProperty.call(obj, prop);\n    };\n\n    var _identity = function _identity(x) {\n        return x;\n    };\n\n    /**\n     * Tests whether or not an object is an array.\n     *\n     * @private\n     * @param {*} val The object to test.\n     * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n     * @example\n     *\n     *      _isArray([]); //=> true\n     *      _isArray(null); //=> false\n     *      _isArray({}); //=> false\n     */\n    var _isArray = Array.isArray || function _isArray(val) {\n        return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n    };\n\n    /**\n     * Determine if the passed argument is an integer.\n     *\n     * @private\n     * @param {*} n\n     * @category Type\n     * @return {Boolean}\n     */\n    var _isInteger = Number.isInteger || function _isInteger(n) {\n        return n << 0 === n;\n    };\n\n    var _isNumber = function _isNumber(x) {\n        return Object.prototype.toString.call(x) === '[object Number]';\n    };\n\n    var _isString = function _isString(x) {\n        return Object.prototype.toString.call(x) === '[object String]';\n    };\n\n    var _isTransformer = function _isTransformer(obj) {\n        return typeof obj['@@transducer/step'] === 'function';\n    };\n\n    var _map = function _map(fn, list) {\n        var idx = 0, len = list.length, result = Array(len);\n        while (idx < len) {\n            result[idx] = fn(list[idx]);\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _pipe = function _pipe(f, g) {\n        return function () {\n            return g.call(this, f.apply(this, arguments));\n        };\n    };\n\n    var _pipeP = function _pipeP(f, g) {\n        return function () {\n            var ctx = this;\n            return f.apply(ctx, arguments).then(function (x) {\n                return g.call(ctx, x);\n            });\n        };\n    };\n\n    var _quote = function _quote(s) {\n        return '\"' + s.replace(/\"/g, '\\\\\"') + '\"';\n    };\n\n    var _reduced = function _reduced(x) {\n        return x && x['@@transducer/reduced'] ? x : {\n            '@@transducer/value': x,\n            '@@transducer/reduced': true\n        };\n    };\n\n    /**\n     * An optimized, private array `slice` implementation.\n     *\n     * @private\n     * @param {Arguments|Array} args The array or arguments object to consider.\n     * @param {Number} [from=0] The array index to slice from, inclusive.\n     * @param {Number} [to=args.length] The array index to slice to, exclusive.\n     * @return {Array} A new, sliced array.\n     * @example\n     *\n     *      _slice([1, 2, 3, 4, 5], 1, 3); //=> [2, 3]\n     *\n     *      var firstThreeArgs = function(a, b, c, d) {\n     *        return _slice(arguments, 0, 3);\n     *      };\n     *      firstThreeArgs(1, 2, 3, 4); //=> [1, 2, 3]\n     */\n    var _slice = function _slice(args, from, to) {\n        switch (arguments.length) {\n        case 1:\n            return _slice(args, 0, args.length);\n        case 2:\n            return _slice(args, from, args.length);\n        default:\n            var list = [];\n            var idx = 0;\n            var len = Math.max(0, Math.min(args.length, to) - from);\n            while (idx < len) {\n                list[idx] = args[from + idx];\n                idx += 1;\n            }\n            return list;\n        }\n    };\n\n    /**\n     * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n     */\n    var _toISOString = function () {\n        var pad = function pad(n) {\n            return (n < 10 ? '0' : '') + n;\n        };\n        return typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n            return d.toISOString();\n        } : function _toISOString(d) {\n            return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n        };\n    }();\n\n    var _xdropRepeatsWith = function () {\n        function XDropRepeatsWith(pred, xf) {\n            this.xf = xf;\n            this.pred = pred;\n            this.lastValue = undefined;\n            this.seenFirstValue = false;\n        }\n        XDropRepeatsWith.prototype['@@transducer/init'] = function () {\n            return this.xf['@@transducer/init']();\n        };\n        XDropRepeatsWith.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](result);\n        };\n        XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n            var sameAsLast = false;\n            if (!this.seenFirstValue) {\n                this.seenFirstValue = true;\n            } else if (this.pred(this.lastValue, input)) {\n                sameAsLast = true;\n            }\n            this.lastValue = input;\n            return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdropRepeatsWith(pred, xf) {\n            return new XDropRepeatsWith(pred, xf);\n        });\n    }();\n\n    var _xfBase = {\n        init: function () {\n            return this.xf['@@transducer/init']();\n        },\n        result: function (result) {\n            return this.xf['@@transducer/result'](result);\n        }\n    };\n\n    var _xfilter = function () {\n        function XFilter(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XFilter.prototype['@@transducer/init'] = _xfBase.init;\n        XFilter.prototype['@@transducer/result'] = _xfBase.result;\n        XFilter.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n        };\n        return _curry2(function _xfilter(f, xf) {\n            return new XFilter(f, xf);\n        });\n    }();\n\n    var _xfind = function () {\n        function XFind(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.found = false;\n        }\n        XFind.prototype['@@transducer/init'] = _xfBase.init;\n        XFind.prototype['@@transducer/result'] = function (result) {\n            if (!this.found) {\n                result = this.xf['@@transducer/step'](result, void 0);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XFind.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.found = true;\n                result = _reduced(this.xf['@@transducer/step'](result, input));\n            }\n            return result;\n        };\n        return _curry2(function _xfind(f, xf) {\n            return new XFind(f, xf);\n        });\n    }();\n\n    var _xfindIndex = function () {\n        function XFindIndex(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.idx = -1;\n            this.found = false;\n        }\n        XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n        XFindIndex.prototype['@@transducer/result'] = function (result) {\n            if (!this.found) {\n                result = this.xf['@@transducer/step'](result, -1);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n            this.idx += 1;\n            if (this.f(input)) {\n                this.found = true;\n                result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n            }\n            return result;\n        };\n        return _curry2(function _xfindIndex(f, xf) {\n            return new XFindIndex(f, xf);\n        });\n    }();\n\n    var _xfindLast = function () {\n        function XFindLast(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n        XFindLast.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n        };\n        XFindLast.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.last = input;\n            }\n            return result;\n        };\n        return _curry2(function _xfindLast(f, xf) {\n            return new XFindLast(f, xf);\n        });\n    }();\n\n    var _xfindLastIndex = function () {\n        function XFindLastIndex(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.idx = -1;\n            this.lastIdx = -1;\n        }\n        XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n        XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n        };\n        XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n            this.idx += 1;\n            if (this.f(input)) {\n                this.lastIdx = this.idx;\n            }\n            return result;\n        };\n        return _curry2(function _xfindLastIndex(f, xf) {\n            return new XFindLastIndex(f, xf);\n        });\n    }();\n\n    var _xmap = function () {\n        function XMap(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XMap.prototype['@@transducer/init'] = _xfBase.init;\n        XMap.prototype['@@transducer/result'] = _xfBase.result;\n        XMap.prototype['@@transducer/step'] = function (result, input) {\n            return this.xf['@@transducer/step'](result, this.f(input));\n        };\n        return _curry2(function _xmap(f, xf) {\n            return new XMap(f, xf);\n        });\n    }();\n\n    var _xtake = function () {\n        function XTake(n, xf) {\n            this.xf = xf;\n            this.n = n;\n        }\n        XTake.prototype['@@transducer/init'] = _xfBase.init;\n        XTake.prototype['@@transducer/result'] = _xfBase.result;\n        XTake.prototype['@@transducer/step'] = function (result, input) {\n            if (this.n === 0) {\n                return _reduced(result);\n            } else {\n                this.n -= 1;\n                return this.xf['@@transducer/step'](result, input);\n            }\n        };\n        return _curry2(function _xtake(n, xf) {\n            return new XTake(n, xf);\n        });\n    }();\n\n    var _xtakeWhile = function () {\n        function XTakeWhile(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n        XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n        };\n        return _curry2(function _xtakeWhile(f, xf) {\n            return new XTakeWhile(f, xf);\n        });\n    }();\n\n    var _xwrap = function () {\n        function XWrap(fn) {\n            this.f = fn;\n        }\n        XWrap.prototype['@@transducer/init'] = function () {\n            throw new Error('init not implemented on XWrap');\n        };\n        XWrap.prototype['@@transducer/result'] = function (acc) {\n            return acc;\n        };\n        XWrap.prototype['@@transducer/step'] = function (acc, x) {\n            return this.f(acc, x);\n        };\n        return function _xwrap(fn) {\n            return new XWrap(fn);\n        };\n    }();\n\n    /**\n     * Adds two numbers. Equivalent to `a + b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Number}\n     * @see R.subtract\n     * @example\n     *\n     *      R.add(2, 3);       //=>  5\n     *      R.add(7)(10);      //=> 17\n     */\n    var add = _curry2(function add(a, b) {\n        return a + b;\n    });\n\n    /**\n     * Applies a function to the value at the given index of an array,\n     * returning a new copy of the array with the element at the given\n     * index replaced with the result of the function application.\n     * @see R.update\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> a) -> Number -> [a] -> [a]\n     * @param {Function} fn The function to apply.\n     * @param {Number} idx The index.\n     * @param {Array|Arguments} list An array-like object whose value\n     *        at the supplied index will be replaced.\n     * @return {Array} A copy of the supplied array-like object with\n     *         the element at index `idx` replaced with the value\n     *         returned by applying `fn` to the existing element.\n     * @example\n     *\n     *      R.adjust(R.add(10), 1, [0, 1, 2]);     //=> [0, 11, 2]\n     *      R.adjust(R.add(10))(1)([0, 1, 2]);     //=> [0, 11, 2]\n     */\n    var adjust = _curry3(function adjust(fn, idx, list) {\n        if (idx >= list.length || idx < -list.length) {\n            return list;\n        }\n        var start = idx < 0 ? list.length : 0;\n        var _idx = start + idx;\n        var _list = _concat(list);\n        _list[_idx] = fn(list[_idx]);\n        return _list;\n    });\n\n    /**\n     * Returns a function that always returns the given value. Note that for\n     * non-primitives the value returned is a reference to the original value.\n     *\n     * This function is known as `const`, `constant`, or `K` (for K combinator)\n     * in other languages and libraries.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> (* -> a)\n     * @param {*} val The value to wrap in a function\n     * @return {Function} A Function :: * -> val.\n     * @example\n     *\n     *      var t = R.always('Tee');\n     *      t(); //=> 'Tee'\n     */\n    var always = _curry1(function always(val) {\n        return function () {\n            return val;\n        };\n    });\n\n    /**\n     * Returns a new list, composed of n-tuples of consecutive elements\n     * If `n` is greater than the length of the list, an empty list is returned.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @param {Number} n The size of the tuples to create\n     * @param {Array} list The list to split into `n`-tuples\n     * @return {Array} The new list.\n     * @example\n     *\n     *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n     *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n     *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n     */\n    var aperture = _curry2(function aperture(n, list) {\n        var idx = 0;\n        var limit = list.length - (n - 1);\n        var acc = new Array(limit >= 0 ? limit : 0);\n        while (idx < limit) {\n            acc[idx] = _slice(list, idx, idx + n);\n            idx += 1;\n        }\n        return acc;\n    });\n\n    /**\n     * Returns a new list containing the contents of the given list, followed by the given\n     * element.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The element to add to the end of the new list.\n     * @param {Array} list The list whose contents will be added to the beginning of the output\n     *        list.\n     * @return {Array} A new list containing the contents of the old list followed by `el`.\n     * @see R.prepend\n     * @example\n     *\n     *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n     *      R.append('tests', []); //=> ['tests']\n     *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n     */\n    var append = _curry2(function append(el, list) {\n        return _concat(list, [el]);\n    });\n\n    /**\n     * Applies function `fn` to the argument list `args`. This is useful for\n     * creating a fixed-arity function from a variadic function. `fn` should\n     * be a bound function if context is significant.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (*... -> a) -> [*] -> a\n     * @param {Function} fn\n     * @param {Array} args\n     * @return {*}\n     * @see R.call, R.unapply\n     * @example\n     *\n     *      var nums = [1, 2, 3, -99, 42, 6, 7];\n     *      R.apply(Math.max, nums); //=> 42\n     */\n    var apply = _curry2(function apply(fn, args) {\n        return fn.apply(this, args);\n    });\n\n    /**\n     * Makes a shallow clone of an object, setting or overriding the specified\n     * property with the given value.  Note that this copies and flattens\n     * prototype properties onto the new object as well.  All non-primitive\n     * properties are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig String -> a -> {k: v} -> {k: v}\n     * @param {String} prop the property name to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except for the specified property.\n     * @see R.dissoc\n     * @example\n     *\n     *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n     */\n    var assoc = _curry3(function assoc(prop, val, obj) {\n        var result = {};\n        for (var p in obj) {\n            result[p] = obj[p];\n        }\n        result[prop] = val;\n        return result;\n    });\n\n    /**\n     * Makes a shallow clone of an object, setting or overriding the nodes\n     * required to create the given path, and placing the specific value at the\n     * tail end of that path.  Note that this copies and flattens prototype\n     * properties onto the new object as well.  All non-primitive properties\n     * are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> a -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except along the specified path.\n     * @see R.dissocPath\n     * @example\n     *\n     *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n     */\n    var assocPath = _curry3(function assocPath(path, val, obj) {\n        switch (path.length) {\n        case 0:\n            return obj;\n        case 1:\n            return assoc(path[0], val, obj);\n        default:\n            return assoc(path[0], assocPath(_slice(path, 1), val, Object(obj[path[0]])), obj);\n        }\n    });\n\n    /**\n     * Creates a function that is bound to a context.\n     * Note: `R.bind` does not provide the additional argument-binding capabilities of\n     * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @category Object\n     * @see R.partial\n     * @sig (* -> *) -> {*} -> (* -> *)\n     * @param {Function} fn The function to bind to context\n     * @param {Object} thisObj The context to bind `fn` to\n     * @return {Function} A function that will execute in the context of `thisObj`.\n     */\n    var bind = _curry2(function bind(fn, thisObj) {\n        return _arity(fn.length, function () {\n            return fn.apply(thisObj, arguments);\n        });\n    });\n\n    /**\n     * A function wrapping calls to the two functions in an `&&` operation, returning the result of the first\n     * function if it is false-y and the result of the second function otherwise.  Note that this is\n     * short-circuited, meaning that the second function will not be invoked if the first returns a false-y\n     * value.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n     * @see R.and\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0 };\n     *      var f = R.both(gt10, even);\n     *      f(100); //=> true\n     *      f(101); //=> false\n     */\n    var both = _curry2(function both(f, g) {\n        return function _both() {\n            return f.apply(this, arguments) && g.apply(this, arguments);\n        };\n    });\n\n    /**\n     * Makes a comparator function out of a function that reports whether the first element is less than the second.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a, b -> Boolean) -> (a, b -> Number)\n     * @param {Function} pred A predicate function of arity two.\n     * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`.\n     * @example\n     *\n     *      var cmp = R.comparator(function(a, b) {\n     *        return a.age < b.age;\n     *      });\n     *      var people = [\n     *        // ...\n     *      ];\n     *      R.sort(cmp, people);\n     */\n    var comparator = _curry1(function comparator(pred) {\n        return function (a, b) {\n            return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n        };\n    });\n\n    /**\n     * Takes a function `f` and returns a function `g` such that:\n     *\n     *   - applying `g` to zero or more arguments will give __true__ if applying\n     *     the same arguments to `f` gives a logical __false__ value; and\n     *\n     *   - applying `g` to zero or more arguments will give __false__ if applying\n     *     the same arguments to `f` gives a logical __true__ value.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> *) -> (*... -> Boolean)\n     * @param {Function} f\n     * @return {Function}\n     * @see R.not\n     * @example\n     *\n     *      var isEven = function(n) { return n % 2 === 0; };\n     *      var isOdd = R.complement(isEven);\n     *      isOdd(21); //=> true\n     *      isOdd(42); //=> false\n     */\n    var complement = _curry1(_complement);\n\n    /**\n     * Returns a function, `fn`, which encapsulates if/else-if/else logic.\n     * `R.cond` takes a list of [predicate, transform] pairs. All of the\n     * arguments to `fn` are applied to each of the predicates in turn\n     * until one returns a \"truthy\" value, at which point `fn` returns the\n     * result of applying its arguments to the corresponding transformer.\n     * If none of the predicates matches, `fn` returns undefined.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n     * @param {Array} pairs\n     * @return {Function}\n     * @example\n     *\n     *      var fn = R.cond([\n     *        [R.equals(0),   R.always('water freezes at 0°C')],\n     *        [R.equals(100), R.always('water boils at 100°C')],\n     *        [R.T,           function(temp) { return 'nothing special happens at ' + temp + '°C'; }]\n     *      ]);\n     *      fn(0); //=> 'water freezes at 0°C'\n     *      fn(50); //=> 'nothing special happens at 50°C'\n     *      fn(100); //=> 'water boils at 100°C'\n     */\n    var cond = _curry1(function cond(pairs) {\n        return function () {\n            var idx = 0;\n            while (idx < pairs.length) {\n                if (pairs[idx][0].apply(this, arguments)) {\n                    return pairs[idx][1].apply(this, arguments);\n                }\n                idx += 1;\n            }\n        };\n    });\n\n    /**\n     * Returns `true` if the `x` is found in the `list`, using `pred` as an\n     * equality predicate for `x`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a, a -> Boolean) -> a -> [a] -> Boolean\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {*} x The item to find\n     * @param {Array} list The list to iterate over\n     * @return {Boolean} `true` if `x` is in `list`, else `false`.\n     * @example\n     *\n     *      var xs = [{x: 12}, {x: 11}, {x: 10}];\n     *      R.containsWith(function(a, b) { return a.x === b.x; }, {x: 10}, xs); //=> true\n     *      R.containsWith(function(a, b) { return a.x === b.x; }, {x: 1}, xs); //=> false\n     */\n    var containsWith = _curry3(_containsWith);\n\n    /**\n     * Counts the elements of a list according to how many match each value\n     * of a key generated by the supplied function. Returns an object\n     * mapping the keys produced by `fn` to the number of occurrences in\n     * the list. Note that all keys are coerced to strings because of how\n     * JavaScript objects work.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a -> String) -> [a] -> {*}\n     * @param {Function} fn The function used to map values to keys.\n     * @param {Array} list The list to count elements from.\n     * @return {Object} An object mapping keys to number of occurrences in the list.\n     * @example\n     *\n     *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n     *      var letters = R.split('', 'abcABCaaaBBc');\n     *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n     *      R.countBy(R.toLower)(letters);   //=> {'a': 5, 'b': 4, 'c': 3}\n     */\n    var countBy = _curry2(function countBy(fn, list) {\n        var counts = {};\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            var key = fn(list[idx]);\n            counts[key] = (_has(key, counts) ? counts[key] : 0) + 1;\n            idx += 1;\n        }\n        return counts;\n    });\n\n    /**\n     * Creates an object containing a single key:value pair.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig String -> a -> {String:a}\n     * @param {String} key\n     * @param {*} val\n     * @return {Object}\n     * @example\n     *\n     *      var matchPhrases = R.compose(\n     *        R.createMapEntry('must'),\n     *        R.map(R.createMapEntry('match_phrase'))\n     *      );\n     *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n     */\n    var createMapEntry = _curry2(function createMapEntry(key, val) {\n        var obj = {};\n        obj[key] = val;\n        return obj;\n    });\n\n    /**\n     * Returns a curried equivalent of the provided function, with the\n     * specified arity. The curried function has two unusual capabilities.\n     * First, its arguments needn't be provided one at a time. If `g` is\n     * `R.curryN(3, f)`, the following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`,\n     * the following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curry\n     * @example\n     *\n     *      var addFourNumbers = function() {\n     *        return R.sum([].slice.call(arguments, 0, 4));\n     *      };\n     *\n     *      var curriedAddFourNumbers = R.curryN(4, addFourNumbers);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n    var curryN = _curry2(function curryN(length, fn) {\n        if (length === 1) {\n            return _curry1(fn);\n        }\n        return _arity(length, _curryN(length, [], fn));\n    });\n\n    /**\n     * Decrements its argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @see R.inc\n     * @example\n     *\n     *      R.dec(42); //=> 41\n     */\n    var dec = add(-1);\n\n    /**\n     * Returns the second argument if it is not null or undefined. If it is null\n     * or undefined, the first (default) argument is returned.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig a -> b -> a | b\n     * @param {a} val The default value.\n     * @param {b} val The value to return if it is not null or undefined\n     * @return {*} The the second value or the default value\n     * @example\n     *\n     *      var defaultTo42 = defaultTo(42);\n     *\n     *      defaultTo42(null);  //=> 42\n     *      defaultTo42(undefined);  //=> 42\n     *      defaultTo42('Ramda');  //=> 'Ramda'\n     */\n    var defaultTo = _curry2(function defaultTo(d, v) {\n        return v == null ? d : v;\n    });\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not contained in the second list.\n     * Duplication is determined according to the value returned by applying the supplied predicate to two list\n     * elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a,a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @see R.difference\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @example\n     *\n     *      function cmp(x, y) { return x.a === y.a; }\n     *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n     *      var l2 = [{a: 3}, {a: 4}];\n     *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n     */\n    var differenceWith = _curry3(function differenceWith(pred, first, second) {\n        var out = [];\n        var idx = 0;\n        var firstLen = first.length;\n        var containsPred = containsWith(pred);\n        while (idx < firstLen) {\n            if (!containsPred(first[idx], second) && !containsPred(first[idx], out)) {\n                out[out.length] = first[idx];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new object that does not contain a `prop` property.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig String -> {k: v} -> {k: v}\n     * @param {String} prop the name of the property to dissociate\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original but without the specified property\n     * @see R.assoc\n     * @example\n     *\n     *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n     */\n    var dissoc = _curry2(function dissoc(prop, obj) {\n        var result = {};\n        for (var p in obj) {\n            if (p !== prop) {\n                result[p] = obj[p];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Makes a shallow clone of an object, omitting the property at the\n     * given path. Note that this copies and flattens prototype properties\n     * onto the new object as well.  All non-primitive properties are copied\n     * by reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object without the property at path\n     * @see R.assocPath\n     * @example\n     *\n     *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n     */\n    var dissocPath = _curry2(function dissocPath(path, obj) {\n        switch (path.length) {\n        case 0:\n            return obj;\n        case 1:\n            return dissoc(path[0], obj);\n        default:\n            var head = path[0];\n            var tail = _slice(path, 1);\n            return obj[head] == null ? obj : assoc(head, dissocPath(tail, obj[head]), obj);\n        }\n    });\n\n    /**\n     * Divides two numbers. Equivalent to `a / b`.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a / b`.\n     * @see R.multiply\n     * @example\n     *\n     *      R.divide(71, 100); //=> 0.71\n     *\n     *      var half = R.divide(R.__, 2);\n     *      half(42); //=> 21\n     *\n     *      var reciprocal = R.divide(1);\n     *      reciprocal(4);   //=> 0.25\n     */\n    var divide = _curry2(function divide(a, b) {\n        return a / b;\n    });\n\n    /**\n     * Returns a new list containing all but last the`n` elements of a given list,\n     * passing each value from the right to the supplied predicate function, skipping\n     * elements while the predicate function returns `true`. The predicate function\n     * is passed one argument: (value)*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.takeLastWhile\n     * @example\n     *\n     *      var lteThree = function(x) {\n     *        return x <= 3;\n     *      };\n     *\n     *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2]\n     */\n    var dropLastWhile = _curry2(function dropLastWhile(pred, list) {\n        var idx = list.length - 1;\n        while (idx >= 0 && pred(list[idx])) {\n            idx -= 1;\n        }\n        return _slice(list, 0, idx + 1);\n    });\n\n    /**\n     * A function wrapping calls to the two functions in an `||` operation, returning the result of the first\n     * function if it is truth-y and the result of the second function otherwise.  Note that this is\n     * short-circuited, meaning that the second function will not be invoked if the first returns a truth-y\n     * value.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n     * @see R.or\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0 };\n     *      var f = R.either(gt10, even);\n     *      f(101); //=> true\n     *      f(8); //=> true\n     */\n    var either = _curry2(function either(f, g) {\n        return function _either() {\n            return f.apply(this, arguments) || g.apply(this, arguments);\n        };\n    });\n\n    /**\n     * Returns the empty value of its argument's type. Ramda defines the empty\n     * value of Array (`[]`), Object (`{}`), and String (`''`). Other types are\n     * supported if they define `<Type>.empty` and/or `<Type>.prototype.empty`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> a\n     * @param {*} x\n     * @return {*}\n     * @example\n     *\n     *      R.empty(Just(42));      //=> Nothing()\n     *      R.empty([1, 2, 3]);     //=> []\n     *      R.empty('unicorns');    //=> ''\n     *      R.empty({x: 1, y: 2});  //=> {}\n     */\n    var empty = _curry1(function empty(x) {\n        if (x != null && typeof x.empty === 'function') {\n            return x.empty();\n        } else if (x != null && typeof x.constructor != null && typeof x.constructor.empty === 'function') {\n            return x.constructor.empty();\n        } else {\n            switch (Object.prototype.toString.call(x)) {\n            case '[object Array]':\n                return [];\n            case '[object Object]':\n                return {};\n            case '[object String]':\n                return '';\n            }\n        }\n    });\n\n    /**\n     * Creates a new object by recursively evolving a shallow copy of `object`, according to the\n     * `transformation` functions. All non-primitive properties are copied by reference.\n     *\n     * A `tranformation` function will not be invoked if its corresponding key does not exist in\n     * the evolved object.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n     * @param {Object} transformations The object specifying transformation functions to apply\n     *        to the object.\n     * @param {Object} object The object to be transformed.\n     * @return {Object} The transformed object.\n     * @example\n     *\n     *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n     *      var transformations = {\n     *        firstName: R.trim,\n     *        lastName: R.trim, // Will not get invoked.\n     *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n     *      };\n     *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n     */\n    var evolve = _curry2(function evolve(transformations, object) {\n        var transformation, key, type, result = {};\n        for (key in object) {\n            transformation = transformations[key];\n            type = typeof transformation;\n            result[key] = type === 'function' ? transformation(object[key]) : type === 'object' ? evolve(transformations[key], object[key]) : object[key];\n        }\n        return result;\n    });\n\n    /**\n     * Creates a new object out of a list key-value pairs.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [[k,v]] -> {k: v}\n     * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n     * @return {Object} The object made by pairing up `keys` and `values`.\n     * @see R.toPairs\n     * @example\n     *\n     *      R.fromPairs([['a', 1], ['b', 2],  ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n     */\n    var fromPairs = _curry1(function fromPairs(pairs) {\n        var idx = 0, len = pairs.length, out = {};\n        while (idx < len) {\n            if (_isArray(pairs[idx]) && pairs[idx].length) {\n                out[pairs[idx][0]] = pairs[idx][1];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns `true` if the first argument is greater than the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @see R.lt\n     * @example\n     *\n     *      R.gt(2, 1); //=> true\n     *      R.gt(2, 2); //=> false\n     *      R.gt(2, 3); //=> false\n     *      R.gt('a', 'z'); //=> false\n     *      R.gt('z', 'a'); //=> true\n     */\n    var gt = _curry2(function gt(a, b) {\n        return a > b;\n    });\n\n    /**\n     * Returns `true` if the first argument is greater than or equal to the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean}\n     * @see R.lte\n     * @example\n     *\n     *      R.gte(2, 1); //=> true\n     *      R.gte(2, 2); //=> true\n     *      R.gte(2, 3); //=> false\n     *      R.gte('a', 'z'); //=> false\n     *      R.gte('z', 'a'); //=> true\n     */\n    var gte = _curry2(function gte(a, b) {\n        return a >= b;\n    });\n\n    /**\n     * Returns whether or not an object has an own property with\n     * the specified name\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      var hasName = R.has('name');\n     *      hasName({name: 'alice'});   //=> true\n     *      hasName({name: 'bob'});     //=> true\n     *      hasName({});                //=> false\n     *\n     *      var point = {x: 0, y: 0};\n     *      var pointHas = R.has(R.__, point);\n     *      pointHas('x');  //=> true\n     *      pointHas('y');  //=> true\n     *      pointHas('z');  //=> false\n     */\n    var has = _curry2(_has);\n\n    /**\n     * Returns whether or not an object or its prototype chain has\n     * a property with the specified name\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      function Rectangle(width, height) {\n     *        this.width = width;\n     *        this.height = height;\n     *      }\n     *      Rectangle.prototype.area = function() {\n     *        return this.width * this.height;\n     *      };\n     *\n     *      var square = new Rectangle(2, 2);\n     *      R.hasIn('width', square);  //=> true\n     *      R.hasIn('area', square);  //=> true\n     */\n    var hasIn = _curry2(function hasIn(prop, obj) {\n        return prop in obj;\n    });\n\n    /**\n     * Returns true if its arguments are identical, false otherwise. Values are\n     * identical if they reference the same memory. `NaN` is identical to `NaN`;\n     * `0` and `-0` are not identical.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      var o = {};\n     *      R.identical(o, o); //=> true\n     *      R.identical(1, 1); //=> true\n     *      R.identical(1, '1'); //=> false\n     *      R.identical([], []); //=> false\n     *      R.identical(0, -0); //=> false\n     *      R.identical(NaN, NaN); //=> true\n     */\n    // SameValue algorithm\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Step 6.a: NaN == NaN\n    var identical = _curry2(function identical(a, b) {\n        // SameValue algorithm\n        if (a === b) {\n            // Steps 1-5, 7-10\n            // Steps 6.b-6.e: +0 != -0\n            return a !== 0 || 1 / a === 1 / b;\n        } else {\n            // Step 6.a: NaN == NaN\n            return a !== a && b !== b;\n        }\n    });\n\n    /**\n     * A function that does nothing but return the parameter supplied to it. Good as a default\n     * or placeholder function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> a\n     * @param {*} x The value to return.\n     * @return {*} The input value, `x`.\n     * @example\n     *\n     *      R.identity(1); //=> 1\n     *\n     *      var obj = {};\n     *      R.identity(obj) === obj; //=> true\n     */\n    var identity = _curry1(_identity);\n\n    /**\n     * Creates a function that will process either the `onTrue` or the `onFalse` function depending\n     * upon the result of the `condition` predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n     * @param {Function} condition A predicate function\n     * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n     * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n     * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n     *                    function depending upon the result of the `condition` predicate.\n     * @example\n     *\n     *      // Flatten all arrays in the list but leave other values alone.\n     *      var flattenArrays = R.map(R.ifElse(Array.isArray, R.flatten, R.identity));\n     *\n     *      flattenArrays([[0], [[10], [8]], 1234, {}]); //=> [[0], [10, 8], 1234, {}]\n     *      flattenArrays([[[10], 123], [8, [10]], \"hello\"]); //=> [[10, 123], [8, 10], \"hello\"]\n     */\n    var ifElse = _curry3(function ifElse(condition, onTrue, onFalse) {\n        return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n            return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n        });\n    });\n\n    /**\n     * Increments its argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @see R.dec\n     * @example\n     *\n     *      R.inc(42); //=> 43\n     */\n    var inc = add(1);\n\n    /**\n     * Inserts the supplied element into the list, at index `index`.  _Note\n     * that this is not destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} index The position to insert the element\n     * @param {*} elt The element to insert into the Array\n     * @param {Array} list The list to insert into\n     * @return {Array} A new Array with `elt` inserted at `index`.\n     * @example\n     *\n     *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n     */\n    var insert = _curry3(function insert(idx, elt, list) {\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\n        var result = _slice(list);\n        result.splice(idx, 0, elt);\n        return result;\n    });\n\n    /**\n     * Inserts the sub-list into the list, at index `index`.  _Note  that this\n     * is not destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a] -> [a]\n     * @param {Number} index The position to insert the sub-list\n     * @param {Array} elts The sub-list to insert into the Array\n     * @param {Array} list The list to insert the sub-list into\n     * @return {Array} A new Array with `elts` inserted starting at `index`.\n     * @example\n     *\n     *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n     */\n    var insertAll = _curry3(function insertAll(idx, elts, list) {\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\n        return _concat(_concat(_slice(list, 0, idx), elts), _slice(list, idx));\n    });\n\n    /**\n     * See if an object (`val`) is an instance of the supplied constructor.\n     * This function will check up the inheritance chain, if any.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig (* -> {*}) -> a -> Boolean\n     * @param {Object} ctor A constructor\n     * @param {*} val The value to test\n     * @return {Boolean}\n     * @example\n     *\n     *      R.is(Object, {}); //=> true\n     *      R.is(Number, 1); //=> true\n     *      R.is(Object, 1); //=> false\n     *      R.is(String, 's'); //=> true\n     *      R.is(String, new String('')); //=> true\n     *      R.is(Object, new String('')); //=> true\n     *      R.is(Object, 's'); //=> false\n     *      R.is(Number, {}); //=> false\n     */\n    var is = _curry2(function is(Ctor, val) {\n        return val != null && val.constructor === Ctor || val instanceof Ctor;\n    });\n\n    /**\n     * Tests whether or not an object is similar to an array.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @category List\n     * @sig * -> Boolean\n     * @param {*} x The object to test.\n     * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n     * @example\n     *\n     *      R.isArrayLike([]); //=> true\n     *      R.isArrayLike(true); //=> false\n     *      R.isArrayLike({}); //=> false\n     *      R.isArrayLike({length: 10}); //=> false\n     *      R.isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n     */\n    var isArrayLike = _curry1(function isArrayLike(x) {\n        if (_isArray(x)) {\n            return true;\n        }\n        if (!x) {\n            return false;\n        }\n        if (typeof x !== 'object') {\n            return false;\n        }\n        if (x instanceof String) {\n            return false;\n        }\n        if (x.nodeType === 1) {\n            return !!x.length;\n        }\n        if (x.length === 0) {\n            return true;\n        }\n        if (x.length > 0) {\n            return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n        }\n        return false;\n    });\n\n    /**\n     * Reports whether the list has zero elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [a] -> Boolean\n     * @param {Array} list\n     * @return {Boolean}\n     * @example\n     *\n     *      R.isEmpty([1, 2, 3]);   //=> false\n     *      R.isEmpty([]);          //=> true\n     *      R.isEmpty('');          //=> true\n     *      R.isEmpty(null);        //=> false\n     *      R.isEmpty(R.keys({}));  //=> true\n     *      R.isEmpty({});          //=> false ({} does not have a length property)\n     *      R.isEmpty({length: 0}); //=> true\n     */\n    var isEmpty = _curry1(function isEmpty(list) {\n        return Object(list).length === 0;\n    });\n\n    /**\n     * Checks if the input value is `null` or `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig * -> Boolean\n     * @param {*} x The value to test.\n     * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n     * @example\n     *\n     *      R.isNil(null); //=> true\n     *      R.isNil(undefined); //=> true\n     *      R.isNil(0); //=> false\n     *      R.isNil([]); //=> false\n     */\n    var isNil = _curry1(function isNil(x) {\n        return x == null;\n    });\n\n    /**\n     * Returns a list containing the names of all the enumerable own\n     * properties of the supplied object.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own properties.\n     * @example\n     *\n     *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n     */\n    // cover IE < 9 keys issues\n    var keys = function () {\n        // cover IE < 9 keys issues\n        var hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');\n        var nonEnumerableProps = [\n            'constructor',\n            'valueOf',\n            'isPrototypeOf',\n            'toString',\n            'propertyIsEnumerable',\n            'hasOwnProperty',\n            'toLocaleString'\n        ];\n        var contains = function contains(list, item) {\n            var idx = 0;\n            while (idx < list.length) {\n                if (list[idx] === item) {\n                    return true;\n                }\n                idx += 1;\n            }\n            return false;\n        };\n        return typeof Object.keys === 'function' ? _curry1(function keys(obj) {\n            return Object(obj) !== obj ? [] : Object.keys(obj);\n        }) : _curry1(function keys(obj) {\n            if (Object(obj) !== obj) {\n                return [];\n            }\n            var prop, ks = [], nIdx;\n            for (prop in obj) {\n                if (_has(prop, obj)) {\n                    ks[ks.length] = prop;\n                }\n            }\n            if (hasEnumBug) {\n                nIdx = nonEnumerableProps.length - 1;\n                while (nIdx >= 0) {\n                    prop = nonEnumerableProps[nIdx];\n                    if (_has(prop, obj) && !contains(ks, prop)) {\n                        ks[ks.length] = prop;\n                    }\n                    nIdx -= 1;\n                }\n            }\n            return ks;\n        });\n    }();\n\n    /**\n     * Returns a list containing the names of all the\n     * properties of the supplied object, including prototype properties.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.keysIn(f); //=> ['x', 'y']\n     */\n    var keysIn = _curry1(function keysIn(obj) {\n        var prop, ks = [];\n        for (prop in obj) {\n            ks[ks.length] = prop;\n        }\n        return ks;\n    });\n\n    /**\n     * Returns the number of elements in the array by returning `list.length`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> Number\n     * @param {Array} list The array to inspect.\n     * @return {Number} The length of the array.\n     * @example\n     *\n     *      R.length([]); //=> 0\n     *      R.length([1, 2, 3]); //=> 3\n     */\n    var length = _curry1(function length(list) {\n        return list != null && is(Number, list.length) ? list.length : NaN;\n    });\n\n    /**\n     * Returns `true` if the first argument is less than the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @see R.gt\n     * @example\n     *\n     *      R.lt(2, 1); //=> false\n     *      R.lt(2, 2); //=> false\n     *      R.lt(2, 3); //=> true\n     *      R.lt('a', 'z'); //=> true\n     *      R.lt('z', 'a'); //=> false\n     */\n    var lt = _curry2(function lt(a, b) {\n        return a < b;\n    });\n\n    /**\n     * Returns `true` if the first argument is less than or equal to the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean}\n     * @see R.gte\n     * @example\n     *\n     *      R.lte(2, 1); //=> false\n     *      R.lte(2, 2); //=> true\n     *      R.lte(2, 3); //=> true\n     *      R.lte('a', 'z'); //=> true\n     *      R.lte('z', 'a'); //=> false\n     */\n    var lte = _curry2(function lte(a, b) {\n        return a <= b;\n    });\n\n    /**\n     * The mapAccum function behaves like a combination of map and reduce; it applies a\n     * function to each element of a list, passing an accumulating parameter from left to\n     * right, and returning a final value of this accumulator together with the new list.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should return\n     * a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var append = function(a, b) {\n     *        return [a + b, a + b];\n     *      }\n     *\n     *      R.mapAccum(append, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n     */\n    var mapAccum = _curry3(function mapAccum(fn, acc, list) {\n        var idx = 0, len = list.length, result = [], tuple = [acc];\n        while (idx < len) {\n            tuple = fn(tuple[0], list[idx]);\n            result[idx] = tuple[1];\n            idx += 1;\n        }\n        return [\n            tuple[0],\n            result\n        ];\n    });\n\n    /**\n     * The mapAccumRight function behaves like a combination of map and reduce; it applies a\n     * function to each element of a list, passing an accumulating parameter from right\n     * to left, and returning a final value of this accumulator together with the new list.\n     *\n     * Similar to `mapAccum`, except moves through the input list from the right to the\n     * left.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should return\n     * a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var append = function(a, b) {\n     *        return [a + b, a + b];\n     *      }\n     *\n     *      R.mapAccumRight(append, 0, digits); //=> ['04321', ['04321', '0432', '043', '04']]\n     */\n    var mapAccumRight = _curry3(function mapAccumRight(fn, acc, list) {\n        var idx = list.length - 1, result = [], tuple = [acc];\n        while (idx >= 0) {\n            tuple = fn(tuple[0], list[idx]);\n            result[idx] = tuple[1];\n            idx -= 1;\n        }\n        return [\n            tuple[0],\n            result\n        ];\n    });\n\n    /**\n     * Tests a regular expression against a String. Note that this function\n     * will return an empty array when there are no matches. This differs\n     * from [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n     * which returns `null` when there are no matches.\n     *\n     * @func\n     * @memberOf R\n     * @see R.test\n     * @category String\n     * @sig RegExp -> String -> [String | Undefined]\n     * @param {RegExp} rx A regular expression.\n     * @param {String} str The string to match against\n     * @return {Array} The list of matches or empty array.\n     * @example\n     *\n     *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n     *      R.match(/a/, 'b'); //=> []\n     *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n     */\n    var match = _curry2(function match(rx, str) {\n        return str.match(rx) || [];\n    });\n\n    /**\n     * mathMod behaves like the modulo operator should mathematically, unlike the `%`\n     * operator (and by extension, R.modulo). So while \"-17 % 5\" is -2,\n     * mathMod(-17, 5) is 3. mathMod requires Integer arguments, and returns NaN\n     * when the modulus is zero or negative.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} m The dividend.\n     * @param {Number} p the modulus.\n     * @return {Number} The result of `b mod a`.\n     * @example\n     *\n     *      R.mathMod(-17, 5);  //=> 3\n     *      R.mathMod(17, 5);   //=> 2\n     *      R.mathMod(17, -5);  //=> NaN\n     *      R.mathMod(17, 0);   //=> NaN\n     *      R.mathMod(17.2, 5); //=> NaN\n     *      R.mathMod(17, 5.3); //=> NaN\n     *\n     *      var clock = R.mathMod(R.__, 12);\n     *      clock(15); //=> 3\n     *      clock(24); //=> 0\n     *\n     *      var seventeenMod = R.mathMod(17);\n     *      seventeenMod(3);  //=> 2\n     *      seventeenMod(4);  //=> 1\n     *      seventeenMod(10); //=> 7\n     */\n    var mathMod = _curry2(function mathMod(m, p) {\n        if (!_isInteger(m)) {\n            return NaN;\n        }\n        if (!_isInteger(p) || p < 1) {\n            return NaN;\n        }\n        return (m % p + p) % p;\n    });\n\n    /**\n     * Returns the larger of its two arguments.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> a\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.maxBy, R.min\n     * @example\n     *\n     *      R.max(789, 123); //=> 789\n     *      R.max('a', 'b'); //=> 'b'\n     */\n    var max = _curry2(function max(a, b) {\n        return b > a ? b : a;\n    });\n\n    /**\n     * Takes a function and two values, and returns whichever value produces\n     * the larger result when passed to the provided function.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord b => (a -> b) -> a -> a -> a\n     * @param {Function} f\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.max, R.minBy\n     * @example\n     *\n     *      R.maxBy(function(n) { return n * n; }, -3, 2); //=> -3\n     */\n    var maxBy = _curry3(function maxBy(f, a, b) {\n        return f(b) > f(a) ? b : a;\n    });\n\n    /**\n     * Create a new object with the own properties of `a`\n     * merged with the own properties of object `b`.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> {k: v} -> {k: v}\n     * @param {Object} a\n     * @param {Object} b\n     * @return {Object}\n     * @example\n     *\n     *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n     *      //=> { 'name': 'fred', 'age': 40 }\n     *\n     *      var resetToDefault = R.merge(R.__, {x: 0});\n     *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n     */\n    var merge = _curry2(function merge(a, b) {\n        var result = {};\n        var ks = keys(a);\n        var idx = 0;\n        while (idx < ks.length) {\n            result[ks[idx]] = a[ks[idx]];\n            idx += 1;\n        }\n        ks = keys(b);\n        idx = 0;\n        while (idx < ks.length) {\n            result[ks[idx]] = b[ks[idx]];\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns the smaller of its two arguments.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> a\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.minBy, R.max\n     * @example\n     *\n     *      R.min(789, 123); //=> 123\n     *      R.min('a', 'b'); //=> 'a'\n     */\n    var min = _curry2(function min(a, b) {\n        return b < a ? b : a;\n    });\n\n    /**\n     * Takes a function and two values, and returns whichever value produces\n     * the smaller result when passed to the provided function.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord b => (a -> b) -> a -> a -> a\n     * @param {Function} f\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.min, R.maxBy\n     * @example\n     *\n     *      R.minBy(function(n) { return n * n; }, -3, 2); //=> 2\n     */\n    var minBy = _curry3(function minBy(f, a, b) {\n        return f(b) < f(a) ? b : a;\n    });\n\n    /**\n     * Divides the second parameter by the first and returns the remainder.\n     * Note that this functions preserves the JavaScript-style behavior for\n     * modulo. For mathematical modulo see `mathMod`\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The value to the divide.\n     * @param {Number} b The pseudo-modulus\n     * @return {Number} The result of `b % a`.\n     * @see R.mathMod\n     * @example\n     *\n     *      R.modulo(17, 3); //=> 2\n     *      // JS behavior:\n     *      R.modulo(-17, 3); //=> -2\n     *      R.modulo(17, -3); //=> 2\n     *\n     *      var isOdd = R.modulo(R.__, 2);\n     *      isOdd(42); //=> 0\n     *      isOdd(21); //=> 1\n     */\n    var modulo = _curry2(function modulo(a, b) {\n        return a % b;\n    });\n\n    /**\n     * Multiplies two numbers. Equivalent to `a * b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a * b`.\n     * @see R.divide\n     * @example\n     *\n     *      var double = R.multiply(2);\n     *      var triple = R.multiply(3);\n     *      double(3);       //=>  6\n     *      triple(4);       //=> 12\n     *      R.multiply(2, 5);  //=> 10\n     */\n    var multiply = _curry2(function multiply(a, b) {\n        return a * b;\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts exactly `n`\n     * parameters. Any extraneous parameters will not be passed to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} n The desired arity of the new function.\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity `n`.\n     * @example\n     *\n     *      var takesTwoArgs = function(a, b) {\n     *        return [a, b];\n     *      };\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.nAry(1, takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only `n` arguments are passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n    var nAry = _curry2(function nAry(n, fn) {\n        switch (n) {\n        case 0:\n            return function () {\n                return fn.call(this);\n            };\n        case 1:\n            return function (a0) {\n                return fn.call(this, a0);\n            };\n        case 2:\n            return function (a0, a1) {\n                return fn.call(this, a0, a1);\n            };\n        case 3:\n            return function (a0, a1, a2) {\n                return fn.call(this, a0, a1, a2);\n            };\n        case 4:\n            return function (a0, a1, a2, a3) {\n                return fn.call(this, a0, a1, a2, a3);\n            };\n        case 5:\n            return function (a0, a1, a2, a3, a4) {\n                return fn.call(this, a0, a1, a2, a3, a4);\n            };\n        case 6:\n            return function (a0, a1, a2, a3, a4, a5) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5);\n            };\n        case 7:\n            return function (a0, a1, a2, a3, a4, a5, a6) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n            };\n        case 8:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n            };\n        case 9:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n            };\n        case 10:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n            };\n        default:\n            throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n        }\n    });\n\n    /**\n     * Negates its argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @example\n     *\n     *      R.negate(42); //=> -42\n     */\n    var negate = _curry1(function negate(n) {\n        return -n;\n    });\n\n    /**\n     * A function that returns the `!` of its argument. It will return `true` when\n     * passed false-y value, and `false` when passed a truth-y one.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig * -> Boolean\n     * @param {*} a any value\n     * @return {Boolean} the logical inverse of passed argument.\n     * @see R.complement\n     * @example\n     *\n     *      R.not(true); //=> false\n     *      R.not(false); //=> true\n     *      R.not(0); => true\n     *      R.not(1); => false\n     */\n    var not = _curry1(function not(a) {\n        return !a;\n    });\n\n    /**\n     * Returns the nth element of the given list or string.\n     * If n is negative the element at index length + n is returned.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> a | Undefined\n     * @sig Number -> String -> String\n     * @param {Number} offset\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      var list = ['foo', 'bar', 'baz', 'quux'];\n     *      R.nth(1, list); //=> 'bar'\n     *      R.nth(-1, list); //=> 'quux'\n     *      R.nth(-99, list); //=> undefined\n     *\n     *      R.nth('abc', 2); //=> 'c'\n     *      R.nth('abc', 3); //=> ''\n     */\n    var nth = _curry2(function nth(offset, list) {\n        var idx = offset < 0 ? list.length + offset : offset;\n        return _isString(list) ? list.charAt(idx) : list[idx];\n    });\n\n    /**\n     * Returns a function which returns its nth argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> *... -> *\n     * @param {Number} n\n     * @return {Function}\n     * @example\n     *\n     *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n     *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n     */\n    var nthArg = _curry1(function nthArg(n) {\n        return function () {\n            return nth(n, arguments);\n        };\n    });\n\n    /**\n     * Returns the nth character of the given string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {String} str\n     * @return {String}\n     * @deprecated since v0.16.0\n     * @example\n     *\n     *      R.nthChar(2, 'Ramda'); //=> 'm'\n     *      R.nthChar(-2, 'Ramda'); //=> 'd'\n     */\n    var nthChar = _curry2(function nthChar(n, str) {\n        return str.charAt(n < 0 ? str.length + n : n);\n    });\n\n    /**\n     * Returns the character code of the nth character of the given string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig Number -> String -> Number\n     * @param {Number} n\n     * @param {String} str\n     * @return {Number}\n     * @deprecated since v0.16.0\n     * @example\n     *\n     *      R.nthCharCode(2, 'Ramda'); //=> 'm'.charCodeAt(0)\n     *      R.nthCharCode(-2, 'Ramda'); //=> 'd'.charCodeAt(0)\n     */\n    var nthCharCode = _curry2(function nthCharCode(n, str) {\n        return str.charCodeAt(n < 0 ? str.length + n : n);\n    });\n\n    /**\n     * Returns a singleton array containing the value provided.\n     *\n     * Note this `of` is different from the ES6 `of`; See\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> [a]\n     * @param {*} x any value\n     * @return {Array} An array wrapping `x`.\n     * @example\n     *\n     *      R.of(null); //=> [null]\n     *      R.of([42]); //=> [[42]]\n     */\n    var of = _curry1(function of(x) {\n        return [x];\n    });\n\n    /**\n     * Accepts a function `fn` and returns a function that guards invocation of `fn` such that\n     * `fn` can only ever be called once, no matter how many times the returned function is\n     * invoked.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a... -> b) -> (a... -> b)\n     * @param {Function} fn The function to wrap in a call-only-once wrapper.\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var addOneOnce = R.once(function(x){ return x + 1; });\n     *      addOneOnce(10); //=> 11\n     *      addOneOnce(addOneOnce(50)); //=> 11\n     */\n    var once = _curry1(function once(fn) {\n        var called = false, result;\n        return function () {\n            if (called) {\n                return result;\n            }\n            called = true;\n            result = fn.apply(this, arguments);\n            return result;\n        };\n    });\n\n    /**\n     * Returns the result of \"setting\" the portion of the given data structure\n     * focused by the given lens to the given value.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> (a -> a) -> s -> s\n     * @param {Lens} lens\n     * @param {*} v\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var headLens = R.lensIndex(0);\n     *\n     *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n     */\n    var over = function () {\n        var Identity = function (x) {\n            return {\n                value: x,\n                map: function (f) {\n                    return Identity(f(x));\n                }\n            };\n        };\n        return _curry3(function over(lens, f, x) {\n            return lens(function (y) {\n                return Identity(f(y));\n            })(x).value;\n        });\n    }();\n\n    /**\n     * Retrieve the value at a given path.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> {k: v} -> v | Undefined\n     * @param {Array} path The path to use.\n     * @return {*} The data at `path`.\n     * @example\n     *\n     *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n     *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n     */\n    var path = _curry2(function path(paths, obj) {\n        if (obj == null) {\n            return;\n        } else {\n            var val = obj;\n            for (var idx = 0, len = paths.length; idx < len && val != null; idx += 1) {\n                val = val[paths[idx]];\n            }\n            return val;\n        }\n    });\n\n    /**\n     * Returns a partial copy of an object containing only the keys specified.  If the key does not exist, the\n     * property is ignored.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.omit\n     * @example\n     *\n     *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n     */\n    var pick = _curry2(function pick(names, obj) {\n        var result = {};\n        var idx = 0;\n        while (idx < names.length) {\n            if (names[idx] in obj) {\n                result[names[idx]] = obj[names[idx]];\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Similar to `pick` except that this one includes a `key: undefined` pair for properties that don't exist.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n     */\n    var pickAll = _curry2(function pickAll(names, obj) {\n        var result = {};\n        var idx = 0;\n        var len = names.length;\n        while (idx < len) {\n            var name = names[idx];\n            result[name] = obj[name];\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a partial copy of an object containing only the keys that\n     * satisfy the supplied predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig (v, k -> Boolean) -> {k: v} -> {k: v}\n     * @param {Function} pred A predicate to determine whether or not a key\n     *        should be included on the output object.\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties that satisfy `pred`\n     *         on it.\n     * @see R.pick\n     * @example\n     *\n     *      var isUpperCase = function(val, key) { return key.toUpperCase() === key; }\n     *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n     */\n    var pickBy = _curry2(function pickBy(test, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (test(obj[prop], prop, obj)) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list with the given element at the front, followed by the contents of the\n     * list.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The item to add to the head of the output list.\n     * @param {Array} list The array to add to the tail of the output list.\n     * @return {Array} A new array.\n     * @see R.append\n     * @example\n     *\n     *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n     */\n    var prepend = _curry2(function prepend(el, list) {\n        return _concat([el], list);\n    });\n\n    /**\n     * Returns a function that when supplied an object returns the indicated property of that object, if it exists.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig s -> {s: a} -> a | Undefined\n     * @param {String} p The property name\n     * @param {Object} obj The object to query\n     * @return {*} The value at `obj.p`.\n     * @example\n     *\n     *      R.prop('x', {x: 100}); //=> 100\n     *      R.prop('x', {}); //=> undefined\n     */\n    var prop = _curry2(function prop(p, obj) {\n        return obj[p];\n    });\n\n    /**\n     * If the given, non-null object has an own property with the specified name,\n     * returns the value of that property.\n     * Otherwise returns the provided default value.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig a -> String -> Object -> a\n     * @param {*} val The default value.\n     * @param {String} p The name of the property to return.\n     * @param {Object} obj The object to query.\n     * @return {*} The value of given property of the supplied object or the default value.\n     * @example\n     *\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var favorite = R.prop('favoriteLibrary');\n     *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n     *\n     *      favorite(alice);  //=> undefined\n     *      favoriteWithDefault(alice);  //=> 'Ramda'\n     */\n    var propOr = _curry3(function propOr(val, p, obj) {\n        return obj != null && _has(p, obj) ? obj[p] : val;\n    });\n\n    /**\n     * Returns `true` if the specified object property satisfies the given\n     * predicate; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n     * @param {Function} pred\n     * @param {String} name\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.propEq\n     * @see R.propIs\n     * @example\n     *\n     *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n     */\n    var propSatisfies = _curry3(function propSatisfies(pred, name, obj) {\n        return pred(obj[name]);\n    });\n\n    /**\n     * Acts as multiple `prop`: array of keys in, array of values out. Preserves order.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [k] -> {k: v} -> [v]\n     * @param {Array} ps The property names to fetch\n     * @param {Object} obj The object to query\n     * @return {Array} The corresponding values or partially applied function.\n     * @example\n     *\n     *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n     *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n     *\n     *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n     *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n     */\n    var props = _curry2(function props(ps, obj) {\n        var len = ps.length;\n        var out = [];\n        var idx = 0;\n        while (idx < len) {\n            out[idx] = obj[ps[idx]];\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a list of numbers from `from` (inclusive) to `to`\n     * (exclusive).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> Number -> [Number]\n     * @param {Number} from The first number in the list.\n     * @param {Number} to One more than the last number in the list.\n     * @return {Array} The list of numbers in tthe set `[a, b)`.\n     * @example\n     *\n     *      R.range(1, 5);    //=> [1, 2, 3, 4]\n     *      R.range(50, 53);  //=> [50, 51, 52]\n     */\n    var range = _curry2(function range(from, to) {\n        if (!(_isNumber(from) && _isNumber(to))) {\n            throw new TypeError('Both arguments to range must be numbers');\n        }\n        var result = [];\n        var n = from;\n        while (n < to) {\n            result.push(n);\n            n += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a single item by iterating through the list, successively calling the iterator\n     * function and passing it an accumulator value and the current value from the array, and\n     * then passing the result to the next call.\n     *\n     * Similar to `reduce`, except moves through the input list from the right to the left.\n     *\n     * The iterator function receives two values: *(acc, value)*\n     *\n     * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse arrays), unlike\n     * the native `Array.prototype.reduce` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var pairs = [ ['a', 1], ['b', 2], ['c', 3] ];\n     *      var flattenPairs = function(acc, pair) {\n     *        return acc.concat(pair);\n     *      };\n     *\n     *      R.reduceRight(flattenPairs, [], pairs); //=> [ 'c', 3, 'b', 2, 'a', 1 ]\n     */\n    var reduceRight = _curry3(function reduceRight(fn, acc, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            acc = fn(acc, list[idx]);\n            idx -= 1;\n        }\n        return acc;\n    });\n\n    /**\n     * Returns a value wrapped to indicate that it is the final value of the\n     * reduce and transduce functions.  The returned value\n     * should be considered a black box: the internal structure is not\n     * guaranteed to be stable.\n     *\n     * Note: this optimization is unavailable to functions not explicitly listed\n     * above.  For instance, it is not currently supported by reduceIndexed,\n     * reduceRight, or reduceRightIndexed.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.reduce, R.transduce\n     * @sig a -> *\n     * @param {*} x The final value of the reduce.\n     * @return {*} The wrapped value.\n     * @example\n     *\n     *      R.reduce(\n     *        R.pipe(R.add, R.ifElse(R.lte(10), R.reduced, R.identity)),\n     *        0,\n     *        [1, 2, 3, 4, 5]) // 10\n     */\n    var reduced = _curry1(_reduced);\n\n    /**\n     * Removes the sub-list of `list` starting at index `start` and containing\n     * `count` elements.  _Note that this is not destructive_: it returns a\n     * copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @param {Number} start The position to start removing elements\n     * @param {Number} count The number of elements to remove\n     * @param {Array} list The list to remove from\n     * @return {Array} A new Array with `count` elements from `start` removed.\n     * @example\n     *\n     *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n     */\n    var remove = _curry3(function remove(start, count, list) {\n        return _concat(_slice(list, 0, Math.min(start, list.length)), _slice(list, Math.min(list.length, start + count)));\n    });\n\n    /**\n     * Replace a substring or regex match in a string with a replacement.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig RegExp|String -> String -> String -> String\n     * @param {RegExp|String} pattern A regular expression or a substring to match.\n     * @param {String} replacement The string to replace the matches with.\n     * @param {String} str The String to do the search and replacement in.\n     * @return {String} The result.\n     * @example\n     *\n     *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *\n     *      // Use the \"g\" (global) flag to replace all occurrences:\n     *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n     */\n    var replace = _curry3(function replace(regex, replacement, str) {\n        return str.replace(regex, replacement);\n    });\n\n    /**\n     * Returns a new list with the same elements as the original list, just\n     * in the reverse order.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The list to reverse.\n     * @return {Array} A copy of the list in reverse order.\n     * @example\n     *\n     *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n     *      R.reverse([1, 2]);     //=> [2, 1]\n     *      R.reverse([1]);        //=> [1]\n     *      R.reverse([]);         //=> []\n     */\n    var reverse = _curry1(function reverse(list) {\n        return _slice(list).reverse();\n    });\n\n    /**\n     * Scan is similar to reduce, but returns a list of successively reduced values from the left\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> [a]\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} A list of all intermediately reduced values.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n     */\n    var scan = _curry3(function scan(fn, acc, list) {\n        var idx = 0, len = list.length, result = [acc];\n        while (idx < len) {\n            acc = fn(acc, list[idx]);\n            result[idx + 1] = acc;\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns the result of \"setting\" the portion of the given data structure\n     * focused by the given lens to the given value.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> a -> s -> s\n     * @param {Lens} lens\n     * @param {*} v\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n     *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n     */\n    var set = _curry3(function set(lens, v, x) {\n        return over(lens, always(v), x);\n    });\n\n    /**\n     * Returns a copy of the list, sorted according to the comparator function, which should accept two values at a\n     * time and return a negative number if the first value is smaller, a positive number if it's larger, and zero\n     * if they are equal.  Please note that this is a **copy** of the list.  It does not modify the original.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,a -> Number) -> [a] -> [a]\n     * @param {Function} comparator A sorting function :: a -> b -> Int\n     * @param {Array} list The list to sort\n     * @return {Array} a new array with its elements sorted by the comparator function.\n     * @example\n     *\n     *      var diff = function(a, b) { return a - b; };\n     *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n     */\n    var sort = _curry2(function sort(comparator, list) {\n        return _slice(list).sort(comparator);\n    });\n\n    /**\n     * Sorts the list according to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord b => (a -> b) -> [a] -> [a]\n     * @param {Function} fn\n     * @param {Array} list The list to sort.\n     * @return {Array} A new list sorted by the keys generated by `fn`.\n     * @example\n     *\n     *      var sortByFirstItem = R.sortBy(prop(0));\n     *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n     *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n     *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var bob = {\n     *        name: 'Bob',\n     *        age: -10\n     *      };\n     *      var clara = {\n     *        name: 'clara',\n     *        age: 314.159\n     *      };\n     *      var people = [clara, bob, alice];\n     *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n     */\n    var sortBy = _curry2(function sortBy(fn, list) {\n        return _slice(list).sort(function (a, b) {\n            var aa = fn(a);\n            var bb = fn(b);\n            return aa < bb ? -1 : aa > bb ? 1 : 0;\n        });\n    });\n\n    /**\n     * Subtracts two numbers. Equivalent to `a - b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a - b`.\n     * @see R.add\n     * @example\n     *\n     *      R.subtract(10, 8); //=> 2\n     *\n     *      var minus5 = R.subtract(R.__, 5);\n     *      minus5(17); //=> 12\n     *\n     *      var complementaryAngle = R.subtract(90);\n     *      complementaryAngle(30); //=> 60\n     *      complementaryAngle(72); //=> 18\n     */\n    var subtract = _curry2(function subtract(a, b) {\n        return a - b;\n    });\n\n    /**\n     * Returns a new list containing the last `n` elements of a given list, passing each value\n     * to the supplied predicate function, and terminating when the predicate function returns\n     * `false`. Excludes the element that caused the predicate function to fail. The predicate\n     * function is passed one argument: *(value)*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.dropLastWhile\n     * @example\n     *\n     *      var isNotOne = function(x) {\n     *        return !(x === 1);\n     *      };\n     *\n     *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n     */\n    var takeLastWhile = _curry2(function takeLastWhile(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0 && fn(list[idx])) {\n            idx -= 1;\n        }\n        return _slice(list, idx + 1, Infinity);\n    });\n\n    /**\n     * Runs the given function with the supplied object, then returns the object.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> *) -> a -> a\n     * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n     * @param {*} x\n     * @return {*} `x`.\n     * @example\n     *\n     *      var sayX = function(x) { console.log('x is ' + x); };\n     *      R.tap(sayX, 100); //=> 100\n     *      //-> 'x is 100'\n     */\n    var tap = _curry2(function tap(fn, x) {\n        fn(x);\n        return x;\n    });\n\n    /**\n     * Determines whether a given string matches a given regular expression.\n     *\n     * @func\n     * @memberOf R\n     * @see R.match\n     * @category String\n     * @sig RegExp -> String -> Boolean\n     * @param {RegExp} pattern\n     * @param {String} str\n     * @return {Boolean}\n     * @example\n     *\n     *      R.test(/^x/, 'xyz'); //=> true\n     *      R.test(/^y/, 'xyz'); //=> false\n     */\n    var test = _curry2(function test(pattern, str) {\n        return _cloneRegExp(pattern).test(str);\n    });\n\n    /**\n     * Calls an input function `n` times, returning an array containing the results of those\n     * function calls.\n     *\n     * `fn` is passed one argument: The current value of `n`, which begins at `0` and is\n     * gradually incremented to `n - 1`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (i -> a) -> i -> [a]\n     * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n     * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n     * @return {Array} An array containing the return values of all calls to `fn`.\n     * @example\n     *\n     *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n     */\n    var times = _curry2(function times(fn, n) {\n        var len = Number(n);\n        var list = new Array(len);\n        var idx = 0;\n        while (idx < len) {\n            list[idx] = fn(idx);\n            idx += 1;\n        }\n        return list;\n    });\n\n    /**\n     * Converts an object into an array of key, value arrays.\n     * Only the object's own properties are used.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own properties.\n     * @see R.fromPairs\n     * @example\n     *\n     *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n     */\n    var toPairs = _curry1(function toPairs(obj) {\n        var pairs = [];\n        for (var prop in obj) {\n            if (_has(prop, obj)) {\n                pairs[pairs.length] = [\n                    prop,\n                    obj[prop]\n                ];\n            }\n        }\n        return pairs;\n    });\n\n    /**\n     * Converts an object into an array of key, value arrays.\n     * The object's own properties and prototype properties are used.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own\n     *         and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n     */\n    var toPairsIn = _curry1(function toPairsIn(obj) {\n        var pairs = [];\n        for (var prop in obj) {\n            pairs[pairs.length] = [\n                prop,\n                obj[prop]\n            ];\n        }\n        return pairs;\n    });\n\n    /**\n     * Removes (strips) whitespace from both ends of the string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to trim.\n     * @return {String} Trimmed version of `str`.\n     * @example\n     *\n     *      R.trim('   xyz  '); //=> 'xyz'\n     *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n     */\n    var trim = function () {\n        var ws = '\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\n        var zeroWidth = '\\u200B';\n        var hasProtoTrim = typeof String.prototype.trim === 'function';\n        if (!hasProtoTrim || (ws.trim() || !zeroWidth.trim())) {\n            return _curry1(function trim(str) {\n                var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n                var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n                return str.replace(beginRx, '').replace(endRx, '');\n            });\n        } else {\n            return _curry1(function trim(str) {\n                return str.trim();\n            });\n        }\n    }();\n\n    /**\n     * Gives a single-word string description of the (native) type of a value, returning such\n     * answers as 'Object', 'Number', 'Array', or 'Null'.  Does not attempt to distinguish user\n     * Object types any further, reporting them all as 'Object'.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig (* -> {*}) -> String\n     * @param {*} val The value to test\n     * @return {String}\n     * @example\n     *\n     *      R.type({}); //=> \"Object\"\n     *      R.type(1); //=> \"Number\"\n     *      R.type(false); //=> \"Boolean\"\n     *      R.type('s'); //=> \"String\"\n     *      R.type(null); //=> \"Null\"\n     *      R.type([]); //=> \"Array\"\n     *      R.type(/[A-z]/); //=> \"RegExp\"\n     */\n    var type = _curry1(function type(val) {\n        return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n    });\n\n    /**\n     * Takes a function `fn`, which takes a single array argument, and returns\n     * a function which:\n     *\n     *   - takes any number of positional arguments;\n     *   - passes these arguments to `fn` as an array; and\n     *   - returns the result.\n     *\n     * In other words, R.unapply derives a variadic function from a function\n     * which takes an array. R.unapply is the inverse of R.apply.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ([*...] -> a) -> (*... -> a)\n     * @param {Function} fn\n     * @return {Function}\n     * @see R.apply\n     * @example\n     *\n     *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n     */\n    var unapply = _curry1(function unapply(fn) {\n        return function () {\n            return fn(_slice(arguments));\n        };\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts exactly 1\n     * parameter. Any extraneous parameters will not be passed to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> b) -> (a -> b)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 1.\n     * @example\n     *\n     *      var takesTwoArgs = function(a, b) {\n     *        return [a, b];\n     *      };\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.unary(takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only 1 argument is passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n    var unary = _curry1(function unary(fn) {\n        return nAry(1, fn);\n    });\n\n    /**\n     * Returns a function of arity `n` from a (manually) curried function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (a -> b) -> (a -> c)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to uncurry.\n     * @return {Function} A new function.\n     * @see R.curry\n     * @example\n     *\n     *      var addFour = function(a) {\n     *        return function(b) {\n     *          return function(c) {\n     *            return function(d) {\n     *              return a + b + c + d;\n     *            };\n     *          };\n     *        };\n     *      };\n     *\n     *      var uncurriedAddFour = R.uncurryN(4, addFour);\n     *      curriedAddFour(1, 2, 3, 4); //=> 10\n     */\n    var uncurryN = _curry2(function uncurryN(depth, fn) {\n        return curryN(depth, function () {\n            var currentDepth = 1;\n            var value = fn;\n            var idx = 0;\n            var endIdx;\n            while (currentDepth <= depth && typeof value === 'function') {\n                endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n                value = value.apply(this, _slice(arguments, idx, endIdx));\n                currentDepth += 1;\n                idx = endIdx;\n            }\n            return value;\n        });\n    });\n\n    /**\n     * Builds a list from a seed value. Accepts an iterator function, which returns either false\n     * to stop iteration or an array of length 2 containing the value to add to the resulting\n     * list and the seed to be used in the next call to the iterator function.\n     *\n     * The iterator function receives one argument: *(seed)*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> [b]) -> * -> [b]\n     * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n     *        either false to quit iteration or an array of length two to proceed. The element\n     *        at index 0 of this array will be added to the resulting array, and the element\n     *        at index 1 will be passed to the next call to `fn`.\n     * @param {*} seed The seed value.\n     * @return {Array} The final list.\n     * @example\n     *\n     *      var f = function(n) { return n > 50 ? false : [-n, n + 10] };\n     *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n     */\n    var unfold = _curry2(function unfold(fn, seed) {\n        var pair = fn(seed);\n        var result = [];\n        while (pair && pair.length) {\n            result[result.length] = pair[0];\n            pair = fn(pair[1]);\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list containing only one copy of each element in the original list, based\n     * upon the value returned by applying the supplied predicate to two list elements. Prefers\n     * the first item if two items compare equal based on the predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      var strEq = function(a, b) { return String(a) === String(b); };\n     *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n     *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n     *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n     *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n     */\n    var uniqWith = _curry2(function uniqWith(pred, list) {\n        var idx = 0, len = list.length;\n        var result = [], item;\n        while (idx < len) {\n            item = list[idx];\n            if (!_containsWith(pred, item, result)) {\n                result[result.length] = item;\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new copy of the array with the element at the\n     * provided index replaced with the given value.\n     * @see R.adjust\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} idx The index to update.\n     * @param {*} x The value to exist at the given index of the returned array.\n     * @param {Array|Arguments} list The source array-like object to be updated.\n     * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n     * @example\n     *\n     *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n     *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n     */\n    var update = _curry3(function update(idx, x, list) {\n        return adjust(always(x), idx, list);\n    });\n\n    /**\n     * Returns a list of all the enumerable own properties of the supplied object.\n     * Note that the order of the output array is not guaranteed across\n     * different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own properties.\n     * @example\n     *\n     *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n     */\n    var values = _curry1(function values(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var vals = [];\n        var idx = 0;\n        while (idx < len) {\n            vals[idx] = obj[props[idx]];\n            idx += 1;\n        }\n        return vals;\n    });\n\n    /**\n     * Returns a list of all the properties, including prototype properties,\n     * of the supplied object.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.valuesIn(f); //=> ['X', 'Y']\n     */\n    var valuesIn = _curry1(function valuesIn(obj) {\n        var prop, vs = [];\n        for (prop in obj) {\n            vs[vs.length] = obj[prop];\n        }\n        return vs;\n    });\n\n    /**\n     * Returns a \"view\" of the given data structure, determined by the given lens.\n     * The lens's focus determines which portion of the data structure is visible.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> s -> a\n     * @param {Lens} lens\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.view(xLens, {x: 1, y: 2});  //=> 1\n     *      R.view(xLens, {x: 4, y: 2});  //=> 4\n     */\n    var view = function () {\n        var Const = function (x) {\n            return {\n                value: x,\n                map: function () {\n                    return this;\n                }\n            };\n        };\n        return _curry2(function view(lens, x) {\n            return lens(Const)(x).value;\n        });\n    }();\n\n    /**\n     * Takes a spec object and a test object; returns true if the test satisfies\n     * the spec. Each of the spec's own properties must be a predicate function.\n     * Each predicate is applied to the value of the corresponding property of\n     * the test object. `where` returns true if all the predicates return true,\n     * false otherwise.\n     *\n     * `where` is well suited to declaratively expressing constraints for other\n     * functions such as `filter` and `find`.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @example\n     *\n     *      // pred :: Object -> Boolean\n     *      var pred = R.where({\n     *        a: R.equals('foo'),\n     *        b: R.complement(R.equals('bar')),\n     *        x: R.gt(_, 10),\n     *        y: R.lt(_, 20)\n     *      });\n     *\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n     *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n     */\n    var where = _curry2(function where(spec, testObj) {\n        for (var prop in spec) {\n            if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n                return false;\n            }\n        }\n        return true;\n    });\n\n    /**\n     * Wrap a function inside another to allow you to make adjustments to the parameters, or do\n     * other processing either before the internal function is called or with its results.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a... -> b) -> ((a... -> b) -> a... -> c) -> (a... -> c)\n     * @param {Function} fn The function to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var greet = function(name) {return 'Hello ' + name;};\n     *\n     *      var shoutedGreet = R.wrap(greet, function(gr, name) {\n     *        return gr(name).toUpperCase();\n     *      });\n     *      shoutedGreet(\"Kathy\"); //=> \"HELLO KATHY\"\n     *\n     *      var shortenedGreet = R.wrap(greet, function(gr, name) {\n     *        return gr(name.substring(0, 3));\n     *      });\n     *      shortenedGreet(\"Robert\"); //=> \"Hello Rob\"\n     */\n    var wrap = _curry2(function wrap(fn, wrapper) {\n        return curryN(fn.length, function () {\n            return wrapper.apply(this, _concat([fn], arguments));\n        });\n    });\n\n    /**\n     * Creates a new list out of the two supplied by creating each possible\n     * pair from the lists.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The list made by combining each possible pair from\n     *         `as` and `bs` into pairs (`[a, b]`).\n     * @example\n     *\n     *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n     */\n    // = xprodWith(prepend); (takes about 3 times as long...)\n    var xprod = _curry2(function xprod(a, b) {\n        // = xprodWith(prepend); (takes about 3 times as long...)\n        var idx = 0;\n        var ilen = a.length;\n        var j;\n        var jlen = b.length;\n        var result = [];\n        while (idx < ilen) {\n            j = 0;\n            while (j < jlen) {\n                result[result.length] = [\n                    a[idx],\n                    b[j]\n                ];\n                j += 1;\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Creates a new list out of the two supplied by pairing up\n     * equally-positioned items from both lists.  The returned list is\n     * truncated to the length of the shorter of the two input lists.\n     * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n     * @example\n     *\n     *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n     */\n    var zip = _curry2(function zip(a, b) {\n        var rv = [];\n        var idx = 0;\n        var len = Math.min(a.length, b.length);\n        while (idx < len) {\n            rv[idx] = [\n                a[idx],\n                b[idx]\n            ];\n            idx += 1;\n        }\n        return rv;\n    });\n\n    /**\n     * Creates a new object out of a list of keys and a list of values.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [String] -> [*] -> {String: *}\n     * @param {Array} keys The array that will be properties on the output object.\n     * @param {Array} values The list of values on the output object.\n     * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n     * @example\n     *\n     *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n     */\n    var zipObj = _curry2(function zipObj(keys, values) {\n        var idx = 0, len = keys.length, out = {};\n        while (idx < len) {\n            out[keys[idx]] = values[idx];\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Creates a new list out of the two supplied by applying the function to\n     * each equally-positioned pair in the lists. The returned list is\n     * truncated to the length of the shorter of the two input lists.\n     *\n     * @function\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> c) -> [a] -> [b] -> [c]\n     * @param {Function} fn The function used to combine the two elements into one value.\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n     *         using `fn`.\n     * @example\n     *\n     *      var f = function(x, y) {\n     *        // ...\n     *      };\n     *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n     *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n     */\n    var zipWith = _curry3(function zipWith(fn, a, b) {\n        var rv = [], idx = 0, len = Math.min(a.length, b.length);\n        while (idx < len) {\n            rv[idx] = fn(a[idx], b[idx]);\n            idx += 1;\n        }\n        return rv;\n    });\n\n    /**\n     * A function that always returns `false`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig * -> false\n     * @return {Boolean} false\n     * @see R.always, R.T\n     * @example\n     *\n     *      R.F(); //=> false\n     */\n    var F = always(false);\n\n    /**\n     * A function that always returns `true`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig * -> true\n     * @return {Boolean} `true`.\n     * @see R.always, R.F\n     * @example\n     *\n     *      R.T(); //=> true\n     */\n    var T = always(true);\n\n    /**\n     * Similar to hasMethod, this checks whether a function has a [methodname]\n     * function. If it isn't an array it will execute that function otherwise it will\n     * default to the ramda implementation.\n     *\n     * @private\n     * @param {Function} fn ramda implemtation\n     * @param {String} methodname property to check for a custom implementation\n     * @return {Object} Whatever the return value of the method is.\n     */\n    var _checkForMethod = function _checkForMethod(methodname, fn) {\n        return function () {\n            var length = arguments.length;\n            if (length === 0) {\n                return fn();\n            }\n            var obj = arguments[length - 1];\n            return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, _slice(arguments, 0, length - 1));\n        };\n    };\n\n    /**\n     * Copies an object.\n     *\n     * @private\n     * @param {*} value The value to be copied\n     * @param {Array} refFrom Array containing the source references\n     * @param {Array} refTo Array containing the copied source references\n     * @return {*} The copied value.\n     */\n    var _clone = function _clone(value, refFrom, refTo) {\n        var copy = function copy(copiedValue) {\n            var len = refFrom.length;\n            var idx = 0;\n            while (idx < len) {\n                if (value === refFrom[idx]) {\n                    return refTo[idx];\n                }\n                idx += 1;\n            }\n            refFrom[idx + 1] = value;\n            refTo[idx + 1] = copiedValue;\n            for (var key in value) {\n                copiedValue[key] = _clone(value[key], refFrom, refTo);\n            }\n            return copiedValue;\n        };\n        switch (type(value)) {\n        case 'Object':\n            return copy({});\n        case 'Array':\n            return copy([]);\n        case 'Date':\n            return new Date(value);\n        case 'RegExp':\n            return _cloneRegExp(value);\n        default:\n            return value;\n        }\n    };\n\n    var _createPartialApplicator = function _createPartialApplicator(concat) {\n        return function (fn) {\n            var args = _slice(arguments, 1);\n            return _arity(Math.max(0, fn.length - args.length), function () {\n                return fn.apply(this, concat(args, arguments));\n            });\n        };\n    };\n\n    /**\n     * Returns a function that dispatches with different strategies based on the\n     * object in list position (last argument). If it is an array, executes [fn].\n     * Otherwise, if it has a  function with [methodname], it will execute that\n     * function (functor case). Otherwise, if it is a transformer, uses transducer\n     * [xf] to return a new transformer (transducer case). Otherwise, it will\n     * default to executing [fn].\n     *\n     * @private\n     * @param {String} methodname property to check for a custom implementation\n     * @param {Function} xf transducer to initialize if object is transformer\n     * @param {Function} fn default ramda implementation\n     * @return {Function} A function that dispatches on object in list position\n     */\n    var _dispatchable = function _dispatchable(methodname, xf, fn) {\n        return function () {\n            var length = arguments.length;\n            if (length === 0) {\n                return fn();\n            }\n            var obj = arguments[length - 1];\n            if (!_isArray(obj)) {\n                var args = _slice(arguments, 0, length - 1);\n                if (typeof obj[methodname] === 'function') {\n                    return obj[methodname].apply(obj, args);\n                }\n                if (_isTransformer(obj)) {\n                    var transducer = xf.apply(null, args);\n                    return transducer(obj);\n                }\n            }\n            return fn.apply(this, arguments);\n        };\n    };\n\n    // The algorithm used to handle cyclic structures is\n    // inspired by underscore's isEqual\n    // RegExp equality algorithm: http://stackoverflow.com/a/10776635\n    var _equals = function _equals(a, b, stackA, stackB) {\n        var typeA = type(a);\n        if (typeA !== type(b)) {\n            return false;\n        }\n        if (typeA === 'Boolean' || typeA === 'Number' || typeA === 'String') {\n            return typeof a === 'object' ? typeof b === 'object' && identical(a.valueOf(), b.valueOf()) : identical(a, b);\n        }\n        if (identical(a, b)) {\n            return true;\n        }\n        if (typeA === 'RegExp') {\n            // RegExp equality algorithm: http://stackoverflow.com/a/10776635\n            return a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode;\n        }\n        if (Object(a) === a) {\n            if (typeA === 'Date' && a.getTime() !== b.getTime()) {\n                return false;\n            }\n            var keysA = keys(a);\n            if (keysA.length !== keys(b).length) {\n                return false;\n            }\n            var idx = stackA.length - 1;\n            while (idx >= 0) {\n                if (stackA[idx] === a) {\n                    return stackB[idx] === b;\n                }\n                idx -= 1;\n            }\n            stackA[stackA.length] = a;\n            stackB[stackB.length] = b;\n            idx = keysA.length - 1;\n            while (idx >= 0) {\n                var key = keysA[idx];\n                if (!_has(key, b) || !_equals(b[key], a[key], stackA, stackB)) {\n                    return false;\n                }\n                idx -= 1;\n            }\n            stackA.pop();\n            stackB.pop();\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * Private function that determines whether or not a provided object has a given method.\n     * Does not ignore methods stored on the object's prototype chain. Used for dynamically\n     * dispatching Ramda methods to non-Array objects.\n     *\n     * @private\n     * @param {String} methodName The name of the method to check for.\n     * @param {Object} obj The object to test.\n     * @return {Boolean} `true` has a given method, `false` otherwise.\n     * @example\n     *\n     *      var person = { name: 'John' };\n     *      person.shout = function() { alert(this.name); };\n     *\n     *      _hasMethod('shout', person); //=> true\n     *      _hasMethod('foo', person); //=> false\n     */\n    var _hasMethod = function _hasMethod(methodName, obj) {\n        return obj != null && !_isArray(obj) && typeof obj[methodName] === 'function';\n    };\n\n    /**\n     * `_makeFlat` is a helper function that returns a one-level or fully recursive function\n     * based on the flag passed in.\n     *\n     * @private\n     */\n    var _makeFlat = function _makeFlat(recursive) {\n        return function flatt(list) {\n            var value, result = [], idx = 0, j, ilen = list.length, jlen;\n            while (idx < ilen) {\n                if (isArrayLike(list[idx])) {\n                    value = recursive ? flatt(list[idx]) : list[idx];\n                    j = 0;\n                    jlen = value.length;\n                    while (j < jlen) {\n                        result[result.length] = value[j];\n                        j += 1;\n                    }\n                } else {\n                    result[result.length] = list[idx];\n                }\n                idx += 1;\n            }\n            return result;\n        };\n    };\n\n    var _reduce = function () {\n        function _arrayReduce(xf, acc, list) {\n            var idx = 0, len = list.length;\n            while (idx < len) {\n                acc = xf['@@transducer/step'](acc, list[idx]);\n                if (acc && acc['@@transducer/reduced']) {\n                    acc = acc['@@transducer/value'];\n                    break;\n                }\n                idx += 1;\n            }\n            return xf['@@transducer/result'](acc);\n        }\n        function _iterableReduce(xf, acc, iter) {\n            var step = iter.next();\n            while (!step.done) {\n                acc = xf['@@transducer/step'](acc, step.value);\n                if (acc && acc['@@transducer/reduced']) {\n                    acc = acc['@@transducer/value'];\n                    break;\n                }\n                step = iter.next();\n            }\n            return xf['@@transducer/result'](acc);\n        }\n        function _methodReduce(xf, acc, obj) {\n            return xf['@@transducer/result'](obj.reduce(bind(xf['@@transducer/step'], xf), acc));\n        }\n        var symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n        return function _reduce(fn, acc, list) {\n            if (typeof fn === 'function') {\n                fn = _xwrap(fn);\n            }\n            if (isArrayLike(list)) {\n                return _arrayReduce(fn, acc, list);\n            }\n            if (typeof list.reduce === 'function') {\n                return _methodReduce(fn, acc, list);\n            }\n            if (list[symIterator] != null) {\n                return _iterableReduce(fn, acc, list[symIterator]());\n            }\n            if (typeof list.next === 'function') {\n                return _iterableReduce(fn, acc, list);\n            }\n            throw new TypeError('reduce: list must be array or iterable');\n        };\n    }();\n\n    var _stepCat = function () {\n        var _stepCatArray = {\n            '@@transducer/init': Array,\n            '@@transducer/step': function (xs, x) {\n                return _concat(xs, [x]);\n            },\n            '@@transducer/result': _identity\n        };\n        var _stepCatString = {\n            '@@transducer/init': String,\n            '@@transducer/step': function (a, b) {\n                return a + b;\n            },\n            '@@transducer/result': _identity\n        };\n        var _stepCatObject = {\n            '@@transducer/init': Object,\n            '@@transducer/step': function (result, input) {\n                return merge(result, isArrayLike(input) ? createMapEntry(input[0], input[1]) : input);\n            },\n            '@@transducer/result': _identity\n        };\n        return function _stepCat(obj) {\n            if (_isTransformer(obj)) {\n                return obj;\n            }\n            if (isArrayLike(obj)) {\n                return _stepCatArray;\n            }\n            if (typeof obj === 'string') {\n                return _stepCatString;\n            }\n            if (typeof obj === 'object') {\n                return _stepCatObject;\n            }\n            throw new Error('Cannot create transformer for ' + obj);\n        };\n    }();\n\n    var _xall = function () {\n        function XAll(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.all = true;\n        }\n        XAll.prototype['@@transducer/init'] = _xfBase.init;\n        XAll.prototype['@@transducer/result'] = function (result) {\n            if (this.all) {\n                result = this.xf['@@transducer/step'](result, true);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XAll.prototype['@@transducer/step'] = function (result, input) {\n            if (!this.f(input)) {\n                this.all = false;\n                result = _reduced(this.xf['@@transducer/step'](result, false));\n            }\n            return result;\n        };\n        return _curry2(function _xall(f, xf) {\n            return new XAll(f, xf);\n        });\n    }();\n\n    var _xany = function () {\n        function XAny(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.any = false;\n        }\n        XAny.prototype['@@transducer/init'] = _xfBase.init;\n        XAny.prototype['@@transducer/result'] = function (result) {\n            if (!this.any) {\n                result = this.xf['@@transducer/step'](result, false);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XAny.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.any = true;\n                result = _reduced(this.xf['@@transducer/step'](result, true));\n            }\n            return result;\n        };\n        return _curry2(function _xany(f, xf) {\n            return new XAny(f, xf);\n        });\n    }();\n\n    var _xdrop = function () {\n        function XDrop(n, xf) {\n            this.xf = xf;\n            this.n = n;\n        }\n        XDrop.prototype['@@transducer/init'] = _xfBase.init;\n        XDrop.prototype['@@transducer/result'] = _xfBase.result;\n        XDrop.prototype['@@transducer/step'] = function (result, input) {\n            if (this.n > 0) {\n                this.n -= 1;\n                return result;\n            }\n            return this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdrop(n, xf) {\n            return new XDrop(n, xf);\n        });\n    }();\n\n    var _xdropWhile = function () {\n        function XDropWhile(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n        XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f) {\n                if (this.f(input)) {\n                    return result;\n                }\n                this.f = null;\n            }\n            return this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdropWhile(f, xf) {\n            return new XDropWhile(f, xf);\n        });\n    }();\n\n    var _xgroupBy = function () {\n        function XGroupBy(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.inputs = {};\n        }\n        XGroupBy.prototype['@@transducer/init'] = _xfBase.init;\n        XGroupBy.prototype['@@transducer/result'] = function (result) {\n            var key;\n            for (key in this.inputs) {\n                if (_has(key, this.inputs)) {\n                    result = this.xf['@@transducer/step'](result, this.inputs[key]);\n                    if (result['@@transducer/reduced']) {\n                        result = result['@@transducer/value'];\n                        break;\n                    }\n                }\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XGroupBy.prototype['@@transducer/step'] = function (result, input) {\n            var key = this.f(input);\n            this.inputs[key] = this.inputs[key] || [\n                key,\n                []\n            ];\n            this.inputs[key][1] = append(input, this.inputs[key][1]);\n            return result;\n        };\n        return _curry2(function _xgroupBy(f, xf) {\n            return new XGroupBy(f, xf);\n        });\n    }();\n\n    /**\n     * Creates a new list iteration function from an existing one by adding two new parameters\n     * to its callback function: the current index, and the entire list.\n     *\n     * This would turn, for instance, Ramda's simple `map` function into one that more closely\n     * resembles `Array.prototype.map`.  Note that this will only work for functions in which\n     * the iteration callback function is the first parameter, and where the list is the last\n     * parameter.  (This latter might be unimportant if the list parameter is not used.)\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @category List\n     * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n     * @param {Function} fn A list iteration function that does not pass index or list to its callback\n     * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n     * @example\n     *\n     *      var mapIndexed = R.addIndex(R.map);\n     *      mapIndexed(function(val, idx) {return idx + '-' + val;}, ['f', 'o', 'o', 'b', 'a', 'r']);\n     *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n     */\n    var addIndex = _curry1(function addIndex(fn) {\n        return curryN(fn.length, function () {\n            var idx = 0;\n            var origFn = arguments[0];\n            var list = arguments[arguments.length - 1];\n            var args = _slice(arguments);\n            args[0] = function () {\n                var result = origFn.apply(this, _concat(arguments, [\n                    idx,\n                    list\n                ]));\n                idx += 1;\n                return result;\n            };\n            return fn.apply(this, args);\n        });\n    });\n\n    /**\n     * Returns `true` if all elements of the list match the predicate, `false` if there are any\n     * that don't.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n     *         otherwise.\n     * @see R.any, R.none\n     * @example\n     *\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      var lessThan3 = R.flip(R.lt)(3);\n     *      R.all(lessThan2)([1, 2]); //=> false\n     *      R.all(lessThan3)([1, 2]); //=> true\n     */\n    var all = _curry2(_dispatchable('all', _xall, function all(fn, list) {\n        var idx = 0;\n        while (idx < list.length) {\n            if (!fn(list[idx])) {\n                return false;\n            }\n            idx += 1;\n        }\n        return true;\n    }));\n\n    /**\n     * A function that returns the first argument if it's falsy otherwise the second\n     * argument. Note that this is NOT short-circuited, meaning that if expressions\n     * are passed they are both evaluated.\n     *\n     * Dispatches to the `and` method of the first argument if applicable.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {*} a any value\n     * @param {*} b any other value\n     * @return {*} the first argument if falsy otherwise the second argument.\n     * @see R.both\n     * @example\n     *\n     *      R.and(false, true); //=> false\n     *      R.and(0, []); //=> 0\n     *      R.and(null, ''); => null\n     */\n    var and = _curry2(function and(a, b) {\n        return _hasMethod('and', a) ? a.and(b) : a && b;\n    });\n\n    /**\n     * Returns `true` if at least one of elements of the list match the predicate, `false`\n     * otherwise.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n     *         otherwise.\n     * @see R.all, R.none\n     * @example\n     *\n     *      var lessThan0 = R.flip(R.lt)(0);\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      R.any(lessThan0)([1, 2]); //=> false\n     *      R.any(lessThan2)([1, 2]); //=> true\n     */\n    var any = _curry2(_dispatchable('any', _xany, function any(fn, list) {\n        var idx = 0;\n        while (idx < list.length) {\n            if (fn(list[idx])) {\n                return true;\n            }\n            idx += 1;\n        }\n        return false;\n    }));\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts exactly 2\n     * parameters. Any extraneous parameters will not be passed to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> c) -> (a, b -> c)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 2.\n     * @example\n     *\n     *      var takesThreeArgs = function(a, b, c) {\n     *        return [a, b, c];\n     *      };\n     *      takesThreeArgs.length; //=> 3\n     *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      var takesTwoArgs = R.binary(takesThreeArgs);\n     *      takesTwoArgs.length; //=> 2\n     *      // Only 2 arguments are passed to the wrapped function\n     *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n     */\n    var binary = _curry1(function binary(fn) {\n        return nAry(2, fn);\n    });\n\n    /**\n     * Creates a deep copy of the value which may contain (nested) `Array`s and\n     * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n     * not copied, but assigned by their reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {*} -> {*}\n     * @param {*} value The object or array to clone\n     * @return {*} A new object or array.\n     * @example\n     *\n     *      var objects = [{}, {}, {}];\n     *      var objectsClone = R.clone(objects);\n     *      objects[0] === objectsClone[0]; //=> false\n     */\n    var clone = _curry1(function clone(value) {\n        return _clone(value, [], []);\n    });\n\n    /**\n     * Returns a new list consisting of the elements of the first list followed by the elements\n     * of the second.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The first list to merge.\n     * @param {Array} list2 The second set to merge.\n     * @return {Array} A new array consisting of the contents of `list1` followed by the\n     *         contents of `list2`. If, instead of an Array for `list1`, you pass an\n     *         object with a `concat` method on it, `concat` will call `list1.concat`\n     *         and pass it the value of `list2`.\n     *\n     * @example\n     *\n     *      R.concat([], []); //=> []\n     *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n     */\n    var concat = _curry2(function concat(set1, set2) {\n        if (_isArray(set2)) {\n            return _concat(set1, set2);\n        } else if (_hasMethod('concat', set1)) {\n            return set1.concat(set2);\n        } else {\n            throw new TypeError('can\\'t concat ' + typeof set1);\n        }\n    });\n\n    /**\n     * Returns a curried equivalent of the provided function. The curried\n     * function has two unusual capabilities. First, its arguments needn't\n     * be provided one at a time. If `f` is a ternary function and `g` is\n     * `R.curry(f)`, the following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`,\n     * the following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> a) -> (* -> a)\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curryN\n     * @example\n     *\n     *      var addFourNumbers = function(a, b, c, d) {\n     *        return a + b + c + d;\n     *      };\n     *\n     *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n    var curry = _curry1(function curry(fn) {\n        return curryN(fn.length, fn);\n    });\n\n    /**\n     * Returns a new list containing the last `n` elements of a given list, passing each value\n     * to the supplied predicate function, skipping elements while the predicate function returns\n     * `true`. The predicate function is passed one argument: *(value)*.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.takeWhile\n     * @example\n     *\n     *      var lteTwo = function(x) {\n     *        return x <= 2;\n     *      };\n     *\n     *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n     */\n    var dropWhile = _curry2(_dispatchable('dropWhile', _xdropWhile, function dropWhile(pred, list) {\n        var idx = 0, len = list.length;\n        while (idx < len && pred(list[idx])) {\n            idx += 1;\n        }\n        return _slice(list, idx);\n    }));\n\n    /**\n     * Returns `true` if its arguments are equivalent, `false` otherwise.\n     * Dispatches to an `equals` method if present. Handles cyclical data\n     * structures.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig a -> b -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      R.equals(1, 1); //=> true\n     *      R.equals(1, '1'); //=> false\n     *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n     *\n     *      var a = {}; a.v = a;\n     *      var b = {}; b.v = b;\n     *      R.equals(a, b); //=> true\n     */\n    var equals = _curry2(function equals(a, b) {\n        return _hasMethod('equals', a) ? a.equals(b) : _hasMethod('equals', b) ? b.equals(a) : _equals(a, b, [], []);\n    });\n\n    /**\n     * Returns a new list containing only those items that match a given predicate function.\n     * The predicate function is passed one argument: *(value)*.\n     *\n     * Note that `R.filter` does not skip deleted or unassigned indices, unlike the native\n     * `Array.prototype.filter` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter#Description\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} The new filtered array.\n     * @see R.reject\n     * @example\n     *\n     *      var isEven = function(n) {\n     *        return n % 2 === 0;\n     *      };\n     *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n     */\n    var filter = _curry2(_dispatchable('filter', _xfilter, _filter));\n\n    /**\n     * Returns the first element of the list which matches the predicate, or `undefined` if no\n     * element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     *        desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n     *      R.find(R.propEq('a', 4))(xs); //=> undefined\n     */\n    var find = _curry2(_dispatchable('find', _xfind, function find(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (fn(list[idx])) {\n                return list[idx];\n            }\n            idx += 1;\n        }\n    }));\n\n    /**\n     * Returns the index of the first element of the list which matches the predicate, or `-1`\n     * if no element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n     *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n    var findIndex = _curry2(_dispatchable('findIndex', _xfindIndex, function findIndex(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (fn(list[idx])) {\n                return idx;\n            }\n            idx += 1;\n        }\n        return -1;\n    }));\n\n    /**\n     * Returns the last element of the list which matches the predicate, or `undefined` if no\n     * element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n     *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n     */\n    var findLast = _curry2(_dispatchable('findLast', _xfindLast, function findLast(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            if (fn(list[idx])) {\n                return list[idx];\n            }\n            idx -= 1;\n        }\n    }));\n\n    /**\n     * Returns the index of the last element of the list which matches the predicate, or\n     * `-1` if no element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n     *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n    var findLastIndex = _curry2(_dispatchable('findLastIndex', _xfindLastIndex, function findLastIndex(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            if (fn(list[idx])) {\n                return idx;\n            }\n            idx -= 1;\n        }\n        return -1;\n    }));\n\n    /**\n     * Returns a new list by pulling every item out of it (and all its sub-arrays) and putting\n     * them in a new array, depth-first.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b]\n     * @param {Array} list The array to consider.\n     * @return {Array} The flattened list.\n     * @see R.unnest\n     * @example\n     *\n     *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n     *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n     */\n    var flatten = _curry1(_makeFlat(true));\n\n    /**\n     * Returns a new function much like the supplied one, except that the first two arguments'\n     * order is reversed.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)\n     * @param {Function} fn The function to invoke with its first two parameters reversed.\n     * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n     * @example\n     *\n     *      var mergeThree = function(a, b, c) {\n     *        return ([]).concat(a, b, c);\n     *      };\n     *\n     *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n     */\n    var flip = _curry1(function flip(fn) {\n        return curry(function (a, b) {\n            var args = _slice(arguments);\n            args[0] = b;\n            args[1] = a;\n            return fn.apply(this, args);\n        });\n    });\n\n    /**\n     * Iterate over an input `list`, calling a provided function `fn` for each element in the\n     * list.\n     *\n     * `fn` receives one argument: *(value)*.\n     *\n     * Note: `R.forEach` does not skip deleted or unassigned indices (sparse arrays), unlike\n     * the native `Array.prototype.forEach` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n     *\n     * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns the original\n     * array. In some libraries this function is named `each`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> *) -> [a] -> [a]\n     * @param {Function} fn The function to invoke. Receives one argument, `value`.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} The original list.\n     * @example\n     *\n     *      var printXPlusFive = function(x) { console.log(x + 5); };\n     *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n     *      //-> 6\n     *      //-> 7\n     *      //-> 8\n     */\n    var forEach = _curry2(_checkForMethod('forEach', function forEach(fn, list) {\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            fn(list[idx]);\n            idx += 1;\n        }\n        return list;\n    }));\n\n    /**\n     * Returns a list of function names of object's own functions\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {*} -> [String]\n     * @param {Object} obj The objects with functions in it\n     * @return {Array} A list of the object's own properties that map to functions.\n     * @example\n     *\n     *      R.functions(R); // returns list of ramda's own function names\n     *\n     *      var F = function() { this.x = function(){}; this.y = 1; }\n     *      F.prototype.z = function() {};\n     *      F.prototype.a = 100;\n     *      R.functions(new F()); //=> [\"x\"]\n     */\n    var functions = _curry1(_functionsWith(keys));\n\n    /**\n     * Returns a list of function names of object's own and prototype functions\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {*} -> [String]\n     * @param {Object} obj The objects with functions in it\n     * @return {Array} A list of the object's own properties and prototype\n     *         properties that map to functions.\n     * @example\n     *\n     *      R.functionsIn(R); // returns list of ramda's own and prototype function names\n     *\n     *      var F = function() { this.x = function(){}; this.y = 1; }\n     *      F.prototype.z = function() {};\n     *      F.prototype.a = 100;\n     *      R.functionsIn(new F()); //=> [\"x\", \"z\"]\n     */\n    var functionsIn = _curry1(_functionsWith(keysIn));\n\n    /**\n     * Splits a list into sub-lists stored in an object, based on the result of calling a String-returning function\n     * on each element, and grouping the results according to values returned.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> String) -> [a] -> {String: [a]}\n     * @param {Function} fn Function :: a -> String\n     * @param {Array} list The array to group\n     * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n     *         that produced that key when passed to `fn`.\n     * @example\n     *\n     *      var byGrade = R.groupBy(function(student) {\n     *        var score = student.score;\n     *        return score < 65 ? 'F' :\n     *               score < 70 ? 'D' :\n     *               score < 80 ? 'C' :\n     *               score < 90 ? 'B' : 'A';\n     *      });\n     *      var students = [{name: 'Abby', score: 84},\n     *                      {name: 'Eddy', score: 58},\n     *                      // ...\n     *                      {name: 'Jack', score: 69}];\n     *      byGrade(students);\n     *      // {\n     *      //   'A': [{name: 'Dianne', score: 99}],\n     *      //   'B': [{name: 'Abby', score: 84}]\n     *      //   // ...,\n     *      //   'F': [{name: 'Eddy', score: 58}]\n     *      // }\n     */\n    var groupBy = _curry2(_dispatchable('groupBy', _xgroupBy, function groupBy(fn, list) {\n        return _reduce(function (acc, elt) {\n            var key = fn(elt);\n            acc[key] = append(elt, acc[key] || (acc[key] = []));\n            return acc;\n        }, {}, list);\n    }));\n\n    /**\n     * Returns the first element of the given list or string. In some libraries\n     * this function is named `first`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.tail, R.init, R.last\n     * @sig [a] -> a | Undefined\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n     *      R.head([]); //=> undefined\n     *\n     *      R.head('abc'); //=> 'a'\n     *      R.head(''); //=> ''\n     */\n    var head = nth(0);\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those\n     * elements common to both lists.  Duplication is determined according\n     * to the value returned by applying the supplied predicate to two list\n     * elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a,a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate function that determines whether\n     *        the two supplied elements are equal.\n     * @param {Array} list1 One list of items to compare\n     * @param {Array} list2 A second list of items to compare\n     * @see R.intersection\n     * @return {Array} A new list containing those elements common to both lists.\n     * @example\n     *\n     *      var buffaloSpringfield = [\n     *        {id: 824, name: 'Richie Furay'},\n     *        {id: 956, name: 'Dewey Martin'},\n     *        {id: 313, name: 'Bruce Palmer'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *      var csny = [\n     *        {id: 204, name: 'David Crosby'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 539, name: 'Graham Nash'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *\n     *      var sameId = function(o1, o2) {return o1.id === o2.id;};\n     *\n     *      R.intersectionWith(sameId, buffaloSpringfield, csny);\n     *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n     */\n    var intersectionWith = _curry3(function intersectionWith(pred, list1, list2) {\n        var results = [], idx = 0;\n        while (idx < list1.length) {\n            if (_containsWith(pred, list1[idx], list2)) {\n                results[results.length] = list1[idx];\n            }\n            idx += 1;\n        }\n        return uniqWith(pred, results);\n    });\n\n    /**\n     * Creates a new list with the separator interposed between elements.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} separator The element to add to the list.\n     * @param {Array} list The list to be interposed.\n     * @return {Array} The new list.\n     * @example\n     *\n     *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n     */\n    var intersperse = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {\n        var out = [];\n        var idx = 0;\n        var length = list.length;\n        while (idx < length) {\n            if (idx === length - 1) {\n                out.push(list[idx]);\n            } else {\n                out.push(list[idx], separator);\n            }\n            idx += 1;\n        }\n        return out;\n    }));\n\n    /**\n     * Transforms the items of the list with the transducer and appends the transformed items to\n     * the accumulator using an appropriate iterator function based on the accumulator type.\n     *\n     * The accumulator can be an array, string, object or a transformer. Iterated items will\n     * be appended to arrays and concatenated to strings. Objects will be merged directly or 2-item\n     * arrays will be merged as key, value pairs.\n     *\n     * The accumulator can also be a transformer object that provides a 2-arity reducing iterator\n     * function, step, 0-arity initial value function, init, and 1-arity result extraction function\n     * result. The step function is used as the iterator function in reduce. The result function is\n     * used to convert the final accumulator into the return type and in most cases is R.identity.\n     * The init function is used to provide the initial accumulator.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> (b -> b) -> [c] -> a\n     * @param {*} acc The initial accumulator value.\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.into([], transducer, numbers); //=> [2, 3]\n     *\n     *      var intoArray = R.into([]);\n     *      intoArray(transducer, numbers); //=> [2, 3]\n     */\n    var into = _curry3(function into(acc, xf, list) {\n        return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), acc, list);\n    });\n\n    /**\n     * Same as R.invertObj, however this accounts for objects\n     * with duplicate values by putting the values into an\n     * array.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {s: x} -> {x: [ s, ... ]}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object with keys\n     * in an array.\n     * @example\n     *\n     *      var raceResultsByFirstName = {\n     *        first: 'alice',\n     *        second: 'jake',\n     *        third: 'alice',\n     *      };\n     *      R.invert(raceResultsByFirstName);\n     *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n     */\n    var invert = _curry1(function invert(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var idx = 0;\n        var out = {};\n        while (idx < len) {\n            var key = props[idx];\n            var val = obj[key];\n            var list = _has(val, out) ? out[val] : out[val] = [];\n            list[list.length] = key;\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new object with the keys of the given object\n     * as values, and the values of the given object as keys.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {s: x} -> {x: s}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object\n     * @example\n     *\n     *      var raceResults = {\n     *        first: 'alice',\n     *        second: 'jake'\n     *      };\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': 'first', 'jake':'second' }\n     *\n     *      // Alternatively:\n     *      var raceResults = ['alice', 'jake'];\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': '0', 'jake':'1' }\n     */\n    var invertObj = _curry1(function invertObj(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var idx = 0;\n        var out = {};\n        while (idx < len) {\n            var key = props[idx];\n            out[obj[key]] = key;\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns the last element of the given list or string.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.init, R.head, R.tail\n     * @sig [a] -> a | Undefined\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n     *      R.last([]); //=> undefined\n     *\n     *      R.last('abc'); //=> 'c'\n     *      R.last(''); //=> ''\n     */\n    var last = nth(-1);\n\n    /**\n     * Returns the position of the last occurrence of an item in\n     * an array, or -1 if the item is not included in the array.\n     * `R.equals` is used to determine equality.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} xs The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     * @see R.indexOf\n     * @example\n     *\n     *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n     *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n     */\n    var lastIndexOf = _curry2(function lastIndexOf(target, xs) {\n        if (_hasMethod('lastIndexOf', xs)) {\n            return xs.lastIndexOf(target);\n        } else {\n            var idx = xs.length - 1;\n            while (idx >= 0) {\n                if (equals(xs[idx], target)) {\n                    return idx;\n                }\n                idx -= 1;\n            }\n            return -1;\n        }\n    });\n\n    /**\n     * Returns a new list, constructed by applying the supplied function to every element of the\n     * supplied list.\n     *\n     * Note: `R.map` does not skip deleted or unassigned indices (sparse arrays), unlike the\n     * native `Array.prototype.map` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map#Description\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> b) -> [a] -> [b]\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {Array} list The list to be iterated over.\n     * @return {Array} The new list.\n     * @example\n     *\n     *      var double = function(x) {\n     *        return x * 2;\n     *      };\n     *\n     *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n     */\n    var map = _curry2(_dispatchable('map', _xmap, _map));\n\n    /**\n     * Map, but for objects. Creates an object with the same keys as `obj` and values\n     * generated by running each property of `obj` through `fn`. `fn` is passed one argument:\n     * *(value)*.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig (v -> v) -> {k: v} -> {k: v}\n     * @param {Function} fn A function called for each property in `obj`. Its return value will\n     * become a new property on the return object.\n     * @param {Object} obj The object to iterate over.\n     * @return {Object} A new object with the same keys as `obj` and values that are the result\n     *         of running each property through `fn`.\n     * @example\n     *\n     *      var values = { x: 1, y: 2, z: 3 };\n     *      var double = function(num) {\n     *        return num * 2;\n     *      };\n     *\n     *      R.mapObj(double, values); //=> { x: 2, y: 4, z: 6 }\n     */\n    var mapObj = _curry2(function mapObj(fn, obj) {\n        return _reduce(function (acc, key) {\n            acc[key] = fn(obj[key]);\n            return acc;\n        }, {}, keys(obj));\n    });\n\n    /**\n     * Like `mapObj`, but but passes additional arguments to the predicate function. The\n     * predicate function is passed three arguments: *(value, key, obj)*.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig (v, k, {k: v} -> v) -> {k: v} -> {k: v}\n     * @param {Function} fn A function called for each property in `obj`. Its return value will\n     *        become a new property on the return object.\n     * @param {Object} obj The object to iterate over.\n     * @return {Object} A new object with the same keys as `obj` and values that are the result\n     *         of running each property through `fn`.\n     * @example\n     *\n     *      var values = { x: 1, y: 2, z: 3 };\n     *      var prependKeyAndDouble = function(num, key, obj) {\n     *        return key + (num * 2);\n     *      };\n     *\n     *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n     */\n    var mapObjIndexed = _curry2(function mapObjIndexed(fn, obj) {\n        return _reduce(function (acc, key) {\n            acc[key] = fn(obj[key], key, obj);\n            return acc;\n        }, {}, keys(obj));\n    });\n\n    /**\n     * Returns `true` if no elements of the list match the predicate,\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n     * @see R.all, R.any\n     * @example\n     *\n     *      R.none(R.isNaN, [1, 2, 3]); //=> true\n     *      R.none(R.isNaN, [1, 2, 3, NaN]); //=> false\n     */\n    var none = _curry2(_complement(_dispatchable('any', _xany, any)));\n\n    /**\n     * A function that returns the first truthy of two arguments otherwise the\n     * last argument. Note that this is NOT short-circuited, meaning that if\n     * expressions are passed they are both evaluated.\n     *\n     * Dispatches to the `or` method of the first argument if applicable.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {*} a any value\n     * @param {*} b any other value\n     * @return {*} the first truthy argument, otherwise the last argument.\n     * @see R.either\n     * @example\n     *\n     *      R.or(false, true); //=> true\n     *      R.or(0, []); //=> []\n     *      R.or(null, ''); => ''\n     */\n    var or = _curry2(function or(a, b) {\n        return _hasMethod('or', a) ? a.or(b) : a || b;\n    });\n\n    /**\n     * Accepts as its arguments a function and any number of values and returns a function that,\n     * when invoked, calls the original function with all of the values prepended to the\n     * original function's arguments list. In some libraries this function is named `applyLeft`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> b -> ... -> i -> j -> ... -> m -> n) -> a -> b-> ... -> i -> (j -> ... -> m -> n)\n     * @param {Function} fn The function to invoke.\n     * @param {...*} [args] Arguments to prepend to `fn` when the returned function is invoked.\n     * @return {Function} A new function wrapping `fn`. When invoked, it will call `fn`\n     *         with `args` prepended to `fn`'s arguments list.\n     * @example\n     *\n     *      var multiply = function(a, b) { return a * b; };\n     *      var double = R.partial(multiply, 2);\n     *      double(2); //=> 4\n     *\n     *      var greet = function(salutation, title, firstName, lastName) {\n     *        return salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *      };\n     *      var sayHello = R.partial(greet, 'Hello');\n     *      var sayHelloToMs = R.partial(sayHello, 'Ms.');\n     *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n     */\n    var partial = curry(_createPartialApplicator(_concat));\n\n    /**\n     * Accepts as its arguments a function and any number of values and returns a function that,\n     * when invoked, calls the original function with all of the values appended to the original\n     * function's arguments list.\n     *\n     * Note that `partialRight` is the opposite of `partial`: `partialRight` fills `fn`'s arguments\n     * from the right to the left.  In some libraries this function is named `applyRight`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> b-> ... -> i -> j -> ... -> m -> n) -> j -> ... -> m -> n -> (a -> b-> ... -> i)\n     * @param {Function} fn The function to invoke.\n     * @param {...*} [args] Arguments to append to `fn` when the returned function is invoked.\n     * @return {Function} A new function wrapping `fn`. When invoked, it will call `fn` with\n     *         `args` appended to `fn`'s arguments list.\n     * @example\n     *\n     *      var greet = function(salutation, title, firstName, lastName) {\n     *        return salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *      };\n     *      var greetMsJaneJones = R.partialRight(greet, 'Ms.', 'Jane', 'Jones');\n     *\n     *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n     */\n    var partialRight = curry(_createPartialApplicator(flip(_concat)));\n\n    /**\n     * Takes a predicate and a list and returns the pair of lists of\n     * elements which do and do not satisfy the predicate, respectively.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [[a],[a]]\n     * @param {Function} pred A predicate to determine which array the element belongs to.\n     * @param {Array} list The array to partition.\n     * @return {Array} A nested array, containing first an array of elements that satisfied the predicate,\n     *         and second an array of elements that did not satisfy.\n     * @example\n     *\n     *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n     *      //=> [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n     */\n    var partition = _curry2(function partition(pred, list) {\n        return _reduce(function (acc, elt) {\n            var xs = acc[pred(elt) ? 0 : 1];\n            xs[xs.length] = elt;\n            return acc;\n        }, [\n            [],\n            []\n        ], list);\n    });\n\n    /**\n     * Determines whether a nested path on an object has a specific value,\n     * in `R.equals` terms. Most likely used to filter a list.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [String] -> * -> {String: *} -> Boolean\n     * @param {Array} path The path of the nested property to use\n     * @param {*} val The value to compare the nested property with\n     * @param {Object} obj The object to check the nested property in\n     * @return {Boolean} `true` if the value equals the nested object property,\n     *         `false` otherwise.\n     * @example\n     *\n     *      var user1 = { address: { zipCode: 90210 } };\n     *      var user2 = { address: { zipCode: 55555 } };\n     *      var user3 = { name: 'Bob' };\n     *      var users = [ user1, user2, user3 ];\n     *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n     *      R.filter(isFamous, users); //=> [ user1 ]\n     */\n    var pathEq = _curry3(function pathEq(_path, val, obj) {\n        return equals(path(_path, obj), val);\n    });\n\n    /**\n     * Returns a new list by plucking the same named property off all objects in the list supplied.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig k -> [{k: v}] -> [v]\n     * @param {Number|String} key The key name to pluck off of each object.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of values for the given key.\n     * @example\n     *\n     *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n     *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n     */\n    var pluck = _curry2(function pluck(p, list) {\n        return map(prop(p), list);\n    });\n\n    /**\n     * Returns `true` if the specified object property is equal, in `R.equals`\n     * terms, to the given value; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig String -> a -> Object -> Boolean\n     * @param {String} name\n     * @param {*} val\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.equals, R.propSatisfies\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n     *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n     *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n     *      var kids = [abby, fred, rusty, alois];\n     *      var hasBrownHair = R.propEq('hair', 'brown');\n     *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n     */\n    var propEq = _curry3(function propEq(name, val, obj) {\n        return propSatisfies(equals(val), name, obj);\n    });\n\n    /**\n     * Returns `true` if the specified object property is of the given type;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig Type -> String -> Object -> Boolean\n     * @param {Function} type\n     * @param {String} name\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.is\n     * @see R.propSatisfies\n     * @example\n     *\n     *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n     *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n     *      R.propIs(Number, 'x', {});            //=> false\n     */\n    var propIs = _curry3(function propIs(type, name, obj) {\n        return propSatisfies(is(type), name, obj);\n    });\n\n    /**\n     * Returns a single item by iterating through the list, successively calling the iterator\n     * function and passing it an accumulator value and the current value from the array, and\n     * then passing the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*.  It may use `R.reduced` to\n     * shortcut the iteration.\n     *\n     * Note: `R.reduce` does not skip deleted or unassigned indices (sparse arrays), unlike\n     * the native `Array.prototype.reduce` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n     * @see R.reduced\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3];\n     *      var add = function(a, b) {\n     *        return a + b;\n     *      };\n     *\n     *      R.reduce(add, 10, numbers); //=> 16\n     */\n    var reduce = _curry3(_reduce);\n\n    /**\n     * Similar to `filter`, except that it keeps only values for which the given predicate\n     * function returns falsy. The predicate function is passed one argument: *(value)*.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} The new filtered array.\n     * @see R.filter\n     * @example\n     *\n     *      var isOdd = function(n) {\n     *        return n % 2 === 1;\n     *      };\n     *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n     */\n    var reject = _curry2(function reject(fn, list) {\n        return filter(_complement(fn), list);\n    });\n\n    /**\n     * Returns a fixed list of size `n` containing a specified identical value.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> n -> [a]\n     * @param {*} value The value to repeat.\n     * @param {Number} n The desired size of the output list.\n     * @return {Array} A new array containing `n` `value`s.\n     * @example\n     *\n     *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n     *\n     *      var obj = {};\n     *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n     *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n     */\n    var repeat = _curry2(function repeat(value, n) {\n        return times(always(value), n);\n    });\n\n    /**\n     * Returns the elements of the given list or string (or object with a `slice`\n     * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @sig Number -> Number -> String -> String\n     * @param {Number} fromIndex The start index (inclusive).\n     * @param {Number} toIndex The end index (exclusive).\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n     *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n     *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n     *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n     *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n     */\n    var slice = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n        return Array.prototype.slice.call(list, fromIndex, toIndex);\n    }));\n\n    /**\n     * Splits a collection into slices of the specified length.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @sig Number -> String -> [String]\n     * @param {Number} n\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n     *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n     */\n    var splitEvery = _curry2(function splitEvery(n, list) {\n        if (n <= 0) {\n            throw new Error('First argument to splitEvery must be a positive integer');\n        }\n        var result = [];\n        var idx = 0;\n        while (idx < list.length) {\n            result.push(slice(idx, idx += n, list));\n        }\n        return result;\n    });\n\n    /**\n     * Adds together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The sum of all the numbers in the list.\n     * @see R.reduce\n     * @example\n     *\n     *      R.sum([2,4,6,8,100,1]); //=> 121\n     */\n    var sum = reduce(add, 0);\n\n    /**\n     * Returns all but the first element of the given list or string (or object\n     * with a `tail` method).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.head, R.init, R.last\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.tail([1, 2, 3]);  //=> [2, 3]\n     *      R.tail([1, 2]);     //=> [2]\n     *      R.tail([1]);        //=> []\n     *      R.tail([]);         //=> []\n     *\n     *      R.tail('abc');  //=> 'bc'\n     *      R.tail('ab');   //=> 'b'\n     *      R.tail('a');    //=> ''\n     *      R.tail('');     //=> ''\n     */\n    var tail = _checkForMethod('tail', slice(1, Infinity));\n\n    /**\n     * Returns the first `n` elements of the given list, string, or\n     * transducer/transformer (or object with a `take` method).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {*} list\n     * @return {*}\n     * @see R.drop\n     * @example\n     *\n     *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n     *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n     *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.take(3, 'ramda');               //=> 'ram'\n     *\n     *      var personnel = [\n     *        'Dave Brubeck',\n     *        'Paul Desmond',\n     *        'Eugene Wright',\n     *        'Joe Morello',\n     *        'Gerry Mulligan',\n     *        'Bob Bates',\n     *        'Joe Dodge',\n     *        'Ron Crotty'\n     *      ];\n     *\n     *      var takeFive = R.take(5);\n     *      takeFive(personnel);\n     *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n     */\n    var take = _curry2(_dispatchable('take', _xtake, function take(n, xs) {\n        return slice(0, n < 0 ? Infinity : n, xs);\n    }));\n\n    /**\n     * Returns a new list containing the first `n` elements of a given list, passing each value\n     * to the supplied predicate function, and terminating when the predicate function returns\n     * `false`. Excludes the element that caused the predicate function to fail. The predicate\n     * function is passed one argument: *(value)*.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.dropWhile\n     * @example\n     *\n     *      var isNotFour = function(x) {\n     *        return !(x === 4);\n     *      };\n     *\n     *      R.takeWhile(isNotFour, [1, 2, 3, 4]); //=> [1, 2, 3]\n     */\n    var takeWhile = _curry2(_dispatchable('takeWhile', _xtakeWhile, function takeWhile(fn, list) {\n        var idx = 0, len = list.length;\n        while (idx < len && fn(list[idx])) {\n            idx += 1;\n        }\n        return _slice(list, 0, idx);\n    }));\n\n    /**\n     * Initializes a transducer using supplied iterator function. Returns a single item by\n     * iterating through the list, successively calling the transformed iterator function and\n     * passing it an accumulator value and the current value from the array, and then passing\n     * the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*. It will be wrapped as a\n     * transformer to initialize the transducer. A transformer can be passed directly in place\n     * of an iterator function.  In both cases, iteration may be stopped early with the\n     * `R.reduced` function.\n     *\n     * A transducer is a function that accepts a transformer and returns a transformer and can\n     * be composed directly.\n     *\n     * A transformer is an an object that provides a 2-arity reducing iterator function, step,\n     * 0-arity initial value function, init, and 1-arity result extraction function, result.\n     * The step function is used as the iterator function in reduce. The result function is used\n     * to convert the final accumulator into the return type and in most cases is R.identity.\n     * The init function can be used to provide an initial accumulator, but is ignored by transduce.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.reduce, R.reduced, R.into\n     * @sig (c -> c) -> (a,b -> a) -> a -> [b] -> a\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array. Wrapped as transformer, if necessary, and used to\n     *        initialize the transducer\n     * @param {*} acc The initial accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n     */\n    var transduce = curryN(4, function transduce(xf, fn, acc, list) {\n        return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n    });\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the elements of each list.  Duplication is\n     * determined according to the value returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a,a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @see R.union\n     * @example\n     *\n     *      function cmp(x, y) { return x.a === y.a; }\n     *      var l1 = [{a: 1}, {a: 2}];\n     *      var l2 = [{a: 1}, {a: 4}];\n     *      R.unionWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n     */\n    var unionWith = _curry3(function unionWith(pred, list1, list2) {\n        return uniqWith(pred, _concat(list1, list2));\n    });\n\n    /**\n     * Returns a new list containing only one copy of each element in the original list.\n     * `R.equals` is used to determine equality.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n     *      R.uniq([1, '1']);     //=> [1, '1']\n     *      R.uniq([[42], [42]]); //=> [[42]]\n     */\n    var uniq = uniqWith(equals);\n\n    /**\n     * Returns a new list by pulling every item at the first level of nesting out, and putting\n     * them in a new array.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b]\n     * @param {Array} list The array to consider.\n     * @return {Array} The flattened list.\n     * @see R.flatten\n     * @example\n     *\n     *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n     *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n     */\n    var unnest = _curry1(_makeFlat(false));\n\n    /**\n     * Accepts a function `fn` and any number of transformer functions and returns a new\n     * function. When the new function is invoked, it calls the function `fn` with parameters\n     * consisting of the result of calling each supplied handler on successive arguments to the\n     * new function.\n     *\n     * If more arguments are passed to the returned function than transformer functions, those\n     * arguments are passed directly to `fn` as additional parameters. If you expect additional\n     * arguments that don't need to be transformed, although you can ignore them, it's best to\n     * pass an identity function so that the new function reports the correct arity.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (x1 -> x2 -> ... -> z) -> ((a -> x1), (b -> x2), ...) -> (a -> b -> ... -> z)\n     * @param {Function} fn The function to wrap.\n     * @param {...Function} transformers A variable number of transformer functions\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var double = function(y) { return y * 2; };\n     *      var square = function(x) { return x * x; };\n     *      var add = function(a, b) { return a + b; };\n     *      // Adds any number of arguments together\n     *      var addAll = function() {\n     *        return R.reduce(add, 0, arguments);\n     *      };\n     *\n     *      // Basic example\n     *      var addDoubleAndSquare = R.useWith(addAll, double, square);\n     *\n     *      //≅ addAll(double(10), square(5));\n     *      addDoubleAndSquare(10, 5); //=> 45\n     *\n     *      // Example of passing more arguments than transformers\n     *      //≅ addAll(double(10), square(5), 100);\n     *      addDoubleAndSquare(10, 5, 100); //=> 145\n     *\n     *      // If there are extra _expected_ arguments that don't need to be transformed, although\n     *      // you can ignore them, it might be best to pass in the identity function so that the new\n     *      // function correctly reports arity.\n     *      var addDoubleAndSquareWithExtraParams = R.useWith(addAll, double, square, R.identity);\n     *      // addDoubleAndSquareWithExtraParams.length //=> 3\n     *      //≅ addAll(double(10), square(5), R.identity(100));\n     *      addDoubleAndSquare(10, 5, 100); //=> 145\n     */\n    /*, transformers */\n    var useWith = curry(function useWith(fn) {\n        var transformers = _slice(arguments, 1);\n        var tlen = transformers.length;\n        return curry(_arity(tlen, function () {\n            var args = [], idx = 0;\n            while (idx < tlen) {\n                args[idx] = transformers[idx](arguments[idx]);\n                idx += 1;\n            }\n            return fn.apply(this, args.concat(_slice(arguments, tlen)));\n        }));\n    });\n\n    /**\n     * Takes a spec object and a test object; returns true if the test satisfies\n     * the spec, false otherwise. An object satisfies the spec if, for each of the\n     * spec's own properties, accessing that property of the object gives the same\n     * value (in `R.equals` terms) as accessing that property of the spec.\n     *\n     * `whereEq` is a specialization of [`where`](#where).\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {String: *} -> {String: *} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @see R.where\n     * @example\n     *\n     *      // pred :: Object -> Boolean\n     *      var pred = R.whereEq({a: 1, b: 2});\n     *\n     *      pred({a: 1});              //=> false\n     *      pred({a: 1, b: 2});        //=> true\n     *      pred({a: 1, b: 2, c: 3});  //=> true\n     *      pred({a: 1, b: 1});        //=> false\n     */\n    var whereEq = _curry2(function whereEq(spec, testObj) {\n        return where(mapObj(equals, spec), testObj);\n    });\n\n    var _flatCat = function () {\n        var preservingReduced = function (xf) {\n            return {\n                '@@transducer/init': _xfBase.init,\n                '@@transducer/result': function (result) {\n                    return xf['@@transducer/result'](result);\n                },\n                '@@transducer/step': function (result, input) {\n                    var ret = xf['@@transducer/step'](result, input);\n                    return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n                }\n            };\n        };\n        return function _xcat(xf) {\n            var rxf = preservingReduced(xf);\n            return {\n                '@@transducer/init': _xfBase.init,\n                '@@transducer/result': function (result) {\n                    return rxf['@@transducer/result'](result);\n                },\n                '@@transducer/step': function (result, input) {\n                    return !isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n                }\n            };\n        };\n    }();\n\n    var _indexOf = function _indexOf(list, item, from) {\n        var idx = from;\n        while (idx < list.length) {\n            if (equals(list[idx], item)) {\n                return idx;\n            }\n            idx += 1;\n        }\n        return -1;\n    };\n\n    /**\n     * Create a predicate wrapper which will call a pick function (all/any) for each predicate\n     *\n     * @private\n     * @see R.all\n     * @see R.any\n     */\n    // Call function immediately if given arguments\n    // Return a function which will call the predicates with the provided arguments\n    var _predicateWrap = function _predicateWrap(predPicker) {\n        return function (preds) {\n            var predIterator = function () {\n                var args = arguments;\n                return predPicker(function (predicate) {\n                    return predicate.apply(null, args);\n                }, preds);\n            };\n            return arguments.length > 1 ? // Call function immediately if given arguments\n            predIterator.apply(null, _slice(arguments, 1)) : // Return a function which will call the predicates with the provided arguments\n            _arity(Math.max.apply(Math, pluck('length', preds)), predIterator);\n        };\n    };\n\n    var _xchain = _curry2(function _xchain(f, xf) {\n        return map(f, _flatCat(xf));\n    });\n\n    /**\n     * Given a list of predicates, returns a new predicate that will be true exactly when all of them are.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} list An array of predicate functions\n     * @param {*} optional Any arguments to pass into the predicates\n     * @return {Function} a function that applies its arguments to each of\n     *         the predicates, returning `true` if all are satisfied.\n     * @see R.anyPass\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0};\n     *      var f = R.allPass([gt10, even]);\n     *      f(11); //=> false\n     *      f(12); //=> true\n     */\n    var allPass = _curry1(_predicateWrap(all));\n\n    /**\n     * Given a list of predicates returns a new predicate that will be true exactly when any one of them is.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} list An array of predicate functions\n     * @param {*} optional Any arguments to pass into the predicates\n     * @return {Function} A function that applies its arguments to each of the predicates, returning\n     *         `true` if all are satisfied.\n     * @see R.allPass\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0};\n     *      var f = R.anyPass([gt10, even]);\n     *      f(11); //=> true\n     *      f(8); //=> true\n     *      f(9); //=> false\n     */\n    var anyPass = _curry1(_predicateWrap(any));\n\n    /**\n     * ap applies a list of functions to a list of values.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig [f] -> [a] -> [f a]\n     * @param {Array} fns An array of functions\n     * @param {Array} vs An array of values\n     * @return {Array} An array of results of applying each of `fns` to all of `vs` in turn.\n     * @example\n     *\n     *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n     */\n    var ap = _curry2(function ap(fns, vs) {\n        return _hasMethod('ap', fns) ? fns.ap(vs) : _reduce(function (acc, fn) {\n            return _concat(acc, map(fn, vs));\n        }, [], fns);\n    });\n\n    /**\n     * Returns the result of calling its first argument with the remaining\n     * arguments. This is occasionally useful as a converging function for\n     * `R.converge`: the left branch can produce a function while the right\n     * branch produces a value to be passed to that function as an argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (*... -> a),*... -> a\n     * @param {Function} fn The function to apply to the remaining arguments.\n     * @param {...*} args Any number of positional arguments.\n     * @return {*}\n     * @see R.apply\n     * @example\n     *\n     *      var indentN = R.pipe(R.times(R.always(' ')),\n     *                           R.join(''),\n     *                           R.replace(/^(?!$)/gm));\n     *\n     *      var format = R.converge(R.call,\n     *                              R.pipe(R.prop('indent'), indentN),\n     *                              R.prop('value'));\n     *\n     *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n     */\n    var call = curry(function call(fn) {\n        return fn.apply(this, _slice(arguments, 1));\n    });\n\n    /**\n     * `chain` maps a function over a list and concatenates the results.\n     * This implementation is compatible with the\n     * Fantasy-land Chain spec, and will work with types that implement that spec.\n     * `chain` is also known as `flatMap` in some libraries\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> [b]) -> [a] -> [b]\n     * @param {Function} fn\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      var duplicate = function(n) {\n     *        return [n, n];\n     *      };\n     *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n     */\n    var chain = _curry2(_dispatchable('chain', _xchain, function chain(fn, list) {\n        return unnest(map(fn, list));\n    }));\n\n    /**\n     * Turns a list of Functors into a Functor of a list, applying\n     * a mapping function to the elements of the list along the way.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.commute\n     * @sig Functor f => (f a -> f b) -> (x -> f x) -> [f a] -> f [b]\n     * @param {Function} fn The transformation function\n     * @param {Function} of A function that returns the data type to return\n     * @param {Array} list An array of functors of the same type\n     * @return {*}\n     * @example\n     *\n     *      R.commuteMap(R.map(R.add(10)), R.of, [[1], [2, 3]]);   //=> [[11, 12], [11, 13]]\n     *      R.commuteMap(R.map(R.add(10)), R.of, [[1, 2], [3]]);   //=> [[11, 13], [12, 13]]\n     *      R.commuteMap(R.map(R.add(10)), R.of, [[1], [2], [3]]); //=> [[11, 12, 13]]\n     *      R.commuteMap(R.map(R.add(10)), Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([11, 12, 13])\n     *      R.commuteMap(R.map(R.add(10)), Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n     */\n    var commuteMap = _curry3(function commuteMap(fn, of, list) {\n        function consF(acc, ftor) {\n            return ap(map(append, fn(ftor)), acc);\n        }\n        return _reduce(consF, of([]), list);\n    });\n\n    /**\n     * Wraps a constructor function inside a curried function that can be called with the same\n     * arguments and returns the same type. The arity of the function returned is specified\n     * to allow using variadic constructor functions.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (* -> {*}) -> (* -> {*})\n     * @param {Number} n The arity of the constructor function.\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Variadic constructor function\n     *      var Widget = function() {\n     *        this.children = Array.prototype.slice.call(arguments);\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = [\n     *        // ...\n     *      ];\n     *      R.map(R.constructN(1, Widget), allConfigs); // a list of Widgets\n     */\n    var constructN = _curry2(function constructN(n, Fn) {\n        if (n > 10) {\n            throw new Error('Constructor with greater than ten arguments');\n        }\n        if (n === 0) {\n            return function () {\n                return new Fn();\n            };\n        }\n        return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n            switch (arguments.length) {\n            case 1:\n                return new Fn($0);\n            case 2:\n                return new Fn($0, $1);\n            case 3:\n                return new Fn($0, $1, $2);\n            case 4:\n                return new Fn($0, $1, $2, $3);\n            case 5:\n                return new Fn($0, $1, $2, $3, $4);\n            case 6:\n                return new Fn($0, $1, $2, $3, $4, $5);\n            case 7:\n                return new Fn($0, $1, $2, $3, $4, $5, $6);\n            case 8:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n            case 9:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n            case 10:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n            }\n        }));\n    });\n\n    /**\n     * Accepts at least three functions and returns a new function. When invoked, this new\n     * function will invoke the first function, `after`, passing as its arguments the\n     * results of invoking the subsequent functions with whatever arguments are passed to\n     * the new function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (x1 -> x2 -> ... -> z) -> ((a -> b -> ... -> x1), (a -> b -> ... -> x2), ...) -> (a -> b -> ... -> z)\n     * @param {Function} after A function. `after` will be invoked with the return values of\n     *        `fn1` and `fn2` as its arguments.\n     * @param {...Function} functions A variable number of functions.\n     * @return {Function} A new function.\n     * @example\n     *\n     *      var add = function(a, b) { return a + b; };\n     *      var multiply = function(a, b) { return a * b; };\n     *      var subtract = function(a, b) { return a - b; };\n     *\n     *      //≅ multiply( add(1, 2), subtract(1, 2) );\n     *      R.converge(multiply, add, subtract)(1, 2); //=> -3\n     *\n     *      var add3 = function(a, b, c) { return a + b + c; };\n     *      R.converge(add3, multiply, add, subtract)(1, 2); //=> 4\n     */\n    var converge = curryN(3, function converge(after) {\n        var fns = _slice(arguments, 1);\n        return curryN(Math.max.apply(Math, pluck('length', fns)), function () {\n            var args = arguments;\n            var context = this;\n            return after.apply(context, _map(function (fn) {\n                return fn.apply(context, args);\n            }, fns));\n        });\n    });\n\n    /**\n     * Returns all but the first `n` elements of the given list, string, or\n     * transducer/transformer (or object with a `drop` method).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.transduce\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {*} list\n     * @return {*}\n     * @see R.take\n     * @example\n     *\n     *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n     *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n     *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n     *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n     *      R.drop(3, 'ramda');               //=> 'da'\n     */\n    var drop = _curry2(_dispatchable('drop', _xdrop, function drop(n, xs) {\n        return slice(Math.max(0, n), Infinity, xs);\n    }));\n\n    /**\n     * Returns a list containing all but the last `n` elements of the given `list`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n The number of elements of `xs` to skip.\n     * @param {Array} xs The collection to consider.\n     * @return {Array}\n     * @see R.takeLast\n     * @example\n     *\n     *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n     *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n     *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n     *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n     *      R.dropLast(3, 'ramda');               //=> 'ra'\n     */\n    var dropLast = _curry2(function dropLast(n, xs) {\n        return take(n < xs.length ? xs.length - n : 0, xs);\n    });\n\n    /**\n     * Returns a new list without any consecutively repeating elements. Equality is\n     * determined by applying the supplied predicate two consecutive elements.\n     * The first element in a series of equal element is the one being preserved.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} `list` without repeating elements.\n     * @example\n     *\n     *      function lengthEq(x, y) { return Math.abs(x) === Math.abs(y); };\n     *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n     *      R.dropRepeatsWith(lengthEq, l); //=> [1, 3, 4, -5, 3]\n     */\n    var dropRepeatsWith = _curry2(_dispatchable('dropRepeatsWith', _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n        var result = [];\n        var idx = 1;\n        var len = list.length;\n        if (len !== 0) {\n            result[0] = list[0];\n            while (idx < len) {\n                if (!pred(last(result), list[idx])) {\n                    result[result.length] = list[idx];\n                }\n                idx += 1;\n            }\n        }\n        return result;\n    }));\n\n    /**\n     * Reports whether two objects have the same value, in `R.equals` terms,\n     * for the specified property. Useful as a curried predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig k -> {k: v} -> {k: v} -> Boolean\n     * @param {String} prop The name of the property to compare\n     * @param {Object} obj1\n     * @param {Object} obj2\n     * @return {Boolean}\n     *\n     * @example\n     *\n     *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n     *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n     *      R.eqProps('a', o1, o2); //=> false\n     *      R.eqProps('c', o1, o2); //=> true\n     */\n    var eqProps = _curry3(function eqProps(prop, obj1, obj2) {\n        return equals(obj1[prop], obj2[prop]);\n    });\n\n    /**\n     * Returns the position of the first occurrence of an item in an array,\n     * or -1 if the item is not included in the array. `R.equals` is used to\n     * determine equality.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} xs The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     * @see R.lastIndexOf\n     * @example\n     *\n     *      R.indexOf(3, [1,2,3,4]); //=> 2\n     *      R.indexOf(10, [1,2,3,4]); //=> -1\n     */\n    var indexOf = _curry2(function indexOf(target, xs) {\n        return _hasMethod('indexOf', xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n    });\n\n    /**\n     * Returns all but the last element of the given list or string.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.last, R.head, R.tail\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.init([1, 2, 3]);  //=> [1, 2]\n     *      R.init([1, 2]);     //=> [1]\n     *      R.init([1]);        //=> []\n     *      R.init([]);         //=> []\n     *\n     *      R.init('abc');  //=> 'ab'\n     *      R.init('ab');   //=> 'a'\n     *      R.init('a');    //=> ''\n     *      R.init('');     //=> ''\n     */\n    var init = slice(0, -1);\n\n    /**\n     * Returns `true` if all elements are unique, in `R.equals` terms,\n     * otherwise `false`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> Boolean\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if all elements are unique, else `false`.\n     * @example\n     *\n     *      R.isSet(['1', 1]); //=> true\n     *      R.isSet([1, 1]);   //=> false\n     *      R.isSet([[42], [42]]); //=> false\n     */\n    var isSet = _curry1(function isSet(list) {\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            if (_indexOf(list, list[idx], idx + 1) >= 0) {\n                return false;\n            }\n            idx += 1;\n        }\n        return true;\n    });\n\n    /**\n     * Returns a lens for the given getter and setter functions. The getter \"gets\"\n     * the value of the focus; the setter \"sets\" the value of the focus. The setter\n     * should not mutate the data structure.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n     * @param {Function} getter\n     * @param {Function} setter\n     * @return {Lens}\n     * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n     *\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n     */\n    var lens = _curry2(function lens(getter, setter) {\n        return function (f) {\n            return function (s) {\n                return map(function (v) {\n                    return setter(v, s);\n                }, f(getter(s)));\n            };\n        };\n    });\n\n    /**\n     * Returns a lens whose focus is the specified index.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Number -> Lens s a\n     * @param {Number} n\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var headLens = R.lensIndex(0);\n     *\n     *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n     *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n     *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n     */\n    var lensIndex = _curry1(function lensIndex(n) {\n        return lens(nth(n), update(n));\n    });\n\n    /**\n     * Returns a lens whose focus is the specified property.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig String -> Lens s a\n     * @param {String} k\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n     */\n    var lensProp = _curry1(function lensProp(k) {\n        return lens(prop(k), assoc(k));\n    });\n\n    /**\n     * \"lifts\" a function to be the specified arity, so that it may \"map over\" that many\n     * lists (or other Functors).\n     *\n     * @func\n     * @memberOf R\n     * @see R.lift\n     * @category Function\n     * @sig Number -> (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The function `fn` applicable to mappable objects.\n     * @example\n     *\n     *      var madd3 = R.liftN(3, R.curryN(3, function() {\n     *        return R.reduce(R.add, 0, arguments);\n     *      }));\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     */\n    var liftN = _curry2(function liftN(arity, fn) {\n        var lifted = curryN(arity, fn);\n        return curryN(arity, function () {\n            return _reduce(ap, map(lifted, arguments[0]), _slice(arguments, 1));\n        });\n    });\n\n    /**\n     * Returns the mean of the given list of numbers.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list\n     * @return {Number}\n     * @example\n     *\n     *      R.mean([2, 7, 9]); //=> 6\n     *      R.mean([]); //=> NaN\n     */\n    var mean = _curry1(function mean(list) {\n        return sum(list) / list.length;\n    });\n\n    /**\n     * Returns the median of the given list of numbers.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list\n     * @return {Number}\n     * @example\n     *\n     *      R.median([2, 9, 7]); //=> 7\n     *      R.median([7, 2, 10, 9]); //=> 8\n     *      R.median([]); //=> NaN\n     */\n    var median = _curry1(function median(list) {\n        var len = list.length;\n        if (len === 0) {\n            return NaN;\n        }\n        var width = 2 - len % 2;\n        var idx = (len - width) / 2;\n        return mean(_slice(list).sort(function (a, b) {\n            return a < b ? -1 : a > b ? 1 : 0;\n        }).slice(idx, idx + width));\n    });\n\n    /**\n     * Merges a list of objects together into one object.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [{k: v}] -> {k: v}\n     * @param {Array} list An array of objects\n     * @return {Object} A merged object.\n     * @see R.reduce\n     * @example\n     *\n     *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n     *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n     */\n    var mergeAll = _curry1(function mergeAll(list) {\n        return reduce(merge, {}, list);\n    });\n\n    /**\n     * Performs left-to-right function composition. The leftmost function may have\n     * any arity; the remaining functions must be unary.\n     *\n     * In some libraries this function is named `sequence`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> (a -> b -> ... -> n -> z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.compose\n     * @example\n     *\n     *      var f = R.pipe(Math.pow, R.negate, R.inc);\n     *\n     *      f(3, 4); // -(3^4) + 1\n     */\n    var pipe = function pipe() {\n        if (arguments.length === 0) {\n            throw new Error('pipe requires at least one argument');\n        }\n        return curryN(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n    };\n\n    /**\n     * Performs left-to-right composition of one or more Promise-returning\n     * functions. The leftmost function may have any arity; the remaining\n     * functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.composeP\n     * @example\n     *\n     *      //  followersForUser :: String -> Promise [User]\n     *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n     */\n    var pipeP = function pipeP() {\n        if (arguments.length === 0) {\n            throw new Error('pipeP requires at least one argument');\n        }\n        return curryN(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n    };\n\n    /**\n     * Multiplies together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The product of all the numbers in the list.\n     * @see R.reduce\n     * @example\n     *\n     *      R.product([2,4,6,8,100,1]); //=> 38400\n     */\n    var product = reduce(multiply, 1);\n\n    /**\n     * Reasonable analog to SQL `select` statement.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @category Relation\n     * @sig [k] -> [{k: v}] -> [{k: v}]\n     * @param {Array} props The property names to project\n     * @param {Array} objs The objects to query\n     * @return {Array} An array of objects with just the `props` properties.\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n     *      var kids = [abby, fred];\n     *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n     */\n    // passing `identity` gives correct arity\n    var project = useWith(_map, pickAll, identity);\n\n    /**\n     * Returns a new list containing the last `n` elements of the given list.\n     * If `n > list.length`, returns a list of `list.length` elements.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n The number of elements to return.\n     * @param {Array} xs The collection to consider.\n     * @return {Array}\n     * @see R.dropLast\n     * @example\n     *\n     *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n     *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['for', 'baz']\n     *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.takeLast(3, 'ramda');               //=> 'mda'\n     */\n    var takeLast = _curry2(function takeLast(n, xs) {\n        return drop(n >= 0 ? xs.length - n : 0, xs);\n    });\n\n    var _contains = function _contains(a, list) {\n        return _indexOf(list, a, 0) >= 0;\n    };\n\n    //  mapPairs :: (Object, [String]) -> [String]\n    // Function, RegExp, user-defined types\n    var _toString = function _toString(x, seen) {\n        var recur = function recur(y) {\n            var xs = seen.concat([x]);\n            return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n        };\n        //  mapPairs :: (Object, [String]) -> [String]\n        var mapPairs = function (obj, keys) {\n            return _map(function (k) {\n                return _quote(k) + ': ' + recur(obj[k]);\n            }, keys.slice().sort());\n        };\n        switch (Object.prototype.toString.call(x)) {\n        case '[object Arguments]':\n            return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n        case '[object Array]':\n            return '[' + _map(recur, x).concat(mapPairs(x, reject(test(/^\\d+$/), keys(x)))).join(', ') + ']';\n        case '[object Boolean]':\n            return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n        case '[object Date]':\n            return 'new Date(' + _quote(_toISOString(x)) + ')';\n        case '[object Null]':\n            return 'null';\n        case '[object Number]':\n            return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n        case '[object String]':\n            return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n        case '[object Undefined]':\n            return 'undefined';\n        default:\n            return typeof x.constructor === 'function' && x.constructor.name !== 'Object' && typeof x.toString === 'function' && x.toString() !== '[object Object]' ? x.toString() : // Function, RegExp, user-defined types\n            '{' + mapPairs(x, keys(x)).join(', ') + '}';\n        }\n    };\n\n    /**\n     * Turns a list of Functors into a Functor of a list.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.commuteMap\n     * @sig Functor f => (x -> f x) -> [f a] -> f [a]\n     * @param {Function} of A function that returns the data type to return\n     * @param {Array} list An array of functors of the same type\n     * @return {*}\n     * @example\n     *\n     *      R.commute(R.of, [[1], [2, 3]]);   //=> [[1, 2], [1, 3]]\n     *      R.commute(R.of, [[1, 2], [3]]);   //=> [[1, 3], [2, 3]]\n     *      R.commute(R.of, [[1], [2], [3]]); //=> [[1, 2, 3]]\n     *      R.commute(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n     *      R.commute(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n     */\n    var commute = commuteMap(identity);\n\n    /**\n     * Performs right-to-left function composition. The rightmost function may have\n     * any arity; the remaining functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> (a -> b -> ... -> n -> z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.pipe\n     * @example\n     *\n     *      var f = R.compose(R.inc, R.negate, Math.pow);\n     *\n     *      f(3, 4); // -(3^4) + 1\n     */\n    var compose = function compose() {\n        if (arguments.length === 0) {\n            throw new Error('compose requires at least one argument');\n        }\n        return pipe.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Returns the right-to-left Kleisli composition of the provided functions,\n     * each of which must return a value of a type supported by [`chain`](#chain).\n     *\n     * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @see R.pipeK\n     * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (m a -> m z)\n     * @param {...Function}\n     * @return {Function}\n     * @example\n     *\n     *      //  parseJson :: String -> Maybe *\n     *      //  get :: String -> Object -> Maybe *\n     *\n     *      //  getStateCode :: Maybe String -> Maybe String\n     *      var getStateCode = R.composeK(\n     *        R.compose(Maybe.of, R.toUpper),\n     *        get('state'),\n     *        get('address'),\n     *        get('user'),\n     *        parseJson\n     *      );\n     *\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n     *      //=> Just('NY')\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\n     *      //=> Nothing()\n     */\n    var composeK = function composeK() {\n        return arguments.length === 0 ? identity : compose.apply(this, map(chain, arguments));\n    };\n\n    /**\n     * Performs right-to-left composition of one or more Promise-returning\n     * functions. The rightmost function may have any arity; the remaining\n     * functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.pipeP\n     * @example\n     *\n     *      //  followersForUser :: String -> Promise [User]\n     *      var followersForUser = R.composeP(db.getFollowers, db.getUserById);\n     */\n    var composeP = function composeP() {\n        if (arguments.length === 0) {\n            throw new Error('composeP requires at least one argument');\n        }\n        return pipeP.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Wraps a constructor function inside a curried function that can be called with the same\n     * arguments and returns the same type.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> {*}) -> (* -> {*})\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Constructor function\n     *      var Widget = function(config) {\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = [\n     *        // ...\n     *      ];\n     *      R.map(R.construct(Widget), allConfigs); // a list of Widgets\n     */\n    var construct = _curry1(function construct(Fn) {\n        return constructN(Fn.length, Fn);\n    });\n\n    /**\n     * Returns `true` if the specified value is equal, in `R.equals` terms,\n     * to at least one element of the given list; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> Boolean\n     * @param {Object} a The item to compare against.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the item is in the list, `false` otherwise.\n     *\n     * @example\n     *\n     *      R.contains(3, [1, 2, 3]); //=> true\n     *      R.contains(4, [1, 2, 3]); //=> false\n     *      R.contains([42], [[42]]); //=> true\n     */\n    var contains = _curry2(_contains);\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not contained in the second list.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @see R.differenceWith\n     * @example\n     *\n     *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n     *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n     */\n    var difference = _curry2(function difference(first, second) {\n        var out = [];\n        var idx = 0;\n        var firstLen = first.length;\n        while (idx < firstLen) {\n            if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n                out[out.length] = first[idx];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new list without any consecutively repeating elements.\n     * `R.equals` is used to determine equality.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} `list` without repeating elements.\n     * @example\n     *\n     *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n     */\n    var dropRepeats = _curry1(_dispatchable('dropRepeats', _xdropRepeatsWith(equals), dropRepeatsWith(equals)));\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those elements common to both lists.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @see R.intersectionWith\n     * @return {Array} The list of elements found in both `list1` and `list2`.\n     * @example\n     *\n     *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n     */\n    var intersection = _curry2(function intersection(list1, list2) {\n        return uniq(_filter(flip(_contains)(list1), list2));\n    });\n\n    /**\n     * \"lifts\" a function of arity > 1 so that it may \"map over\" an Array or\n     * other Functor.\n     *\n     * @func\n     * @memberOf R\n     * @see R.liftN\n     * @category Function\n     * @sig (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The function `fn` applicable to mappable objects.\n     * @example\n     *\n     *      var madd3 = R.lift(R.curry(function(a, b, c) {\n     *        return a + b + c;\n     *      }));\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     *\n     *      var madd5 = R.lift(R.curry(function(a, b, c, d, e) {\n     *        return a + b + c + d + e;\n     *      }));\n     *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n     */\n    var lift = _curry1(function lift(fn) {\n        return liftN(fn.length, fn);\n    });\n\n    /**\n     * Returns a partial copy of an object omitting the keys specified.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> {String: *} -> {String: *}\n     * @param {Array} names an array of String property names to omit from the new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with properties from `names` not on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n     */\n    var omit = _curry2(function omit(names, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (!_contains(prop, names)) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns the left-to-right Kleisli composition of the provided functions,\n     * each of which must return a value of a type supported by [`chain`](#chain).\n     *\n     * `R.pipeK(f, g, h)` is equivalent to `R.pipe(R.chain(f), R.chain(g), R.chain(h))`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @see R.composeK\n     * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (m a -> m z)\n     * @param {...Function}\n     * @return {Function}\n     * @example\n     *\n     *      //  parseJson :: String -> Maybe *\n     *      //  get :: String -> Object -> Maybe *\n     *\n     *      //  getStateCode :: Maybe String -> Maybe String\n     *      var getStateCode = R.pipeK(\n     *        parseJson,\n     *        get('user'),\n     *        get('address'),\n     *        get('state'),\n     *        R.compose(Maybe.of, R.toUpper)\n     *      );\n     *\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n     *      //=> Just('NY')\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\n     *      //=> Nothing()\n     */\n    var pipeK = function pipeK() {\n        return composeK.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Returns the string representation of the given value. `eval`'ing the output\n     * should result in a value equivalent to the input value. Many of the built-in\n     * `toString` methods do not satisfy this requirement.\n     *\n     * If the given value is an `[object Object]` with a `toString` method other\n     * than `Object.prototype.toString`, this method is invoked with no arguments\n     * to produce the return value. This means user-defined constructor functions\n     * can provide a suitable `toString` method. For example:\n     *\n     *     function Point(x, y) {\n     *       this.x = x;\n     *       this.y = y;\n     *     }\n     *\n     *     Point.prototype.toString = function() {\n     *       return 'new Point(' + this.x + ', ' + this.y + ')';\n     *     };\n     *\n     *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig * -> String\n     * @param {*} val\n     * @return {String}\n     * @example\n     *\n     *      R.toString(42); //=> '42'\n     *      R.toString('abc'); //=> '\"abc\"'\n     *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n     *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n     *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n     */\n    var toString = _curry1(function toString(val) {\n        return _toString(val, []);\n    });\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the\n     * elements of each list.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @example\n     *\n     *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n     */\n    var union = _curry2(compose(uniq, _concat));\n\n    /**\n     * Returns a new list containing only one copy of each element in the\n     * original list, based upon the value returned by applying the supplied\n     * function to each list element. Prefers the first item if the supplied\n     * function produces the same value on two items. `R.equals` is used for\n     * comparison.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> b) -> [a] -> [a]\n     * @param {Function} fn A function used to produce a value to use during comparisons.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n     */\n    var uniqBy = _curry2(function uniqBy(fn, list) {\n        var idx = 0, applied = [], result = [], appliedItem, item;\n        while (idx < list.length) {\n            item = list[idx];\n            appliedItem = fn(item);\n            if (!_contains(appliedItem, applied)) {\n                result.push(item);\n                applied.push(appliedItem);\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Turns a named method with a specified arity into a function\n     * that can be called directly supplied with arguments and a target object.\n     *\n     * The returned function is curried and accepts `arity + 1` parameters where\n     * the final parameter is the target object.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n     * @param {Number} arity Number of arguments the returned function should take\n     *        before the target object.\n     * @param {Function} method Name of the method to call.\n     * @return {Function} A new curried function.\n     * @example\n     *\n     *      var sliceFrom = R.invoker(1, 'slice');\n     *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n     *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n     *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n     */\n    var invoker = _curry2(function invoker(arity, method) {\n        return curryN(arity + 1, function () {\n            var target = arguments[arity];\n            if (target != null && is(Function, target[method])) {\n                return target[method].apply(target, _slice(arguments, 0, arity));\n            }\n            throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n        });\n    });\n\n    /**\n     * Returns a string made by inserting the `separator` between each\n     * element and concatenating all the elements into a single string.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig String -> [a] -> String\n     * @param {Number|String} separator The string used to separate the elements.\n     * @param {Array} xs The elements to join into a string.\n     * @return {String} str The string made by concatenating `xs` with `separator`.\n     * @see R.split\n     * @example\n     *\n     *      var spacer = R.join(' ');\n     *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n     *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n     */\n    var join = invoker(1, 'join');\n\n    /**\n     * Creates a new function that, when invoked, caches the result of calling `fn` for a given\n     * argument set and returns the result. Subsequent calls to the memoized `fn` with the same\n     * argument set will not result in an additional call to `fn`; instead, the cached result\n     * for that set of arguments will be returned.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (*... -> a) -> (*... -> a)\n     * @param {Function} fn The function to memoize.\n     * @return {Function} Memoized version of `fn`.\n     * @example\n     *\n     *      var count = 0;\n     *      var factorial = R.memoize(function(n) {\n     *        count += 1;\n     *        return R.product(R.range(1, n + 1));\n     *      });\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      count; //=> 1\n     */\n    var memoize = _curry1(function memoize(fn) {\n        var cache = {};\n        return function () {\n            var key = toString(arguments);\n            if (!_has(key, cache)) {\n                cache[key] = fn.apply(this, arguments);\n            }\n            return cache[key];\n        };\n    });\n\n    /**\n     * Splits a string into an array of strings based on the given\n     * separator.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String -> [String]\n     * @param {String} sep The separator string.\n     * @param {String} str The string to separate into an array.\n     * @return {Array} The array of strings from `str` separated by `str`.\n     * @see R.join\n     * @example\n     *\n     *      var pathComponents = R.split('/');\n     *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n     *\n     *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n     */\n    var split = invoker(1, 'split');\n\n    /**\n     * The lower case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to lower case.\n     * @return {String} The lower case version of `str`.\n     * @see R.toUpper\n     * @example\n     *\n     *      R.toLower('XYZ'); //=> 'xyz'\n     */\n    var toLower = invoker(0, 'toLowerCase');\n\n    /**\n     * The upper case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to upper case.\n     * @return {String} The upper case version of `str`.\n     * @see R.toLower\n     * @example\n     *\n     *      R.toUpper('abc'); //=> 'ABC'\n     */\n    var toUpper = invoker(0, 'toUpperCase');\n\n    var R = {\n        F: F,\n        T: T,\n        __: __,\n        add: add,\n        addIndex: addIndex,\n        adjust: adjust,\n        all: all,\n        allPass: allPass,\n        always: always,\n        and: and,\n        any: any,\n        anyPass: anyPass,\n        ap: ap,\n        aperture: aperture,\n        append: append,\n        apply: apply,\n        assoc: assoc,\n        assocPath: assocPath,\n        binary: binary,\n        bind: bind,\n        both: both,\n        call: call,\n        chain: chain,\n        clone: clone,\n        commute: commute,\n        commuteMap: commuteMap,\n        comparator: comparator,\n        complement: complement,\n        compose: compose,\n        composeK: composeK,\n        composeP: composeP,\n        concat: concat,\n        cond: cond,\n        construct: construct,\n        constructN: constructN,\n        contains: contains,\n        containsWith: containsWith,\n        converge: converge,\n        countBy: countBy,\n        createMapEntry: createMapEntry,\n        curry: curry,\n        curryN: curryN,\n        dec: dec,\n        defaultTo: defaultTo,\n        difference: difference,\n        differenceWith: differenceWith,\n        dissoc: dissoc,\n        dissocPath: dissocPath,\n        divide: divide,\n        drop: drop,\n        dropLast: dropLast,\n        dropLastWhile: dropLastWhile,\n        dropRepeats: dropRepeats,\n        dropRepeatsWith: dropRepeatsWith,\n        dropWhile: dropWhile,\n        either: either,\n        empty: empty,\n        eqProps: eqProps,\n        equals: equals,\n        evolve: evolve,\n        filter: filter,\n        find: find,\n        findIndex: findIndex,\n        findLast: findLast,\n        findLastIndex: findLastIndex,\n        flatten: flatten,\n        flip: flip,\n        forEach: forEach,\n        fromPairs: fromPairs,\n        functions: functions,\n        functionsIn: functionsIn,\n        groupBy: groupBy,\n        gt: gt,\n        gte: gte,\n        has: has,\n        hasIn: hasIn,\n        head: head,\n        identical: identical,\n        identity: identity,\n        ifElse: ifElse,\n        inc: inc,\n        indexOf: indexOf,\n        init: init,\n        insert: insert,\n        insertAll: insertAll,\n        intersection: intersection,\n        intersectionWith: intersectionWith,\n        intersperse: intersperse,\n        into: into,\n        invert: invert,\n        invertObj: invertObj,\n        invoker: invoker,\n        is: is,\n        isArrayLike: isArrayLike,\n        isEmpty: isEmpty,\n        isNil: isNil,\n        isSet: isSet,\n        join: join,\n        keys: keys,\n        keysIn: keysIn,\n        last: last,\n        lastIndexOf: lastIndexOf,\n        length: length,\n        lens: lens,\n        lensIndex: lensIndex,\n        lensProp: lensProp,\n        lift: lift,\n        liftN: liftN,\n        lt: lt,\n        lte: lte,\n        map: map,\n        mapAccum: mapAccum,\n        mapAccumRight: mapAccumRight,\n        mapObj: mapObj,\n        mapObjIndexed: mapObjIndexed,\n        match: match,\n        mathMod: mathMod,\n        max: max,\n        maxBy: maxBy,\n        mean: mean,\n        median: median,\n        memoize: memoize,\n        merge: merge,\n        mergeAll: mergeAll,\n        min: min,\n        minBy: minBy,\n        modulo: modulo,\n        multiply: multiply,\n        nAry: nAry,\n        negate: negate,\n        none: none,\n        not: not,\n        nth: nth,\n        nthArg: nthArg,\n        nthChar: nthChar,\n        nthCharCode: nthCharCode,\n        of: of,\n        omit: omit,\n        once: once,\n        or: or,\n        over: over,\n        partial: partial,\n        partialRight: partialRight,\n        partition: partition,\n        path: path,\n        pathEq: pathEq,\n        pick: pick,\n        pickAll: pickAll,\n        pickBy: pickBy,\n        pipe: pipe,\n        pipeK: pipeK,\n        pipeP: pipeP,\n        pluck: pluck,\n        prepend: prepend,\n        product: product,\n        project: project,\n        prop: prop,\n        propEq: propEq,\n        propIs: propIs,\n        propOr: propOr,\n        propSatisfies: propSatisfies,\n        props: props,\n        range: range,\n        reduce: reduce,\n        reduceRight: reduceRight,\n        reduced: reduced,\n        reject: reject,\n        remove: remove,\n        repeat: repeat,\n        replace: replace,\n        reverse: reverse,\n        scan: scan,\n        set: set,\n        slice: slice,\n        sort: sort,\n        sortBy: sortBy,\n        split: split,\n        splitEvery: splitEvery,\n        subtract: subtract,\n        sum: sum,\n        tail: tail,\n        take: take,\n        takeLast: takeLast,\n        takeLastWhile: takeLastWhile,\n        takeWhile: takeWhile,\n        tap: tap,\n        test: test,\n        times: times,\n        toLower: toLower,\n        toPairs: toPairs,\n        toPairsIn: toPairsIn,\n        toString: toString,\n        toUpper: toUpper,\n        transduce: transduce,\n        trim: trim,\n        type: type,\n        unapply: unapply,\n        unary: unary,\n        uncurryN: uncurryN,\n        unfold: unfold,\n        union: union,\n        unionWith: unionWith,\n        uniq: uniq,\n        uniqBy: uniqBy,\n        uniqWith: uniqWith,\n        unnest: unnest,\n        update: update,\n        useWith: useWith,\n        values: values,\n        valuesIn: valuesIn,\n        view: view,\n        where: where,\n        whereEq: whereEq,\n        wrap: wrap,\n        xprod: xprod,\n        zip: zip,\n        zipObj: zipObj,\n        zipWith: zipWith\n    };\n\n  /* TEST_ENTRY_POINT */\n\n  if (typeof exports === 'object') {\n    module.exports = R;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function() { return R; });\n  } else {\n    this.R = R;\n  }\n\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/dist/ramda.js\n// module id = 6\n// module chunks = 0","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_Map.js\n// module id = 7\n// module chunks = 0","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is loosely based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/isLength.js\n// module id = 8\n// module chunks = 0","var eq = require('./eq');\n\n/**\n * Gets the index at which the first occurrence of `key` is found in `array`\n * of key-value pairs.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_assocIndexOf.js\n// module id = 9\n// module chunks = 0","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_nativeCreate.js\n// module id = 10\n// module chunks = 0","var checkGlobal = require('./_checkGlobal');\n\n/** Used to determine if values are of the language type `Object`. */\nvar objectTypes = {\n  'function': true,\n  'object': true\n};\n\n/** Detect free variable `exports`. */\nvar freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType) ? exports : null;\n\n/** Detect free variable `module`. */\nvar freeModule = (objectTypes[typeof module] && module && !module.nodeType) ? module : null;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);\n\n/** Detect free variable `self`. */\nvar freeSelf = checkGlobal(objectTypes[typeof self] && self);\n\n/** Detect free variable `window`. */\nvar freeWindow = checkGlobal(objectTypes[typeof window] && window);\n\n/** Detect `this` as the global object. */\nvar thisGlobal = checkGlobal(objectTypes[typeof this] && this);\n\n/**\n * Used as a reference to the global object.\n *\n * The `this` value is used if it's the global object to avoid Greasemonkey's\n * restricted `window` object, otherwise the `window` object is used.\n */\nvar root = freeGlobal || ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) || freeSelf || thisGlobal || Function('return this')();\n\nmodule.exports = root;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_root.js\n// module id = 11\n// module chunks = 0","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'number' || type == 'boolean' ||\n    (type == 'string' && value !== '__proto__') || value == null;\n}\n\nmodule.exports = isKeyable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_isKeyable.js\n// module id = 12\n// module chunks = 0","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is loosely based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/isLength.js\n// module id = 13\n// module chunks = 0","var eq = require('./eq');\n\n/**\n * Gets the index at which the first occurrence of `key` is found in `array`\n * of key-value pairs.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_assocIndexOf.js\n// module id = 14\n// module chunks = 0","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_nativeCreate.js\n// module id = 15\n// module chunks = 0","var checkGlobal = require('./_checkGlobal');\n\n/** Used to determine if values are of the language type `Object`. */\nvar objectTypes = {\n  'function': true,\n  'object': true\n};\n\n/** Detect free variable `exports`. */\nvar freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType) ? exports : null;\n\n/** Detect free variable `module`. */\nvar freeModule = (objectTypes[typeof module] && module && !module.nodeType) ? module : null;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);\n\n/** Detect free variable `self`. */\nvar freeSelf = checkGlobal(objectTypes[typeof self] && self);\n\n/** Detect free variable `window`. */\nvar freeWindow = checkGlobal(objectTypes[typeof window] && window);\n\n/** Detect `this` as the global object. */\nvar thisGlobal = checkGlobal(objectTypes[typeof this] && this);\n\n/**\n * Used as a reference to the global object.\n *\n * The `this` value is used if it's the global object to avoid Greasemonkey's\n * restricted `window` object, otherwise the `window` object is used.\n */\nvar root = freeGlobal || ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) || freeSelf || thisGlobal || Function('return this')();\n\nmodule.exports = root;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_root.js\n// module id = 16\n// module chunks = 0","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'number' || type == 'boolean' ||\n    (type == 'string' && value !== '__proto__') || value == null;\n}\n\nmodule.exports = isKeyable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_isKeyable.js\n// module id = 17\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 18\n// module chunks = 0","/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\nmodule.exports = isHostObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_isHostObject.js\n// module id = 19\n// module chunks = 0","var baseHas = require('./_baseHas'),\n    baseKeys = require('./_baseKeys'),\n    indexKeys = require('./_indexKeys'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  var isProto = isPrototype(object);\n  if (!(isProto || isArrayLike(object))) {\n    return baseKeys(object);\n  }\n  var indexes = indexKeys(object),\n      skipIndexes = !!indexes,\n      result = indexes || [],\n      length = result.length;\n\n  for (var key in object) {\n    if (baseHas(object, key) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n        !(isProto && key == 'constructor')) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/keys.js\n// module id = 20\n// module chunks = 0","/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/isObject.js\n// module id = 21\n// module chunks = 0","var isNative = require('./isNative');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_getNative.js\n// module id = 22\n// module chunks = 0","var isArray = require('./isArray');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (typeof value == 'number') {\n    return true;\n  }\n  return !isArray(value) &&\n    (reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n      (object != null && value in Object(object)));\n}\n\nmodule.exports = isKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_isKey.js\n// module id = 23\n// module chunks = 0","/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\nmodule.exports = isHostObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_isHostObject.js\n// module id = 24\n// module chunks = 0","var baseHas = require('./_baseHas'),\n    baseKeys = require('./_baseKeys'),\n    indexKeys = require('./_indexKeys'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  var isProto = isPrototype(object);\n  if (!(isProto || isArrayLike(object))) {\n    return baseKeys(object);\n  }\n  var indexes = indexKeys(object),\n      skipIndexes = !!indexes,\n      result = indexes || [],\n      length = result.length;\n\n  for (var key in object) {\n    if (baseHas(object, key) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n        !(isProto && key == 'constructor')) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/keys.js\n// module id = 25\n// module chunks = 0","/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/isObject.js\n// module id = 26\n// module chunks = 0","var isNative = require('./isNative');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_getNative.js\n// module id = 27\n// module chunks = 0","var isArray = require('./isArray');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (typeof value == 'number') {\n    return true;\n  }\n  return !isArray(value) &&\n    (reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n      (object != null && value in Object(object)));\n}\n\nmodule.exports = isKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_isKey.js\n// module id = 28\n// module chunks = 0","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/node_modules/promise/lib/core.js\n// module id = 29\n// module chunks = 0","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar getPrototypeOf = Object.getPrototypeOf;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n  // that are composed entirely of index properties, return `false` for\n  // `hasOwnProperty` checks of them.\n  return hasOwnProperty.call(object, key) ||\n    (typeof object == 'object' && key in object && getPrototypeOf(object) === null);\n}\n\nmodule.exports = baseHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_baseHas.js\n// module id = 30\n// module chunks = 0","var isArrayLikeObject = require('./isArrayLikeObject');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\nmodule.exports = isArguments;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/isArguments.js\n// module id = 31\n// module chunks = 0","var getLength = require('./_getLength'),\n    isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null &&\n    !(typeof value == 'function' && isFunction(value)) && isLength(getLength(value));\n}\n\nmodule.exports = isArrayLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/isArrayLike.js\n// module id = 32\n// module chunks = 0","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_baseProperty.js\n// module id = 33\n// module chunks = 0","var isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array constructors, and\n  // PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\nmodule.exports = isFunction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/isFunction.js\n// module id = 34\n// module chunks = 0","var isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\nmodule.exports = isString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/isString.js\n// module id = 35\n// module chunks = 0","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_isIndex.js\n// module id = 36\n// module chunks = 0","var stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @param {Array} [values] The values to cache.\n */\nfunction Stack(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = values[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add functions to the `Stack` cache.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_Stack.js\n// module id = 37\n// module chunks = 0","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the associative array.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction assocDelete(array, key) {\n  var index = assocIndexOf(array, key);\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = array.length - 1;\n  if (index == lastIndex) {\n    array.pop();\n  } else {\n    splice.call(array, index, 1);\n  }\n  return true;\n}\n\nmodule.exports = assocDelete;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_assocDelete.js\n// module id = 38\n// module chunks = 0","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the associative array value for `key`.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction assocGet(array, key) {\n  var index = assocIndexOf(array, key);\n  return index < 0 ? undefined : array[index][1];\n}\n\nmodule.exports = assocGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_assocGet.js\n// module id = 39\n// module chunks = 0","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if an associative array value for `key` exists.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction assocHas(array, key) {\n  return assocIndexOf(array, key) > -1;\n}\n\nmodule.exports = assocHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_assocHas.js\n// module id = 40\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 41\n// module chunks = 0","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @param {Object} hash The hash to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(hash, key) {\n  return nativeCreate ? hash[key] !== undefined : hasOwnProperty.call(hash, key);\n}\n\nmodule.exports = hashHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_hashHas.js\n// module id = 42\n// module chunks = 0","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the associative array `key` to `value`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n */\nfunction assocSet(array, key, value) {\n  var index = assocIndexOf(array, key);\n  if (index < 0) {\n    array.push([key, value]);\n  } else {\n    array[index][1] = value;\n  }\n}\n\nmodule.exports = assocSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_assocSet.js\n// module id = 43\n// module chunks = 0","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObject = require('./isObject'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {boolean} [bitmask] The bitmask of comparison flags.\n *  The bitmask may be composed of the following flags:\n *     1 - Unordered comparison\n *     2 - Partial comparison\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, bitmask, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n}\n\nmodule.exports = baseIsEqual;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_baseIsEqual.js\n// module id = 44\n// module chunks = 0","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_Symbol.js\n// module id = 45\n// module chunks = 0","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined` the `defaultValue` is used in its place.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/get.js\n// module id = 46\n// module chunks = 0","var baseToPath = require('./_baseToPath'),\n    isKey = require('./_isKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path + ''] : baseToPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[path[index++]];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_baseGet.js\n// module id = 47\n// module chunks = 0","var isArray = require('./isArray'),\n    stringToPath = require('./_stringToPath');\n\n/**\n * The base implementation of `_.toPath` which only converts `value` to a\n * path if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Array} Returns the property path array.\n */\nfunction baseToPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\nmodule.exports = baseToPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_baseToPath.js\n// module id = 48\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.default = functor;\n\nvar _ramda = require('ramda');\n\nfunction functor(v) {\n  return (0, _ramda.is)(Function, v) ? v : function () {\n    return v;\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/d3tooltip/lib/utils/functor.js\n// module id = 49\n// module chunks = 0","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar getPrototypeOf = Object.getPrototypeOf;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n  // that are composed entirely of index properties, return `false` for\n  // `hasOwnProperty` checks of them.\n  return hasOwnProperty.call(object, key) ||\n    (typeof object == 'object' && key in object && getPrototypeOf(object) === null);\n}\n\nmodule.exports = baseHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseHas.js\n// module id = 50\n// module chunks = 0","var isArrayLikeObject = require('./isArrayLikeObject');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\nmodule.exports = isArguments;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/isArguments.js\n// module id = 51\n// module chunks = 0","var getLength = require('./_getLength'),\n    isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null &&\n    !(typeof value == 'function' && isFunction(value)) && isLength(getLength(value));\n}\n\nmodule.exports = isArrayLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/isArrayLike.js\n// module id = 52\n// module chunks = 0","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseProperty.js\n// module id = 53\n// module chunks = 0","var isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array constructors, and\n  // PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\nmodule.exports = isFunction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/isFunction.js\n// module id = 54\n// module chunks = 0","var isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\nmodule.exports = isString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/isString.js\n// module id = 55\n// module chunks = 0","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_isIndex.js\n// module id = 56\n// module chunks = 0","var stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @param {Array} [values] The values to cache.\n */\nfunction Stack(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = values[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add functions to the `Stack` cache.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_Stack.js\n// module id = 57\n// module chunks = 0","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the associative array.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction assocDelete(array, key) {\n  var index = assocIndexOf(array, key);\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = array.length - 1;\n  if (index == lastIndex) {\n    array.pop();\n  } else {\n    splice.call(array, index, 1);\n  }\n  return true;\n}\n\nmodule.exports = assocDelete;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_assocDelete.js\n// module id = 58\n// module chunks = 0","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the associative array value for `key`.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction assocGet(array, key) {\n  var index = assocIndexOf(array, key);\n  return index < 0 ? undefined : array[index][1];\n}\n\nmodule.exports = assocGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_assocGet.js\n// module id = 59\n// module chunks = 0","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if an associative array value for `key` exists.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction assocHas(array, key) {\n  return assocIndexOf(array, key) > -1;\n}\n\nmodule.exports = assocHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_assocHas.js\n// module id = 60\n// module chunks = 0","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @param {Object} hash The hash to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(hash, key) {\n  return nativeCreate ? hash[key] !== undefined : hasOwnProperty.call(hash, key);\n}\n\nmodule.exports = hashHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_hashHas.js\n// module id = 61\n// module chunks = 0","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the associative array `key` to `value`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n */\nfunction assocSet(array, key, value) {\n  var index = assocIndexOf(array, key);\n  if (index < 0) {\n    array.push([key, value]);\n  } else {\n    array[index][1] = value;\n  }\n}\n\nmodule.exports = assocSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_assocSet.js\n// module id = 62\n// module chunks = 0","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObject = require('./isObject'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {boolean} [bitmask] The bitmask of comparison flags.\n *  The bitmask may be composed of the following flags:\n *     1 - Unordered comparison\n *     2 - Partial comparison\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, bitmask, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n}\n\nmodule.exports = baseIsEqual;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseIsEqual.js\n// module id = 63\n// module chunks = 0","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_Symbol.js\n// module id = 64\n// module chunks = 0","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined` the `defaultValue` is used in its place.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/get.js\n// module id = 65\n// module chunks = 0","var baseToPath = require('./_baseToPath'),\n    isKey = require('./_isKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path + ''] : baseToPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[path[index++]];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseGet.js\n// module id = 66\n// module chunks = 0","var isArray = require('./isArray'),\n    stringToPath = require('./_stringToPath');\n\n/**\n * The base implementation of `_.toPath` which only converts `value` to a\n * path if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Array} Returns the property path array.\n */\nfunction baseToPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\nmodule.exports = baseToPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseToPath.js\n// module id = 67\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.default = functor;\n\nvar _ramda = require('ramda');\n\nfunction functor(v) {\n  return (0, _ramda.is)(Function, v) ? v : function () {\n    return v;\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3tooltip/lib/utils/functor.js\n// module id = 68\n// module chunks = 0","// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n// @remove-on-eject-end\n'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/config/polyfills.js\n// module id = 70\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._47 = null;\n  Promise._71 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._47 = function (promise) {\n    if (\n      promise._83 === 2 && // IS REJECTED\n      rejections[promise._56]\n    ) {\n      if (rejections[promise._56].logged) {\n        onHandled(promise._56);\n      } else {\n        clearTimeout(rejections[promise._56].timeout);\n      }\n      delete rejections[promise._56];\n    }\n  };\n  Promise._71 = function (promise, err) {\n    if (promise._75 === 0) { // not yet handled\n      promise._56 = id++;\n      rejections[promise._56] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._56),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/node_modules/promise/lib/rejection-tracking.js\n// module id = 71\n// module chunks = 0","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/asap/browser-raw.js\n// module id = 72\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/node_modules/promise/lib/es6-extensions.js\n// module id = 73\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/whatwg-fetch/fetch.js\n// module id = 74\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-assign/index.js\n// module id = 75\n// module chunks = 0","import { tree } from 'd3-state-visualizer';\nimport oldTree from './lib-before-fix/charts/tree/tree';\nimport update from 'immutability-helper';\n\nconst defaultAppState = {\n  test: [0],\n  todoStore: {\n    todos: [\n      { title: 'd3' },\n      { title: 'state' },\n      { title: 'visualizer' },\n      { title: 'tree' },\n    ],\n    completedCount: 1\n  },\n};\n\nconst appStates = [defaultAppState];\nappStates.push(\n  update(appStates[appStates.length - 1], { todoStore: { todos: { $unshift: [{ title: 'hey' }] } } })\n);\nappStates.push(\n  update(appStates[appStates.length - 1], { test: {$push: [1]}} )\n);\nappStates.push(\n  update(appStates[appStates.length - 1], { test: {$push: [2]}} )\n);\nappStates.push(\n  update(appStates[appStates.length - 1], { test: {$push: [3]}} )\n);\nappStates.push(\n  update(appStates[appStates.length - 1], { test: {\n    1: {$set: [42] },\n    3: {$set: [42] },\n  } })\n);\n\nappStates.push(update(appStates[appStates.length - 1], { todoStore: { $set: {}}}));\n\nconst config = {\n  state: defaultAppState,\n  id: 'treeExample',\n  size: 600,\n  aspectRatio: 0.5,\n  isSorted: false,\n  widthBetweenNodesCoeff: 1.5,\n  heightBetweenNodesCoeff: 2,\n  style: { border: '1px solid black' },\n  tooltipOptions: { offset: { left: 30, top: 10 }, indentationSize: 2 },\n  transitionDuration: 700\n};\nconst stateDuration = 2000\n\nconst oldRender = oldTree(document.getElementById('oldRoot'), update(config, { id: {$set: 'oldTreeExample'}}));\nconst render = tree(document.getElementById('root'), config);\n\nlet i = 0;\nconst updateState = () => {\n  i = (i + 1) % appStates.length;\n  oldRender(appStates[i]);\n  render(appStates[i]);\n}\nsetInterval(updateState, stateDuration);\nupdateState();\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","'use strict';\n\nexports.__esModule = true;\nexports.tree = undefined;\n\nvar _charts = require('./charts');\n\nObject.defineProperty(exports, 'tree', {\n  enumerable: true,\n  get: function get() {\n    return _charts.tree;\n  }\n});\n\nvar charts = _interopRequireWildcard(_charts);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.default = charts;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/lib/index.js\n// module id = 77\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.tree = undefined;\n\nvar _tree2 = require('./tree/tree');\n\nvar _tree3 = _interopRequireDefault(_tree2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.tree = _tree3.default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/lib/charts/index.js\n// module id = 78\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function (DOMNode) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _deepmerge = (0, _deepmerge3.default)(defaultOptions, options),\n      id = _deepmerge.id,\n      style = _deepmerge.style,\n      size = _deepmerge.size,\n      aspectRatio = _deepmerge.aspectRatio,\n      initialZoom = _deepmerge.initialZoom,\n      margin = _deepmerge.margin,\n      isSorted = _deepmerge.isSorted,\n      widthBetweenNodesCoeff = _deepmerge.widthBetweenNodesCoeff,\n      heightBetweenNodesCoeff = _deepmerge.heightBetweenNodesCoeff,\n      transitionDuration = _deepmerge.transitionDuration,\n      blinkDuration = _deepmerge.blinkDuration,\n      state = _deepmerge.state,\n      rootKeyName = _deepmerge.rootKeyName,\n      pushMethod = _deepmerge.pushMethod,\n      tree = _deepmerge.tree,\n      tooltipOptions = _deepmerge.tooltipOptions,\n      onClickText = _deepmerge.onClickText;\n\n  var width = size - margin.left - margin.right;\n  var height = size * aspectRatio - margin.top - margin.bottom;\n  var fullWidth = size;\n  var fullHeight = size * aspectRatio;\n\n  var attr = {\n    id: id,\n    preserveAspectRatio: 'xMinYMin slice'\n  };\n\n  if (!style.width) {\n    attr.width = fullWidth;\n  }\n\n  if (!style.width || !style.height) {\n    attr.viewBox = '0 0 ' + fullWidth + ' ' + fullHeight;\n  }\n\n  var root = _d4.default.select(DOMNode);\n  var zoom = _d4.default.behavior.zoom().scaleExtent([0.1, 3]).scale(initialZoom);\n  var vis = root.append('svg').attr(attr).style(_extends({ cursor: '-webkit-grab' }, style)).call(zoom.on('zoom', function () {\n    var _d3$event = _d4.default.event,\n        translate = _d3$event.translate,\n        scale = _d3$event.scale;\n\n    vis.attr('transform', 'translate(' + translate + ')scale(' + scale + ')');\n  })).append('g').attr({\n    transform: 'translate(' + (margin.left + style.node.radius) + ', ' + margin.top + ') scale(' + initialZoom + ')'\n  });\n\n  var layout = _d4.default.layout.tree().size([width, height]);\n  var data = void 0;\n\n  if (isSorted) {\n    layout.sort(function (a, b) {\n      return b.name.toLowerCase() < a.name.toLowerCase() ? 1 : -1;\n    });\n  }\n\n  // previousNodePositionsById stores node x and y\n  // as well as hierarchy (id / parentId);\n  // helps animating transitions\n  var previousNodePositionsById = {\n    root: {\n      id: 'root',\n      parentId: null,\n      x: height / 2,\n      y: 0\n    }\n\n    // traverses a map with node positions by going through the chain\n    // of parent ids; once a parent that matches the given filter is found,\n    // the parent position gets returned\n  };function findParentNodePosition(nodePositionsById, nodeId, filter) {\n    var currentPosition = nodePositionsById[nodeId];\n    while (currentPosition) {\n      currentPosition = nodePositionsById[currentPosition.parentId];\n      if (!currentPosition) {\n        return null;\n      }\n      if (!filter || filter(currentPosition)) {\n        return currentPosition;\n      }\n    }\n  }\n\n  return function renderChart() {\n    var nextState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : tree || state;\n\n    data = !tree ? (0, _map2tree2.default)(nextState, { key: rootKeyName, pushMethod: pushMethod }) : nextState;\n\n    if ((0, _ramda.isEmpty)(data) || !data.name) {\n      data = { name: 'error', message: 'Please provide a state map or a tree structure' };\n    }\n\n    var nodeIndex = 0;\n    var maxLabelLength = 0;\n\n    // nodes are assigned with string ids, which reflect their location\n    // within the hierarcy; e.g. \"root|branch|subBranch|subBranch[0]|property\"\n    // top-level elemnt always has id \"root\"\n    (0, _utils.visit)(data, function (node) {\n      maxLabelLength = Math.max(node.name.length, maxLabelLength);\n      node.id = node.id || 'root';\n    }, function (node) {\n      return node.children && node.children.length > 0 ? node.children.map(function (c) {\n        c.id = (node.id || '') + '|' + c.name;\n        return c;\n      }) : null;\n    });\n\n    /*eslint-disable*/\n    update();\n    /*eslint-enable*/\n\n    function update() {\n      // path generator for links\n      var diagonal = _d4.default.svg.diagonal().projection(function (d) {\n        return [d.y, d.x];\n      });\n      // set tree dimensions and spacing between branches and nodes\n      var maxNodeCountByLevel = Math.max.apply(Math, (0, _utils.getNodeGroupByDepthCount)(data));\n\n      layout = layout.size([maxNodeCountByLevel * 25 * heightBetweenNodesCoeff, width]);\n\n      var nodes = layout.nodes(data);\n      var links = layout.links(nodes);\n\n      nodes.forEach(function (node) {\n        return node.y = node.depth * (maxLabelLength * 7 * widthBetweenNodesCoeff);\n      });\n\n      var nodePositions = nodes.map(function (n) {\n        return {\n          parentId: n.parent && n.parent.id,\n          id: n.id,\n          x: n.x,\n          y: n.y\n        };\n      });\n      var nodePositionsById = {};\n      nodePositions.forEach(function (node) {\n        return nodePositionsById[node.id] = node;\n      });\n\n      // process the node selection\n      var node = vis.selectAll('g.node').property('__oldData__', function (d) {\n        return d;\n      }).data(nodes, function (d) {\n        return d.id || (d.id = ++nodeIndex);\n      });\n      var nodeEnter = node.enter().append('g').attr({\n        'class': 'node',\n        transform: function transform(d) {\n          var position = findParentNodePosition(nodePositionsById, d.id, function (n) {\n            return previousNodePositionsById[n.id];\n          });\n          var previousPosition = position && previousNodePositionsById[position.id] || previousNodePositionsById.root;\n          return 'translate(' + previousPosition.y + ',' + previousPosition.x + ')';\n        }\n      }).style({\n        fill: style.text.colors.default,\n        cursor: 'pointer'\n      }).on({\n        mouseover: function mouseover() {\n          _d4.default.select(this).style({\n            fill: style.text.colors.hover\n          });\n        },\n        mouseout: function mouseout() {\n          _d4.default.select(this).style({\n            fill: style.text.colors.default\n          });\n        }\n      });\n\n      if (!tooltipOptions.disabled) {\n        nodeEnter.call((0, _d3tooltip2.default)(_d4.default, 'tooltip', _extends({}, tooltipOptions, { root: root })).text(function (d, i) {\n          return (0, _utils.getTooltipString)(d, i, tooltipOptions);\n        }).style(tooltipOptions.style));\n      }\n\n      // g inside node contains circle and text\n      // this extra wrapper helps run d3 transitions in parallel\n      var nodeEnterInnerGroup = nodeEnter.append('g');\n      nodeEnterInnerGroup.append('circle').attr({\n        'class': 'nodeCircle',\n        r: 0\n      }).on({\n        click: function click(clickedNode) {\n          if (_d4.default.event.defaultPrevented) return;\n          (0, _utils.toggleChildren)(clickedNode);\n          update();\n        }\n      });\n\n      nodeEnterInnerGroup.append('text').attr({\n        'class': 'nodeText',\n        'text-anchor': 'middle',\n        'transform': 'translate(0,0)',\n        dy: '.35em'\n      }).style({\n        'fill-opacity': 0\n      }).text(function (d) {\n        return d.name;\n      }).on({\n        click: onClickText\n      });\n\n      // update the text to reflect whether node has children or not\n      node.select('text').text(function (d) {\n        return d.name;\n      });\n\n      // change the circle fill depending on whether it has children and is collapsed\n      node.select('circle').style({\n        stroke: 'black',\n        'stroke-width': '1.5px',\n        fill: function fill(d) {\n          return d._children ? style.node.colors.collapsed : d.children ? style.node.colors.parent : style.node.colors.default;\n        }\n      });\n\n      // transition nodes to their new position\n      var nodeUpdate = node.transition().duration(transitionDuration).attr({\n        transform: function transform(d) {\n          return 'translate(' + d.y + ',' + d.x + ')';\n        }\n      });\n\n      // ensure circle radius is correct\n      nodeUpdate.select('circle').attr('r', style.node.radius);\n\n      // fade the text in and align it\n      nodeUpdate.select('text').style('fill-opacity', 1).attr({\n        transform: function transform(d) {\n          var x = (d.children || d._children ? -1 : 1) * (this.getBBox().width / 2 + style.node.radius + 5);\n          return 'translate(' + x + ',0)';\n        }\n      });\n\n      // blink updated nodes\n      node.filter(function flick(d) {\n        // test whether the relevant properties of d match\n        // the equivalent property of the oldData\n        // also test whether the old data exists,\n        // to catch the entering elements!\n        return this.__oldData__ && d.value !== this.__oldData__.value;\n      }).select('g').style('opacity', '0.3').transition().duration(blinkDuration).style('opacity', '1');\n\n      // transition exiting nodes to the parent's new position\n      var nodeExit = node.exit().transition().duration(transitionDuration).attr({\n        transform: function transform(d) {\n          var position = findParentNodePosition(previousNodePositionsById, d.id, function (n) {\n            return nodePositionsById[n.id];\n          });\n          var futurePosition = position && nodePositionsById[position.id] || nodePositionsById.root;\n          return 'translate(' + futurePosition.y + ',' + futurePosition.x + ')';\n        }\n      }).remove();\n\n      nodeExit.select('circle').attr('r', 0);\n\n      nodeExit.select('text').style('fill-opacity', 0);\n\n      // update the links\n      var link = vis.selectAll('path.link').data(links, function (d) {\n        return d.target.id;\n      });\n\n      // enter any new links at the parent's previous position\n      link.enter().insert('path', 'g').attr({\n        'class': 'link',\n        d: function d(_d) {\n          var position = findParentNodePosition(nodePositionsById, _d.target.id, function (n) {\n            return previousNodePositionsById[n.id];\n          });\n          var previousPosition = position && previousNodePositionsById[position.id] || previousNodePositionsById.root;\n          return diagonal({\n            source: previousPosition,\n            target: previousPosition\n          });\n        }\n      }).style(style.link);\n\n      // transition links to their new position\n      link.transition().duration(transitionDuration).attr({\n        d: diagonal\n      });\n\n      // transition exiting nodes to the parent's new position\n      link.exit().transition().duration(transitionDuration).attr({\n        d: function d(_d2) {\n          var position = findParentNodePosition(previousNodePositionsById, _d2.target.id, function (n) {\n            return nodePositionsById[n.id];\n          });\n          var futurePosition = position && nodePositionsById[position.id] || nodePositionsById.root;\n          return diagonal({\n            source: futurePosition,\n            target: futurePosition\n          });\n        }\n      }).remove();\n\n      // delete the old data once it's no longer needed\n      node.property('__oldData__', null);\n\n      // stash the old positions for transition\n      previousNodePositionsById = nodePositionsById;\n    }\n  };\n};\n\nvar _d3 = require('d3');\n\nvar _d4 = _interopRequireDefault(_d3);\n\nvar _ramda = require('ramda');\n\nvar _map2tree = require('map2tree');\n\nvar _map2tree2 = _interopRequireDefault(_map2tree);\n\nvar _deepmerge2 = require('deepmerge');\n\nvar _deepmerge3 = _interopRequireDefault(_deepmerge2);\n\nvar _utils = require('./utils');\n\nvar _d3tooltip = require('d3tooltip');\n\nvar _d3tooltip2 = _interopRequireDefault(_d3tooltip);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultOptions = {\n  state: undefined,\n  rootKeyName: 'state',\n  pushMethod: 'push',\n  tree: undefined,\n  id: 'd3svg',\n  style: {\n    node: {\n      colors: {\n        'default': '#ccc',\n        collapsed: 'lightsteelblue',\n        parent: 'white'\n      },\n      radius: 7\n    },\n    text: {\n      colors: {\n        'default': 'black',\n        hover: 'skyblue'\n      }\n    },\n    link: {\n      stroke: '#000',\n      fill: 'none'\n    }\n  },\n  size: 500,\n  aspectRatio: 1.0,\n  initialZoom: 1,\n  margin: {\n    top: 10,\n    right: 10,\n    bottom: 10,\n    left: 50\n  },\n  isSorted: false,\n  heightBetweenNodesCoeff: 2,\n  widthBetweenNodesCoeff: 1,\n  transitionDuration: 750,\n  blinkDuration: 100,\n  onClickText: function onClickText() {},\n  tooltipOptions: {\n    disabled: false,\n    left: undefined,\n    right: undefined,\n    offset: {\n      left: 0,\n      top: 0\n    },\n    style: undefined\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/lib/charts/tree/tree.js\n// module id = 79\n// module chunks = 0","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/d3/d3.js\n// module id = 80\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.default = map2tree;\n\nvar _isArray = require('lodash/isArray');\n\nvar _isArray2 = _interopRequireDefault(_isArray);\n\nvar _isPlainObject = require('lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _mapValues = require('lodash/mapValues');\n\nvar _mapValues2 = _interopRequireDefault(_mapValues);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction visit(parent, visitFn, childrenFn) {\n  if (!parent) return;\n\n  visitFn(parent);\n\n  var children = childrenFn(parent);\n  if (children) {\n    var count = children.length;\n    for (var i = 0; i < count; i++) {\n      visit(children[i], visitFn, childrenFn);\n    }\n  }\n}\n\nfunction getNode(tree, key) {\n  var node = null;\n\n  visit(tree, function (d) {\n    if (d.name === key) {\n      node = d;\n    }\n  }, function (d) {\n    return d.children;\n  });\n\n  return node;\n}\n\nfunction map2tree(root) {\n  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n  var tree = arguments.length <= 2 || arguments[2] === undefined ? { name: options.key || 'state', children: [] } : arguments[2];\n\n  if (!(0, _isPlainObject2.default)(root) && root && !root.toJS) {\n    return {};\n  }\n\n  var _options$key = options.key;\n  var rootNodeKey = _options$key === undefined ? 'state' : _options$key;\n  var _options$pushMethod = options.pushMethod;\n  var pushMethod = _options$pushMethod === undefined ? 'push' : _options$pushMethod;\n\n  var currentNode = getNode(tree, rootNodeKey);\n\n  if (currentNode === null) {\n    return {};\n  }\n\n  (0, _mapValues2.default)(root && root.toJS ? root.toJS() : root, function (maybeImmutable, key) {\n    var value = maybeImmutable && maybeImmutable.toJS ? maybeImmutable.toJS() : maybeImmutable;\n    var newNode = { name: key };\n\n    if ((0, _isArray2.default)(value)) {\n      newNode.children = [];\n\n      for (var i = 0; i < value.length; i++) {\n        var _newNode$children$pus;\n\n        newNode.children[pushMethod]((_newNode$children$pus = {\n          name: key + '[' + i + ']'\n        }, _newNode$children$pus[(0, _isPlainObject2.default)(value[i]) ? 'object' : 'value'] = value[i], _newNode$children$pus));\n      }\n    } else if ((0, _isPlainObject2.default)(value)) {\n      newNode.children = [];\n    } else {\n      newNode.value = value;\n    }\n\n    currentNode.children[pushMethod](newNode);\n\n    map2tree(value, { key: key, pushMethod: pushMethod }, tree);\n  });\n\n  return tree;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/map2tree/lib/index.js\n// module id = 81\n// module chunks = 0","var isHostObject = require('./_isHostObject'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar getPrototypeOf = Object.getPrototypeOf;\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = objectProto;\n  if (typeof value.constructor == 'function') {\n    proto = getPrototypeOf(value);\n  }\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/isPlainObject.js\n// module id = 82\n// module chunks = 0","var baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated by\n * running each own enumerable property of `object` through `iteratee`. The\n * iteratee function is invoked with three arguments: (value, key, object).\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    result[key] = iteratee(value, key, object);\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/mapValues.js\n// module id = 83\n// module chunks = 0","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_baseForOwn.js\n// module id = 84\n// module chunks = 0","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\n * each property. Iteratee functions may exit iteration early by explicitly\n * returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_baseFor.js\n// module id = 85\n// module chunks = 0","/**\n * Creates a base function for methods like `_.forIn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_createBaseFor.js\n// module id = 86\n// module chunks = 0","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = Object.keys;\n\n/**\n * The base implementation of `_.keys` which doesn't skip the constructor\n * property of prototypes or treat sparse arrays as dense.\n *\n * @private\n * @type Function\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  return nativeKeys(Object(object));\n}\n\nmodule.exports = baseKeys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_baseKeys.js\n// module id = 87\n// module chunks = 0","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isLength = require('./isLength'),\n    isString = require('./isString');\n\n/**\n * Creates an array of index keys for `object` values of arrays,\n * `arguments` objects, and strings, otherwise `null` is returned.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array|null} Returns index keys, else `null`.\n */\nfunction indexKeys(object) {\n  var length = object ? object.length : undefined;\n  if (isLength(length) &&\n      (isArray(object) || isString(object) || isArguments(object))) {\n    return baseTimes(length, String);\n  }\n  return null;\n}\n\nmodule.exports = indexKeys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_indexKeys.js\n// module id = 88\n// module chunks = 0","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_baseTimes.js\n// module id = 89\n// module chunks = 0","var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object, else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/isArrayLikeObject.js\n// module id = 90\n// module chunks = 0","var baseProperty = require('./_baseProperty');\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\nmodule.exports = getLength;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_getLength.js\n// module id = 91\n// module chunks = 0","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_isPrototype.js\n// module id = 92\n// module chunks = 0","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  var type = typeof value;\n  if (type == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (type == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_baseIteratee.js\n// module id = 93\n// module chunks = 0","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    var key = matchData[0][0],\n        value = matchData[0][1];\n\n    return function(object) {\n      if (object == null) {\n        return false;\n      }\n      return object[key] === value &&\n        (value !== undefined || (key in Object(object)));\n    };\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_baseMatches.js\n// module id = 94\n// module chunks = 0","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack,\n          result = customizer ? customizer(objValue, srcValue, key, object, source, stack) : undefined;\n\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_baseIsMatch.js\n// module id = 95\n// module chunks = 0","/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = { 'array': [], 'map': null };\n}\n\nmodule.exports = stackClear;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_stackClear.js\n// module id = 96\n// module chunks = 0","var assocDelete = require('./_assocDelete');\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      array = data.array;\n\n  return array ? assocDelete(array, key) : data.map['delete'](key);\n}\n\nmodule.exports = stackDelete;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_stackDelete.js\n// module id = 97\n// module chunks = 0","/**\n * Performs a [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'user': 'fred' };\n * var other = { 'user': 'fred' };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/eq.js\n// module id = 98\n// module chunks = 0","var assocGet = require('./_assocGet');\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  var data = this.__data__,\n      array = data.array;\n\n  return array ? assocGet(array, key) : data.map.get(key);\n}\n\nmodule.exports = stackGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_stackGet.js\n// module id = 99\n// module chunks = 0","var assocHas = require('./_assocHas');\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  var data = this.__data__,\n      array = data.array;\n\n  return array ? assocHas(array, key) : data.map.has(key);\n}\n\nmodule.exports = stackHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_stackHas.js\n// module id = 100\n// module chunks = 0","var MapCache = require('./_MapCache'),\n    assocSet = require('./_assocSet');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache object.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__,\n      array = data.array;\n\n  if (array) {\n    if (array.length < (LARGE_ARRAY_SIZE - 1)) {\n      assocSet(array, key, value);\n    } else {\n      data.array = null;\n      data.map = new MapCache(array);\n    }\n  }\n  var map = data.map;\n  if (map) {\n    map.set(key, value);\n  }\n  return this;\n}\n\nmodule.exports = stackSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_stackSet.js\n// module id = 101\n// module chunks = 0","var mapClear = require('./_mapClear'),\n    mapDelete = require('./_mapDelete'),\n    mapGet = require('./_mapGet'),\n    mapHas = require('./_mapHas'),\n    mapSet = require('./_mapSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @param {Array} [values] The values to cache.\n */\nfunction MapCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = values[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add functions to the `MapCache`.\nMapCache.prototype.clear = mapClear;\nMapCache.prototype['delete'] = mapDelete;\nMapCache.prototype.get = mapGet;\nMapCache.prototype.has = mapHas;\nMapCache.prototype.set = mapSet;\n\nmodule.exports = MapCache;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_MapCache.js\n// module id = 102\n// module chunks = 0","var Hash = require('./_Hash'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapClear() {\n  this.__data__ = { 'hash': new Hash, 'map': Map ? new Map : [], 'string': new Hash };\n}\n\nmodule.exports = mapClear;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_mapClear.js\n// module id = 103\n// module chunks = 0","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Creates an hash object.\n *\n * @private\n * @returns {Object} Returns the new hash object.\n */\nfunction Hash() {}\n\n// Avoid inheriting from `Object.prototype` when possible.\nHash.prototype = nativeCreate ? nativeCreate(null) : objectProto;\n\nmodule.exports = Hash;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_Hash.js\n// module id = 104\n// module chunks = 0","var isFunction = require('./isFunction'),\n    isHostObject = require('./_isHostObject'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns). */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(funcToString.call(value));\n  }\n  return isObjectLike(value) &&\n    (isHostObject(value) ? reIsNative : reIsHostCtor).test(value);\n}\n\nmodule.exports = isNative;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/isNative.js\n// module id = 105\n// module chunks = 0","/**\n * Checks if `value` is a global object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n */\nfunction checkGlobal(value) {\n  return (value && value.Object === Object) ? value : null;\n}\n\nmodule.exports = checkGlobal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_checkGlobal.js\n// module id = 106\n// module chunks = 0","var Map = require('./_Map'),\n    assocDelete = require('./_assocDelete'),\n    hashDelete = require('./_hashDelete'),\n    isKeyable = require('./_isKeyable');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapDelete(key) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    return hashDelete(typeof key == 'string' ? data.string : data.hash, key);\n  }\n  return Map ? data.map['delete'](key) : assocDelete(data.map, key);\n}\n\nmodule.exports = mapDelete;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_mapDelete.js\n// module id = 107\n// module chunks = 0","var hashHas = require('./_hashHas');\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(hash, key) {\n  return hashHas(hash, key) && delete hash[key];\n}\n\nmodule.exports = hashDelete;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_hashDelete.js\n// module id = 108\n// module chunks = 0","var Map = require('./_Map'),\n    assocGet = require('./_assocGet'),\n    hashGet = require('./_hashGet'),\n    isKeyable = require('./_isKeyable');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapGet(key) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    return hashGet(typeof key == 'string' ? data.string : data.hash, key);\n  }\n  return Map ? data.map.get(key) : assocGet(data.map, key);\n}\n\nmodule.exports = mapGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_mapGet.js\n// module id = 109\n// module chunks = 0","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @param {Object} hash The hash to query.\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(hash, key) {\n  if (nativeCreate) {\n    var result = hash[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(hash, key) ? hash[key] : undefined;\n}\n\nmodule.exports = hashGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_hashGet.js\n// module id = 110\n// module chunks = 0","var Map = require('./_Map'),\n    assocHas = require('./_assocHas'),\n    hashHas = require('./_hashHas'),\n    isKeyable = require('./_isKeyable');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapHas(key) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    return hashHas(typeof key == 'string' ? data.string : data.hash, key);\n  }\n  return Map ? data.map.has(key) : assocHas(data.map, key);\n}\n\nmodule.exports = mapHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_mapHas.js\n// module id = 111\n// module chunks = 0","var Map = require('./_Map'),\n    assocSet = require('./_assocSet'),\n    hashSet = require('./_hashSet'),\n    isKeyable = require('./_isKeyable');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache object.\n */\nfunction mapSet(key, value) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    hashSet(typeof key == 'string' ? data.string : data.hash, key, value);\n  } else if (Map) {\n    data.map.set(key, value);\n  } else {\n    assocSet(data.map, key, value);\n  }\n  return this;\n}\n\nmodule.exports = mapSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_mapSet.js\n// module id = 112\n// module chunks = 0","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n */\nfunction hashSet(hash, key, value) {\n  hash[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n}\n\nmodule.exports = hashSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_hashSet.js\n// module id = 113\n// module chunks = 0","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isHostObject = require('./_isHostObject'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for comparison styles. */\nvar PARTIAL_COMPARE_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = getTag(object);\n    if (objTag == argsTag) {\n      objTag = objectTag;\n    } else if (objTag != objectTag) {\n      objIsArr = isTypedArray(object);\n    }\n  }\n  if (!othIsArr) {\n    othTag = getTag(other);\n    if (othTag == argsTag) {\n      othTag = objectTag;\n    } else if (othTag != objectTag) {\n      othIsArr = isTypedArray(other);\n    }\n  }\n  var objIsObj = objTag == objectTag && !isHostObject(object),\n      othIsObj = othTag == objectTag && !isHostObject(other),\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !(objIsArr || objIsObj)) {\n    return equalByTag(object, other, objTag, equalFunc, customizer, bitmask);\n  }\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n  if (!isPartial) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, bitmask, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, bitmask, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_baseIsEqualDeep.js\n// module id = 114\n// module chunks = 0","var arraySome = require('./_arraySome');\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n * @param {Object} [stack] Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n  var index = -1,\n      isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      isUnordered = bitmask & UNORDERED_COMPARE_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(array, other);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (isUnordered) {\n      if (!arraySome(other, function(othValue) {\n            return arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack);\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  return result;\n}\n\nmodule.exports = equalArrays;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_equalArrays.js\n// module id = 115\n// module chunks = 0","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_arraySome.js\n// module id = 116\n// module chunks = 0","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = Symbol ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, equalFunc, customizer, bitmask) {\n  switch (tag) {\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n      // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n      // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n      return +object == +other;\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case numberTag:\n      // Treat `NaN` vs. `NaN` as equal.\n      return (object != +object) ? other != +other : object == +other;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings primitives and string\n      // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n      convert || (convert = setToArray);\n\n      // Recursively compare objects (susceptible to call stack limits).\n      return (isPartial || object.size == other.size) &&\n        equalFunc(convert(object), convert(other), customizer, bitmask | UNORDERED_COMPARE_FLAG);\n\n    case symbolTag:\n      return !!Symbol && (symbolValueOf.call(object) == symbolValueOf.call(other));\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_equalByTag.js\n// module id = 117\n// module chunks = 0","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_Uint8Array.js\n// module id = 118\n// module chunks = 0","/**\n * Converts `map` to an array.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_mapToArray.js\n// module id = 119\n// module chunks = 0","/**\n * Converts `set` to an array.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_setToArray.js\n// module id = 120\n// module chunks = 0","var baseHas = require('./_baseHas'),\n    keys = require('./keys');\n\n/** Used to compose bitmasks for comparison styles. */\nvar PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : baseHas(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  return result;\n}\n\nmodule.exports = equalObjects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_equalObjects.js\n// module id = 121\n// module chunks = 0","var Map = require('./_Map'),\n    Set = require('./_Set');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect maps and sets. */\nvar mapCtorString = Map ? funcToString.call(Map) : '',\n    setCtorString = Set ? funcToString.call(Set) : '';\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction getTag(value) {\n  return objectToString.call(value);\n}\n\n// Fallback for IE 11 providing `toStringTag` values for maps and sets.\nif ((Map && getTag(new Map) != mapTag) || (Set && getTag(new Set) != setTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : null,\n        ctorString = typeof Ctor == 'function' ? funcToString.call(Ctor) : '';\n\n    if (ctorString) {\n      if (ctorString == mapCtorString) {\n        return mapTag;\n      }\n      if (ctorString == setCtorString) {\n        return setTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_getTag.js\n// module id = 122\n// module chunks = 0","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_Set.js\n// module id = 123\n// module chunks = 0","var isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dateTag] = typedArrayTags[errorTag] =\ntypedArrayTags[funcTag] = typedArrayTags[mapTag] =\ntypedArrayTags[numberTag] = typedArrayTags[objectTag] =\ntypedArrayTags[regexpTag] = typedArrayTags[setTag] =\ntypedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nfunction isTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n}\n\nmodule.exports = isTypedArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/isTypedArray.js\n// module id = 124\n// module chunks = 0","var isStrictComparable = require('./_isStrictComparable'),\n    toPairs = require('./toPairs');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = toPairs(object),\n      length = result.length;\n\n  while (length--) {\n    result[length][2] = isStrictComparable(result[length][1]);\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_getMatchData.js\n// module id = 125\n// module chunks = 0","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_isStrictComparable.js\n// module id = 126\n// module chunks = 0","var baseToPairs = require('./_baseToPairs'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable key-value pairs for `object`.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the new array of key-value pairs.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.toPairs(new Foo);\n * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n */\nfunction toPairs(object) {\n  return baseToPairs(object, keys(object));\n}\n\nmodule.exports = toPairs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/toPairs.js\n// module id = 127\n// module chunks = 0","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n * of key-value pairs for `object` corresponding to the property names of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the new array of key-value pairs.\n */\nfunction baseToPairs(object, props) {\n  return arrayMap(props, function(key) {\n    return [key, object[key]];\n  });\n}\n\nmodule.exports = baseToPairs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_baseToPairs.js\n// module id = 128\n// module chunks = 0","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_arrayMap.js\n// module id = 129\n// module chunks = 0","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn');\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_baseMatchesProperty.js\n// module id = 130\n// module chunks = 0","var toString = require('./toString');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nfunction stringToPath(string) {\n  var result = [];\n  toString(string).replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n}\n\nmodule.exports = stringToPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_stringToPath.js\n// module id = 131\n// module chunks = 0","var Symbol = require('./_Symbol'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = Symbol ? symbolProto.toString : undefined;\n\n/**\n * Converts `value` to a string if it's not one. An empty string is returned\n * for `null` and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (value == null) {\n    return '';\n  }\n  if (isSymbol(value)) {\n    return Symbol ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/toString.js\n// module id = 132\n// module chunks = 0","var isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/isSymbol.js\n// module id = 133\n// module chunks = 0","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b.c');\n * // => true\n *\n * _.hasIn(object, ['a', 'b', 'c']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/hasIn.js\n// module id = 134\n// module chunks = 0","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_baseHasIn.js\n// module id = 135\n// module chunks = 0","var baseToPath = require('./_baseToPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isKey = require('./_isKey'),\n    isLength = require('./isLength'),\n    isString = require('./isString'),\n    last = require('./last'),\n    parent = require('./_parent');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  if (object == null) {\n    return false;\n  }\n  var result = hasFunc(object, path);\n  if (!result && !isKey(path)) {\n    path = baseToPath(path);\n    object = parent(object, path);\n    if (object != null) {\n      path = last(path);\n      result = hasFunc(object, path);\n    }\n  }\n  var length = object ? object.length : undefined;\n  return result || (\n    !!length && isLength(length) && isIndex(path, length) &&\n    (isArray(object) || isString(object) || isArguments(object))\n  );\n}\n\nmodule.exports = hasPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_hasPath.js\n// module id = 136\n// module chunks = 0","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array ? array.length : 0;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/last.js\n// module id = 137\n// module chunks = 0","var baseSlice = require('./_baseSlice'),\n    get = require('./get');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length == 1 ? object : get(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_parent.js\n// module id = 138\n// module chunks = 0","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_baseSlice.js\n// module id = 139\n// module chunks = 0","/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/identity.js\n// module id = 140\n// module chunks = 0","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': { 'c': 2 } } },\n *   { 'a': { 'b': { 'c': 1 } } }\n * ];\n *\n * _.map(objects, _.property('a.b.c'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/property.js\n// module id = 141\n// module chunks = 0","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/lodash/_basePropertyDeep.js\n// module id = 142\n// module chunks = 0","(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.deepmerge = factory();\n    }\n}(this, function () {\n\nreturn function deepmerge(target, src) {\n    var array = Array.isArray(src);\n    var dst = array && [] || {};\n\n    if (array) {\n        target = target || [];\n        dst = dst.concat(target);\n        src.forEach(function(e, i) {\n            if (typeof dst[i] === 'undefined') {\n                dst[i] = e;\n            } else if (typeof e === 'object') {\n                dst[i] = deepmerge(target[i], e);\n            } else {\n                if (target.indexOf(e) === -1) {\n                    dst.push(e);\n                }\n            }\n        });\n    } else {\n        if (target && typeof target === 'object') {\n            Object.keys(target).forEach(function (key) {\n                dst[key] = target[key];\n            })\n        }\n        Object.keys(src).forEach(function (key) {\n            if (typeof src[key] !== 'object' || !src[key]) {\n                dst[key] = src[key];\n            }\n            else {\n                if (!target[key]) {\n                    dst[key] = src[key];\n                } else {\n                    dst[key] = deepmerge(target[key], src[key]);\n                }\n            }\n        });\n    }\n\n    return dst;\n}\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/deepmerge/index.js\n// module id = 143\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.collapseChildren = collapseChildren;\nexports.expandChildren = expandChildren;\nexports.toggleChildren = toggleChildren;\nexports.visit = visit;\nexports.getNodeGroupByDepthCount = getNodeGroupByDepthCount;\nexports.getTooltipString = getTooltipString;\n\nvar _ramda = require('ramda');\n\nvar _sortAndSerialize = require('./sortAndSerialize');\n\nvar _sortAndSerialize2 = _interopRequireDefault(_sortAndSerialize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction collapseChildren(node) {\n  if (node.children) {\n    node._children = node.children;\n    node._children.forEach(collapseChildren);\n    node.children = null;\n  }\n}\n\nfunction expandChildren(node) {\n  if (node._children) {\n    node.children = node._children;\n    node.children.forEach(expandChildren);\n    node._children = null;\n  }\n}\n\nfunction toggleChildren(node) {\n  if (node.children) {\n    node._children = node.children;\n    node.children = null;\n  } else if (node._children) {\n    node.children = node._children;\n    node._children = null;\n  }\n  return node;\n}\n\nfunction visit(parent, visitFn, childrenFn) {\n  if (!parent) {\n    return;\n  }\n\n  visitFn(parent);\n\n  var children = childrenFn(parent);\n  if (children) {\n    var count = children.length;\n\n    for (var i = 0; i < count; i++) {\n      visit(children[i], visitFn, childrenFn);\n    }\n  }\n}\n\nfunction getNodeGroupByDepthCount(rootNode) {\n  var nodeGroupByDepthCount = [1];\n\n  var traverseFrom = function traverseFrom(node) {\n    var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (!node.children || node.children.length === 0) {\n      return 0;\n    }\n\n    if (nodeGroupByDepthCount.length <= depth + 1) {\n      nodeGroupByDepthCount.push(0);\n    }\n\n    nodeGroupByDepthCount[depth + 1] += node.children.length;\n\n    node.children.forEach(function (childNode) {\n      traverseFrom(childNode, depth + 1);\n    });\n  };\n\n  traverseFrom(rootNode);\n  return nodeGroupByDepthCount;\n}\n\nfunction getTooltipString(node, i, _ref) {\n  var _ref$indentationSize = _ref.indentationSize,\n      indentationSize = _ref$indentationSize === undefined ? 4 : _ref$indentationSize;\n\n  if (!(0, _ramda.is)(Object, node)) return '';\n\n  var spacer = (0, _ramda.join)('&nbsp;&nbsp;');\n  var cr2br = (0, _ramda.replace)(/\\n/g, '<br/>');\n  var spaces2nbsp = (0, _ramda.replace)(/\\s{2}/g, spacer(new Array(indentationSize)));\n  var json2html = (0, _ramda.pipe)(_sortAndSerialize2.default, cr2br, spaces2nbsp);\n\n  var children = node.children || node._children;\n\n  if (typeof node.value !== 'undefined') return json2html(node.value);\n  if (typeof node.object !== 'undefined') return json2html(node.object);\n  if (children && children.length) return 'childrenCount: ' + children.length;\n  return 'empty';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/lib/charts/tree/utils.js\n// module id = 144\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = sortAndSerialize;\n\nvar _ramda = require('ramda');\n\nfunction sortObject(obj, strict) {\n  if (obj instanceof Array) {\n    var ary = void 0;\n    if (strict) {\n      ary = obj.sort();\n    } else {\n      ary = obj;\n    }\n    return ary;\n  }\n\n  if (obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {\n    var tObj = {};\n    Object.keys(obj).sort().forEach(function (key) {\n      return tObj[key] = sortObject(obj[key]);\n    });\n    return tObj;\n  }\n\n  return obj;\n}\n\nfunction sortAndSerialize(obj) {\n  return JSON.stringify(sortObject(obj, true), undefined, 2);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/lib/charts/tree/sortAndSerialize.js\n// module id = 145\n// module chunks = 0","'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.__esModule = true;\nexports.default = tooltip;\n\nvar _ramda = require('ramda');\n\nvar _utils = require('./utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _ref = _utils2.default.default || _utils2.default;\n\nvar prependClass = _ref.prependClass;\nvar functor = _ref.functor;\n\nvar defaultOptions = {\n  left: undefined, // mouseX\n  top: undefined, // mouseY\n  offset: { left: 0, top: 0 },\n  root: undefined\n};\n\nfunction tooltip(d3) {\n  var className = arguments.length <= 1 || arguments[1] === undefined ? 'tooltip' : arguments[1];\n  var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n  var _defaultOptions$optio = _extends({}, defaultOptions, options);\n\n  var left = _defaultOptions$optio.left;\n  var top = _defaultOptions$optio.top;\n  var offset = _defaultOptions$optio.offset;\n  var root = _defaultOptions$optio.root;\n\n  var attrs = { 'class': className };\n  var text = function text() {\n    return '';\n  };\n  var styles = {};\n\n  var el = undefined;\n  var anchor = root || d3.select('body');\n  var rootNode = anchor.node();\n\n  function tip(selection) {\n    selection.on({\n      'mouseover.tip': function mouseoverTip(node) {\n        var _d3$mouse = d3.mouse(rootNode);\n\n        var mouseX = _d3$mouse[0];\n        var mouseY = _d3$mouse[1];\n        var x = left || mouseX + offset.left;\n        var y = top || mouseY - offset.top;\n\n        anchor.selectAll('div.' + className).remove();\n\n        el = anchor.append('div').attr(prependClass(className)(attrs)).style(_extends({\n          position: 'absolute',\n          'z-index': 1001,\n          left: x + 'px',\n          top: y + 'px'\n        }, styles)).html(function () {\n          return text(node);\n        });\n      },\n\n      'mousemove.tip': function mousemoveTip(node) {\n        var _d3$mouse2 = d3.mouse(rootNode);\n\n        var mouseX = _d3$mouse2[0];\n        var mouseY = _d3$mouse2[1];\n        var x = left || mouseX + offset.left;\n        var y = top || mouseY - offset.top;\n\n        el.style({\n          left: x + 'px',\n          top: y + 'px'\n        }).html(function () {\n          return text(node);\n        });\n      },\n\n      'mouseout.tip': function mouseoutTip() {\n        return el.remove();\n      }\n    });\n  }\n\n  tip.attr = function setAttr(d) {\n    if ((0, _ramda.is)(Object, d)) {\n      attrs = _extends({}, attrs, d);\n    }\n    return this;\n  };\n\n  tip.style = function setStyle(d) {\n    if ((0, _ramda.is)(Object, d)) {\n      styles = _extends({}, styles, d);\n    }\n    return this;\n  };\n\n  tip.text = function setText(d) {\n    text = functor(d);\n    return this;\n  };\n\n  return tip;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/d3tooltip/lib/index.js\n// module id = 146\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _prependClass = require('./prependClass');\n\nvar _prependClass2 = _interopRequireDefault(_prependClass);\n\nvar _functor = require('./functor');\n\nvar _functor2 = _interopRequireDefault(_functor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  prependClass: _prependClass2.default,\n  functor: _functor2.default\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/d3tooltip/lib/utils/index.js\n// module id = 147\n// module chunks = 0","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nexports.__esModule = true;\nexports.default = prependClass;\n\nvar _ramda = require('ramda');\n\nvar _functor = require('./functor');\n\nvar _functor2 = _interopRequireDefault(_functor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction prependClass(className) {\n  return (0, _ramda.mapObjIndexed)(function (value, key) {\n    if (key === 'class') {\n      var _ret = function () {\n        var fn = (0, _functor2.default)(value);\n\n        return {\n          v: function v(d, i) {\n            var classNames = fn(d, i);\n            if (classNames !== className) {\n              return (0, _ramda.join)(' ', [className, classNames]);\n            }\n            return classNames;\n          }\n        };\n      }();\n\n      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n    }\n\n    return value;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../d3-state-visualizer/node_modules/d3tooltip/lib/utils/prependClass.js\n// module id = 148\n// module chunks = 0","import d3 from 'd3'\nimport { isEmpty } from 'ramda'\nimport map2tree from 'map2tree'\nimport deepmerge from 'deepmerge'\nimport { getTooltipString, toggleChildren, visit, getNodeGroupByDepthCount } from './utils'\nimport d3tooltip from 'd3tooltip'\n\nconst defaultOptions = {\n  state: undefined,\n  rootKeyName: 'state',\n  pushMethod: 'push',\n  tree: undefined,\n  id: 'd3svg',\n  style: {\n    node: {\n      colors: {\n        'default': '#ccc',\n        collapsed: 'lightsteelblue',\n        parent: 'white'\n      },\n      radius: 5\n    },\n    text: {\n      colors: {\n        'default': 'black',\n        hover: 'skyblue'\n      }\n    },\n    link: {\n      stroke: '#000',\n      fill: 'none'\n    }\n  },\n  size: 500,\n  aspectRatio: 1.0,\n  initialZoom: 1,\n  margin: {\n    top: 10,\n    right: 10,\n    bottom: 10,\n    left: 50\n  },\n  isSorted: false,\n  heightBetweenNodesCoeff: 2,\n  widthBetweenNodesCoeff: 1,\n  transitionDuration: 750,\n  onClickText: () => {},\n  tooltipOptions: {\n    disabled: false,\n    left: undefined,\n    right: undefined,\n    offset: {\n      left: 0,\n      top: 0\n    },\n    style: undefined\n  }\n}\n\nexport default function(DOMNode, options = {}) {\n  const {\n    id,\n    style,\n    size,\n    aspectRatio,\n    initialZoom,\n    margin,\n    isSorted,\n    widthBetweenNodesCoeff,\n    heightBetweenNodesCoeff,\n    transitionDuration,\n    state,\n    rootKeyName,\n    pushMethod,\n    tree,\n    tooltipOptions,\n    onClickText\n    } = deepmerge(defaultOptions, options)\n\n  const width = size - margin.left - margin.right\n  const height = size * aspectRatio - margin.top - margin.bottom\n  const fullWidth = size\n  const fullHeight = size * aspectRatio\n\n  const attr = {\n    id,\n    preserveAspectRatio: 'xMinYMin slice'\n  }\n\n  if (!style.width) {\n    attr.width = fullWidth\n  }\n\n  if (!style.width || !style.height) {\n    attr.viewBox = `0 0 ${fullWidth} ${fullHeight}`\n  }\n\n  const root = d3.select(DOMNode)\n  const zoom = d3.behavior.zoom()\n    .scaleExtent([0.1, 3])\n    .scale(initialZoom)\n  const vis = root\n    .append('svg')\n    .attr(attr)\n    .style({cursor: '-webkit-grab', ...style})\n    .call(zoom.on('zoom', () => {\n      const { translate, scale } = d3.event\n      vis.attr('transform', `translate(${translate})scale(${scale})`)\n    }))\n    .append('g')\n    .attr({\n      transform: `translate(${margin.left + style.node.radius}, ${margin.top}) scale(${initialZoom})`\n    })\n\n  let layout = d3.layout.tree().size([width, height])\n  let data\n\n  if (isSorted) {\n    layout.sort((a, b) => b.name.toLowerCase() < a.name.toLowerCase() ? 1 : -1)\n  }\n\n  return function renderChart(nextState = tree || state) {\n    data = !tree ? map2tree(nextState, {key: rootKeyName, pushMethod}) : nextState\n\n    if (isEmpty(data) || !data.name) {\n      data = { name: 'error', message: 'Please provide a state map or a tree structure'}\n    }\n\n    let nodeIndex = 0\n    let maxLabelLength = 0\n\n    visit(data,\n        node => maxLabelLength = Math.max(node.name.length, maxLabelLength),\n        node => node.children && node.children.length > 0 ? node.children : null\n    )\n\n    data.x0 = height / 2\n    data.y0 = 0\n    /*eslint-disable*/\n    update(data)\n    /*eslint-enable*/\n\n    function update(source) {\n      // path generator for links\n      const diagonal = d3.svg.diagonal().projection(d => [d.y, d.x])\n      // set tree dimensions and spacing between branches and nodes\n      const maxNodeCountByLevel = Math.max(...getNodeGroupByDepthCount(data))\n\n      layout = layout.size([maxNodeCountByLevel * 25 * heightBetweenNodesCoeff, width])\n\n      let nodes = layout.nodes(data)\n      let links = layout.links(nodes)\n\n      nodes.forEach(node => node.y = node.depth * (maxLabelLength * 7 * widthBetweenNodesCoeff))\n\n      // process the node selection\n      let node = vis.selectAll('g.node')\n        .property('__oldData__', d => d)\n        .data(nodes, d => d.id || (d.id = ++nodeIndex))\n\n      let nodeEnter = node.enter().append('g')\n        .attr({\n          'class': 'node',\n          transform: d => `translate(${source.y0},${source.x0})`\n        })\n        .style({\n          fill: style.text.colors.default,\n          cursor: 'pointer'\n        })\n        .on({\n          mouseover: function mouseover(d, i) {\n            d3.select(this).style({\n              fill: style.text.colors.hover\n            })\n          },\n          mouseout: function mouseout(d, i) {\n            d3.select(this).style({\n              fill: style.text.colors.default\n            })\n          }\n        })\n\n      if (!tooltipOptions.disabled) {\n        nodeEnter.call(d3tooltip(d3, 'tooltip', {...tooltipOptions, root})\n          .text((d, i) => getTooltipString(d, i, tooltipOptions))\n          .style(tooltipOptions.style)\n        )\n      }\n\n      nodeEnter.append('circle')\n        .attr({\n          'class': 'nodeCircle'\n        })\n        .on({\n          click: clickedNode => {\n            if (d3.event.defaultPrevented) return\n            update(toggleChildren(clickedNode))\n          }\n        })\n\n      nodeEnter.append('text')\n        .attr({\n          'class': 'nodeText',\n          dy: '.35em'\n        })\n        .style({\n          'fill-opacity': 0\n        })\n        .text(d => d.name)\n        .on({\n          click: onClickText\n        })\n\n      // update the text to reflect whether node has children or not\n      node.select('text')\n        .attr({\n          x: d => d.children || d._children ? -(style.node.radius + 10) : style.node.radius + 10,\n          'text-anchor': d => d.children || d._children ? 'end' : 'start'\n        })\n        .text(d => d.name)\n\n      // change the circle fill depending on whether it has children and is collapsed\n      node.select('circle.nodeCircle')\n        .attr({\n          r: style.node.radius\n        })\n        .style({\n          stroke: 'black',\n          'stroke-width': '1.5px',\n          fill: d => d._children ? style.node.colors.collapsed : (d.children ? style.node.colors.parent : style.node.colors.default)\n        })\n\n      // transition nodes to their new position\n      let nodeUpdate = node.transition()\n        .duration(transitionDuration)\n        .attr({\n          transform: d => `translate(${d.y},${d.x})`\n        })\n\n      // fade the text in\n      nodeUpdate.select('text')\n        .style('fill-opacity', 1)\n\n      // restore the circle\n      nodeUpdate.select('circle').attr('r', 7)\n\n      // blink updated nodes\n      nodeUpdate.filter(function flick(d) {\n        // test whether the relevant properties of d match\n        // the equivalent property of the oldData\n        // also test whether the old data exists,\n        // to catch the entering elements!\n        return (!this.__oldData__ || d.value !== this.__oldData__.value)\n      })\n        .style('fill-opacity', '0.3').transition()\n        .duration(100).style('fill-opacity', '1')\n\n      // transition exiting nodes to the parent's new position\n      let nodeExit = node.exit().transition()\n        .duration(transitionDuration)\n        .attr({\n          transform: d => `translate(${source.y},${source.x})`\n        })\n        .remove()\n\n      nodeExit.select('circle')\n        .attr('r', 0)\n\n      nodeExit.select('text')\n        .style('fill-opacity', 0)\n\n      // update the links\n      let link = vis.selectAll('path.link')\n        .data(links, d => d.target.id)\n\n      // enter any new links at the parent's previous position\n      link.enter().insert('path', 'g')\n        .attr({\n          'class': 'link',\n          d: d => {\n            let o = {\n              x: source.x0,\n              y: source.y0\n            }\n            return diagonal({\n              source: o,\n              target: o\n            })\n          }\n        })\n        .style(style.link)\n\n      // transition links to their new position\n      link.transition()\n        .duration(transitionDuration)\n        .attr({\n          d: diagonal\n        })\n\n      // transition exiting nodes to the parent's new position\n      link.exit().transition()\n        .duration(transitionDuration)\n        .attr({\n          d: d => {\n            let o = {\n              x: source.x,\n              y: source.y\n            }\n            return diagonal({\n              source: o,\n              target: o\n            })\n          }\n        })\n        .remove()\n\n      // delete the old data once it's no longer needed\n      node.property('__oldData__', null)\n\n      // stash the old positions for transition\n      nodes.forEach(d => {\n        d.x0 = d.x\n        d.y0 = d.y\n      })\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib-before-fix/charts/tree/tree.js","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3/d3.js\n// module id = 150\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.default = map2tree;\n\nvar _isArray = require('lodash/isArray');\n\nvar _isArray2 = _interopRequireDefault(_isArray);\n\nvar _isPlainObject = require('lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _mapValues = require('lodash/mapValues');\n\nvar _mapValues2 = _interopRequireDefault(_mapValues);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction visit(parent, visitFn, childrenFn) {\n  if (!parent) return;\n\n  visitFn(parent);\n\n  var children = childrenFn(parent);\n  if (children) {\n    var count = children.length;\n    for (var i = 0; i < count; i++) {\n      visit(children[i], visitFn, childrenFn);\n    }\n  }\n}\n\nfunction getNode(tree, key) {\n  var node = null;\n\n  visit(tree, function (d) {\n    if (d.name === key) {\n      node = d;\n    }\n  }, function (d) {\n    return d.children;\n  });\n\n  return node;\n}\n\nfunction map2tree(root) {\n  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n  var tree = arguments.length <= 2 || arguments[2] === undefined ? { name: options.key || 'state', children: [] } : arguments[2];\n\n  if (!(0, _isPlainObject2.default)(root) && root && !root.toJS) {\n    return {};\n  }\n\n  var _options$key = options.key;\n  var rootNodeKey = _options$key === undefined ? 'state' : _options$key;\n  var _options$pushMethod = options.pushMethod;\n  var pushMethod = _options$pushMethod === undefined ? 'push' : _options$pushMethod;\n\n  var currentNode = getNode(tree, rootNodeKey);\n\n  if (currentNode === null) {\n    return {};\n  }\n\n  (0, _mapValues2.default)(root && root.toJS ? root.toJS() : root, function (maybeImmutable, key) {\n    var value = maybeImmutable && maybeImmutable.toJS ? maybeImmutable.toJS() : maybeImmutable;\n    var newNode = { name: key };\n\n    if ((0, _isArray2.default)(value)) {\n      newNode.children = [];\n\n      for (var i = 0; i < value.length; i++) {\n        var _newNode$children$pus;\n\n        newNode.children[pushMethod]((_newNode$children$pus = {\n          name: key + '[' + i + ']'\n        }, _newNode$children$pus[(0, _isPlainObject2.default)(value[i]) ? 'object' : 'value'] = value[i], _newNode$children$pus));\n      }\n    } else if ((0, _isPlainObject2.default)(value)) {\n      newNode.children = [];\n    } else {\n      newNode.value = value;\n    }\n\n    currentNode.children[pushMethod](newNode);\n\n    map2tree(value, { key: key, pushMethod: pushMethod }, tree);\n  });\n\n  return tree;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/lib/index.js\n// module id = 151\n// module chunks = 0","var isHostObject = require('./_isHostObject'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar getPrototypeOf = Object.getPrototypeOf;\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = objectProto;\n  if (typeof value.constructor == 'function') {\n    proto = getPrototypeOf(value);\n  }\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/isPlainObject.js\n// module id = 152\n// module chunks = 0","var baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated by\n * running each own enumerable property of `object` through `iteratee`. The\n * iteratee function is invoked with three arguments: (value, key, object).\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    result[key] = iteratee(value, key, object);\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/mapValues.js\n// module id = 153\n// module chunks = 0","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseForOwn.js\n// module id = 154\n// module chunks = 0","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\n * each property. Iteratee functions may exit iteration early by explicitly\n * returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseFor.js\n// module id = 155\n// module chunks = 0","/**\n * Creates a base function for methods like `_.forIn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_createBaseFor.js\n// module id = 156\n// module chunks = 0","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = Object.keys;\n\n/**\n * The base implementation of `_.keys` which doesn't skip the constructor\n * property of prototypes or treat sparse arrays as dense.\n *\n * @private\n * @type Function\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  return nativeKeys(Object(object));\n}\n\nmodule.exports = baseKeys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseKeys.js\n// module id = 157\n// module chunks = 0","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isLength = require('./isLength'),\n    isString = require('./isString');\n\n/**\n * Creates an array of index keys for `object` values of arrays,\n * `arguments` objects, and strings, otherwise `null` is returned.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array|null} Returns index keys, else `null`.\n */\nfunction indexKeys(object) {\n  var length = object ? object.length : undefined;\n  if (isLength(length) &&\n      (isArray(object) || isString(object) || isArguments(object))) {\n    return baseTimes(length, String);\n  }\n  return null;\n}\n\nmodule.exports = indexKeys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_indexKeys.js\n// module id = 158\n// module chunks = 0","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseTimes.js\n// module id = 159\n// module chunks = 0","var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object, else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/isArrayLikeObject.js\n// module id = 160\n// module chunks = 0","var baseProperty = require('./_baseProperty');\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\nmodule.exports = getLength;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_getLength.js\n// module id = 161\n// module chunks = 0","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_isPrototype.js\n// module id = 162\n// module chunks = 0","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  var type = typeof value;\n  if (type == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (type == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseIteratee.js\n// module id = 163\n// module chunks = 0","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    var key = matchData[0][0],\n        value = matchData[0][1];\n\n    return function(object) {\n      if (object == null) {\n        return false;\n      }\n      return object[key] === value &&\n        (value !== undefined || (key in Object(object)));\n    };\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseMatches.js\n// module id = 164\n// module chunks = 0","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack,\n          result = customizer ? customizer(objValue, srcValue, key, object, source, stack) : undefined;\n\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseIsMatch.js\n// module id = 165\n// module chunks = 0","/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = { 'array': [], 'map': null };\n}\n\nmodule.exports = stackClear;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_stackClear.js\n// module id = 166\n// module chunks = 0","var assocDelete = require('./_assocDelete');\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      array = data.array;\n\n  return array ? assocDelete(array, key) : data.map['delete'](key);\n}\n\nmodule.exports = stackDelete;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_stackDelete.js\n// module id = 167\n// module chunks = 0","/**\n * Performs a [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'user': 'fred' };\n * var other = { 'user': 'fred' };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/eq.js\n// module id = 168\n// module chunks = 0","var assocGet = require('./_assocGet');\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  var data = this.__data__,\n      array = data.array;\n\n  return array ? assocGet(array, key) : data.map.get(key);\n}\n\nmodule.exports = stackGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_stackGet.js\n// module id = 169\n// module chunks = 0","var assocHas = require('./_assocHas');\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  var data = this.__data__,\n      array = data.array;\n\n  return array ? assocHas(array, key) : data.map.has(key);\n}\n\nmodule.exports = stackHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_stackHas.js\n// module id = 170\n// module chunks = 0","var MapCache = require('./_MapCache'),\n    assocSet = require('./_assocSet');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache object.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__,\n      array = data.array;\n\n  if (array) {\n    if (array.length < (LARGE_ARRAY_SIZE - 1)) {\n      assocSet(array, key, value);\n    } else {\n      data.array = null;\n      data.map = new MapCache(array);\n    }\n  }\n  var map = data.map;\n  if (map) {\n    map.set(key, value);\n  }\n  return this;\n}\n\nmodule.exports = stackSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_stackSet.js\n// module id = 171\n// module chunks = 0","var mapClear = require('./_mapClear'),\n    mapDelete = require('./_mapDelete'),\n    mapGet = require('./_mapGet'),\n    mapHas = require('./_mapHas'),\n    mapSet = require('./_mapSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @param {Array} [values] The values to cache.\n */\nfunction MapCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = values[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add functions to the `MapCache`.\nMapCache.prototype.clear = mapClear;\nMapCache.prototype['delete'] = mapDelete;\nMapCache.prototype.get = mapGet;\nMapCache.prototype.has = mapHas;\nMapCache.prototype.set = mapSet;\n\nmodule.exports = MapCache;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_MapCache.js\n// module id = 172\n// module chunks = 0","var Hash = require('./_Hash'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapClear() {\n  this.__data__ = { 'hash': new Hash, 'map': Map ? new Map : [], 'string': new Hash };\n}\n\nmodule.exports = mapClear;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_mapClear.js\n// module id = 173\n// module chunks = 0","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Creates an hash object.\n *\n * @private\n * @returns {Object} Returns the new hash object.\n */\nfunction Hash() {}\n\n// Avoid inheriting from `Object.prototype` when possible.\nHash.prototype = nativeCreate ? nativeCreate(null) : objectProto;\n\nmodule.exports = Hash;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_Hash.js\n// module id = 174\n// module chunks = 0","var isFunction = require('./isFunction'),\n    isHostObject = require('./_isHostObject'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns). */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(funcToString.call(value));\n  }\n  return isObjectLike(value) &&\n    (isHostObject(value) ? reIsNative : reIsHostCtor).test(value);\n}\n\nmodule.exports = isNative;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/isNative.js\n// module id = 175\n// module chunks = 0","/**\n * Checks if `value` is a global object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n */\nfunction checkGlobal(value) {\n  return (value && value.Object === Object) ? value : null;\n}\n\nmodule.exports = checkGlobal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_checkGlobal.js\n// module id = 176\n// module chunks = 0","var Map = require('./_Map'),\n    assocDelete = require('./_assocDelete'),\n    hashDelete = require('./_hashDelete'),\n    isKeyable = require('./_isKeyable');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapDelete(key) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    return hashDelete(typeof key == 'string' ? data.string : data.hash, key);\n  }\n  return Map ? data.map['delete'](key) : assocDelete(data.map, key);\n}\n\nmodule.exports = mapDelete;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_mapDelete.js\n// module id = 177\n// module chunks = 0","var hashHas = require('./_hashHas');\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(hash, key) {\n  return hashHas(hash, key) && delete hash[key];\n}\n\nmodule.exports = hashDelete;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_hashDelete.js\n// module id = 178\n// module chunks = 0","var Map = require('./_Map'),\n    assocGet = require('./_assocGet'),\n    hashGet = require('./_hashGet'),\n    isKeyable = require('./_isKeyable');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapGet(key) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    return hashGet(typeof key == 'string' ? data.string : data.hash, key);\n  }\n  return Map ? data.map.get(key) : assocGet(data.map, key);\n}\n\nmodule.exports = mapGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_mapGet.js\n// module id = 179\n// module chunks = 0","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @param {Object} hash The hash to query.\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(hash, key) {\n  if (nativeCreate) {\n    var result = hash[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(hash, key) ? hash[key] : undefined;\n}\n\nmodule.exports = hashGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_hashGet.js\n// module id = 180\n// module chunks = 0","var Map = require('./_Map'),\n    assocHas = require('./_assocHas'),\n    hashHas = require('./_hashHas'),\n    isKeyable = require('./_isKeyable');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapHas(key) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    return hashHas(typeof key == 'string' ? data.string : data.hash, key);\n  }\n  return Map ? data.map.has(key) : assocHas(data.map, key);\n}\n\nmodule.exports = mapHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_mapHas.js\n// module id = 181\n// module chunks = 0","var Map = require('./_Map'),\n    assocSet = require('./_assocSet'),\n    hashSet = require('./_hashSet'),\n    isKeyable = require('./_isKeyable');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache object.\n */\nfunction mapSet(key, value) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    hashSet(typeof key == 'string' ? data.string : data.hash, key, value);\n  } else if (Map) {\n    data.map.set(key, value);\n  } else {\n    assocSet(data.map, key, value);\n  }\n  return this;\n}\n\nmodule.exports = mapSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_mapSet.js\n// module id = 182\n// module chunks = 0","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n */\nfunction hashSet(hash, key, value) {\n  hash[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n}\n\nmodule.exports = hashSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_hashSet.js\n// module id = 183\n// module chunks = 0","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isHostObject = require('./_isHostObject'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for comparison styles. */\nvar PARTIAL_COMPARE_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = getTag(object);\n    if (objTag == argsTag) {\n      objTag = objectTag;\n    } else if (objTag != objectTag) {\n      objIsArr = isTypedArray(object);\n    }\n  }\n  if (!othIsArr) {\n    othTag = getTag(other);\n    if (othTag == argsTag) {\n      othTag = objectTag;\n    } else if (othTag != objectTag) {\n      othIsArr = isTypedArray(other);\n    }\n  }\n  var objIsObj = objTag == objectTag && !isHostObject(object),\n      othIsObj = othTag == objectTag && !isHostObject(other),\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !(objIsArr || objIsObj)) {\n    return equalByTag(object, other, objTag, equalFunc, customizer, bitmask);\n  }\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n  if (!isPartial) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, bitmask, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, bitmask, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseIsEqualDeep.js\n// module id = 184\n// module chunks = 0","var arraySome = require('./_arraySome');\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n * @param {Object} [stack] Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n  var index = -1,\n      isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      isUnordered = bitmask & UNORDERED_COMPARE_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(array, other);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (isUnordered) {\n      if (!arraySome(other, function(othValue) {\n            return arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack);\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  return result;\n}\n\nmodule.exports = equalArrays;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_equalArrays.js\n// module id = 185\n// module chunks = 0","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_arraySome.js\n// module id = 186\n// module chunks = 0","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = Symbol ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, equalFunc, customizer, bitmask) {\n  switch (tag) {\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n      // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n      // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n      return +object == +other;\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case numberTag:\n      // Treat `NaN` vs. `NaN` as equal.\n      return (object != +object) ? other != +other : object == +other;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings primitives and string\n      // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n      convert || (convert = setToArray);\n\n      // Recursively compare objects (susceptible to call stack limits).\n      return (isPartial || object.size == other.size) &&\n        equalFunc(convert(object), convert(other), customizer, bitmask | UNORDERED_COMPARE_FLAG);\n\n    case symbolTag:\n      return !!Symbol && (symbolValueOf.call(object) == symbolValueOf.call(other));\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_equalByTag.js\n// module id = 187\n// module chunks = 0","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_Uint8Array.js\n// module id = 188\n// module chunks = 0","/**\n * Converts `map` to an array.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_mapToArray.js\n// module id = 189\n// module chunks = 0","/**\n * Converts `set` to an array.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_setToArray.js\n// module id = 190\n// module chunks = 0","var baseHas = require('./_baseHas'),\n    keys = require('./keys');\n\n/** Used to compose bitmasks for comparison styles. */\nvar PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : baseHas(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  return result;\n}\n\nmodule.exports = equalObjects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_equalObjects.js\n// module id = 191\n// module chunks = 0","var Map = require('./_Map'),\n    Set = require('./_Set');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect maps and sets. */\nvar mapCtorString = Map ? funcToString.call(Map) : '',\n    setCtorString = Set ? funcToString.call(Set) : '';\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction getTag(value) {\n  return objectToString.call(value);\n}\n\n// Fallback for IE 11 providing `toStringTag` values for maps and sets.\nif ((Map && getTag(new Map) != mapTag) || (Set && getTag(new Set) != setTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : null,\n        ctorString = typeof Ctor == 'function' ? funcToString.call(Ctor) : '';\n\n    if (ctorString) {\n      if (ctorString == mapCtorString) {\n        return mapTag;\n      }\n      if (ctorString == setCtorString) {\n        return setTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_getTag.js\n// module id = 192\n// module chunks = 0","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_Set.js\n// module id = 193\n// module chunks = 0","var isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dateTag] = typedArrayTags[errorTag] =\ntypedArrayTags[funcTag] = typedArrayTags[mapTag] =\ntypedArrayTags[numberTag] = typedArrayTags[objectTag] =\ntypedArrayTags[regexpTag] = typedArrayTags[setTag] =\ntypedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nfunction isTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n}\n\nmodule.exports = isTypedArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/isTypedArray.js\n// module id = 194\n// module chunks = 0","var isStrictComparable = require('./_isStrictComparable'),\n    toPairs = require('./toPairs');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = toPairs(object),\n      length = result.length;\n\n  while (length--) {\n    result[length][2] = isStrictComparable(result[length][1]);\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_getMatchData.js\n// module id = 195\n// module chunks = 0","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_isStrictComparable.js\n// module id = 196\n// module chunks = 0","var baseToPairs = require('./_baseToPairs'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable key-value pairs for `object`.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the new array of key-value pairs.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.toPairs(new Foo);\n * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n */\nfunction toPairs(object) {\n  return baseToPairs(object, keys(object));\n}\n\nmodule.exports = toPairs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/toPairs.js\n// module id = 197\n// module chunks = 0","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n * of key-value pairs for `object` corresponding to the property names of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the new array of key-value pairs.\n */\nfunction baseToPairs(object, props) {\n  return arrayMap(props, function(key) {\n    return [key, object[key]];\n  });\n}\n\nmodule.exports = baseToPairs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseToPairs.js\n// module id = 198\n// module chunks = 0","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_arrayMap.js\n// module id = 199\n// module chunks = 0","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn');\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseMatchesProperty.js\n// module id = 200\n// module chunks = 0","var toString = require('./toString');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nfunction stringToPath(string) {\n  var result = [];\n  toString(string).replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n}\n\nmodule.exports = stringToPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_stringToPath.js\n// module id = 201\n// module chunks = 0","var Symbol = require('./_Symbol'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = Symbol ? symbolProto.toString : undefined;\n\n/**\n * Converts `value` to a string if it's not one. An empty string is returned\n * for `null` and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (value == null) {\n    return '';\n  }\n  if (isSymbol(value)) {\n    return Symbol ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/toString.js\n// module id = 202\n// module chunks = 0","var isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/isSymbol.js\n// module id = 203\n// module chunks = 0","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b.c');\n * // => true\n *\n * _.hasIn(object, ['a', 'b', 'c']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/hasIn.js\n// module id = 204\n// module chunks = 0","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseHasIn.js\n// module id = 205\n// module chunks = 0","var baseToPath = require('./_baseToPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isKey = require('./_isKey'),\n    isLength = require('./isLength'),\n    isString = require('./isString'),\n    last = require('./last'),\n    parent = require('./_parent');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  if (object == null) {\n    return false;\n  }\n  var result = hasFunc(object, path);\n  if (!result && !isKey(path)) {\n    path = baseToPath(path);\n    object = parent(object, path);\n    if (object != null) {\n      path = last(path);\n      result = hasFunc(object, path);\n    }\n  }\n  var length = object ? object.length : undefined;\n  return result || (\n    !!length && isLength(length) && isIndex(path, length) &&\n    (isArray(object) || isString(object) || isArguments(object))\n  );\n}\n\nmodule.exports = hasPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_hasPath.js\n// module id = 206\n// module chunks = 0","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array ? array.length : 0;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/last.js\n// module id = 207\n// module chunks = 0","var baseSlice = require('./_baseSlice'),\n    get = require('./get');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length == 1 ? object : get(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_parent.js\n// module id = 208\n// module chunks = 0","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseSlice.js\n// module id = 209\n// module chunks = 0","/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/identity.js\n// module id = 210\n// module chunks = 0","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': { 'c': 2 } } },\n *   { 'a': { 'b': { 'c': 1 } } }\n * ];\n *\n * _.map(objects, _.property('a.b.c'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/property.js\n// module id = 211\n// module chunks = 0","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_basePropertyDeep.js\n// module id = 212\n// module chunks = 0","(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.deepmerge = factory();\n    }\n}(this, function () {\n\nreturn function deepmerge(target, src) {\n    var array = Array.isArray(src);\n    var dst = array && [] || {};\n\n    if (array) {\n        target = target || [];\n        dst = dst.concat(target);\n        src.forEach(function(e, i) {\n            if (typeof dst[i] === 'undefined') {\n                dst[i] = e;\n            } else if (typeof e === 'object') {\n                dst[i] = deepmerge(target[i], e);\n            } else {\n                if (target.indexOf(e) === -1) {\n                    dst.push(e);\n                }\n            }\n        });\n    } else {\n        if (target && typeof target === 'object') {\n            Object.keys(target).forEach(function (key) {\n                dst[key] = target[key];\n            })\n        }\n        Object.keys(src).forEach(function (key) {\n            if (typeof src[key] !== 'object' || !src[key]) {\n                dst[key] = src[key];\n            }\n            else {\n                if (!target[key]) {\n                    dst[key] = src[key];\n                } else {\n                    dst[key] = deepmerge(target[key], src[key]);\n                }\n            }\n        });\n    }\n\n    return dst;\n}\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deepmerge/index.js\n// module id = 213\n// module chunks = 0","import { is, join, pipe, replace } from 'ramda';\nimport sortAndSerialize from './sortAndSerialize';\n\nexport function collapseChildren(node) {\n  if (node.children) {\n    node._children = node.children;\n    node._children.forEach(collapseChildren);\n    node.children = null;\n  }\n}\n\nexport function expandChildren(node) {\n  if (node._children) {\n    node.children = node._children;\n    node.children.forEach(expandChildren);\n    node._children = null;\n  }\n}\n\nexport function toggleChildren(node) {\n  if (node.children) {\n    node._children = node.children;\n    node.children = null;\n  } else if (node._children) {\n    node.children = node._children;\n    node._children = null;\n  }\n  return node;\n}\n\nexport function visit(parent, visitFn, childrenFn) {\n  if (!parent) {\n    return;\n  }\n\n  visitFn(parent);\n\n  let children = childrenFn(parent);\n  if (children) {\n    let count = children.length;\n\n    for (let i = 0; i < count; i++) {\n      visit(children[i], visitFn, childrenFn);\n    }\n  }\n}\n\nexport function getNodeGroupByDepthCount(rootNode) {\n  let nodeGroupByDepthCount = [1];\n\n  const traverseFrom = function traverseFrom(node, depth = 0) {\n    if (!node.children || node.children.length === 0) {\n      return 0;\n    }\n\n    if (nodeGroupByDepthCount.length <= depth + 1) {\n      nodeGroupByDepthCount.push(0);\n    }\n\n    nodeGroupByDepthCount[depth + 1] += node.children.length;\n\n    node.children.forEach(childNode => {\n      traverseFrom(childNode, depth + 1);\n    });\n  };\n\n  traverseFrom(rootNode);\n  return nodeGroupByDepthCount;\n}\n\nexport function getTooltipString(node, i, { indentationSize = 4 }) {\n  if (!is(Object, node)) return '';\n\n  const spacer = join('&nbsp;&nbsp;');\n  const cr2br = replace(/\\n/g, '<br/>');\n  const spaces2nbsp = replace(/\\s{2}/g, spacer(new Array(indentationSize)));\n  const json2html = pipe(sortAndSerialize, cr2br, spaces2nbsp);\n\n  const children = node.children || node._children;\n\n  if (typeof node.value !== 'undefined') return json2html(node.value);\n  if (typeof node.object !== 'undefined') return json2html(node.object);\n  if (children && children.length) return 'childrenCount: ' + children.length;\n  return 'empty';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib-before-fix/charts/tree/utils.js","import { is } from 'ramda'\n\nfunction sortObject(obj, strict) {\n  if (obj instanceof Array) {\n    let ary\n    if (strict) {\n      ary = obj.sort()\n    } else {\n      ary = obj\n    }\n    return ary\n  }\n\n  if (obj && typeof obj === 'object') {\n    const tObj = {}\n    Object.keys(obj).sort().forEach(key => tObj[key] = sortObject(obj[key]))\n    return tObj\n  }\n\n  return obj\n}\n\nexport default function sortAndSerialize(obj) {\n  return JSON.stringify(sortObject(obj, true), undefined, 2)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib-before-fix/charts/tree/sortAndSerialize.js","'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.__esModule = true;\nexports.default = tooltip;\n\nvar _ramda = require('ramda');\n\nvar _utils = require('./utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _ref = _utils2.default.default || _utils2.default;\n\nvar prependClass = _ref.prependClass;\nvar functor = _ref.functor;\n\nvar defaultOptions = {\n  left: undefined, // mouseX\n  top: undefined, // mouseY\n  offset: { left: 0, top: 0 },\n  root: undefined\n};\n\nfunction tooltip(d3) {\n  var className = arguments.length <= 1 || arguments[1] === undefined ? 'tooltip' : arguments[1];\n  var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n  var _defaultOptions$optio = _extends({}, defaultOptions, options);\n\n  var left = _defaultOptions$optio.left;\n  var top = _defaultOptions$optio.top;\n  var offset = _defaultOptions$optio.offset;\n  var root = _defaultOptions$optio.root;\n\n  var attrs = { 'class': className };\n  var text = function text() {\n    return '';\n  };\n  var styles = {};\n\n  var el = undefined;\n  var anchor = root || d3.select('body');\n  var rootNode = anchor.node();\n\n  function tip(selection) {\n    selection.on({\n      'mouseover.tip': function mouseoverTip(node) {\n        var _d3$mouse = d3.mouse(rootNode);\n\n        var mouseX = _d3$mouse[0];\n        var mouseY = _d3$mouse[1];\n        var x = left || mouseX + offset.left;\n        var y = top || mouseY - offset.top;\n\n        anchor.selectAll('div.' + className).remove();\n\n        el = anchor.append('div').attr(prependClass(className)(attrs)).style(_extends({\n          position: 'absolute',\n          'z-index': 1001,\n          left: x + 'px',\n          top: y + 'px'\n        }, styles)).html(function () {\n          return text(node);\n        });\n      },\n\n      'mousemove.tip': function mousemoveTip(node) {\n        var _d3$mouse2 = d3.mouse(rootNode);\n\n        var mouseX = _d3$mouse2[0];\n        var mouseY = _d3$mouse2[1];\n        var x = left || mouseX + offset.left;\n        var y = top || mouseY - offset.top;\n\n        el.style({\n          left: x + 'px',\n          top: y + 'px'\n        }).html(function () {\n          return text(node);\n        });\n      },\n\n      'mouseout.tip': function mouseoutTip() {\n        return el.remove();\n      }\n    });\n  }\n\n  tip.attr = function setAttr(d) {\n    if ((0, _ramda.is)(Object, d)) {\n      attrs = _extends({}, attrs, d);\n    }\n    return this;\n  };\n\n  tip.style = function setStyle(d) {\n    if ((0, _ramda.is)(Object, d)) {\n      styles = _extends({}, styles, d);\n    }\n    return this;\n  };\n\n  tip.text = function setText(d) {\n    text = functor(d);\n    return this;\n  };\n\n  return tip;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3tooltip/lib/index.js\n// module id = 216\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _prependClass = require('./prependClass');\n\nvar _prependClass2 = _interopRequireDefault(_prependClass);\n\nvar _functor = require('./functor');\n\nvar _functor2 = _interopRequireDefault(_functor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  prependClass: _prependClass2.default,\n  functor: _functor2.default\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3tooltip/lib/utils/index.js\n// module id = 217\n// module chunks = 0","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nexports.__esModule = true;\nexports.default = prependClass;\n\nvar _ramda = require('ramda');\n\nvar _functor = require('./functor');\n\nvar _functor2 = _interopRequireDefault(_functor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction prependClass(className) {\n  return (0, _ramda.mapObjIndexed)(function (value, key) {\n    if (key === 'class') {\n      var _ret = function () {\n        var fn = (0, _functor2.default)(value);\n\n        return {\n          v: function v(d, i) {\n            var classNames = fn(d, i);\n            if (classNames !== className) {\n              return (0, _ramda.join)(' ', [className, classNames]);\n            }\n            return classNames;\n          }\n        };\n      }();\n\n      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n    }\n\n    return value;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3tooltip/lib/utils/prependClass.js\n// module id = 218\n// module chunks = 0","var invariant = require('invariant');\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar splice = Array.prototype.splice;\n\nvar assign = Object.assign || /* istanbul ignore next */ function assign(target, source) {\n  getAllKeys(source).forEach(function(key) {\n    if (hasOwnProperty.call(source, key)) {\n      target[key] = source[key];\n    }\n  });\n  return target;\n};\n\nvar getAllKeys = typeof Object.getOwnPropertySymbols === 'function' ?\n  function(obj) { return Object.keys(obj).concat(Object.getOwnPropertySymbols(obj)) } :\n  /* istanbul ignore next */ function(obj) { return Object.keys(obj) };\n\n/* istanbul ignore next */\nfunction copy(object) {\n  if (object instanceof Array) {\n    return assign(object.constructor(object.length), object)\n  } else if (object && typeof object === 'object') {\n    var prototype = object.constructor && object.constructor.prototype\n    return assign(Object.create(prototype || null), object);\n  } else {\n    return object;\n  }\n}\n\nfunction newContext() {\n  var commands = assign({}, defaultCommands);\n  update.extend = function(directive, fn) {\n    commands[directive] = fn;\n  };\n  update.isEquals = function(a, b) { return a === b; };\n\n  return update;\n\n  function update(object, spec) {\n    if (!(Array.isArray(object) && Array.isArray(spec))) {\n      invariant(\n        !Array.isArray(spec),\n        'update(): You provided an invalid spec to update(). The spec may ' +\n        'not contain an array except as the value of $set, $push, $unshift, ' +\n        '$splice or any custom command allowing an array value.'\n      );\n    }\n\n    invariant(\n      typeof spec === 'object' && spec !== null,\n      'update(): You provided an invalid spec to update(). The spec and ' +\n      'every included key path must be plain objects containing one of the ' +\n      'following commands: %s.',\n      Object.keys(commands).join(', ')\n    );\n\n    var nextObject = object;\n    var index, key;\n    getAllKeys(spec).forEach(function(key) {\n      if (hasOwnProperty.call(commands, key)) {\n        var objectWasNextObject = object === nextObject;\n        nextObject = commands[key](spec[key], nextObject, spec, object);\n        if (objectWasNextObject && update.isEquals(nextObject, object)) {\n          nextObject = object;\n        }\n      } else {\n        var nextValueForKey = update(object[key], spec[key]);\n        if (!update.isEquals(nextValueForKey, nextObject[key]) || typeof nextValueForKey === 'undefined' && !hasOwnProperty.call(object, key)) {\n          if (nextObject === object) {\n            nextObject = copy(object);\n          }\n          nextObject[key] = nextValueForKey;\n        }\n      }\n    })\n    return nextObject;\n  }\n\n}\n\nvar defaultCommands = {\n  $push: function(value, nextObject, spec) {\n    invariantPushAndUnshift(nextObject, spec, '$push');\n    return value.length ? nextObject.concat(value) : nextObject;\n  },\n  $unshift: function(value, nextObject, spec) {\n    invariantPushAndUnshift(nextObject, spec, '$unshift');\n    return value.length ? value.concat(nextObject) : nextObject;\n  },\n  $splice: function(value, nextObject, spec, originalObject) {\n    invariantSplices(nextObject, spec);\n    value.forEach(function(args) {\n      invariantSplice(args);\n      if (nextObject === originalObject && args.length) nextObject = copy(originalObject);\n      splice.apply(nextObject, args);\n    });\n    return nextObject;\n  },\n  $set: function(value, nextObject, spec) {\n    invariantSet(spec);\n    return value;\n  },\n  $unset: function(value, nextObject, spec, originalObject) {\n    invariant(\n      Array.isArray(value),\n      'update(): expected spec of $unset to be an array; got %s. ' +\n      'Did you forget to wrap the key(s) in an array?',\n      value\n    );\n    value.forEach(function(key) {\n      if (Object.hasOwnProperty.call(nextObject, key)) {\n        if (nextObject === originalObject) nextObject = copy(originalObject);\n        delete nextObject[key];\n      }\n    });\n    return nextObject;\n  },\n  $merge: function(value, nextObject, spec, originalObject) {\n    invariantMerge(nextObject, value);\n    getAllKeys(value).forEach(function(key) {\n      if (value[key] !== nextObject[key]) {\n        if (nextObject === originalObject) nextObject = copy(originalObject);\n        nextObject[key] = value[key];\n      }\n    });\n    return nextObject;\n  },\n  $apply: function(value, original) {\n    invariantApply(value);\n    return value(original);\n  }\n};\n\nmodule.exports = newContext();\nmodule.exports.newContext = newContext;\n\n// invariants\n\nfunction invariantPushAndUnshift(value, spec, command) {\n  invariant(\n    Array.isArray(value),\n    'update(): expected target of %s to be an array; got %s.',\n    command,\n    value\n  );\n  var specValue = spec[command];\n  invariant(\n    Array.isArray(specValue),\n    'update(): expected spec of %s to be an array; got %s. ' +\n    'Did you forget to wrap your parameter in an array?',\n    command,\n    specValue\n  );\n}\n\nfunction invariantSplices(value, spec) {\n  invariant(\n    Array.isArray(value),\n    'Expected $splice target to be an array; got %s',\n    value\n  );\n  invariantSplice(spec['$splice']);\n}\n\nfunction invariantSplice(value) {\n  invariant(\n    Array.isArray(value),\n    'update(): expected spec of $splice to be an array of arrays; got %s. ' +\n    'Did you forget to wrap your parameters in an array?',\n    value\n  );\n}\n\nfunction invariantApply(fn) {\n  invariant(\n    typeof fn === 'function',\n    'update(): expected spec of $apply to be a function; got %s.',\n    fn\n  );\n}\n\nfunction invariantSet(spec) {\n  invariant(\n    Object.keys(spec).length === 1,\n    'Cannot have more than one key in an object with $set'\n  );\n}\n\nfunction invariantMerge(target, specValue) {\n  invariant(\n    specValue && typeof specValue === 'object',\n    'update(): $merge expects a spec of type \\'object\\'; got %s',\n    specValue\n  );\n  invariant(\n    target && typeof target === 'object',\n    'update(): $merge expects a target of type \\'object\\'; got %s',\n    target\n  );\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/immutability-helper/index.js\n// module id = 219\n// module chunks = 0","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/invariant/browser.js\n// module id = 220\n// module chunks = 0"],"sourceRoot":""}
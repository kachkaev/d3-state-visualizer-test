{"version":3,"sources":["../static/js/main.52a767d2.js","../webpack/bootstrap 8ef59ea3d3dd78f5d8dd","../node_modules/ramda/dist/ramda.js","../node_modules/map2tree/node_modules/lodash/isArray.js","../node_modules/map2tree/node_modules/lodash/isObjectLike.js","../node_modules/map2tree/node_modules/lodash/_Map.js","../node_modules/map2tree/node_modules/lodash/isLength.js","../node_modules/map2tree/node_modules/lodash/_assocIndexOf.js","../node_modules/map2tree/node_modules/lodash/_nativeCreate.js","../node_modules/map2tree/node_modules/lodash/_root.js","../node_modules/map2tree/node_modules/lodash/_isKeyable.js","../node_modules/map2tree/node_modules/lodash/_isHostObject.js","../node_modules/map2tree/node_modules/lodash/keys.js","../node_modules/map2tree/node_modules/lodash/isObject.js","../node_modules/map2tree/node_modules/lodash/_getNative.js","../node_modules/map2tree/node_modules/lodash/_isKey.js","../node_modules/react-scripts/node_modules/promise/lib/core.js","../node_modules/webpack/buildin/global.js","../node_modules/d3/d3.js","../node_modules/map2tree/lib/index.js","../node_modules/map2tree/node_modules/lodash/_baseHas.js","../node_modules/map2tree/node_modules/lodash/isArguments.js","../node_modules/map2tree/node_modules/lodash/isArrayLike.js","../node_modules/map2tree/node_modules/lodash/_baseProperty.js","../node_modules/map2tree/node_modules/lodash/isFunction.js","../node_modules/map2tree/node_modules/lodash/isString.js","../node_modules/map2tree/node_modules/lodash/_isIndex.js","../node_modules/map2tree/node_modules/lodash/_Stack.js","../node_modules/map2tree/node_modules/lodash/_assocDelete.js","../node_modules/map2tree/node_modules/lodash/_assocGet.js","../node_modules/map2tree/node_modules/lodash/_assocHas.js","../node_modules/map2tree/node_modules/lodash/_hashHas.js","../node_modules/map2tree/node_modules/lodash/_assocSet.js","../node_modules/map2tree/node_modules/lodash/_baseIsEqual.js","../node_modules/map2tree/node_modules/lodash/_Symbol.js","../node_modules/map2tree/node_modules/lodash/get.js","../node_modules/map2tree/node_modules/lodash/_baseGet.js","../node_modules/map2tree/node_modules/lodash/_baseToPath.js","../node_modules/deepmerge/index.js","../node_modules/d3tooltip/lib/index.js","../node_modules/d3tooltip/lib/utils/functor.js","../node_modules/react-scripts/config/polyfills.js","../node_modules/react-scripts/node_modules/promise/lib/rejection-tracking.js","../node_modules/asap/browser-raw.js","../node_modules/react-scripts/node_modules/promise/lib/es6-extensions.js","../node_modules/whatwg-fetch/fetch.js","../node_modules/object-assign/index.js","index.js","../node_modules/d3-state-visualizer/lib/index.js","../node_modules/d3-state-visualizer/lib/charts/index.js","../node_modules/d3-state-visualizer/lib/charts/tree/tree.js","../node_modules/map2tree/node_modules/lodash/isPlainObject.js","../node_modules/map2tree/node_modules/lodash/mapValues.js","../node_modules/map2tree/node_modules/lodash/_baseForOwn.js","../node_modules/map2tree/node_modules/lodash/_baseFor.js","../node_modules/map2tree/node_modules/lodash/_createBaseFor.js","../node_modules/map2tree/node_modules/lodash/_baseKeys.js","../node_modules/map2tree/node_modules/lodash/_indexKeys.js","../node_modules/map2tree/node_modules/lodash/_baseTimes.js","../node_modules/map2tree/node_modules/lodash/isArrayLikeObject.js","../node_modules/map2tree/node_modules/lodash/_getLength.js","../node_modules/map2tree/node_modules/lodash/_isPrototype.js","../node_modules/map2tree/node_modules/lodash/_baseIteratee.js","../node_modules/map2tree/node_modules/lodash/_baseMatches.js","../node_modules/map2tree/node_modules/lodash/_baseIsMatch.js","../node_modules/map2tree/node_modules/lodash/_stackClear.js","../node_modules/map2tree/node_modules/lodash/_stackDelete.js","../node_modules/map2tree/node_modules/lodash/eq.js","../node_modules/map2tree/node_modules/lodash/_stackGet.js","../node_modules/map2tree/node_modules/lodash/_stackHas.js","../node_modules/map2tree/node_modules/lodash/_stackSet.js","../node_modules/map2tree/node_modules/lodash/_MapCache.js","../node_modules/map2tree/node_modules/lodash/_mapClear.js","../node_modules/map2tree/node_modules/lodash/_Hash.js","../node_modules/map2tree/node_modules/lodash/isNative.js","../node_modules/webpack/buildin/module.js","../node_modules/map2tree/node_modules/lodash/_checkGlobal.js","../node_modules/map2tree/node_modules/lodash/_mapDelete.js","../node_modules/map2tree/node_modules/lodash/_hashDelete.js","../node_modules/map2tree/node_modules/lodash/_mapGet.js","../node_modules/map2tree/node_modules/lodash/_hashGet.js","../node_modules/map2tree/node_modules/lodash/_mapHas.js","../node_modules/map2tree/node_modules/lodash/_mapSet.js","../node_modules/map2tree/node_modules/lodash/_hashSet.js","../node_modules/map2tree/node_modules/lodash/_baseIsEqualDeep.js","../node_modules/map2tree/node_modules/lodash/_equalArrays.js","../node_modules/map2tree/node_modules/lodash/_arraySome.js","../node_modules/map2tree/node_modules/lodash/_equalByTag.js","../node_modules/map2tree/node_modules/lodash/_Uint8Array.js","../node_modules/map2tree/node_modules/lodash/_mapToArray.js","../node_modules/map2tree/node_modules/lodash/_setToArray.js","../node_modules/map2tree/node_modules/lodash/_equalObjects.js","../node_modules/map2tree/node_modules/lodash/_getTag.js","../node_modules/map2tree/node_modules/lodash/_Set.js","../node_modules/map2tree/node_modules/lodash/isTypedArray.js","../node_modules/map2tree/node_modules/lodash/_getMatchData.js","../node_modules/map2tree/node_modules/lodash/_isStrictComparable.js","../node_modules/map2tree/node_modules/lodash/toPairs.js","../node_modules/map2tree/node_modules/lodash/_baseToPairs.js","../node_modules/map2tree/node_modules/lodash/_arrayMap.js","../node_modules/map2tree/node_modules/lodash/_baseMatchesProperty.js","../node_modules/map2tree/node_modules/lodash/_stringToPath.js","../node_modules/map2tree/node_modules/lodash/toString.js","../node_modules/map2tree/node_modules/lodash/isSymbol.js","../node_modules/map2tree/node_modules/lodash/hasIn.js","../node_modules/map2tree/node_modules/lodash/_baseHasIn.js","../node_modules/map2tree/node_modules/lodash/_hasPath.js","../node_modules/map2tree/node_modules/lodash/last.js","../node_modules/map2tree/node_modules/lodash/_parent.js","../node_modules/map2tree/node_modules/lodash/_baseSlice.js","../node_modules/map2tree/node_modules/lodash/identity.js","../node_modules/map2tree/node_modules/lodash/property.js","../node_modules/map2tree/node_modules/lodash/_basePropertyDeep.js","../node_modules/d3-state-visualizer/lib/charts/tree/utils.js","../node_modules/d3-state-visualizer/lib/charts/tree/sortAndSerialize.js","../node_modules/d3tooltip/lib/utils/index.js","../node_modules/d3tooltip/lib/utils/prependClass.js","lib-before-fix/charts/tree/tree.js","lib-before-fix/charts/tree/utils.js","lib-before-fix/charts/tree/sortAndSerialize.js","../node_modules/immutability-helper/index.js","../node_modules/invariant/browser.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__","@@functional/placeholder","_arity","fn","apply","this","arguments","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_cloneRegExp","pattern","RegExp","source","global","ignoreCase","multiline","sticky","unicode","_complement","f","_concat","set1","set2","idx","len1","length","len2","result","_containsWith","pred","x","list","len","_curry1","f1","a","_curry2","f2","b","_curry3","f3","_curryN","received","combined","argsIdx","left","combinedIdx","_filter","_forceReduced","@@transducer/value","@@transducer/reduced","_functionsWith","obj","key","_has","prop","_identity","_isArray","Array","isArray","val","toString","_isInteger","Number","isInteger","_isNumber","_isString","_isTransformer","_map","_pipe","g","_pipeP","ctx","then","_quote","replace","_reduced","_slice","args","from","to","Math","max","min","_toISOString","pad","Date","toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","_xdropRepeatsWith","XDropRepeatsWith","xf","lastValue","undefined","seenFirstValue","input","sameAsLast","_xfBase","init","_xfilter","XFilter","_xfind","XFind","found","_xfindIndex","XFindIndex","_xfindLast","XFindLast","last","_xfindLastIndex","XFindLastIndex","lastIdx","_xmap","XMap","_xtake","XTake","_xtakeWhile","XTakeWhile","_xwrap","XWrap","acc","add","adjust","start","_idx","_list","always","aperture","limit","append","el","assoc","assocPath","path","bind","thisObj","both","comparator","complement","cond","pairs","containsWith","countBy","counts","createMapEntry","curryN","dec","defaultTo","v","differenceWith","first","second","out","firstLen","containsPred","dissoc","dissocPath","head","tail","divide","dropLastWhile","either","empty","constructor","evolve","transformations","transformation","type","fromPairs","gt","gte","has","hasIn","identical","identity","ifElse","condition","onTrue","onFalse","inc","insert","elt","splice","insertAll","elts","is","Ctor","isArrayLike","String","nodeType","isEmpty","isNil","keys","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","contains","item","nIdx","ks","keysIn","NaN","lt","lte","mapAccum","tuple","mapAccumRight","match","rx","str","mathMod","maxBy","merge","minBy","modulo","multiply","nAry","negate","not","nth","offset","charAt","nthArg","nthChar","nthCharCode","charCodeAt","of","once","called","over","Identity","value","map","lens","y","paths","pick","names","pickAll","pickBy","test","prepend","propOr","propSatisfies","props","ps","range","TypeError","push","reduceRight","reduced","remove","count","regex","replacement","reverse","scan","set","sort","sortBy","aa","bb","subtract","takeLastWhile","Infinity","tap","times","toPairs","toPairsIn","trim","ws","hasProtoTrim","beginRx","endRx","unapply","unary","uncurryN","depth","endIdx","currentDepth","unfold","seed","pair","uniqWith","update","values","vals","valuesIn","vs","view","Const","where","spec","testObj","wrap","wrapper","xprod","j","ilen","jlen","zip","rv","zipObj","zipWith","F","T","_checkForMethod","methodname","_clone","refFrom","refTo","copy","copiedValue","_createPartialApplicator","concat","_dispatchable","_equals","stackA","stackB","typeA","valueOf","getTime","keysA","pop","_hasMethod","methodName","_makeFlat","recursive","flatt","_reduce","_arrayReduce","_iterableReduce","iter","step","next","done","_methodReduce","reduce","symIterator","Symbol","iterator","_stepCat","_stepCatArray","@@transducer/init","@@transducer/step","xs","@@transducer/result","_stepCatString","_stepCatObject","_xall","XAll","all","_xany","XAny","any","_xdrop","XDrop","_xdropWhile","XDropWhile","_xgroupBy","XGroupBy","inputs","addIndex","origFn","and","binary","clone","curry","dropWhile","equals","filter","find","findIndex","findLast","findLastIndex","flatten","flip","forEach","functions","functionsIn","groupBy","intersectionWith","list1","list2","results","intersperse","separator","into","invert","invertObj","lastIndexOf","target","mapObj","mapObjIndexed","none","or","partial","partialRight","partition","pathEq","_path","pluck","propEq","propIs","reject","repeat","fromIndex","toIndex","splitEvery","sum","take","takeWhile","transduce","unionWith","uniq","unnest","useWith","transformers","tlen","whereEq","_flatCat","preservingReduced","ret","rxf","_indexOf","_predicateWrap","predPicker","preds","predIterator","predicate","_xchain","allPass","anyPass","ap","fns","chain","commuteMap","consF","ftor","constructN","Fn","$0","$1","$2","$3","$4","$5","$6","$7","$8","$9","converge","after","context","drop","dropLast","dropRepeatsWith","eqProps","obj1","obj2","indexOf","isSet","setter","lensIndex","lensProp","k","liftN","arity","lifted","mean","median","width","mergeAll","pipe","pipeP","product","project","takeLast","_contains","_toString","seen","recur","mapPairs","join","commute","compose","composeK","composeP","construct","difference","dropRepeats","intersection","lift","omit","pipeK","union","uniqBy","appliedItem","applied","invoker","method","Function","memoize","cache","split","toLower","toUpper","R","isObjectLike","getNative","root","Map","isLength","MAX_SAFE_INTEGER","assocIndexOf","array","eq","nativeCreate","checkGlobal","objectTypes","function","freeExports","freeModule","freeGlobal","freeSelf","self","freeWindow","window","thisGlobal","isKeyable","isHostObject","e","isProto","isPrototype","baseKeys","indexes","indexKeys","skipIndexes","baseHas","isIndex","isObject","isNative","isKey","reIsPlainProp","reIsDeepProp","noop","getThen","ex","LAST_ERROR","IS_ERROR","tryCallOne","tryCallTwo","Promise","_75","_83","_18","_38","doResolve","safeThen","onFulfilled","onRejected","resolve","res","handle","Handler","deferred","_47","handleResolved","asap","cb","promise","newValue","finale","_71","reason","_44","eval","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","d3_number","d3_numeric","isNaN","d3_bisector","compare","lo","hi","mid","right","d3_transposeLength","d3_range_integerScale","d3_class","ctor","properties","d3_Map","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","d3_vendorSymbol","toUpperCase","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","z","listeners","on","listenerByName","listener","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","thiz","argumentz","e1","e0","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","d3_selection_classedRe","requote","d3_selection_classes","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","classList","getAttribute","lastIndex","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElement","createElementNS","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","data","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","d3_selection_each","callback","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","d3_array","addEventListener","removeAll","d3_selection_onListener","d3_selection_onFilters","d3_selection_onFilter","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","scrollX","scrollY","position","top","margin","padding","border","ctm","getScreenCTM","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","format","hsl","color","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","now","time","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","d3_format_precision","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","d3_date_utc","UTC","d3_time_interval","number","date","d0","d1","d3_date","dt","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","current","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","insidePolygon","wn","linePoint","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","moveTo","lineTo","closePath","d3_geo_resample","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","b0","ringPoint","a00","b00","c00","b1","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","newArc","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","closestPoint","minDistance2","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","interrupt","d3_transition","id","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","transition","cancelId","cancel","tick","tweens","ease","duration","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","childNodes","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","permutes","transpose","matrix","row","entries","arrays","merged","nest","mapType","rollup","sortValues","keyValue","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","fromCharCode","toPrecision","toExponential","getUTCDay","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","curve","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","_interopRequireDefault","visitFn","childrenFn","getNode","map2tree","options","_isPlainObject2","toJS","_options$key","rootNodeKey","_options$pushMethod","pushMethod","currentNode","_mapValues2","maybeImmutable","newNode","_isArray2","_newNode$children$pus","_isPlainObject","_mapValues","getPrototypeOf","objectProto","isArguments","isArrayLikeObject","objectToString","argsTag","isFunction","getLength","baseProperty","tag","funcTag","genTag","isString","stringTag","reIsUint","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","assocDelete","arrayProto","assocGet","assocHas","hashHas","hash","assocSet","baseIsEqual","customizer","bitmask","baseIsEqualDeep","defaultValue","baseGet","baseToPath","stringToPath","factory","deepmerge","src","dst","tooltip","tip","mouseover.tip","_d3$mouse","rootNode","mouseX","mouseY","anchor","className","prependClass","attrs","_extends","z-index","styles","mousemove.tip","_d3$mouse2","mouseout.tip","_defaultOptions$optio","defaultOptions","class","_ramda","assign","_utils","_utils2","_ref","enable","disable","enabled","onUnhandled","allRejections","matchWhitelist","rejections","whitelist","DEFAULT_WHITELIST","displayId","logged","logError","onHandled","console","warn","_56","timeout","some","cls","ReferenceError","RangeError","rawAsap","task","requestFlush","flushing","currentIndex","capacity","newLength","makeRequestCallFromTimer","handleTimer","timeoutHandle","clearInterval","intervalHandle","setInterval","scope","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","toggle","observer","createTextNode","observe","characterData","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","arr","race","normalizeName","normalizeValue","iteratorFor","items","support","iterable","Headers","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","Uint8Array","chars","bufferClone","byteLength","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","rejected","decode","normalizeMethod","upcased","Request","credentials","referrer","form","bytes","decodeURIComponent","parseHeaders","rawHeaders","parts","Response","bodyInit","ok","statusText","fetch","viewClasses","DataView","isView","oldValue","thisArg","redirectStatuses","redirect","getAllResponseHeaders","responseURL","ontimeout","withCredentials","polyfill","toObject","getOwnPropertySymbols","propIsEnumerable","test1","test2","test3","letter","symbols","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_d3_state_visualizer__","__WEBPACK_IMPORTED_MODULE_1__lib_before_fix_charts_tree_tree__","__WEBPACK_IMPORTED_MODULE_2_immutability_helper__","__WEBPACK_IMPORTED_MODULE_2_immutability_helper___default","defaultAppState","todoStore","todos","title","completedCount","appStates","$unshift","$push","1","$set","3","config","state","aspectRatio","isSorted","widthBetweenNodesCoeff","heightBetweenNodesCoeff","tooltipOptions","indentationSize","transitionDuration","oldRender","getElementById","render","updateState","_charts","charts","newObj","_tree2","_tree3","DOMNode","_deepmerge","_deepmerge3","initialZoom","rootKeyName","onClickText","height","fullWidth","fullHeight","preserveAspectRatio","viewBox","_d4","vis","cursor","_d3$event","maxNodeCountByLevel","getNodeGroupByDepthCount","maxLabelLength","nodeIndex","nodeEnter","colors","mouseover","hover","mouseout","disabled","_d3tooltip2","getTooltipString","clickedNode","defaultPrevented","toggleChildren","fill-opacity","_children","text-anchor","stroke","stroke-width","collapsed","nodeUpdate","__oldData__","nodeExit","_d","_d2","nextState","_map2tree2","message","_d3","_map2tree","_deepmerge2","_d3tooltip","isPlainObject","objectTag","proto","funcToString","objectCtorString","mapValues","iteratee","baseIteratee","baseForOwn","baseFor","createBaseFor","fromRight","keysFunc","nativeKeys","baseTimes","baseMatchesProperty","baseMatches","matchData","getMatchData","baseIsMatch","noCustomizer","objValue","srcValue","UNORDERED_COMPARE_FLAG","PARTIAL_COMPARE_FLAG","LARGE_ARRAY_SIZE","MapCache","mapClear","mapDelete","mapGet","mapHas","mapSet","Hash","reIsNative","reIsHostCtor","reRegExpChar","webpackPolyfill","deprecate","hashDelete","hashGet","HASH_UNDEFINED","hashSet","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","getTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","equalArrays","equalObjects","isPartial","isUnordered","arrLength","othLength","stacked","arrValue","othValue","compared","arraySome","arrayBufferTag","boolTag","dateTag","errorTag","numberTag","regexpTag","mapTag","convert","mapToArray","setTag","setToArray","symbolTag","symbolValueOf","symbolProto","objProps","objLength","skipCtor","objCtor","othCtor","Set","mapCtorString","setCtorString","ctorString","typedArrayTags","isStrictComparable","baseToPairs","arrayMap","rePropName","quote","reEscapeChar","isSymbol","symbolToString","INFINITY","hasPath","baseHasIn","hasFunc","baseSlice","basePropertyDeep","collapseChildren","expandChildren","nodeGroupByDepthCount","traverseFrom","childNode","_ref$indentationSize","spacer","cr2br","spaces2nbsp","json2html","_sortAndSerialize2","_sortAndSerialize","sortObject","strict","_typeof","_ret","tObj","sortAndSerialize","_prependClass","_prependClass2","_functor","_functor2","classNames","_toConsumableArray","arr2","__WEBPACK_IMPORTED_MODULE_0_d3__","__WEBPACK_IMPORTED_MODULE_0_d3___default","__WEBPACK_IMPORTED_MODULE_1_ramda__","__WEBPACK_IMPORTED_MODULE_2_map2tree__","__WEBPACK_IMPORTED_MODULE_2_map2tree___default","__WEBPACK_IMPORTED_MODULE_3_deepmerge__","__WEBPACK_IMPORTED_MODULE_3_deepmerge___default","__WEBPACK_IMPORTED_MODULE_4__utils__","__WEBPACK_IMPORTED_MODULE_5_d3tooltip__","__WEBPACK_IMPORTED_MODULE_5_d3tooltip___default","__WEBPACK_IMPORTED_MODULE_0_ramda__","__WEBPACK_IMPORTED_MODULE_1__sortAndSerialize__","newContext","invariant","commands","nextObject","getAllKeys","objectWasNextObject","isEquals","nextValueForKey","defaultCommands","extend","directive","invariantPushAndUnshift","command","specValue","invariantSplices","invariantSplice","invariantApply","invariantSet","invariantMerge","$splice","originalObject","$unset","$merge","$apply","original","argIndex","framesToPop"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA4BAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,SAAAP,EAAAQ,EAAAC,GACAZ,EAAAa,EAAAV,EAAAQ,IACAG,OAAAC,eAAAZ,EAAAQ,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAf,GACA,GAAAQ,GAAAR,KAAAgB,WACA,WAA2B,MAAAhB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAJ,GAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDtB,EAAAyB,EAAA,IAGAzB,IAAA0B,EAAA,MDMM,SAAUtB,EAAQD,EAASH,IE9DhC,WAED,YA0BA,IAAA2B,IAAcC,4BAAA,GAGdC,EAAA,SAAAV,EAAAW,GAEA,OAAAX,GACA,OACA,kBACA,MAAAW,GAAAC,MAAAC,KAAAC,WAEA,QACA,gBAAAC,GACA,MAAAJ,GAAAC,MAAAC,KAAAC,WAEA,QACA,gBAAAC,EAAAC,GACA,MAAAL,GAAAC,MAAAC,KAAAC,WAEA,QACA,gBAAAC,EAAAC,EAAAC,GACA,MAAAN,GAAAC,MAAAC,KAAAC,WAEA,QACA,gBAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAAP,GAAAC,MAAAC,KAAAC,WAEA,QACA,gBAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAAR,GAAAC,MAAAC,KAAAC,WAEA,QACA,gBAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAAT,GAAAC,MAAAC,KAAAC,WAEA,QACA,gBAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAAV,GAAAC,MAAAC,KAAAC,WAEA,QACA,gBAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAAX,GAAAC,MAAAC,KAAAC,WAEA,QACA,gBAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAAZ,GAAAC,MAAAC,KAAAC,WAEA,SACA,gBAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAAb,GAAAC,MAAAC,KAAAC,WAEA,SACA,SAAAW,OAAA,iFAIAC,EAAA,SAAAC,GACA,UAAAC,QAAAD,EAAAE,QAAAF,EAAAG,OAAA,SAAAH,EAAAI,WAAA,SAAAJ,EAAAK,UAAA,SAAAL,EAAAM,OAAA,SAAAN,EAAAO,QAAA,UAGAC,EAAA,SAAAC,GACA,kBACA,OAAAA,EAAAxB,MAAAC,KAAAC,aAeAuB,EAAA,SAAAC,EAAAC,GACAD,QACAC,OACA,IAAAC,GACAC,EAAAH,EAAAI,OACAC,EAAAJ,EAAAG,OACAE,IAEA,KADAJ,EAAA,EACAA,EAAAC,GACAG,IAAAF,QAAAJ,EAAAE,GACAA,GAAA,CAGA,KADAA,EAAA,EACAA,EAAAG,GACAC,IAAAF,QAAAH,EAAAC,GACAA,GAAA,CAEA,OAAAI,IAGAC,EAAA,SAAAC,EAAAC,EAAAC,GAEA,IADA,GAAAR,GAAA,EAAAS,EAAAD,EAAAN,OACAF,EAAAS,GAAA,CACA,GAAAH,EAAAC,EAAAC,EAAAR,IACA,QAEAA,IAAA,EAEA,UAWAU,EAAA,SAAAvC,GACA,eAAAwC,GAAAC,GACA,WAAAtC,UAAA4B,OACAS,EACa,MAAAC,IAAA,IAAAA,EAAA,4BACbD,EAEAxC,EAAAC,MAAAC,KAAAC,aAaAuC,EAAA,SAAA1C,GACA,eAAA2C,GAAAF,EAAAG,GACA,GAAAvD,GAAAc,UAAA4B,MACA,YAAA1C,EACAsD,EACa,IAAAtD,GAAA,MAAAoD,IAAA,IAAAA,EAAA,4BACbE,EACa,IAAAtD,EACbkD,EAAA,SAAAK,GACA,MAAA5C,GAAAyC,EAAAG,KAEa,IAAAvD,GAAA,MAAAoD,IAAA,IAAAA,EAAA,mCAAAG,IAAA,IAAAA,EAAA,4BACbD,EACa,IAAAtD,GAAA,MAAAoD,IAAA,IAAAA,EAAA,4BACbF,EAAA,SAAAE,GACA,MAAAzC,GAAAyC,EAAAG,KAEa,IAAAvD,GAAA,MAAAuD,IAAA,IAAAA,EAAA,4BACbL,EAAA,SAAAK,GACA,MAAA5C,GAAAyC,EAAAG,KAGA5C,EAAAyC,EAAAG,KAaAC,EAAA,SAAA7C,GACA,eAAA8C,GAAAL,EAAAG,EAAAjE,GACA,GAAAU,GAAAc,UAAA4B,MACA,YAAA1C,EACAyD,EACa,IAAAzD,GAAA,MAAAoD,IAAA,IAAAA,EAAA,4BACbK,EACa,IAAAzD,EACbqD,EAAA,SAAAE,EAAAjE,GACA,MAAAqB,GAAAyC,EAAAG,EAAAjE,KAEa,IAAAU,GAAA,MAAAoD,IAAA,IAAAA,EAAA,mCAAAG,IAAA,IAAAA,EAAA,4BACbE,EACa,IAAAzD,GAAA,MAAAoD,IAAA,IAAAA,EAAA,4BACbC,EAAA,SAAAD,EAAA9D,GACA,MAAAqB,GAAAyC,EAAAG,EAAAjE,KAEa,IAAAU,GAAA,MAAAuD,IAAA,IAAAA,EAAA,4BACbF,EAAA,SAAAE,EAAAjE,GACA,MAAAqB,GAAAyC,EAAAG,EAAAjE,KAEa,IAAAU,EACbkD,EAAA,SAAA5D,GACA,MAAAqB,GAAAyC,EAAAG,EAAAjE,KAEa,IAAAU,GAAA,MAAAoD,IAAA,IAAAA,EAAA,mCAAAG,IAAA,IAAAA,EAAA,mCAAAjE,IAAA,IAAAA,EAAA,4BACbmE,EACa,IAAAzD,GAAA,MAAAoD,IAAA,IAAAA,EAAA,mCAAAG,IAAA,IAAAA,EAAA,4BACbF,EAAA,SAAAD,EAAAG,GACA,MAAA5C,GAAAyC,EAAAG,EAAAjE,KAEa,IAAAU,GAAA,MAAAoD,IAAA,IAAAA,EAAA,mCAAA9D,IAAA,IAAAA,EAAA,4BACb+D,EAAA,SAAAD,EAAA9D,GACA,MAAAqB,GAAAyC,EAAAG,EAAAjE,KAEa,IAAAU,GAAA,MAAAuD,IAAA,IAAAA,EAAA,mCAAAjE,IAAA,IAAAA,EAAA,4BACb+D,EAAA,SAAAE,EAAAjE,GACA,MAAAqB,GAAAyC,EAAAG,EAAAjE,KAEa,IAAAU,GAAA,MAAAoD,IAAA,IAAAA,EAAA,4BACbF,EAAA,SAAAE,GACA,MAAAzC,GAAAyC,EAAAG,EAAAjE,KAEa,IAAAU,GAAA,MAAAuD,IAAA,IAAAA,EAAA,4BACbL,EAAA,SAAAK,GACA,MAAA5C,GAAAyC,EAAAG,EAAAjE,KAEa,IAAAU,GAAA,MAAAV,IAAA,IAAAA,EAAA,4BACb4D,EAAA,SAAA5D,GACA,MAAAqB,GAAAyC,EAAAG,EAAAjE,KAGAqB,EAAAyC,EAAAG,EAAAjE,KAcAoE,EAAA,QAAAA,GAAAhB,EAAAiB,EAAAhD,GACA,kBAKA,IAJA,GAAAiD,MACAC,EAAA,EACAC,EAAApB,EACAqB,EAAA,EACAA,EAAAJ,EAAAjB,QAAAmB,EAAA/C,UAAA4B,QAAA,CACA,GAAAE,EACAmB,GAAAJ,EAAAjB,SAAA,MAAAiB,EAAAI,KAAA,IAAAJ,EAAAI,GAAA,6BAAAF,GAAA/C,UAAA4B,QACAE,EAAAe,EAAAI,IAEAnB,EAAA9B,UAAA+C,GACAA,GAAA,GAEAD,EAAAG,GAAAnB,EACA,MAAAA,IAAA,IAAAA,EAAA,8BACAkB,GAAA,GAEAC,GAAA,EAEA,MAAAD,IAAA,EAAAnD,EAAAC,MAAAC,KAAA+C,GAAAlD,EAAAoD,EAAAJ,EAAAhB,EAAAkB,EAAAjD,MAIAqD,EAAA,SAAArD,EAAAqC,GAEA,IADA,GAAAR,GAAA,EAAAS,EAAAD,EAAAN,OAAAE,KACAJ,EAAAS,GACAtC,EAAAqC,EAAAR,MACAI,IAAAF,QAAAM,EAAAR,IAEAA,GAAA,CAEA,OAAAI,IAGAqB,EAAA,SAAAlB,GACA,OACAmB,qBAAAnB,EACAoB,wBAAA,IASAC,EAAA,SAAAzD,GACA,gBAAA0D,GACA,MAAAL,GAAA,SAAAM,GACA,yBAAAD,GAAAC,IACa3D,EAAA0D,MAIbE,EAAA,SAAAC,EAAAH,GACA,MAAA1E,QAAAS,UAAAC,eAAAjB,KAAAiF,EAAAG,IAGAC,EAAA,SAAA1B,GACA,MAAAA,IAeA2B,EAAAC,MAAAC,SAAA,SAAAC,GACA,aAAAA,KAAAnC,QAAA,sBAAA/C,OAAAS,UAAA0E,SAAA1F,KAAAyF,IAWAE,EAAAC,OAAAC,WAAA,SAAAjF,GACA,MAAAA,IAAA,IAAAA,GAGAkF,EAAA,SAAAnC,GACA,0BAAApD,OAAAS,UAAA0E,SAAA1F,KAAA2D,IAGAoC,EAAA,SAAApC,GACA,0BAAApD,OAAAS,UAAA0E,SAAA1F,KAAA2D,IAGAqC,EAAA,SAAAf,GACA,yBAAAA,GAAA,sBAGAgB,EAAA,SAAA1E,EAAAqC,GAEA,IADA,GAAAR,GAAA,EAAAS,EAAAD,EAAAN,OAAAE,EAAA+B,MAAA1B,GACAT,EAAAS,GACAL,EAAAJ,GAAA7B,EAAAqC,EAAAR,IACAA,GAAA,CAEA,OAAAI,IAGA0C,EAAA,SAAAlD,EAAAmD,GACA,kBACA,MAAAA,GAAAnG,KAAAyB,KAAAuB,EAAAxB,MAAAC,KAAAC,cAIA0E,EAAA,SAAApD,EAAAmD,GACA,kBACA,GAAAE,GAAA5E,IACA,OAAAuB,GAAAxB,MAAA6E,EAAA3E,WAAA4E,KAAA,SAAA3C,GACA,MAAAwC,GAAAnG,KAAAqG,EAAA1C,OAKA4C,EAAA,SAAApF,GACA,UAAAA,EAAAqF,QAAA,iBAGAC,EAAA,SAAA9C,GACA,MAAAA,MAAA,wBAAAA,GACAmB,qBAAAnB,EACAoB,wBAAA,IAqBA2B,EAAA,QAAAA,GAAAC,EAAAC,EAAAC,GACA,OAAAnF,UAAA4B,QACA,OACA,MAAAoD,GAAAC,EAAA,EAAAA,EAAArD,OACA,QACA,MAAAoD,GAAAC,EAAAC,EAAAD,EAAArD,OACA,SAIA,IAHA,GAAAM,MACAR,EAAA,EACAS,EAAAiD,KAAAC,IAAA,EAAAD,KAAAE,IAAAL,EAAArD,OAAAuD,GAAAD,GACAxD,EAAAS,GACAD,EAAAR,GAAAuD,EAAAC,EAAAxD,GACAA,GAAA,CAEA,OAAAQ,KAOAqD,EAAA,WACA,GAAAC,GAAA,SAAAtG,GACA,OAAAA,EAAA,WAAAA,EAEA,0BAAAuG,MAAAnG,UAAAoG,YAAA,SAAAjH,GACA,MAAAA,GAAAiH,eACS,SAAAjH,GACT,MAAAA,GAAAkH,iBAAA,IAAAH,EAAA/G,EAAAmH,cAAA,OAAAJ,EAAA/G,EAAAoH,cAAA,IAAAL,EAAA/G,EAAAqH,eAAA,IAAAN,EAAA/G,EAAAsH,iBAAA,IAAAP,EAAA/G,EAAAuH,iBAAA,KAAAvH,EAAAwH,qBAAA,KAAAC,QAAA,GAAAC,MAAA,aAIAC,EAAA,WACA,QAAAC,GAAArE,EAAAsE,GACAvG,KAAAuG,KACAvG,KAAAiC,OACAjC,KAAAwG,cAAAC,GACAzG,KAAA0G,gBAAA,EAkBA,MAhBAJ,GAAA/G,UAAA,gCACA,MAAAS,MAAAuG,GAAA,wBAEAD,EAAA/G,UAAA,gCAAAwC,GACA,MAAA/B,MAAAuG,GAAA,uBAAAxE,IAEAuE,EAAA/G,UAAA,8BAAAwC,EAAA4E,GACA,GAAAC,IAAA,CAOA,OANA5G,MAAA0G,eAEa1G,KAAAiC,KAAAjC,KAAAwG,UAAAG,KACbC,GAAA,GAFA5G,KAAA0G,gBAAA,EAIA1G,KAAAwG,UAAAG,EACAC,EAAA7E,EAAA/B,KAAAuG,GAAA,qBAAAxE,EAAA4E,IAEAnE,EAAA,SAAAP,EAAAsE,GACA,UAAAD,GAAArE,EAAAsE,QAIAM,GACAC,KAAA,WACA,MAAA9G,MAAAuG,GAAA,wBAEAxE,OAAA,SAAAA,GACA,MAAA/B,MAAAuG,GAAA,uBAAAxE,KAIAgF,EAAA,WACA,QAAAC,GAAAzF,EAAAgF,GACAvG,KAAAuG,KACAvG,KAAAuB,IAOA,MALAyF,GAAAzH,UAAA,qBAAAsH,EAAAC,KACAE,EAAAzH,UAAA,uBAAAsH,EAAA9E,OACAiF,EAAAzH,UAAA,8BAAAwC,EAAA4E,GACA,MAAA3G,MAAAuB,EAAAoF,GAAA3G,KAAAuG,GAAA,qBAAAxE,EAAA4E,GAAA5E,GAEAS,EAAA,SAAAjB,EAAAgF,GACA,UAAAS,GAAAzF,EAAAgF,QAIAU,EAAA,WACA,QAAAC,GAAA3F,EAAAgF,GACAvG,KAAAuG,KACAvG,KAAAuB,IACAvB,KAAAmH,OAAA,EAgBA,MAdAD,GAAA3H,UAAA,qBAAAsH,EAAAC,KACAI,EAAA3H,UAAA,gCAAAwC,GAIA,MAHA/B,MAAAmH,QACApF,EAAA/B,KAAAuG,GAAA,qBAAAxE,MAAA,KAEA/B,KAAAuG,GAAA,uBAAAxE,IAEAmF,EAAA3H,UAAA,8BAAAwC,EAAA4E,GAKA,MAJA3G,MAAAuB,EAAAoF,KACA3G,KAAAmH,OAAA,EACApF,EAAAiD,EAAAhF,KAAAuG,GAAA,qBAAAxE,EAAA4E,KAEA5E,GAEAS,EAAA,SAAAjB,EAAAgF,GACA,UAAAW,GAAA3F,EAAAgF,QAIAa,EAAA,WACA,QAAAC,GAAA9F,EAAAgF,GACAvG,KAAAuG,KACAvG,KAAAuB,IACAvB,KAAA2B,KAAA,EACA3B,KAAAmH,OAAA,EAiBA,MAfAE,GAAA9H,UAAA,qBAAAsH,EAAAC,KACAO,EAAA9H,UAAA,gCAAAwC,GAIA,MAHA/B,MAAAmH,QACApF,EAAA/B,KAAAuG,GAAA,qBAAAxE,GAAA,IAEA/B,KAAAuG,GAAA,uBAAAxE,IAEAsF,EAAA9H,UAAA,8BAAAwC,EAAA4E,GAMA,MALA3G,MAAA2B,KAAA,EACA3B,KAAAuB,EAAAoF,KACA3G,KAAAmH,OAAA,EACApF,EAAAiD,EAAAhF,KAAAuG,GAAA,qBAAAxE,EAAA/B,KAAA2B,OAEAI,GAEAS,EAAA,SAAAjB,EAAAgF,GACA,UAAAc,GAAA9F,EAAAgF,QAIAe,EAAA,WACA,QAAAC,GAAAhG,EAAAgF,GACAvG,KAAAuG,KACAvG,KAAAuB,IAYA,MAVAgG,GAAAhI,UAAA,qBAAAsH,EAAAC,KACAS,EAAAhI,UAAA,gCAAAwC,GACA,MAAA/B,MAAAuG,GAAA,uBAAAvG,KAAAuG,GAAA,qBAAAxE,EAAA/B,KAAAwH,QAEAD,EAAAhI,UAAA,8BAAAwC,EAAA4E,GAIA,MAHA3G,MAAAuB,EAAAoF,KACA3G,KAAAwH,KAAAb,GAEA5E,GAEAS,EAAA,SAAAjB,EAAAgF,GACA,UAAAgB,GAAAhG,EAAAgF,QAIAkB,EAAA,WACA,QAAAC,GAAAnG,EAAAgF,GACAvG,KAAAuG,KACAvG,KAAAuB,IACAvB,KAAA2B,KAAA,EACA3B,KAAA2H,SAAA,EAaA,MAXAD,GAAAnI,UAAA,qBAAAsH,EAAAC,KACAY,EAAAnI,UAAA,gCAAAwC,GACA,MAAA/B,MAAAuG,GAAA,uBAAAvG,KAAAuG,GAAA,qBAAAxE,EAAA/B,KAAA2H,WAEAD,EAAAnI,UAAA,8BAAAwC,EAAA4E,GAKA,MAJA3G,MAAA2B,KAAA,EACA3B,KAAAuB,EAAAoF,KACA3G,KAAA2H,QAAA3H,KAAA2B,KAEAI,GAEAS,EAAA,SAAAjB,EAAAgF,GACA,UAAAmB,GAAAnG,EAAAgF,QAIAqB,EAAA,WACA,QAAAC,GAAAtG,EAAAgF,GACAvG,KAAAuG,KACAvG,KAAAuB,IAOA,MALAsG,GAAAtI,UAAA,qBAAAsH,EAAAC,KACAe,EAAAtI,UAAA,uBAAAsH,EAAA9E,OACA8F,EAAAtI,UAAA,8BAAAwC,EAAA4E,GACA,MAAA3G,MAAAuG,GAAA,qBAAAxE,EAAA/B,KAAAuB,EAAAoF,KAEAnE,EAAA,SAAAjB,EAAAgF,GACA,UAAAsB,GAAAtG,EAAAgF,QAIAuB,EAAA,WACA,QAAAC,GAAA5I,EAAAoH,GACAvG,KAAAuG,KACAvG,KAAAb,IAYA,MAVA4I,GAAAxI,UAAA,qBAAAsH,EAAAC,KACAiB,EAAAxI,UAAA,uBAAAsH,EAAA9E,OACAgG,EAAAxI,UAAA,8BAAAwC,EAAA4E,GACA,WAAA3G,KAAAb,EACA6F,EAAAjD,IAEA/B,KAAAb,GAAA,EACAa,KAAAuG,GAAA,qBAAAxE,EAAA4E,KAGAnE,EAAA,SAAArD,EAAAoH,GACA,UAAAwB,GAAA5I,EAAAoH,QAIAyB,EAAA,WACA,QAAAC,GAAA1G,EAAAgF,GACAvG,KAAAuG,KACAvG,KAAAuB,IAOA,MALA0G,GAAA1I,UAAA,qBAAAsH,EAAAC,KACAmB,EAAA1I,UAAA,uBAAAsH,EAAA9E,OACAkG,EAAA1I,UAAA,8BAAAwC,EAAA4E,GACA,MAAA3G,MAAAuB,EAAAoF,GAAA3G,KAAAuG,GAAA,qBAAAxE,EAAA4E,GAAA3B,EAAAjD,IAEAS,EAAA,SAAAjB,EAAAgF,GACA,UAAA0B,GAAA1G,EAAAgF,QAIA2B,EAAA,WACA,QAAAC,GAAArI,GACAE,KAAAuB,EAAAzB,EAWA,MATAqI,GAAA5I,UAAA,gCACA,SAAAqB,OAAA,kCAEAuH,EAAA5I,UAAA,gCAAA6I,GACA,MAAAA,IAEAD,EAAA5I,UAAA,8BAAA6I,EAAAlG,GACA,MAAAlC,MAAAuB,EAAA6G,EAAAlG,IAEA,SAAApC,GACA,UAAAqI,GAAArI,OAoBAuI,EAAA7F,EAAA,SAAAD,EAAAG,GACA,MAAAH,GAAAG,IAyBA4F,EAAA3F,EAAA,SAAA7C,EAAA6B,EAAAQ,GACA,GAAAR,GAAAQ,EAAAN,QAAAF,GAAAQ,EAAAN,OACA,MAAAM,EAEA,IAAAoG,GAAA5G,EAAA,EAAAQ,EAAAN,OAAA,EACA2G,EAAAD,EAAA5G,EACA8G,EAAAjH,EAAAW,EAEA,OADAsG,GAAAD,GAAA1I,EAAAqC,EAAAqG,IACAC,IAqBAC,EAAArG,EAAA,SAAA2B,GACA,kBACA,MAAAA,MAqBA2E,EAAAnG,EAAA,SAAArD,EAAAgD,GAIA,IAHA,GAAAR,GAAA,EACAiH,EAAAzG,EAAAN,QAAA1C,EAAA,GACAiJ,EAAA,GAAAtE,OAAA8E,GAAA,EAAAA,EAAA,GACAjH,EAAAiH,GACAR,EAAAzG,GAAAsD,EAAA9C,EAAAR,IAAAxC,GACAwC,GAAA,CAEA,OAAAyG,KAsBAS,EAAArG,EAAA,SAAAsG,EAAA3G,GACA,MAAAX,GAAAW,GAAA2G,MAqBA/I,EAAAyC,EAAA,SAAA1C,EAAAoF,GACA,MAAApF,GAAAC,MAAAC,KAAAkF,KAsBA6D,EAAApG,EAAA,SAAAgB,EAAAK,EAAAR,GACA,GAAAzB,KACA,QAAAtC,KAAA+D,GACAzB,EAAAtC,GAAA+D,EAAA/D,EAGA,OADAsC,GAAA4B,GAAAK,EACAjC,IAuBAiH,EAAArG,EAAA,QAAAqG,GAAAC,EAAAjF,EAAAR,GACA,OAAAyF,EAAApH,QACA,OACA,MAAA2B,EACA,QACA,MAAAuF,GAAAE,EAAA,GAAAjF,EAAAR,EACA,SACA,MAAAuF,GAAAE,EAAA,GAAAD,EAAA/D,EAAAgE,EAAA,GAAAjF,EAAAlF,OAAA0E,EAAAyF,EAAA,MAAAzF,MAmBA0F,EAAA1G,EAAA,SAAA1C,EAAAqJ,GACA,MAAAtJ,GAAAC,EAAA+B,OAAA,WACA,MAAA/B,GAAAC,MAAAoJ,EAAAlJ,eA0BAmJ,EAAA5G,EAAA,SAAAjB,EAAAmD,GACA,kBACA,MAAAnD,GAAAxB,MAAAC,KAAAC,YAAAyE,EAAA3E,MAAAC,KAAAC,cAuBAoJ,EAAAhH,EAAA,SAAAJ,GACA,gBAAAM,EAAAG,GACA,MAAAT,GAAAM,EAAAG,IAAA,EAAAT,EAAAS,EAAAH,GAAA,OA2BA+G,EAAAjH,EAAAf,GA2BAiI,EAAAlH,EAAA,SAAAmH,GACA,kBAEA,IADA,GAAA7H,GAAA,EACAA,EAAA6H,EAAA3H,QAAA,CACA,GAAA2H,EAAA7H,GAAA,GAAA5B,MAAAC,KAAAC,WACA,MAAAuJ,GAAA7H,GAAA,GAAA5B,MAAAC,KAAAC,UAEA0B,IAAA,MAuBA8H,EAAA9G,EAAAX,GAuBA0H,EAAAlH,EAAA,SAAA1C,EAAAqC,GAIA,IAHA,GAAAwH,MACAvH,EAAAD,EAAAN,OACAF,EAAA,EACAA,EAAAS,GAAA,CACA,GAAAqB,GAAA3D,EAAAqC,EAAAR,GACAgI,GAAAlG,IAAAC,EAAAD,EAAAkG,KAAAlG,GAAA,KACA9B,GAAA,EAEA,MAAAgI,KAqBAC,GAAApH,EAAA,SAAAiB,EAAAO,GACA,GAAAR,KAEA,OADAA,GAAAC,GAAAO,EACAR,IA8CAqG,GAAArH,EAAA,SAAAX,EAAA/B,GACA,WAAA+B,EACAQ,EAAAvC,GAEAD,EAAAgC,EAAAgB,EAAAhB,KAAA/B,MAiBAgK,GAAAzB,GAAA,GAqBA0B,GAAAvH,EAAA,SAAA9D,EAAAsL,GACA,aAAAA,EAAAtL,EAAAsL,IAwBAC,GAAAtH,EAAA,SAAAV,EAAAiI,EAAAC,GAKA,IAJA,GAAAC,MACAzI,EAAA,EACA0I,EAAAH,EAAArI,OACAyI,EAAAb,EAAAxH,GACAN,EAAA0I,GACAC,EAAAJ,EAAAvI,GAAAwI,IAAAG,EAAAJ,EAAAvI,GAAAyI,KACAA,IAAAvI,QAAAqI,EAAAvI,IAEAA,GAAA,CAEA,OAAAyI,KAkBAG,GAAA/H,EAAA,SAAAmB,EAAAH,GACA,GAAAzB,KACA,QAAAtC,KAAA+D,GACA/D,IAAAkE,IACA5B,EAAAtC,GAAA+D,EAAA/D,GAGA,OAAAsC,KAqBAyI,GAAAhI,EAAA,QAAAgI,GAAAvB,EAAAzF,GACA,OAAAyF,EAAApH,QACA,OACA,MAAA2B,EACA,QACA,MAAA+G,IAAAtB,EAAA,GAAAzF,EACA,SACA,GAAAiH,GAAAxB,EAAA,GACAyB,EAAAzF,EAAAgE,EAAA,EACA,cAAAzF,EAAAiH,GAAAjH,EAAAuF,EAAA0B,EAAAD,EAAAE,EAAAlH,EAAAiH,IAAAjH,MAyBAmH,GAAAnI,EAAA,SAAAD,EAAAG,GACA,MAAAH,GAAAG,IAyBAkI,GAAApI,EAAA,SAAAP,EAAAE,GAEA,IADA,GAAAR,GAAAQ,EAAAN,OAAA,EACAF,GAAA,GAAAM,EAAAE,EAAAR,KACAA,GAAA,CAEA,OAAAsD,GAAA9C,EAAA,EAAAR,EAAA,KAyBAkJ,GAAArI,EAAA,SAAAjB,EAAAmD,GACA,kBACA,MAAAnD,GAAAxB,MAAAC,KAAAC,YAAAyE,EAAA3E,MAAAC,KAAAC,cAsBA6K,GAAAzI,EAAA,SAAAH,GACA,SAAAA,GAAA,mBAAAA,GAAA4I,MACA,MAAA5I,GAAA4I,OACS,UAAA5I,GAAA,YAAAA,GAAA6I,aAAA,mBAAA7I,GAAA6I,YAAAD,MACT,MAAA5I,GAAA6I,YAAAD,OAEA,QAAAhM,OAAAS,UAAA0E,SAAA1F,KAAA2D,IACA,qBACA,QACA,uBACA,QACA,uBACA,YA8BA8I,GAAAxI,EAAA,QAAAwI,GAAAC,EAAA5L,GACA,GAAA6L,GAAAzH,EAAA0H,EAAApJ,IACA,KAAA0B,IAAApE,GACA6L,EAAAD,EAAAxH,GACA0H,QAAAD,GACAnJ,EAAA0B,GAAA,aAAA0H,EAAAD,EAAA7L,EAAAoE,IAAA,WAAA0H,EAAAH,EAAAC,EAAAxH,GAAApE,EAAAoE,IAAApE,EAAAoE,EAEA,OAAA1B,KAiBAqJ,GAAA/I,EAAA,SAAAmH,GAEA,IADA,GAAA7H,GAAA,EAAAS,EAAAoH,EAAA3H,OAAAuI,KACAzI,EAAAS,GACAyB,EAAA2F,EAAA7H,KAAA6H,EAAA7H,GAAAE,SACAuI,EAAAZ,EAAA7H,GAAA,IAAA6H,EAAA7H,GAAA,IAEAA,GAAA,CAEA,OAAAyI,KAuBAiB,GAAA7I,EAAA,SAAAD,EAAAG,GACA,MAAAH,GAAAG,IAuBA4I,GAAA9I,EAAA,SAAAD,EAAAG,GACA,MAAAH,IAAAG,IA2BA6I,GAAA/I,EAAAkB,GA2BA8H,GAAAhJ,EAAA,SAAAmB,EAAAH,GACA,MAAAG,KAAAH,KA6BAiI,GAAAjJ,EAAA,SAAAD,EAAAG,GAEA,MAAAH,KAAAG,EAGA,IAAAH,GAAA,EAAAA,IAAA,EAAAG,EAGAH,OAAAG,QAqBAgJ,GAAArJ,EAAAuB,GAuBA+H,GAAAhJ,EAAA,SAAAiJ,EAAAC,EAAAC,GACA,MAAAjC,IAAAxE,KAAAC,IAAAsG,EAAA/J,OAAAgK,EAAAhK,OAAAiK,EAAAjK,QAAA,WACA,MAAA+J,GAAA7L,MAAAC,KAAAC,WAAA4L,EAAA9L,MAAAC,KAAAC,WAAA6L,EAAA/L,MAAAC,KAAAC,eAkBA8L,GAAA1D,EAAA,GAmBA2D,GAAArJ,EAAA,SAAAhB,EAAAsK,EAAA9J,GACAR,IAAAQ,EAAAN,QAAAF,GAAA,EAAAA,EAAAQ,EAAAN,MACA,IAAAE,GAAAkD,EAAA9C,EAEA,OADAJ,GAAAmK,OAAAvK,EAAA,EAAAsK,GACAlK,IAoBAoK,GAAAxJ,EAAA,SAAAhB,EAAAyK,EAAAjK,GAEA,MADAR,KAAAQ,EAAAN,QAAAF,GAAA,EAAAA,EAAAQ,EAAAN,OACAL,IAAAyD,EAAA9C,EAAA,EAAAR,GAAAyK,GAAAnH,EAAA9C,EAAAR,MAyBA0K,GAAA7J,EAAA,SAAA8J,EAAAtI,GACA,aAAAA,KAAA+G,cAAAuB,GAAAtI,YAAAsI,KAqBAC,GAAAlK,EAAA,SAAAH,GACA,QAAA2B,EAAA3B,MAGAA,IAGA,iBAAAA,OAGAA,YAAAsK,WAGA,IAAAtK,EAAAuK,WACAvK,EAAAL,OAEA,IAAAK,EAAAL,QAGAK,EAAAL,OAAA,IACAK,EAAA1C,eAAA,IAAA0C,EAAA1C,eAAA0C,EAAAL,OAAA,SAwBA6K,GAAArK,EAAA,SAAAF,GACA,WAAArD,OAAAqD,GAAAN,SAmBA8K,GAAAtK,EAAA,SAAAH,GACA,aAAAA,IAoBA0K,GAAA,WAEA,GAAAC,KAA2B5I,SAAA,MAAiB6I,qBAAA,YAC5CC,GACA,cACA,UACA,gBACA,WACA,uBACA,iBACA,kBAEAC,EAAA,SAAA7K,EAAA8K,GAEA,IADA,GAAAtL,GAAA,EACAA,EAAAQ,EAAAN,QAAA,CACA,GAAAM,EAAAR,KAAAsL,EACA,QAEAtL,IAAA,EAEA,SAEA,OAAAU,GAAA,mBAAAvD,QAAA8N,KAAA,SAAApJ,GACA,MAAA1E,QAAA0E,UAAA1E,OAAA8N,KAAApJ,IACS,SAAAA,GACT,GAAA1E,OAAA0E,OACA,QAEA,IAAAG,GAAAuJ,EAAAC,IACA,KAAAxJ,IAAAH,GACAE,EAAAC,EAAAH,KACA2J,IAAAtL,QAAA8B,EAGA,IAAAkJ,EAEA,IADAK,EAAAH,EAAAlL,OAAA,EACAqL,GAAA,GACAvJ,EAAAoJ,EAAAG,GACAxJ,EAAAC,EAAAH,KAAAwJ,EAAAG,EAAAxJ,KACAwJ,IAAAtL,QAAA8B,GAEAuJ,GAAA,CAGA,OAAAC,QAuBAC,GAAA/K,EAAA,SAAAmB,GACA,GAAAG,GAAAwJ,IACA,KAAAxJ,IAAAH,GACA2J,IAAAtL,QAAA8B,CAEA,OAAAwJ,KAiBAtL,GAAAQ,EAAA,SAAAF,GACA,aAAAA,GAAAkK,GAAAlI,OAAAhC,EAAAN,QAAAM,EAAAN,OAAAwL,MAuBAC,GAAA9K,EAAA,SAAAD,EAAAG,GACA,MAAAH,GAAAG,IAuBA6K,GAAA/K,EAAA,SAAAD,EAAAG,GACA,MAAAH,IAAAG,IA4BA8K,GAAA7K,EAAA,SAAA7C,EAAAsI,EAAAjG,GAEA,IADA,GAAAR,GAAA,EAAAS,EAAAD,EAAAN,OAAAE,KAAA0L,GAAArF,GACAzG,EAAAS,GACAqL,EAAA3N,EAAA2N,EAAA,GAAAtL,EAAAR,IACAI,EAAAJ,GAAA8L,EAAA,GACA9L,GAAA,CAEA,QACA8L,EAAA,GACA1L,KAgCA2L,GAAA/K,EAAA,SAAA7C,EAAAsI,EAAAjG,GAEA,IADA,GAAAR,GAAAQ,EAAAN,OAAA,EAAAE,KAAA0L,GAAArF,GACAzG,GAAA,GACA8L,EAAA3N,EAAA2N,EAAA,GAAAtL,EAAAR,IACAI,EAAAJ,GAAA8L,EAAA,GACA9L,GAAA,CAEA,QACA8L,EAAA,GACA1L,KAwBA4L,GAAAnL,EAAA,SAAAoL,EAAAC,GACA,MAAAA,GAAAF,MAAAC,SAkCAE,GAAAtL,EAAA,SAAAhE,EAAAiB,GACA,MAAAyE,GAAA1F,IAGA0F,EAAAzE,MAAA,EACA4N,KAEA7O,EAAAiB,OALA4N,MAwBA/H,GAAA9C,EAAA,SAAAD,EAAAG,GACA,MAAAA,GAAAH,EAAAG,EAAAH,IAoBAwL,GAAApL,EAAA,SAAApB,EAAAgB,EAAAG,GACA,MAAAnB,GAAAmB,GAAAnB,EAAAgB,GAAAG,EAAAH,IAsBAyL,GAAAxL,EAAA,SAAAD,EAAAG,GAIA,IAHA,GAAAX,MACAoL,EAAAP,GAAArK,GACAZ,EAAA,EACAA,EAAAwL,EAAAtL,QACAE,EAAAoL,EAAAxL,IAAAY,EAAA4K,EAAAxL,IACAA,GAAA,CAIA,KAFAwL,EAAAP,GAAAlK,GACAf,EAAA,EACAA,EAAAwL,EAAAtL,QACAE,EAAAoL,EAAAxL,IAAAe,EAAAyK,EAAAxL,IACAA,GAAA,CAEA,OAAAI,KAmBAwD,GAAA/C,EAAA,SAAAD,EAAAG,GACA,MAAAA,GAAAH,EAAAG,EAAAH,IAoBA0L,GAAAtL,EAAA,SAAApB,EAAAgB,EAAAG,GACA,MAAAnB,GAAAmB,GAAAnB,EAAAgB,GAAAG,EAAAH,IA2BA2L,GAAA1L,EAAA,SAAAD,EAAAG,GACA,MAAAH,GAAAG,IAsBAyL,GAAA3L,EAAA,SAAAD,EAAAG,GACA,MAAAH,GAAAG,IA4BA0L,GAAA5L,EAAA,SAAArD,EAAAW,GACA,OAAAX,GACA,OACA,kBACA,MAAAW,GAAAvB,KAAAyB,MAEA,QACA,gBAAAE,GACA,MAAAJ,GAAAvB,KAAAyB,KAAAE,GAEA,QACA,gBAAAA,EAAAC,GACA,MAAAL,GAAAvB,KAAAyB,KAAAE,EAAAC,GAEA,QACA,gBAAAD,EAAAC,EAAAC,GACA,MAAAN,GAAAvB,KAAAyB,KAAAE,EAAAC,EAAAC,GAEA,QACA,gBAAAF,EAAAC,EAAAC,EAAAC,GACA,MAAAP,GAAAvB,KAAAyB,KAAAE,EAAAC,EAAAC,EAAAC,GAEA,QACA,gBAAAH,EAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAAR,GAAAvB,KAAAyB,KAAAE,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,QACA,gBAAAJ,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAAT,GAAAvB,KAAAyB,KAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,QACA,gBAAAL,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAAV,GAAAvB,KAAAyB,KAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,QACA,gBAAAN,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAAX,GAAAvB,KAAAyB,KAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,QACA,gBAAAP,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAAZ,GAAAvB,KAAAyB,KAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,SACA,gBAAAR,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAAb,GAAAvB,KAAAyB,KAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,SACA,SAAAC,OAAA,gFAiBAyN,GAAAhM,EAAA,SAAAlD,GACA,OAAAA,IAqBAmP,GAAAjM,EAAA,SAAAE,GACA,OAAAA,IAyBAgM,GAAA/L,EAAA,SAAAgM,EAAArM,GACA,GAAAR,GAAA6M,EAAA,EAAArM,EAAAN,OAAA2M,GACA,OAAAlK,GAAAnC,KAAAsM,OAAA9M,GAAAQ,EAAAR,KAiBA+M,GAAArM,EAAA,SAAAlD,GACA,kBACA,MAAAoP,IAAApP,EAAAc,cAoBA0O,GAAAnM,EAAA,SAAArD,EAAA0O,GACA,MAAAA,GAAAY,OAAAtP,EAAA,EAAA0O,EAAAhM,OAAA1C,OAmBAyP,GAAApM,EAAA,SAAArD,EAAA0O,GACA,MAAAA,GAAAgB,WAAA1P,EAAA,EAAA0O,EAAAhM,OAAA1C,OAoBA2P,GAAAzM,EAAA,SAAAH,GACA,OAAAA,KAoBA6M,GAAA1M,EAAA,SAAAvC,GACA,GAAAiC,GAAAiN,GAAA,CACA,mBACA,MAAAA,GACAjN,GAEAiN,GAAA,EACAjN,EAAAjC,EAAAC,MAAAC,KAAAC,eAyBAgP,GAAA,WACA,GAAAC,GAAA,SAAAhN,GACA,OACAiN,MAAAjN,EACAkN,IAAA,SAAA7N,GACA,MAAA2N,GAAA3N,EAAAW,MAIA,OAAAS,GAAA,SAAA0M,EAAA9N,EAAAW,GACA,MAAAmN,GAAA,SAAAC,GACA,MAAAJ,GAAA3N,EAAA+N,MACapN,GAAAiN,WAkBblG,GAAAzG,EAAA,SAAA+M,EAAA/L,GACA,SAAAA,EAAA,CAIA,OADAQ,GAAAR,EACA7B,EAAA,EAAAS,EAAAmN,EAAA1N,OAAiDF,EAAAS,GAAA,MAAA4B,EAA0BrC,GAAA,EAC3EqC,IAAAuL,EAAA5N,GAEA,OAAAqC,MAqBAwL,GAAAhN,EAAA,SAAAiN,EAAAjM,GAGA,IAFA,GAAAzB,MACAJ,EAAA,EACAA,EAAA8N,EAAA5N,QACA4N,EAAA9N,IAAA6B,KACAzB,EAAA0N,EAAA9N,IAAA6B,EAAAiM,EAAA9N,KAEAA,GAAA,CAEA,OAAAI,KAmBA2N,GAAAlN,EAAA,SAAAiN,EAAAjM,GAIA,IAHA,GAAAzB,MACAJ,EAAA,EACAS,EAAAqN,EAAA5N,OACAF,EAAAS,GAAA,CACA,GAAAzD,GAAA8Q,EAAA9N,EACAI,GAAApD,GAAA6E,EAAA7E,GACAgD,GAAA,EAEA,MAAAI,KAsBA4N,GAAAnN,EAAA,SAAAoN,EAAApM,GACA,GAAAzB,KACA,QAAA4B,KAAAH,GACAoM,EAAApM,EAAAG,KAAAH,KACAzB,EAAA4B,GAAAH,EAAAG,GAGA,OAAA5B,KAmBA8N,GAAArN,EAAA,SAAAsG,EAAA3G,GACA,MAAAX,IAAAsH,GAAA3G,KAkBAwB,GAAAnB,EAAA,SAAA/C,EAAA+D,GACA,MAAAA,GAAA/D,KA4BAqQ,GAAAnN,EAAA,SAAAqB,EAAAvE,EAAA+D,GACA,aAAAA,GAAAE,EAAAjE,EAAA+D,KAAA/D,GAAAuE,IAqBA+L,GAAApN,EAAA,SAAAV,EAAAtD,EAAA6E,GACA,MAAAvB,GAAAuB,EAAA7E,MAqBAqR,GAAAxN,EAAA,SAAAyN,EAAAzM,GAIA,IAHA,GAAApB,GAAA6N,EAAApO,OACAuI,KACAzI,EAAA,EACAA,EAAAS,GACAgI,EAAAzI,GAAA6B,EAAAyM,EAAAtO,IACAA,GAAA,CAEA,OAAAyI,KAmBA8F,GAAA1N,EAAA,SAAA2C,EAAAC,GACA,IAAAf,EAAAc,KAAAd,EAAAe,GACA,SAAA+K,WAAA,0CAIA,KAFA,GAAApO,MACA5C,EAAAgG,EACAhG,EAAAiG,GACArD,EAAAqO,KAAAjR,GACAA,GAAA,CAEA,OAAA4C,KAkCAsO,GAAA1N,EAAA,SAAA7C,EAAAsI,EAAAjG,GAEA,IADA,GAAAR,GAAAQ,EAAAN,OAAA,EACAF,GAAA,GACAyG,EAAAtI,EAAAsI,EAAAjG,EAAAR,IACAA,GAAA,CAEA,OAAAyG,KA2BAkI,GAAAjO,EAAA2C,GAoBAuL,GAAA5N,EAAA,SAAA4F,EAAAiI,EAAArO,GACA,MAAAX,GAAAyD,EAAA9C,EAAA,EAAAkD,KAAAE,IAAAgD,EAAApG,EAAAN,SAAAoD,EAAA9C,EAAAkD,KAAAE,IAAApD,EAAAN,OAAA0G,EAAAiI,OAsBAzL,GAAApC,EAAA,SAAA8N,EAAAC,EAAA7C,GACA,MAAAA,GAAA9I,QAAA0L,EAAAC,KAoBAC,GAAAtO,EAAA,SAAAF,GACA,MAAA8C,GAAA9C,GAAAwO,YAoBAC,GAAAjO,EAAA,SAAA7C,EAAAsI,EAAAjG,GAEA,IADA,GAAAR,GAAA,EAAAS,EAAAD,EAAAN,OAAAE,GAAAqG,GACAzG,EAAAS,GACAgG,EAAAtI,EAAAsI,EAAAjG,EAAAR,IACAI,EAAAJ,EAAA,GAAAyG,EACAzG,GAAA,CAEA,OAAAI,KAwBA8O,GAAAlO,EAAA,SAAA0M,EAAArF,EAAA9H,GACA,MAAA+M,IAAAI,EAAA3G,EAAAsB,GAAA9H,KAoBA4O,GAAAtO,EAAA,SAAA6G,EAAAlH,GACA,MAAA8C,GAAA9C,GAAA2O,KAAAzH,KAkCA0H,GAAAvO,EAAA,SAAA1C,EAAAqC,GACA,MAAA8C,GAAA9C,GAAA2O,KAAA,SAAAvO,EAAAG,GACA,GAAAsO,GAAAlR,EAAAyC,GACA0O,EAAAnR,EAAA4C,EACA,OAAAsO,GAAAC,GAAA,EAAAD,EAAAC,EAAA,QA0BAC,GAAA1O,EAAA,SAAAD,EAAAG,GACA,MAAAH,GAAAG,IAyBAyO,GAAA3O,EAAA,SAAA1C,EAAAqC,GAEA,IADA,GAAAR,GAAAQ,EAAAN,OAAA,EACAF,GAAA,GAAA7B,EAAAqC,EAAAR,KACAA,GAAA,CAEA,OAAAsD,GAAA9C,EAAAR,EAAA,EAAAyP,OAmBAC,GAAA7O,EAAA,SAAA1C,EAAAoC,GAEA,MADApC,GAAAoC,GACAA,IAmBA0N,GAAApN,EAAA,SAAA1B,EAAA+M,GACA,MAAAhN,GAAAC,GAAA8O,KAAA/B,KAqBAyD,GAAA9O,EAAA,SAAA1C,EAAAX,GAIA,IAHA,GAAAiD,GAAA+B,OAAAhF,GACAgD,EAAA,GAAA2B,OAAA1B,GACAT,EAAA,EACAA,EAAAS,GACAD,EAAAR,GAAA7B,EAAA6B,GACAA,GAAA,CAEA,OAAAQ,KAoBAoP,GAAAlP,EAAA,SAAAmB,GACA,GAAAgG,KACA,QAAA7F,KAAAH,GACAE,EAAAC,EAAAH,KACAgG,IAAA3H,SACA8B,EACAH,EAAAG,IAIA,OAAA6F,KAuBAgI,GAAAnP,EAAA,SAAAmB,GACA,GAAAgG,KACA,QAAA7F,KAAAH,GACAgG,IAAA3H,SACA8B,EACAH,EAAAG,GAGA,OAAA6F,KAiBAiI,GAAA,WACA,GAAAC,GAAA,oIAEAC,EAAA,mBAAAnF,QAAAjN,UAAAkS,IACA,OAOApP,GAPAsP,IAAAD,EAAAD,QAFA,SAEAA,OAOA,SAAA5D,GACA,MAAAA,GAAA4D,QAPA,SAAA5D,GACA,GAAA+D,GAAA,GAAA7Q,QAAA,KAAA2Q,EAAA,KAAAA,EAAA,MACAG,EAAA,GAAA9Q,QAAA,IAAA2Q,EAAA,KAAAA,EAAA,MACA,OAAA7D,GAAA9I,QAAA6M,EAAA,IAAA7M,QAAA8M,EAAA,SA8BA1G,GAAA9I,EAAA,SAAA2B,GACA,cAAAA,EAAA,WAAAyC,KAAAzC,EAAA,YAAAlF,OAAAS,UAAA0E,SAAA1F,KAAAyF,GAAAoC,MAAA,QAyBA0L,GAAAzP,EAAA,SAAAvC,GACA,kBACA,MAAAA,GAAAmF,EAAAhF,eA4BA8R,GAAA1P,EAAA,SAAAvC,GACA,MAAAsO,IAAA,EAAAtO,KA6BAkS,GAAAxP,EAAA,SAAAyP,EAAAnS,GACA,MAAA+J,IAAAoI,EAAA,WAKA,IAJA,GAGAC,GAHAC,EAAA,EACAhD,EAAArP,EACA6B,EAAA,EAEAwQ,GAAAF,GAAA,mBAAA9C,IACA+C,EAAAC,IAAAF,EAAAhS,UAAA4B,OAAAF,EAAAwN,EAAAtN,OACAsN,IAAApP,MAAAC,KAAAiF,EAAAhF,UAAA0B,EAAAuQ,IACAC,GAAA,EACAxQ,EAAAuQ,CAEA,OAAA/C,OA0BAiD,GAAA5P,EAAA,SAAA1C,EAAAuS,GAGA,IAFA,GAAAC,GAAAxS,EAAAuS,GACAtQ,KACAuQ,KAAAzQ,QACAE,IAAAF,QAAAyQ,EAAA,GACAA,EAAAxS,EAAAwS,EAAA,GAEA,OAAAvQ,KAuBAwQ,GAAA/P,EAAA,SAAAP,EAAAE,GAGA,IAFA,GACA8K,GADAtL,EAAA,EAAAS,EAAAD,EAAAN,OACAE,KACAJ,EAAAS,GACA6K,EAAA9K,EAAAR,GACAK,EAAAC,EAAAgL,EAAAlL,KACAA,IAAAF,QAAAoL,GAEAtL,GAAA,CAEA,OAAAI,KAqBAyQ,GAAA7P,EAAA,SAAAhB,EAAAO,EAAAC,GACA,MAAAmG,GAAAI,EAAAxG,GAAAP,EAAAQ,KAkBAsQ,GAAApQ,EAAA,SAAAmB,GAKA,IAJA,GAAAwM,GAAApD,GAAApJ,GACApB,EAAA4N,EAAAnO,OACA6Q,KACA/Q,EAAA,EACAA,EAAAS,GACAsQ,EAAA/Q,GAAA6B,EAAAwM,EAAArO,IACAA,GAAA,CAEA,OAAA+Q,KAsBAC,GAAAtQ,EAAA,SAAAmB,GACA,GAAAG,GAAAiP,IACA,KAAAjP,IAAAH,GACAoP,IAAA/Q,QAAA2B,EAAAG,EAEA,OAAAiP,KAuBAC,GAAA,WACA,GAAAC,GAAA,SAAA5Q,GACA,OACAiN,MAAAjN,EACAkN,IAAA,WACA,MAAApP,QAIA,OAAAwC,GAAA,SAAA6M,EAAAnN,GACA,MAAAmN,GAAAyD,GAAA5Q,GAAAiN,WAqCA4D,GAAAvQ,EAAA,SAAAwQ,EAAAC,GACA,OAAAtP,KAAAqP,GACA,GAAAtP,EAAAC,EAAAqP,OAAArP,GAAAsP,EAAAtP,IACA,QAGA,YA4BAuP,GAAA1Q,EAAA,SAAA1C,EAAAqT,GACA,MAAAtJ,IAAA/J,EAAA+B,OAAA,WACA,MAAAsR,GAAApT,MAAAC,KAAAwB,GAAA1B,GAAAG,gBAqBAmT,GAAA5Q,EAAA,SAAAD,EAAAG,GAOA,IALA,GAEA2Q,GAFA1R,EAAA,EACA2R,EAAA/Q,EAAAV,OAEA0R,EAAA7Q,EAAAb,OACAE,KACAJ,EAAA2R,GAAA,CAEA,IADAD,EAAA,EACAA,EAAAE,GACAxR,IAAAF,SACAU,EAAAZ,GACAe,EAAA2Q,IAEAA,GAAA,CAEA1R,IAAA,EAEA,MAAAI,KAoBAyR,GAAAhR,EAAA,SAAAD,EAAAG,GAIA,IAHA,GAAA+Q,MACA9R,EAAA,EACAS,EAAAiD,KAAAE,IAAAhD,EAAAV,OAAAa,EAAAb,QACAF,EAAAS,GACAqR,EAAA9R,IACAY,EAAAZ,GACAe,EAAAf,IAEAA,GAAA,CAEA,OAAA8R,KAiBAC,GAAAlR,EAAA,SAAAoK,EAAA6F,GAEA,IADA,GAAA9Q,GAAA,EAAAS,EAAAwK,EAAA/K,OAAAuI,KACAzI,EAAAS,GACAgI,EAAAwC,EAAAjL,IAAA8Q,EAAA9Q,GACAA,GAAA,CAEA,OAAAyI,KAyBAuJ,GAAAhR,EAAA,SAAA7C,EAAAyC,EAAAG,GAEA,IADA,GAAA+Q,MAAA9R,EAAA,EAAAS,EAAAiD,KAAAE,IAAAhD,EAAAV,OAAAa,EAAAb,QACAF,EAAAS,GACAqR,EAAA9R,GAAA7B,EAAAyC,EAAAZ,GAAAe,EAAAf,IACAA,GAAA,CAEA,OAAA8R,KAgBAG,GAAAlL,GAAA,GAeAmL,GAAAnL,GAAA,GAYAoL,GAAA,SAAAC,EAAAjU,GACA,kBACA,GAAA+B,GAAA5B,UAAA4B,MACA,QAAAA,EACA,MAAA/B,IAEA,IAAA0D,GAAAvD,UAAA4B,EAAA,EACA,OAAAgC,GAAAL,IAAA,mBAAAA,GAAAuQ,GAAAjU,EAAAC,MAAAC,KAAAC,WAAAuD,EAAAuQ,GAAAhU,MAAAyD,EAAAyB,EAAAhF,UAAA,EAAA4B,EAAA,MAaAmS,GAAA,QAAAA,GAAA7E,EAAA8E,EAAAC,GACA,GAAAC,GAAA,SAAAC,GAGA,IAFA,GAAAhS,GAAA6R,EAAApS,OACAF,EAAA,EACAA,EAAAS,GAAA,CACA,GAAA+M,IAAA8E,EAAAtS,GACA,MAAAuS,GAAAvS,EAEAA,IAAA,EAEAsS,EAAAtS,EAAA,GAAAwN,EACA+E,EAAAvS,EAAA,GAAAyS,CACA,QAAA3Q,KAAA0L,GACAiF,EAAA3Q,GAAAuQ,EAAA7E,EAAA1L,GAAAwQ,EAAAC,EAEA,OAAAE,GAEA,QAAAjJ,GAAAgE,IACA,aACA,MAAAgF,MACA,aACA,MAAAA,MACA,YACA,UAAAzO,MAAAyJ,EACA,cACA,MAAAtO,GAAAsO,EACA,SACA,MAAAA,KAIAkF,GAAA,SAAAC,GACA,gBAAAxU,GACA,GAAAoF,GAAAD,EAAAhF,UAAA,EACA,OAAAJ,GAAAwF,KAAAC,IAAA,EAAAxF,EAAA+B,OAAAqD,EAAArD,QAAA,WACA,MAAA/B,GAAAC,MAAAC,KAAAsU,EAAApP,EAAAjF,gBAmBAsU,GAAA,SAAAR,EAAAxN,EAAAzG,GACA,kBACA,GAAA+B,GAAA5B,UAAA4B,MACA,QAAAA,EACA,MAAA/B,IAEA,IAAA0D,GAAAvD,UAAA4B,EAAA,EACA,KAAAgC,EAAAL,GAAA,CACA,GAAA0B,GAAAD,EAAAhF,UAAA,EAAA4B,EAAA,EACA,uBAAA2B,GAAAuQ,GACA,MAAAvQ,GAAAuQ,GAAAhU,MAAAyD,EAAA0B,EAEA,IAAAX,EAAAf,GAAA,CAEA,MADA+C,GAAAxG,MAAA,KAAAmF,GACA1B,IAGA,MAAA1D,GAAAC,MAAAC,KAAAC,aAOAuU,GAAA,QAAAA,GAAAjS,EAAAG,EAAA+R,EAAAC,GACA,GAAAC,GAAAxJ,GAAA5I,EACA,IAAAoS,IAAAxJ,GAAAzI,GACA,QAEA,gBAAAiS,GAAA,WAAAA,GAAA,WAAAA,EACA,uBAAApS,GAAA,iBAAAG,IAAA+I,GAAAlJ,EAAAqS,UAAAlS,EAAAkS,WAAAnJ,GAAAlJ,EAAAG,EAEA,IAAA+I,GAAAlJ,EAAAG,GACA,QAEA,eAAAiS,EAEA,MAAApS,GAAAvB,SAAA0B,EAAA1B,QAAAuB,EAAAtB,SAAAyB,EAAAzB,QAAAsB,EAAArB,aAAAwB,EAAAxB,YAAAqB,EAAApB,YAAAuB,EAAAvB,WAAAoB,EAAAnB,SAAAsB,EAAAtB,QAAAmB,EAAAlB,UAAAqB,EAAArB,OAEA,IAAAvC,OAAAyD,OAAA,CACA,YAAAoS,GAAApS,EAAAsS,YAAAnS,EAAAmS,UACA,QAEA,IAAAC,GAAAlI,GAAArK,EACA,IAAAuS,EAAAjT,SAAA+K,GAAAlK,GAAAb,OACA,QAGA,KADA,GAAAF,GAAA8S,EAAA5S,OAAA,EACAF,GAAA,IACA,GAAA8S,EAAA9S,KAAAY,EACA,MAAAmS,GAAA/S,KAAAe,CAEAf,IAAA,EAKA,IAHA8S,IAAA5S,QAAAU,EACAmS,IAAA7S,QAAAa,EACAf,EAAAmT,EAAAjT,OAAA,EACAF,GAAA,IACA,GAAA8B,GAAAqR,EAAAnT,EACA,KAAA+B,EAAAD,EAAAf,KAAA8R,EAAA9R,EAAAe,GAAAlB,EAAAkB,GAAAgR,EAAAC,GACA,QAEA/S,IAAA,EAIA,MAFA8S,GAAAM,MACAL,EAAAK,OACA,EAEA,UAoBAC,GAAA,SAAAC,EAAAzR,GACA,aAAAA,IAAAK,EAAAL,IAAA,mBAAAA,GAAAyR,IASAC,GAAA,SAAAC,GACA,eAAAC,GAAAjT,GAEA,IADA,GAAAgN,GAAAkE,EAAAE,EAAAxR,KAAAJ,EAAA,EAAA2R,EAAAnR,EAAAN,OACAF,EAAA2R,GAAA,CACA,GAAA/G,GAAApK,EAAAR,IAIA,IAHAwN,EAAAgG,EAAAC,EAAAjT,EAAAR,IAAAQ,EAAAR,GACA0R,EAAA,EACAE,EAAApE,EAAAtN,OACAwR,EAAAE,GACAxR,IAAAF,QAAAsN,EAAAkE,GACAA,GAAA,MAGAtR,KAAAF,QAAAM,EAAAR,EAEAA,IAAA,EAEA,MAAAI,KAIAsT,GAAA,WACA,QAAAC,GAAA/O,EAAA6B,EAAAjG,GAEA,IADA,GAAAR,GAAA,EAAAS,EAAAD,EAAAN,OACAF,EAAAS,GAAA,CAEA,IADAgG,EAAA7B,EAAA,qBAAA6B,EAAAjG,EAAAR,MACAyG,EAAA,yBACAA,IAAA,qBACA,OAEAzG,GAAA,EAEA,MAAA4E,GAAA,uBAAA6B,GAEA,QAAAmN,GAAAhP,EAAA6B,EAAAoN,GAEA,IADA,GAAAC,GAAAD,EAAAE,QACAD,EAAAE,MAAA,CAEA,IADAvN,EAAA7B,EAAA,qBAAA6B,EAAAqN,EAAAtG,SACA/G,EAAA,yBACAA,IAAA,qBACA,OAEAqN,EAAAD,EAAAE,OAEA,MAAAnP,GAAA,uBAAA6B,GAEA,QAAAwN,GAAArP,EAAA6B,EAAA5E,GACA,MAAA+C,GAAA,uBAAA/C,EAAAqS,OAAA3M,EAAA3C,EAAA,qBAAAA,GAAA6B,IAEA,GAAA0N,GAAA,oBAAAC,eAAAC,SAAA,YACA,iBAAAlW,EAAAsI,EAAAjG,GAIA,GAHA,mBAAArC,KACAA,EAAAoI,EAAApI,IAEAyM,GAAApK,GACA,MAAAmT,GAAAxV,EAAAsI,EAAAjG,EAEA,uBAAAA,GAAA0T,OACA,MAAAD,GAAA9V,EAAAsI,EAAAjG,EAEA,UAAAA,EAAA2T,GACA,MAAAP,GAAAzV,EAAAsI,EAAAjG,EAAA2T,KAEA,uBAAA3T,GAAAuT,KACA,MAAAH,GAAAzV,EAAAsI,EAAAjG,EAEA,UAAAgO,WAAA,8CAIA8F,GAAA,WACA,GAAAC,IACAC,oBAAArS,MACAsS,oBAAA,SAAAC,EAAAnU,GACA,MAAAV,GAAA6U,GAAAnU,KAEAoU,sBAAA1S,GAEA2S,GACAJ,oBAAA3J,OACA4J,oBAAA,SAAA7T,EAAAG,GACA,MAAAH,GAAAG,GAEA4T,sBAAA1S,GAEA4S,GACAL,oBAAArX,OACAsX,oBAAA,SAAArU,EAAA4E,GACA,MAAAqH,IAAAjM,EAAAwK,GAAA5F,GAAAiD,GAAAjD,EAAA,GAAAA,EAAA,IAAAA,IAEA2P,sBAAA1S,EAEA,iBAAAJ,GACA,GAAAe,EAAAf,GACA,MAAAA,EAEA,IAAA+I,GAAA/I,GACA,MAAA0S,EAEA,qBAAA1S,GACA,MAAA+S,EAEA,qBAAA/S,GACA,MAAAgT,EAEA,UAAA5V,OAAA,iCAAA4C,OAIAiT,GAAA,WACA,QAAAC,GAAAnV,EAAAgF,GACAvG,KAAAuG,KACAvG,KAAAuB,IACAvB,KAAA2W,KAAA,EAgBA,MAdAD,GAAAnX,UAAA,qBAAAsH,EAAAC,KACA4P,EAAAnX,UAAA,gCAAAwC,GAIA,MAHA/B,MAAA2W,MACA5U,EAAA/B,KAAAuG,GAAA,qBAAAxE,GAAA,IAEA/B,KAAAuG,GAAA,uBAAAxE,IAEA2U,EAAAnX,UAAA,8BAAAwC,EAAA4E,GAKA,MAJA3G,MAAAuB,EAAAoF,KACA3G,KAAA2W,KAAA,EACA5U,EAAAiD,EAAAhF,KAAAuG,GAAA,qBAAAxE,GAAA,KAEAA,GAEAS,EAAA,SAAAjB,EAAAgF,GACA,UAAAmQ,GAAAnV,EAAAgF,QAIAqQ,GAAA,WACA,QAAAC,GAAAtV,EAAAgF,GACAvG,KAAAuG,KACAvG,KAAAuB,IACAvB,KAAA8W,KAAA,EAgBA,MAdAD,GAAAtX,UAAA,qBAAAsH,EAAAC,KACA+P,EAAAtX,UAAA,gCAAAwC,GAIA,MAHA/B,MAAA8W,MACA/U,EAAA/B,KAAAuG,GAAA,qBAAAxE,GAAA,IAEA/B,KAAAuG,GAAA,uBAAAxE,IAEA8U,EAAAtX,UAAA,8BAAAwC,EAAA4E,GAKA,MAJA3G,MAAAuB,EAAAoF,KACA3G,KAAA8W,KAAA,EACA/U,EAAAiD,EAAAhF,KAAAuG,GAAA,qBAAAxE,GAAA,KAEAA,GAEAS,EAAA,SAAAjB,EAAAgF,GACA,UAAAsQ,GAAAtV,EAAAgF,QAIAwQ,GAAA,WACA,QAAAC,GAAA7X,EAAAoH,GACAvG,KAAAuG,KACAvG,KAAAb,IAWA,MATA6X,GAAAzX,UAAA,qBAAAsH,EAAAC,KACAkQ,EAAAzX,UAAA,uBAAAsH,EAAA9E,OACAiV,EAAAzX,UAAA,8BAAAwC,EAAA4E,GACA,MAAA3G,MAAAb,EAAA,GACAa,KAAAb,GAAA,EACA4C,GAEA/B,KAAAuG,GAAA,qBAAAxE,EAAA4E,IAEAnE,EAAA,SAAArD,EAAAoH,GACA,UAAAyQ,GAAA7X,EAAAoH,QAIA0Q,GAAA,WACA,QAAAC,GAAA3V,EAAAgF,GACAvG,KAAAuG,KACAvG,KAAAuB,IAaA,MAXA2V,GAAA3X,UAAA,qBAAAsH,EAAAC,KACAoQ,EAAA3X,UAAA,uBAAAsH,EAAA9E,OACAmV,EAAA3X,UAAA,8BAAAwC,EAAA4E,GACA,GAAA3G,KAAAuB,EAAA,CACA,GAAAvB,KAAAuB,EAAAoF,GACA,MAAA5E,EAEA/B,MAAAuB,EAAA,KAEA,MAAAvB,MAAAuG,GAAA,qBAAAxE,EAAA4E,IAEAnE,EAAA,SAAAjB,EAAAgF,GACA,UAAA2Q,GAAA3V,EAAAgF,QAIA4Q,GAAA,WACA,QAAAC,GAAA7V,EAAAgF,GACAvG,KAAAuG,KACAvG,KAAAuB,IACAvB,KAAAqX,UAyBA,MAvBAD,GAAA7X,UAAA,qBAAAsH,EAAAC,KACAsQ,EAAA7X,UAAA,gCAAAwC,GACA,GAAA0B,EACA,KAAAA,IAAAzD,MAAAqX,OACA,GAAA3T,EAAAD,EAAAzD,KAAAqX,UACAtV,EAAA/B,KAAAuG,GAAA,qBAAAxE,EAAA/B,KAAAqX,OAAA5T,IACA1B,EAAA,0BACAA,IAAA,qBACA,OAIA,MAAA/B,MAAAuG,GAAA,uBAAAxE,IAEAqV,EAAA7X,UAAA,8BAAAwC,EAAA4E,GACA,GAAAlD,GAAAzD,KAAAuB,EAAAoF,EAMA,OALA3G,MAAAqX,OAAA5T,GAAAzD,KAAAqX,OAAA5T,KACAA,MAGAzD,KAAAqX,OAAA5T,GAAA,GAAAoF,EAAAlC,EAAA3G,KAAAqX,OAAA5T,GAAA,IACA1B,GAEAS,EAAA,SAAAjB,EAAAgF,GACA,UAAA6Q,GAAA7V,EAAAgF,QA0BA+Q,GAAAjV,EAAA,SAAAvC,GACA,MAAA+J,IAAA/J,EAAA+B,OAAA,WACA,GAAAF,GAAA,EACA4V,EAAAtX,UAAA,GACAkC,EAAAlC,oBAAA4B,OAAA,GACAqD,EAAAD,EAAAhF,UASA,OARAiF,GAAA,cACA,GAAAnD,GAAAwV,EAAAxX,MAAAC,KAAAwB,EAAAvB,WACA0B,EACAQ,IAGA,OADAR,IAAA,EACAI,GAEAjC,EAAAC,MAAAC,KAAAkF,OA2BAyR,GAAAnU,EAAA+R,GAAA,MAAAkC,GAAA,SAAA3W,EAAAqC,GAEA,IADA,GAAAR,GAAA,EACAA,EAAAQ,EAAAN,QAAA,CACA,IAAA/B,EAAAqC,EAAAR,IACA,QAEAA,IAAA,EAEA,YAwBA6V,GAAAhV,EAAA,SAAAD,EAAAG,GACA,MAAAsS,IAAA,MAAAzS,KAAAiV,IAAA9U,GAAAH,GAAAG,IA0BAoU,GAAAtU,EAAA+R,GAAA,MAAAqC,GAAA,SAAA9W,EAAAqC,GAEA,IADA,GAAAR,GAAA,EACAA,EAAAQ,EAAAN,QAAA,CACA,GAAA/B,EAAAqC,EAAAR,IACA,QAEAA,IAAA,EAEA,YA2BA8V,GAAApV,EAAA,SAAAvC,GACA,MAAAsO,IAAA,EAAAtO,KAoBA4X,GAAArV,EAAA,SAAA8M,GACA,MAAA6E,IAAA7E,WAwBAmF,GAAA9R,EAAA,SAAAf,EAAAC,GACA,GAAAmC,EAAAnC,GACA,MAAAF,GAAAC,EAAAC,EACS,IAAAsT,GAAA,SAAAvT,GACT,MAAAA,GAAA6S,OAAA5S,EAEA,UAAAyO,WAAA,sBAAA1O,MA8CAkW,GAAAtV,EAAA,SAAAvC,GACA,MAAA+J,IAAA/J,EAAA+B,OAAA/B,KA2BA8X,GAAApV,EAAA+R,GAAA,YAAA0C,GAAA,SAAAhV,EAAAE,GAEA,IADA,GAAAR,GAAA,EAAAS,EAAAD,EAAAN,OACAF,EAAAS,GAAAH,EAAAE,EAAAR,KACAA,GAAA,CAEA,OAAAsD,GAAA9C,EAAAR,MAyBAkW,GAAArV,EAAA,SAAAD,EAAAG,GACA,MAAAsS,IAAA,SAAAzS,KAAAsV,OAAAnV,GAAAsS,GAAA,SAAAtS,KAAAmV,OAAAtV,GAAAiS,GAAAjS,EAAAG,WA6BAoV,GAAAtV,EAAA+R,GAAA,SAAAxN,EAAA5D,IAuBA4U,GAAAvV,EAAA+R,GAAA,OAAAtN,EAAA,SAAAnH,EAAAqC,GAGA,IAFA,GAAAR,GAAA,EACAS,EAAAD,EAAAN,OACAF,EAAAS,GAAA,CACA,GAAAtC,EAAAqC,EAAAR,IACA,MAAAQ,GAAAR,EAEAA,IAAA,MAyBAqW,GAAAxV,EAAA+R,GAAA,YAAAnN,EAAA,SAAAtH,EAAAqC,GAGA,IAFA,GAAAR,GAAA,EACAS,EAAAD,EAAAN,OACAF,EAAAS,GAAA,CACA,GAAAtC,EAAAqC,EAAAR,IACA,MAAAA,EAEAA,IAAA,EAEA,YAwBAsW,GAAAzV,EAAA+R,GAAA,WAAAjN,EAAA,SAAAxH,EAAAqC,GAEA,IADA,GAAAR,GAAAQ,EAAAN,OAAA,EACAF,GAAA,IACA,GAAA7B,EAAAqC,EAAAR,IACA,MAAAQ,GAAAR,EAEAA,IAAA,MAyBAuW,GAAA1V,EAAA+R,GAAA,gBAAA9M,EAAA,SAAA3H,EAAAqC,GAEA,IADA,GAAAR,GAAAQ,EAAAN,OAAA,EACAF,GAAA,IACA,GAAA7B,EAAAqC,EAAAR,IACA,MAAAA,EAEAA,IAAA,EAEA,YAmBAwW,GAAA9V,EAAA6S,IAAA,IAsBAkD,GAAA/V,EAAA,SAAAvC,GACA,MAAA6X,IAAA,SAAApV,EAAAG,GACA,GAAAwC,GAAAD,EAAAhF,UAGA,OAFAiF,GAAA,GAAAxC,EACAwC,EAAA,GAAA3C,EACAzC,EAAAC,MAAAC,KAAAkF,OAgCAmT,GAAA7V,EAAAsR,GAAA,mBAAAhU,EAAAqC,GAGA,IAFA,GAAAC,GAAAD,EAAAN,OACAF,EAAA,EACAA,EAAAS,GACAtC,EAAAqC,EAAAR,IACAA,GAAA,CAEA,OAAAQ,MAqBAmW,GAAAjW,EAAAkB,EAAAqJ,KAqBA2L,GAAAlW,EAAAkB,EAAA6J,KAsCAoL,GAAAhW,EAAA+R,GAAA,UAAA4C,GAAA,SAAArX,EAAAqC,GACA,MAAAkT,IAAA,SAAAjN,EAAA6D,GACA,GAAAxI,GAAA3D,EAAAmM,EAEA,OADA7D,GAAA3E,GAAAoF,EAAAoD,EAAA7D,EAAA3E,KAAA2E,EAAA3E,QACA2E,MACajG,MAuBbsI,GAAA8D,GAAA,GAuCAkK,GAAA9V,EAAA,SAAAV,EAAAyW,EAAAC,GAEA,IADA,GAAAC,MAAAjX,EAAA,EACAA,EAAA+W,EAAA7W,QACAG,EAAAC,EAAAyW,EAAA/W,GAAAgX,KACAC,IAAA/W,QAAA6W,EAAA/W,IAEAA,GAAA,CAEA,OAAA4Q,IAAAtQ,EAAA2W,KAiBAC,GAAArW,EAAAsR,GAAA,uBAAAgF,EAAA3W,GAIA,IAHA,GAAAiI,MACAzI,EAAA,EACAE,EAAAM,EAAAN,OACAF,EAAAE,GACAF,IAAAE,EAAA,EACAuI,EAAAgG,KAAAjO,EAAAR,IAEAyI,EAAAgG,KAAAjO,EAAAR,GAAAmX,GAEAnX,GAAA,CAEA,OAAAyI,MAqCA2O,GAAApW,EAAA,SAAAyF,EAAA7B,EAAApE,GACA,MAAAoC,GAAA6D,GAAAiN,GAAA9O,EAAA6B,KAAA,uBAAAjG,GAAAkT,GAAA9O,EAAA0P,GAAA7N,MAAAjG,KAyBA6W,GAAA3W,EAAA,SAAAmB,GAKA,IAJA,GAAAwM,GAAApD,GAAApJ,GACApB,EAAA4N,EAAAnO,OACAF,EAAA,EACAyI,KACAzI,EAAAS,GAAA,CACA,GAAAqB,GAAAuM,EAAArO,GACAqC,EAAAR,EAAAC,GACAtB,EAAAuB,EAAAM,EAAAoG,KAAApG,GAAAoG,EAAApG,KACA7B,KAAAN,QAAA4B,EACA9B,GAAA,EAEA,MAAAyI,KA2BA6O,GAAA5W,EAAA,SAAAmB,GAKA,IAJA,GAAAwM,GAAApD,GAAApJ,GACApB,EAAA4N,EAAAnO,OACAF,EAAA,EACAyI,KACAzI,EAAAS,GAAA,CACA,GAAAqB,GAAAuM,EAAArO,EACAyI,GAAA5G,EAAAC,MACA9B,GAAA,EAEA,MAAAyI,KAsBA5C,GAAA+G,IAAA,GAoBA2K,GAAA1W,EAAA,SAAA2W,EAAA9C,GACA,GAAArB,GAAA,cAAAqB,GACA,MAAAA,GAAA6C,YAAAC,EAGA,KADA,GAAAxX,GAAA0U,EAAAxU,OAAA,EACAF,GAAA,IACA,GAAAkW,GAAAxB,EAAA1U,GAAAwX,GACA,MAAAxX,EAEAA,IAAA,EAEA,WA8BAyN,GAAA5M,EAAA+R,GAAA,MAAA3M,EAAApD,IAyBA4U,GAAA5W,EAAA,SAAA1C,EAAA0D,GACA,MAAA6R,IAAA,SAAAjN,EAAA3E,GAEA,MADA2E,GAAA3E,GAAA3D,EAAA0D,EAAAC,IACA2E,MACawE,GAAApJ,MAyBb6V,GAAA7W,EAAA,SAAA1C,EAAA0D,GACA,MAAA6R,IAAA,SAAAjN,EAAA3E,GAEA,MADA2E,GAAA3E,GAAA3D,EAAA0D,EAAAC,KAAAD,GACA4E,MACawE,GAAApJ,MAoBb8V,GAAA9W,EAAAlB,EAAAiT,GAAA,MAAAqC,GAAAE,MAuBAyC,GAAA/W,EAAA,SAAAD,EAAAG,GACA,MAAAsS,IAAA,KAAAzS,KAAAgX,GAAA7W,GAAAH,GAAAG,IA6BA8W,GAAA7B,GAAAtD,GAAA7S,IA2BAiY,GAAA9B,GAAAtD,GAAA+D,GAAA5W,KAmBAkY,GAAAlX,EAAA,SAAAP,EAAAE,GACA,MAAAkT,IAAA,SAAAjN,EAAA6D,GACA,GAAAoK,GAAAjO,EAAAnG,EAAAgK,GAAA,IAEA,OADAoK,KAAAxU,QAAAoK,EACA7D,WAIAjG,KAyBAwX,GAAAhX,EAAA,SAAAiX,EAAA5V,EAAAR,GACA,MAAAqU,IAAA5O,GAAA2Q,EAAApW,GAAAQ,KAkBA6V,GAAArX,EAAA,SAAA/C,EAAA0C,GACA,MAAAiN,IAAAzL,GAAAlE,GAAA0C,KA0BA2X,GAAAnX,EAAA,SAAAhE,EAAAqF,EAAAR,GACA,MAAAuM,IAAA8H,GAAA7T,GAAArF,EAAA6E,KAuBAuW,GAAApX,EAAA,SAAAwI,EAAAxM,EAAA6E,GACA,MAAAuM,IAAA1D,GAAAlB,GAAAxM,EAAA6E,KAkCAqS,GAAAlT,EAAA0S,IAwBA2E,GAAAxX,EAAA,SAAA1C,EAAAqC,GACA,MAAA2V,IAAAxW,EAAAxB,GAAAqC,KAqBA8X,GAAAzX,EAAA,SAAA2M,EAAAhQ,GACA,MAAAmS,IAAA5I,EAAAyG,GAAAhQ,KAwBAiH,GAAAzD,EAAAmR,GAAA,iBAAAoG,EAAAC,EAAAhY,GACA,MAAA2B,OAAAvE,UAAA6G,MAAA7H,KAAA4D,EAAA+X,EAAAC,MAmBAC,GAAA5X,EAAA,SAAArD,EAAAgD,GACA,GAAAhD,GAAA,EACA,SAAAyB,OAAA,0DAIA,KAFA,GAAAmB,MACAJ,EAAA,EACAA,EAAAQ,EAAAN,QACAE,EAAAqO,KAAAhK,GAAAzE,KAAAxC,EAAAgD,GAEA,OAAAJ,KAiBAsY,GAAAxE,GAAAxN,EAAA,GA0BAqC,GAAAoJ,GAAA,OAAA1N,GAAA,EAAAgL,MAsCAkJ,GAAA9X,EAAA+R,GAAA,OAAAzM,EAAA,SAAA3I,EAAAkX,GACA,MAAAjQ,IAAA,EAAAjH,EAAA,EAAAiS,IAAAjS,EAAAkX,MA4BAkE,GAAA/X,EAAA+R,GAAA,YAAAvM,EAAA,SAAAlI,EAAAqC,GAEA,IADA,GAAAR,GAAA,EAAAS,EAAAD,EAAAN,OACAF,EAAAS,GAAAtC,EAAAqC,EAAAR,KACAA,GAAA,CAEA,OAAAsD,GAAA9C,EAAA,EAAAR,MA4CA6Y,GAAA3Q,GAAA,WAAAtD,EAAAzG,EAAAsI,EAAAjG,GACA,MAAAkT,IAAA9O,EAAA,mBAAAzG,GAAAoI,EAAApI,MAAAsI,EAAAjG,KAwBAsY,GAAA9X,EAAA,SAAAV,EAAAyW,EAAAC,GACA,MAAApG,IAAAtQ,EAAAT,EAAAkX,EAAAC,MAmBA+B,GAAAnI,GAAAsF,IAkBA8C,GAAAtY,EAAA6S,IAAA,IAiDA0F,GAAAjD,GAAA,SAAA7X,GACA,GAAA+a,GAAA5V,EAAAhF,UAAA,GACA6a,EAAAD,EAAAhZ,MACA,OAAA8V,IAAA9X,EAAAib,EAAA,WAEA,IADA,GAAA5V,MAAAvD,EAAA,EACAA,EAAAmZ,GACA5V,EAAAvD,GAAAkZ,EAAAlZ,GAAA1B,UAAA0B,IACAA,GAAA,CAEA,OAAA7B,GAAAC,MAAAC,KAAAkF,EAAAoP,OAAArP,EAAAhF,UAAA6a,UA8BAC,GAAAvY,EAAA,SAAAwQ,EAAAC,GACA,MAAAF,IAAAqG,GAAAvB,GAAA7E,GAAAC,KAGA+H,GAAA,WACA,GAAAC,GAAA,SAAA1U,GACA,OACA4P,oBAAAtP,EAAAC,KACAwP,sBAAA,SAAAvU,GACA,MAAAwE,GAAA,uBAAAxE,IAEAqU,oBAAA,SAAArU,EAAA4E,GACA,GAAAuU,GAAA3U,EAAA,qBAAAxE,EAAA4E,EACA,OAAAuU,GAAA,wBAAA9X,EAAA8X,OAIA,iBAAA3U,GACA,GAAA4U,GAAAF,EAAA1U,EACA,QACA4P,oBAAAtP,EAAAC,KACAwP,sBAAA,SAAAvU,GACA,MAAAoZ,GAAA,uBAAApZ,IAEAqU,oBAAA,SAAArU,EAAA4E,GACA,MAAA4F,IAAA5F,GAAA0O,GAAA8F,EAAApZ,EAAA4E,GAAA0O,GAAA8F,EAAApZ,GAAA4E,UAMAyU,GAAA,SAAAjZ,EAAA8K,EAAA9H,GAEA,IADA,GAAAxD,GAAAwD,EACAxD,EAAAQ,EAAAN,QAAA,CACA,GAAAgW,GAAA1V,EAAAR,GAAAsL,GACA,MAAAtL,EAEAA,IAAA,EAEA,UAYA0Z,GAAA,SAAAC,GACA,gBAAAC,GACA,GAAAC,GAAA,WACA,GAAAtW,GAAAjF,SACA,OAAAqb,GAAA,SAAAG,GACA,MAAAA,GAAA1b,MAAA,KAAAmF,IACiBqW,GAEjB,OAAAtb,WAAA4B,OAAA,EACA2Z,EAAAzb,MAAA,KAAAkF,EAAAhF,UAAA,IACAJ,EAAAwF,KAAAC,IAAAvF,MAAAsF,KAAAwU,GAAA,SAAA0B,IAAAC,KAIAE,GAAAlZ,EAAA,SAAAjB,EAAAgF,GACA,MAAA6I,IAAA7N,EAAAyZ,GAAAzU,MAuBAoV,GAAAtZ,EAAAgZ,GAAA1E,KAuBAiF,GAAAvZ,EAAAgZ,GAAAvE,KAgBA+E,GAAArZ,EAAA,SAAAsZ,EAAAlJ,GACA,MAAAoC,IAAA,KAAA8G,KAAAD,GAAAjJ,GAAAyC,GAAA,SAAAjN,EAAAtI,GACA,MAAA0B,GAAA4G,EAAAgH,GAAAtP,EAAA8S,QACSkJ,KA6BTvd,GAAAoZ,GAAA,SAAA7X,GACA,MAAAA,GAAAC,MAAAC,KAAAiF,EAAAhF,UAAA,MAuBA8b,GAAAvZ,EAAA+R,GAAA,QAAAmH,GAAA,SAAA5b,EAAAqC,GACA,MAAAwY,IAAAvL,GAAAtP,EAAAqC,OAwBA6Z,GAAArZ,EAAA,SAAA7C,EAAAgP,EAAA3M,GACA,QAAA8Z,GAAA7T,EAAA8T,GACA,MAAAL,IAAAzM,GAAAvG,EAAA/I,EAAAoc,IAAA9T,GAEA,MAAAiN,IAAA4G,EAAAnN,MAAA3M,KA8BAga,GAAA3Z,EAAA,SAAArD,EAAAid,GACA,GAAAjd,EAAA,GACA,SAAAyB,OAAA,8CAEA,YAAAzB,EACA,WACA,UAAAid,IAGAzE,GAAAvJ,GAAAjP,EAAA,SAAAkd,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,OAAA7c,UAAA4B,QACA,OACA,UAAAua,GAAAC,EACA,QACA,UAAAD,GAAAC,EAAAC,EACA,QACA,UAAAF,GAAAC,EAAAC,EAAAC,EACA,QACA,UAAAH,GAAAC,EAAAC,EAAAC,EAAAC,EACA,QACA,UAAAJ,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACA,QACA,UAAAL,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACA,QACA,UAAAN,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACA,QACA,UAAAP,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACA,QACA,UAAAR,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACA,SACA,UAAAT,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,SA+BAC,GAAAlT,GAAA,WAAAmT,GACA,GAAAlB,GAAA7W,EAAAhF,UAAA,EACA,OAAA4J,IAAAxE,KAAAC,IAAAvF,MAAAsF,KAAAwU,GAAA,SAAAiC,IAAA,WACA,GAAA5W,GAAAjF,UACAgd,EAAAjd,IACA,OAAAgd,GAAAjd,MAAAkd,EAAAzY,EAAA,SAAA1E,GACA,MAAAA,GAAAC,MAAAkd,EAAA/X,IACa4W,QA0BboB,GAAA1a,EAAA+R,GAAA,OAAAwC,GAAA,SAAA5X,EAAAkX,GACA,MAAAjQ,IAAAf,KAAAC,IAAA,EAAAnG,GAAAiS,IAAAiF,MAuBA8G,GAAA3a,EAAA,SAAArD,EAAAkX,GACA,MAAAiE,IAAAnb,EAAAkX,EAAAxU,OAAAwU,EAAAxU,OAAA1C,EAAA,EAAAkX,KAwBA+G,GAAA5a,EAAA+R,GAAA,kBAAAlO,EAAA,SAAApE,EAAAE,GACA,GAAAJ,MACAJ,EAAA,EACAS,EAAAD,EAAAN,MACA,QAAAO,EAEA,IADAL,EAAA,GAAAI,EAAA,GACAR,EAAAS,GACAH,EAAAuF,GAAAzF,GAAAI,EAAAR,MACAI,IAAAF,QAAAM,EAAAR,IAEAA,GAAA,CAGA,OAAAI,MAuBAsb,GAAA1a,EAAA,SAAAgB,EAAA2Z,EAAAC,GACA,MAAA1F,IAAAyF,EAAA3Z,GAAA4Z,EAAA5Z,MAqBA6Z,GAAAhb,EAAA,SAAA2W,EAAA9C,GACA,MAAArB,IAAA,UAAAqB,KAAAmH,QAAArE,GAAAiC,GAAA/E,EAAA8C,EAAA,KA0BArS,GAAAV,GAAA,MAkBAqX,GAAApb,EAAA,SAAAF,GAGA,IAFA,GAAAC,GAAAD,EAAAN,OACAF,EAAA,EACAA,EAAAS,GAAA,CACA,GAAAgZ,GAAAjZ,IAAAR,KAAA,MACA,QAEAA,IAAA,EAEA,WAyBA0N,GAAA7M,EAAA,SAAA5D,EAAA8e,GACA,gBAAAnc,GACA,gBAAA7B,GACA,MAAA0P,IAAA,SAAApF,GACA,MAAA0T,GAAA1T,EAAAtK,IACiB6B,EAAA3C,EAAAc,SAwBjBie,GAAAtb,EAAA,SAAAlD,GACA,MAAAkQ,IAAAd,GAAApP,GAAAqT,GAAArT,MAsBAye,GAAAvb,EAAA,SAAAwb,GACA,MAAAxO,IAAA1L,GAAAka,GAAA9U,EAAA8U,MAqBAC,GAAAtb,EAAA,SAAAub,EAAAje,GACA,GAAAke,GAAAnU,GAAAkU,EAAAje,EACA,OAAA+J,IAAAkU,EAAA,WACA,MAAA1I,IAAAwG,GAAAzM,GAAA4O,EAAA/d,UAAA,IAAAgF,EAAAhF,UAAA,QAkBAge,GAAA5b,EAAA,SAAAF,GACA,MAAAkY,IAAAlY,KAAAN,SAkBAqc,GAAA7b,EAAA,SAAAF,GACA,GAAAC,GAAAD,EAAAN,MACA,QAAAO,EACA,MAAAiL,IAEA,IAAA8Q,GAAA,EAAA/b,EAAA,EACAT,GAAAS,EAAA+b,GAAA,CACA,OAAAF,IAAAhZ,EAAA9C,GAAA2O,KAAA,SAAAvO,EAAAG,GACA,MAAAH,GAAAG,GAAA,EAAAH,EAAAG,EAAA,MACS0D,MAAAzE,IAAAwc,MAkBTC,GAAA/b,EAAA,SAAAF,GACA,MAAA0T,IAAA7H,MAA+B7L,KAsB/Bkc,GAAA,WACA,OAAApe,UAAA4B,OACA,SAAAjB,OAAA,sCAEA,OAAAiJ,IAAA5J,UAAA,GAAA4B,OAAAgU,GAAApR,EAAAxE,UAAA,GAAAyK,GAAAzK,cAoBAqe,GAAA,WACA,OAAAre,UAAA4B,OACA,SAAAjB,OAAA,uCAEA,OAAAiJ,IAAA5J,UAAA,GAAA4B,OAAAgU,GAAAlR,EAAA1E,UAAA,GAAAyK,GAAAzK,cAiBAse,GAAA1I,GAAA1H,GAAA,GAqBAqQ,GAAA5D,GAAApW,EAAAkL,GAAAhE,IAuBA+S,GAAAjc,EAAA,SAAArD,EAAAkX,GACA,MAAA6G,IAAA/d,GAAA,EAAAkX,EAAAxU,OAAA1C,EAAA,EAAAkX,KAGAqI,GAAA,SAAAnc,EAAAJ,GACA,MAAAiZ,IAAAjZ,EAAAI,EAAA,OAKAoc,GAAA,QAAAA,GAAAzc,EAAA0c,GACA,GAAAC,GAAA,SAAAvP,GACA,GAAA+G,GAAAuI,EAAAtK,QAAApS,GACA,OAAAwc,IAAApP,EAAA+G,GAAA,aAAAsI,EAAArP,EAAA+G,IAGAyI,EAAA,SAAAtb,EAAAoJ,GACA,MAAApI,GAAA,SAAAqZ,GACA,MAAA/Y,GAAA+Y,GAAA,KAAAgB,EAAArb,EAAAqa,KACajR,EAAAxG,QAAA0K,QAEb,QAAAhS,OAAAS,UAAA0E,SAAA1F,KAAA2D,IACA,yBACA,2CAAqDsC,EAAAqa,EAAA3c,GAAA6c,KAAA,UACrD,sBACA,UAAAva,EAAAqa,EAAA3c,GAAAoS,OAAAwK,EAAA5c,EAAA8X,GAAApK,GAAA,SAAAhD,GAAA1K,MAAA6c,KAAA,SACA,wBACA,uBAAA7c,GAAA,eAAA2c,EAAA3c,EAAA0S,WAAA,IAAA1S,EAAA+B,UACA,qBACA,kBAAAa,EAAAU,EAAAtD,IAAA,GACA,qBACA,YACA,uBACA,uBAAAA,GAAA,cAAA2c,EAAA3c,EAAA0S,WAAA,MAAA1S,KAAAkP,IAAA,KAAAlP,EAAA+B,SAAA,GACA,uBACA,uBAAA/B,GAAA,cAAA2c,EAAA3c,EAAA0S,WAAA,IAAA9P,EAAA5C,EACA,0BACA,iBACA,SACA,yBAAAA,GAAA6I,aAAA,WAAA7I,EAAA6I,YAAApM,MAAA,mBAAAuD,GAAA+B,UAAA,oBAAA/B,EAAA+B,WAAA/B,EAAA+B,WACA,IAAc6a,EAAA5c,EAAA0K,GAAA1K,IAAA6c,KAAA,YAuBdC,GAAAhD,GAAAtQ,IAmBAuT,GAAA,WACA,OAAAhf,UAAA4B,OACA,SAAAjB,OAAA,yCAEA,OAAAyd,IAAAte,MAAAC,KAAA2Q,GAAA1Q,aAmCAif,GAAA,WACA,WAAAjf,UAAA4B,OAAA6J,GAAAuT,GAAAlf,MAAAC,KAAAoP,GAAA2M,GAAA9b,aAoBAkf,GAAA,WACA,OAAAlf,UAAA4B,OACA,SAAAjB,OAAA,0CAEA,OAAA0d,IAAAve,MAAAC,KAAA2Q,GAAA1Q,aA2BAmf,GAAA/c,EAAA,SAAA+Z,GACA,MAAAD,IAAAC,EAAAva,OAAAua,KAqBApP,GAAAxK,EAAAkc,IAkBAW,GAAA7c,EAAA,SAAA0H,EAAAC,GAIA,IAHA,GAAAC,MACAzI,EAAA,EACA0I,EAAAH,EAAArI,OACAF,EAAA0I,GACAqU,GAAAxU,EAAAvI,GAAAwI,IAAAuU,GAAAxU,EAAAvI,GAAAyI,KACAA,IAAAvI,QAAAqI,EAAAvI,IAEAA,GAAA,CAEA,OAAAyI,KAoBAkV,GAAAjd,EAAAkS,GAAA,cAAAlO,EAAAwR,IAAAuF,GAAAvF,MAiBA0H,GAAA/c,EAAA,SAAAkW,EAAAC,GACA,MAAA+B,IAAAvX,EAAAiV,GAAAsG,IAAAhG,GAAAC,MA0BA6G,GAAAnd,EAAA,SAAAvC,GACA,MAAAge,IAAAhe,EAAA+B,OAAA/B,KAkBA2f,GAAAjd,EAAA,SAAAiN,EAAAjM,GACA,GAAAzB,KACA,QAAA4B,KAAAH,GACAkb,GAAA/a,EAAA8L,KACA1N,EAAA4B,GAAAH,EAAAG,GAGA,OAAA5B,KAmCA2d,GAAA,WACA,MAAAR,IAAAnf,MAAAC,KAAA2Q,GAAA1Q,aAsCAgE,GAAA5B,EAAA,SAAA2B,GACA,MAAA2a,IAAA3a,QAmBA2b,GAAAnd,EAAAyc,GAAAvE,GAAAlZ,IAoBAoe,GAAApd,EAAA,SAAA1C,EAAAqC,GAEA,IADA,GAAA0d,GAAA5S,EAAAtL,EAAA,EAAAme,KAAA/d,KACAJ,EAAAQ,EAAAN,QACAoL,EAAA9K,EAAAR,GACAke,EAAA/f,EAAAmN,GACAyR,GAAAmB,EAAAC,KACA/d,EAAAqO,KAAAnD,GACA6S,EAAA1P,KAAAyP,IAEAle,GAAA,CAEA,OAAAI,KAyBAge,GAAAvd,EAAA,SAAAub,EAAAiC,GACA,MAAAnW,IAAAkU,EAAA,aACA,GAAA5E,GAAAlZ,UAAA8d,EACA,UAAA5E,GAAA9M,GAAA4T,SAAA9G,EAAA6G,IACA,MAAA7G,GAAA6G,GAAAjgB,MAAAoZ,EAAAlU,EAAAhF,UAAA,EAAA8d,GAEA,UAAA5N,WAAAlM,GAAAkV,GAAA,kCAAA6G,EAAA,SAsBAjB,GAAAgB,GAAA,UA0BAG,GAAA7d,EAAA,SAAAvC,GACA,GAAAqgB,KACA,mBACA,GAAA1c,GAAAQ,GAAAhE,UAIA,OAHAyD,GAAAD,EAAA0c,KACAA,EAAA1c,GAAA3D,EAAAC,MAAAC,KAAAC,YAEAkgB,EAAA1c,MAuBA2c,GAAAL,GAAA,WAgBAM,GAAAN,GAAA,iBAgBAO,GAAAP,GAAA,iBAEAQ,IACA3M,KACAC,KACAlU,KACA0I,MACAiP,YACAhP,SACAqO,OACAgF,WACAjT,SACA8O,OACAV,OACA8E,WACAC,MACAlT,WACAE,SACA9I,QACAgJ,QACAC,YACAyO,UACAvO,OACAE,OACA7K,QACAwd,SACArE,SACAsH,WACAhD,cACA3S,aACAC,aACA2V,WACAC,YACAC,YACA7K,UACA/K,OACA6V,aACAjD,cACAnP,YACAvD,eACAsT,YACArT,UACAE,kBACA+N,SACA9N,UACAC,OACAC,aACAsV,cACApV,kBACAM,UACAC,cACAG,UACAuS,QACAC,YACAvS,iBACA0U,eACAlC,mBACAxF,aACA/M,UACAC,SACAuS,WACAxF,UACA7M,UACA8M,UACAC,QACAC,aACAC,YACAC,iBACAC,WACAC,QACAC,WACAjN,aACAkN,aACAC,eACAC,WACAnN,MACAC,OACAC,OACAC,SACAf,QACAgB,aACAC,YACAC,UACAI,OACAyR,WACA1W,QACAkF,UACAG,aACAoT,gBACA9G,oBACAI,eACAE,QACAC,UACAC,aACA8G,WACA1T,MACAE,eACAG,WACAC,SACA8Q,SACAsB,QACAnS,QACAQ,UACA5F,QACA0R,eACArX,UACAwN,QACAsO,aACAC,YACA4B,QACA1B,SACAxQ,MACAC,OACA6B,OACA5B,YACAE,iBACA0L,UACAC,iBACA1L,SACAG,WACAxI,OACAyI,SACAkQ,QACAC,UACAgC,WACAlS,SACAoQ,YACA7Y,OACA0I,SACAC,UACAC,YACAC,QACAC,UACAiL,QACAhL,OACAC,OACAG,UACAC,WACAC,eACAE,MACA2Q,QACA1Q,QACAwK,MACAtK,QACAuK,WACAC,gBACAC,aACAzQ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","file":"static/js/main.52a767d2.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 39);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n//  Ramda v0.17.1\n//  https://github.com/ramda/ramda\n//  (c) 2013-2015 Scott Sauyet, Michael Hurley, and David Chambers\n//  Ramda may be freely distributed under the MIT license.\n\n;(function() {\n\n  'use strict';\n\n  /**\n     * A special placeholder value used to specify \"gaps\" within curried functions,\n     * allowing partial application of any combination of arguments,\n     * regardless of their positions.\n     *\n     * If `g` is a curried ternary function and `_` is `R.__`, the following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2, _)(1, 3)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @constant\n     * @memberOf R\n     * @category Function\n     * @example\n     *\n     *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n     *      greet('Alice'); //=> 'Hello, Alice!'\n     */\n    var __ = { '@@functional/placeholder': true };\n\n    // jshint unused:vars\n    var _arity = function _arity(n, fn) {\n        // jshint unused:vars\n        switch (n) {\n        case 0:\n            return function () {\n                return fn.apply(this, arguments);\n            };\n        case 1:\n            return function (a0) {\n                return fn.apply(this, arguments);\n            };\n        case 2:\n            return function (a0, a1) {\n                return fn.apply(this, arguments);\n            };\n        case 3:\n            return function (a0, a1, a2) {\n                return fn.apply(this, arguments);\n            };\n        case 4:\n            return function (a0, a1, a2, a3) {\n                return fn.apply(this, arguments);\n            };\n        case 5:\n            return function (a0, a1, a2, a3, a4) {\n                return fn.apply(this, arguments);\n            };\n        case 6:\n            return function (a0, a1, a2, a3, a4, a5) {\n                return fn.apply(this, arguments);\n            };\n        case 7:\n            return function (a0, a1, a2, a3, a4, a5, a6) {\n                return fn.apply(this, arguments);\n            };\n        case 8:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                return fn.apply(this, arguments);\n            };\n        case 9:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                return fn.apply(this, arguments);\n            };\n        case 10:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                return fn.apply(this, arguments);\n            };\n        default:\n            throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n        }\n    };\n\n    var _cloneRegExp = function _cloneRegExp(pattern) {\n        return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n    };\n\n    var _complement = function _complement(f) {\n        return function () {\n            return !f.apply(this, arguments);\n        };\n    };\n\n    /**\n     * Private `concat` function to merge two array-like objects.\n     *\n     * @private\n     * @param {Array|Arguments} [set1=[]] An array-like object.\n     * @param {Array|Arguments} [set2=[]] An array-like object.\n     * @return {Array} A new, merged array.\n     * @example\n     *\n     *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     */\n    var _concat = function _concat(set1, set2) {\n        set1 = set1 || [];\n        set2 = set2 || [];\n        var idx;\n        var len1 = set1.length;\n        var len2 = set2.length;\n        var result = [];\n        idx = 0;\n        while (idx < len1) {\n            result[result.length] = set1[idx];\n            idx += 1;\n        }\n        idx = 0;\n        while (idx < len2) {\n            result[result.length] = set2[idx];\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _containsWith = function _containsWith(pred, x, list) {\n        var idx = 0, len = list.length;\n        while (idx < len) {\n            if (pred(x, list[idx])) {\n                return true;\n            }\n            idx += 1;\n        }\n        return false;\n    };\n\n    /**\n     * Optimized internal two-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry1 = function _curry1(fn) {\n        return function f1(a) {\n            if (arguments.length === 0) {\n                return f1;\n            } else if (a != null && a['@@functional/placeholder'] === true) {\n                return f1;\n            } else {\n                return fn.apply(this, arguments);\n            }\n        };\n    };\n\n    /**\n     * Optimized internal two-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry2 = function _curry2(fn) {\n        return function f2(a, b) {\n            var n = arguments.length;\n            if (n === 0) {\n                return f2;\n            } else if (n === 1 && a != null && a['@@functional/placeholder'] === true) {\n                return f2;\n            } else if (n === 1) {\n                return _curry1(function (b) {\n                    return fn(a, b);\n                });\n            } else if (n === 2 && a != null && a['@@functional/placeholder'] === true && b != null && b['@@functional/placeholder'] === true) {\n                return f2;\n            } else if (n === 2 && a != null && a['@@functional/placeholder'] === true) {\n                return _curry1(function (a) {\n                    return fn(a, b);\n                });\n            } else if (n === 2 && b != null && b['@@functional/placeholder'] === true) {\n                return _curry1(function (b) {\n                    return fn(a, b);\n                });\n            } else {\n                return fn(a, b);\n            }\n        };\n    };\n\n    /**\n     * Optimized internal three-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry3 = function _curry3(fn) {\n        return function f3(a, b, c) {\n            var n = arguments.length;\n            if (n === 0) {\n                return f3;\n            } else if (n === 1 && a != null && a['@@functional/placeholder'] === true) {\n                return f3;\n            } else if (n === 1) {\n                return _curry2(function (b, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 2 && a != null && a['@@functional/placeholder'] === true && b != null && b['@@functional/placeholder'] === true) {\n                return f3;\n            } else if (n === 2 && a != null && a['@@functional/placeholder'] === true) {\n                return _curry2(function (a, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 2 && b != null && b['@@functional/placeholder'] === true) {\n                return _curry2(function (b, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 2) {\n                return _curry1(function (c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && a != null && a['@@functional/placeholder'] === true && b != null && b['@@functional/placeholder'] === true && c != null && c['@@functional/placeholder'] === true) {\n                return f3;\n            } else if (n === 3 && a != null && a['@@functional/placeholder'] === true && b != null && b['@@functional/placeholder'] === true) {\n                return _curry2(function (a, b) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && a != null && a['@@functional/placeholder'] === true && c != null && c['@@functional/placeholder'] === true) {\n                return _curry2(function (a, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && b != null && b['@@functional/placeholder'] === true && c != null && c['@@functional/placeholder'] === true) {\n                return _curry2(function (b, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && a != null && a['@@functional/placeholder'] === true) {\n                return _curry1(function (a) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && b != null && b['@@functional/placeholder'] === true) {\n                return _curry1(function (b) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && c != null && c['@@functional/placeholder'] === true) {\n                return _curry1(function (c) {\n                    return fn(a, b, c);\n                });\n            } else {\n                return fn(a, b, c);\n            }\n        };\n    };\n\n    /**\n     * Internal curryN function.\n     *\n     * @private\n     * @category Function\n     * @param {Number} length The arity of the curried function.\n     * @return {array} An array of arguments received thus far.\n     * @param {Function} fn The function to curry.\n     */\n    var _curryN = function _curryN(length, received, fn) {\n        return function () {\n            var combined = [];\n            var argsIdx = 0;\n            var left = length;\n            var combinedIdx = 0;\n            while (combinedIdx < received.length || argsIdx < arguments.length) {\n                var result;\n                if (combinedIdx < received.length && (received[combinedIdx] == null || received[combinedIdx]['@@functional/placeholder'] !== true || argsIdx >= arguments.length)) {\n                    result = received[combinedIdx];\n                } else {\n                    result = arguments[argsIdx];\n                    argsIdx += 1;\n                }\n                combined[combinedIdx] = result;\n                if (result == null || result['@@functional/placeholder'] !== true) {\n                    left -= 1;\n                }\n                combinedIdx += 1;\n            }\n            return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n        };\n    };\n\n    var _filter = function _filter(fn, list) {\n        var idx = 0, len = list.length, result = [];\n        while (idx < len) {\n            if (fn(list[idx])) {\n                result[result.length] = list[idx];\n            }\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _forceReduced = function _forceReduced(x) {\n        return {\n            '@@transducer/value': x,\n            '@@transducer/reduced': true\n        };\n    };\n\n    /**\n     * @private\n     * @param {Function} fn The strategy for extracting function names from an object\n     * @return {Function} A function that takes an object and returns an array of function names.\n     */\n    var _functionsWith = function _functionsWith(fn) {\n        return function (obj) {\n            return _filter(function (key) {\n                return typeof obj[key] === 'function';\n            }, fn(obj));\n        };\n    };\n\n    var _has = function _has(prop, obj) {\n        return Object.prototype.hasOwnProperty.call(obj, prop);\n    };\n\n    var _identity = function _identity(x) {\n        return x;\n    };\n\n    /**\n     * Tests whether or not an object is an array.\n     *\n     * @private\n     * @param {*} val The object to test.\n     * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n     * @example\n     *\n     *      _isArray([]); //=> true\n     *      _isArray(null); //=> false\n     *      _isArray({}); //=> false\n     */\n    var _isArray = Array.isArray || function _isArray(val) {\n        return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n    };\n\n    /**\n     * Determine if the passed argument is an integer.\n     *\n     * @private\n     * @param {*} n\n     * @category Type\n     * @return {Boolean}\n     */\n    var _isInteger = Number.isInteger || function _isInteger(n) {\n        return n << 0 === n;\n    };\n\n    var _isNumber = function _isNumber(x) {\n        return Object.prototype.toString.call(x) === '[object Number]';\n    };\n\n    var _isString = function _isString(x) {\n        return Object.prototype.toString.call(x) === '[object String]';\n    };\n\n    var _isTransformer = function _isTransformer(obj) {\n        return typeof obj['@@transducer/step'] === 'function';\n    };\n\n    var _map = function _map(fn, list) {\n        var idx = 0, len = list.length, result = Array(len);\n        while (idx < len) {\n            result[idx] = fn(list[idx]);\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _pipe = function _pipe(f, g) {\n        return function () {\n            return g.call(this, f.apply(this, arguments));\n        };\n    };\n\n    var _pipeP = function _pipeP(f, g) {\n        return function () {\n            var ctx = this;\n            return f.apply(ctx, arguments).then(function (x) {\n                return g.call(ctx, x);\n            });\n        };\n    };\n\n    var _quote = function _quote(s) {\n        return '\"' + s.replace(/\"/g, '\\\\\"') + '\"';\n    };\n\n    var _reduced = function _reduced(x) {\n        return x && x['@@transducer/reduced'] ? x : {\n            '@@transducer/value': x,\n            '@@transducer/reduced': true\n        };\n    };\n\n    /**\n     * An optimized, private array `slice` implementation.\n     *\n     * @private\n     * @param {Arguments|Array} args The array or arguments object to consider.\n     * @param {Number} [from=0] The array index to slice from, inclusive.\n     * @param {Number} [to=args.length] The array index to slice to, exclusive.\n     * @return {Array} A new, sliced array.\n     * @example\n     *\n     *      _slice([1, 2, 3, 4, 5], 1, 3); //=> [2, 3]\n     *\n     *      var firstThreeArgs = function(a, b, c, d) {\n     *        return _slice(arguments, 0, 3);\n     *      };\n     *      firstThreeArgs(1, 2, 3, 4); //=> [1, 2, 3]\n     */\n    var _slice = function _slice(args, from, to) {\n        switch (arguments.length) {\n        case 1:\n            return _slice(args, 0, args.length);\n        case 2:\n            return _slice(args, from, args.length);\n        default:\n            var list = [];\n            var idx = 0;\n            var len = Math.max(0, Math.min(args.length, to) - from);\n            while (idx < len) {\n                list[idx] = args[from + idx];\n                idx += 1;\n            }\n            return list;\n        }\n    };\n\n    /**\n     * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n     */\n    var _toISOString = function () {\n        var pad = function pad(n) {\n            return (n < 10 ? '0' : '') + n;\n        };\n        return typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n            return d.toISOString();\n        } : function _toISOString(d) {\n            return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n        };\n    }();\n\n    var _xdropRepeatsWith = function () {\n        function XDropRepeatsWith(pred, xf) {\n            this.xf = xf;\n            this.pred = pred;\n            this.lastValue = undefined;\n            this.seenFirstValue = false;\n        }\n        XDropRepeatsWith.prototype['@@transducer/init'] = function () {\n            return this.xf['@@transducer/init']();\n        };\n        XDropRepeatsWith.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](result);\n        };\n        XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n            var sameAsLast = false;\n            if (!this.seenFirstValue) {\n                this.seenFirstValue = true;\n            } else if (this.pred(this.lastValue, input)) {\n                sameAsLast = true;\n            }\n            this.lastValue = input;\n            return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdropRepeatsWith(pred, xf) {\n            return new XDropRepeatsWith(pred, xf);\n        });\n    }();\n\n    var _xfBase = {\n        init: function () {\n            return this.xf['@@transducer/init']();\n        },\n        result: function (result) {\n            return this.xf['@@transducer/result'](result);\n        }\n    };\n\n    var _xfilter = function () {\n        function XFilter(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XFilter.prototype['@@transducer/init'] = _xfBase.init;\n        XFilter.prototype['@@transducer/result'] = _xfBase.result;\n        XFilter.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n        };\n        return _curry2(function _xfilter(f, xf) {\n            return new XFilter(f, xf);\n        });\n    }();\n\n    var _xfind = function () {\n        function XFind(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.found = false;\n        }\n        XFind.prototype['@@transducer/init'] = _xfBase.init;\n        XFind.prototype['@@transducer/result'] = function (result) {\n            if (!this.found) {\n                result = this.xf['@@transducer/step'](result, void 0);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XFind.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.found = true;\n                result = _reduced(this.xf['@@transducer/step'](result, input));\n            }\n            return result;\n        };\n        return _curry2(function _xfind(f, xf) {\n            return new XFind(f, xf);\n        });\n    }();\n\n    var _xfindIndex = function () {\n        function XFindIndex(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.idx = -1;\n            this.found = false;\n        }\n        XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n        XFindIndex.prototype['@@transducer/result'] = function (result) {\n            if (!this.found) {\n                result = this.xf['@@transducer/step'](result, -1);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n            this.idx += 1;\n            if (this.f(input)) {\n                this.found = true;\n                result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n            }\n            return result;\n        };\n        return _curry2(function _xfindIndex(f, xf) {\n            return new XFindIndex(f, xf);\n        });\n    }();\n\n    var _xfindLast = function () {\n        function XFindLast(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n        XFindLast.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n        };\n        XFindLast.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.last = input;\n            }\n            return result;\n        };\n        return _curry2(function _xfindLast(f, xf) {\n            return new XFindLast(f, xf);\n        });\n    }();\n\n    var _xfindLastIndex = function () {\n        function XFindLastIndex(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.idx = -1;\n            this.lastIdx = -1;\n        }\n        XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n        XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n        };\n        XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n            this.idx += 1;\n            if (this.f(input)) {\n                this.lastIdx = this.idx;\n            }\n            return result;\n        };\n        return _curry2(function _xfindLastIndex(f, xf) {\n            return new XFindLastIndex(f, xf);\n        });\n    }();\n\n    var _xmap = function () {\n        function XMap(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XMap.prototype['@@transducer/init'] = _xfBase.init;\n        XMap.prototype['@@transducer/result'] = _xfBase.result;\n        XMap.prototype['@@transducer/step'] = function (result, input) {\n            return this.xf['@@transducer/step'](result, this.f(input));\n        };\n        return _curry2(function _xmap(f, xf) {\n            return new XMap(f, xf);\n        });\n    }();\n\n    var _xtake = function () {\n        function XTake(n, xf) {\n            this.xf = xf;\n            this.n = n;\n        }\n        XTake.prototype['@@transducer/init'] = _xfBase.init;\n        XTake.prototype['@@transducer/result'] = _xfBase.result;\n        XTake.prototype['@@transducer/step'] = function (result, input) {\n            if (this.n === 0) {\n                return _reduced(result);\n            } else {\n                this.n -= 1;\n                return this.xf['@@transducer/step'](result, input);\n            }\n        };\n        return _curry2(function _xtake(n, xf) {\n            return new XTake(n, xf);\n        });\n    }();\n\n    var _xtakeWhile = function () {\n        function XTakeWhile(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n        XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n        };\n        return _curry2(function _xtakeWhile(f, xf) {\n            return new XTakeWhile(f, xf);\n        });\n    }();\n\n    var _xwrap = function () {\n        function XWrap(fn) {\n            this.f = fn;\n        }\n        XWrap.prototype['@@transducer/init'] = function () {\n            throw new Error('init not implemented on XWrap');\n        };\n        XWrap.prototype['@@transducer/result'] = function (acc) {\n            return acc;\n        };\n        XWrap.prototype['@@transducer/step'] = function (acc, x) {\n            return this.f(acc, x);\n        };\n        return function _xwrap(fn) {\n            return new XWrap(fn);\n        };\n    }();\n\n    /**\n     * Adds two numbers. Equivalent to `a + b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Number}\n     * @see R.subtract\n     * @example\n     *\n     *      R.add(2, 3);       //=>  5\n     *      R.add(7)(10);      //=> 17\n     */\n    var add = _curry2(function add(a, b) {\n        return a + b;\n    });\n\n    /**\n     * Applies a function to the value at the given index of an array,\n     * returning a new copy of the array with the element at the given\n     * index replaced with the result of the function application.\n     * @see R.update\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> a) -> Number -> [a] -> [a]\n     * @param {Function} fn The function to apply.\n     * @param {Number} idx The index.\n     * @param {Array|Arguments} list An array-like object whose value\n     *        at the supplied index will be replaced.\n     * @return {Array} A copy of the supplied array-like object with\n     *         the element at index `idx` replaced with the value\n     *         returned by applying `fn` to the existing element.\n     * @example\n     *\n     *      R.adjust(R.add(10), 1, [0, 1, 2]);     //=> [0, 11, 2]\n     *      R.adjust(R.add(10))(1)([0, 1, 2]);     //=> [0, 11, 2]\n     */\n    var adjust = _curry3(function adjust(fn, idx, list) {\n        if (idx >= list.length || idx < -list.length) {\n            return list;\n        }\n        var start = idx < 0 ? list.length : 0;\n        var _idx = start + idx;\n        var _list = _concat(list);\n        _list[_idx] = fn(list[_idx]);\n        return _list;\n    });\n\n    /**\n     * Returns a function that always returns the given value. Note that for\n     * non-primitives the value returned is a reference to the original value.\n     *\n     * This function is known as `const`, `constant`, or `K` (for K combinator)\n     * in other languages and libraries.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> (* -> a)\n     * @param {*} val The value to wrap in a function\n     * @return {Function} A Function :: * -> val.\n     * @example\n     *\n     *      var t = R.always('Tee');\n     *      t(); //=> 'Tee'\n     */\n    var always = _curry1(function always(val) {\n        return function () {\n            return val;\n        };\n    });\n\n    /**\n     * Returns a new list, composed of n-tuples of consecutive elements\n     * If `n` is greater than the length of the list, an empty list is returned.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @param {Number} n The size of the tuples to create\n     * @param {Array} list The list to split into `n`-tuples\n     * @return {Array} The new list.\n     * @example\n     *\n     *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n     *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n     *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n     */\n    var aperture = _curry2(function aperture(n, list) {\n        var idx = 0;\n        var limit = list.length - (n - 1);\n        var acc = new Array(limit >= 0 ? limit : 0);\n        while (idx < limit) {\n            acc[idx] = _slice(list, idx, idx + n);\n            idx += 1;\n        }\n        return acc;\n    });\n\n    /**\n     * Returns a new list containing the contents of the given list, followed by the given\n     * element.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The element to add to the end of the new list.\n     * @param {Array} list The list whose contents will be added to the beginning of the output\n     *        list.\n     * @return {Array} A new list containing the contents of the old list followed by `el`.\n     * @see R.prepend\n     * @example\n     *\n     *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n     *      R.append('tests', []); //=> ['tests']\n     *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n     */\n    var append = _curry2(function append(el, list) {\n        return _concat(list, [el]);\n    });\n\n    /**\n     * Applies function `fn` to the argument list `args`. This is useful for\n     * creating a fixed-arity function from a variadic function. `fn` should\n     * be a bound function if context is significant.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (*... -> a) -> [*] -> a\n     * @param {Function} fn\n     * @param {Array} args\n     * @return {*}\n     * @see R.call, R.unapply\n     * @example\n     *\n     *      var nums = [1, 2, 3, -99, 42, 6, 7];\n     *      R.apply(Math.max, nums); //=> 42\n     */\n    var apply = _curry2(function apply(fn, args) {\n        return fn.apply(this, args);\n    });\n\n    /**\n     * Makes a shallow clone of an object, setting or overriding the specified\n     * property with the given value.  Note that this copies and flattens\n     * prototype properties onto the new object as well.  All non-primitive\n     * properties are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig String -> a -> {k: v} -> {k: v}\n     * @param {String} prop the property name to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except for the specified property.\n     * @see R.dissoc\n     * @example\n     *\n     *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n     */\n    var assoc = _curry3(function assoc(prop, val, obj) {\n        var result = {};\n        for (var p in obj) {\n            result[p] = obj[p];\n        }\n        result[prop] = val;\n        return result;\n    });\n\n    /**\n     * Makes a shallow clone of an object, setting or overriding the nodes\n     * required to create the given path, and placing the specific value at the\n     * tail end of that path.  Note that this copies and flattens prototype\n     * properties onto the new object as well.  All non-primitive properties\n     * are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> a -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except along the specified path.\n     * @see R.dissocPath\n     * @example\n     *\n     *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n     */\n    var assocPath = _curry3(function assocPath(path, val, obj) {\n        switch (path.length) {\n        case 0:\n            return obj;\n        case 1:\n            return assoc(path[0], val, obj);\n        default:\n            return assoc(path[0], assocPath(_slice(path, 1), val, Object(obj[path[0]])), obj);\n        }\n    });\n\n    /**\n     * Creates a function that is bound to a context.\n     * Note: `R.bind` does not provide the additional argument-binding capabilities of\n     * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @category Object\n     * @see R.partial\n     * @sig (* -> *) -> {*} -> (* -> *)\n     * @param {Function} fn The function to bind to context\n     * @param {Object} thisObj The context to bind `fn` to\n     * @return {Function} A function that will execute in the context of `thisObj`.\n     */\n    var bind = _curry2(function bind(fn, thisObj) {\n        return _arity(fn.length, function () {\n            return fn.apply(thisObj, arguments);\n        });\n    });\n\n    /**\n     * A function wrapping calls to the two functions in an `&&` operation, returning the result of the first\n     * function if it is false-y and the result of the second function otherwise.  Note that this is\n     * short-circuited, meaning that the second function will not be invoked if the first returns a false-y\n     * value.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n     * @see R.and\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0 };\n     *      var f = R.both(gt10, even);\n     *      f(100); //=> true\n     *      f(101); //=> false\n     */\n    var both = _curry2(function both(f, g) {\n        return function _both() {\n            return f.apply(this, arguments) && g.apply(this, arguments);\n        };\n    });\n\n    /**\n     * Makes a comparator function out of a function that reports whether the first element is less than the second.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a, b -> Boolean) -> (a, b -> Number)\n     * @param {Function} pred A predicate function of arity two.\n     * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`.\n     * @example\n     *\n     *      var cmp = R.comparator(function(a, b) {\n     *        return a.age < b.age;\n     *      });\n     *      var people = [\n     *        // ...\n     *      ];\n     *      R.sort(cmp, people);\n     */\n    var comparator = _curry1(function comparator(pred) {\n        return function (a, b) {\n            return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n        };\n    });\n\n    /**\n     * Takes a function `f` and returns a function `g` such that:\n     *\n     *   - applying `g` to zero or more arguments will give __true__ if applying\n     *     the same arguments to `f` gives a logical __false__ value; and\n     *\n     *   - applying `g` to zero or more arguments will give __false__ if applying\n     *     the same arguments to `f` gives a logical __true__ value.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> *) -> (*... -> Boolean)\n     * @param {Function} f\n     * @return {Function}\n     * @see R.not\n     * @example\n     *\n     *      var isEven = function(n) { return n % 2 === 0; };\n     *      var isOdd = R.complement(isEven);\n     *      isOdd(21); //=> true\n     *      isOdd(42); //=> false\n     */\n    var complement = _curry1(_complement);\n\n    /**\n     * Returns a function, `fn`, which encapsulates if/else-if/else logic.\n     * `R.cond` takes a list of [predicate, transform] pairs. All of the\n     * arguments to `fn` are applied to each of the predicates in turn\n     * until one returns a \"truthy\" value, at which point `fn` returns the\n     * result of applying its arguments to the corresponding transformer.\n     * If none of the predicates matches, `fn` returns undefined.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n     * @param {Array} pairs\n     * @return {Function}\n     * @example\n     *\n     *      var fn = R.cond([\n     *        [R.equals(0),   R.always('water freezes at 0°C')],\n     *        [R.equals(100), R.always('water boils at 100°C')],\n     *        [R.T,           function(temp) { return 'nothing special happens at ' + temp + '°C'; }]\n     *      ]);\n     *      fn(0); //=> 'water freezes at 0°C'\n     *      fn(50); //=> 'nothing special happens at 50°C'\n     *      fn(100); //=> 'water boils at 100°C'\n     */\n    var cond = _curry1(function cond(pairs) {\n        return function () {\n            var idx = 0;\n            while (idx < pairs.length) {\n                if (pairs[idx][0].apply(this, arguments)) {\n                    return pairs[idx][1].apply(this, arguments);\n                }\n                idx += 1;\n            }\n        };\n    });\n\n    /**\n     * Returns `true` if the `x` is found in the `list`, using `pred` as an\n     * equality predicate for `x`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a, a -> Boolean) -> a -> [a] -> Boolean\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {*} x The item to find\n     * @param {Array} list The list to iterate over\n     * @return {Boolean} `true` if `x` is in `list`, else `false`.\n     * @example\n     *\n     *      var xs = [{x: 12}, {x: 11}, {x: 10}];\n     *      R.containsWith(function(a, b) { return a.x === b.x; }, {x: 10}, xs); //=> true\n     *      R.containsWith(function(a, b) { return a.x === b.x; }, {x: 1}, xs); //=> false\n     */\n    var containsWith = _curry3(_containsWith);\n\n    /**\n     * Counts the elements of a list according to how many match each value\n     * of a key generated by the supplied function. Returns an object\n     * mapping the keys produced by `fn` to the number of occurrences in\n     * the list. Note that all keys are coerced to strings because of how\n     * JavaScript objects work.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a -> String) -> [a] -> {*}\n     * @param {Function} fn The function used to map values to keys.\n     * @param {Array} list The list to count elements from.\n     * @return {Object} An object mapping keys to number of occurrences in the list.\n     * @example\n     *\n     *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n     *      var letters = R.split('', 'abcABCaaaBBc');\n     *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n     *      R.countBy(R.toLower)(letters);   //=> {'a': 5, 'b': 4, 'c': 3}\n     */\n    var countBy = _curry2(function countBy(fn, list) {\n        var counts = {};\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            var key = fn(list[idx]);\n            counts[key] = (_has(key, counts) ? counts[key] : 0) + 1;\n            idx += 1;\n        }\n        return counts;\n    });\n\n    /**\n     * Creates an object containing a single key:value pair.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig String -> a -> {String:a}\n     * @param {String} key\n     * @param {*} val\n     * @return {Object}\n     * @example\n     *\n     *      var matchPhrases = R.compose(\n     *        R.createMapEntry('must'),\n     *        R.map(R.createMapEntry('match_phrase'))\n     *      );\n     *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n     */\n    var createMapEntry = _curry2(function createMapEntry(key, val) {\n        var obj = {};\n        obj[key] = val;\n        return obj;\n    });\n\n    /**\n     * Returns a curried equivalent of the provided function, with the\n     * specified arity. The curried function has two unusual capabilities.\n     * First, its arguments needn't be provided one at a time. If `g` is\n     * `R.curryN(3, f)`, the following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`,\n     * the following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curry\n     * @example\n     *\n     *      var addFourNumbers = function() {\n     *        return R.sum([].slice.call(arguments, 0, 4));\n     *      };\n     *\n     *      var curriedAddFourNumbers = R.curryN(4, addFourNumbers);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n    var curryN = _curry2(function curryN(length, fn) {\n        if (length === 1) {\n            return _curry1(fn);\n        }\n        return _arity(length, _curryN(length, [], fn));\n    });\n\n    /**\n     * Decrements its argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @see R.inc\n     * @example\n     *\n     *      R.dec(42); //=> 41\n     */\n    var dec = add(-1);\n\n    /**\n     * Returns the second argument if it is not null or undefined. If it is null\n     * or undefined, the first (default) argument is returned.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig a -> b -> a | b\n     * @param {a} val The default value.\n     * @param {b} val The value to return if it is not null or undefined\n     * @return {*} The the second value or the default value\n     * @example\n     *\n     *      var defaultTo42 = defaultTo(42);\n     *\n     *      defaultTo42(null);  //=> 42\n     *      defaultTo42(undefined);  //=> 42\n     *      defaultTo42('Ramda');  //=> 'Ramda'\n     */\n    var defaultTo = _curry2(function defaultTo(d, v) {\n        return v == null ? d : v;\n    });\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not contained in the second list.\n     * Duplication is determined according to the value returned by applying the supplied predicate to two list\n     * elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a,a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @see R.difference\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @example\n     *\n     *      function cmp(x, y) { return x.a === y.a; }\n     *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n     *      var l2 = [{a: 3}, {a: 4}];\n     *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n     */\n    var differenceWith = _curry3(function differenceWith(pred, first, second) {\n        var out = [];\n        var idx = 0;\n        var firstLen = first.length;\n        var containsPred = containsWith(pred);\n        while (idx < firstLen) {\n            if (!containsPred(first[idx], second) && !containsPred(first[idx], out)) {\n                out[out.length] = first[idx];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new object that does not contain a `prop` property.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig String -> {k: v} -> {k: v}\n     * @param {String} prop the name of the property to dissociate\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original but without the specified property\n     * @see R.assoc\n     * @example\n     *\n     *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n     */\n    var dissoc = _curry2(function dissoc(prop, obj) {\n        var result = {};\n        for (var p in obj) {\n            if (p !== prop) {\n                result[p] = obj[p];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Makes a shallow clone of an object, omitting the property at the\n     * given path. Note that this copies and flattens prototype properties\n     * onto the new object as well.  All non-primitive properties are copied\n     * by reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object without the property at path\n     * @see R.assocPath\n     * @example\n     *\n     *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n     */\n    var dissocPath = _curry2(function dissocPath(path, obj) {\n        switch (path.length) {\n        case 0:\n            return obj;\n        case 1:\n            return dissoc(path[0], obj);\n        default:\n            var head = path[0];\n            var tail = _slice(path, 1);\n            return obj[head] == null ? obj : assoc(head, dissocPath(tail, obj[head]), obj);\n        }\n    });\n\n    /**\n     * Divides two numbers. Equivalent to `a / b`.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a / b`.\n     * @see R.multiply\n     * @example\n     *\n     *      R.divide(71, 100); //=> 0.71\n     *\n     *      var half = R.divide(R.__, 2);\n     *      half(42); //=> 21\n     *\n     *      var reciprocal = R.divide(1);\n     *      reciprocal(4);   //=> 0.25\n     */\n    var divide = _curry2(function divide(a, b) {\n        return a / b;\n    });\n\n    /**\n     * Returns a new list containing all but last the`n` elements of a given list,\n     * passing each value from the right to the supplied predicate function, skipping\n     * elements while the predicate function returns `true`. The predicate function\n     * is passed one argument: (value)*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.takeLastWhile\n     * @example\n     *\n     *      var lteThree = function(x) {\n     *        return x <= 3;\n     *      };\n     *\n     *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2]\n     */\n    var dropLastWhile = _curry2(function dropLastWhile(pred, list) {\n        var idx = list.length - 1;\n        while (idx >= 0 && pred(list[idx])) {\n            idx -= 1;\n        }\n        return _slice(list, 0, idx + 1);\n    });\n\n    /**\n     * A function wrapping calls to the two functions in an `||` operation, returning the result of the first\n     * function if it is truth-y and the result of the second function otherwise.  Note that this is\n     * short-circuited, meaning that the second function will not be invoked if the first returns a truth-y\n     * value.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n     * @see R.or\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0 };\n     *      var f = R.either(gt10, even);\n     *      f(101); //=> true\n     *      f(8); //=> true\n     */\n    var either = _curry2(function either(f, g) {\n        return function _either() {\n            return f.apply(this, arguments) || g.apply(this, arguments);\n        };\n    });\n\n    /**\n     * Returns the empty value of its argument's type. Ramda defines the empty\n     * value of Array (`[]`), Object (`{}`), and String (`''`). Other types are\n     * supported if they define `<Type>.empty` and/or `<Type>.prototype.empty`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> a\n     * @param {*} x\n     * @return {*}\n     * @example\n     *\n     *      R.empty(Just(42));      //=> Nothing()\n     *      R.empty([1, 2, 3]);     //=> []\n     *      R.empty('unicorns');    //=> ''\n     *      R.empty({x: 1, y: 2});  //=> {}\n     */\n    var empty = _curry1(function empty(x) {\n        if (x != null && typeof x.empty === 'function') {\n            return x.empty();\n        } else if (x != null && typeof x.constructor != null && typeof x.constructor.empty === 'function') {\n            return x.constructor.empty();\n        } else {\n            switch (Object.prototype.toString.call(x)) {\n            case '[object Array]':\n                return [];\n            case '[object Object]':\n                return {};\n            case '[object String]':\n                return '';\n            }\n        }\n    });\n\n    /**\n     * Creates a new object by recursively evolving a shallow copy of `object`, according to the\n     * `transformation` functions. All non-primitive properties are copied by reference.\n     *\n     * A `tranformation` function will not be invoked if its corresponding key does not exist in\n     * the evolved object.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n     * @param {Object} transformations The object specifying transformation functions to apply\n     *        to the object.\n     * @param {Object} object The object to be transformed.\n     * @return {Object} The transformed object.\n     * @example\n     *\n     *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n     *      var transformations = {\n     *        firstName: R.trim,\n     *        lastName: R.trim, // Will not get invoked.\n     *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n     *      };\n     *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n     */\n    var evolve = _curry2(function evolve(transformations, object) {\n        var transformation, key, type, result = {};\n        for (key in object) {\n            transformation = transformations[key];\n            type = typeof transformation;\n            result[key] = type === 'function' ? transformation(object[key]) : type === 'object' ? evolve(transformations[key], object[key]) : object[key];\n        }\n        return result;\n    });\n\n    /**\n     * Creates a new object out of a list key-value pairs.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [[k,v]] -> {k: v}\n     * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n     * @return {Object} The object made by pairing up `keys` and `values`.\n     * @see R.toPairs\n     * @example\n     *\n     *      R.fromPairs([['a', 1], ['b', 2],  ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n     */\n    var fromPairs = _curry1(function fromPairs(pairs) {\n        var idx = 0, len = pairs.length, out = {};\n        while (idx < len) {\n            if (_isArray(pairs[idx]) && pairs[idx].length) {\n                out[pairs[idx][0]] = pairs[idx][1];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns `true` if the first argument is greater than the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @see R.lt\n     * @example\n     *\n     *      R.gt(2, 1); //=> true\n     *      R.gt(2, 2); //=> false\n     *      R.gt(2, 3); //=> false\n     *      R.gt('a', 'z'); //=> false\n     *      R.gt('z', 'a'); //=> true\n     */\n    var gt = _curry2(function gt(a, b) {\n        return a > b;\n    });\n\n    /**\n     * Returns `true` if the first argument is greater than or equal to the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean}\n     * @see R.lte\n     * @example\n     *\n     *      R.gte(2, 1); //=> true\n     *      R.gte(2, 2); //=> true\n     *      R.gte(2, 3); //=> false\n     *      R.gte('a', 'z'); //=> false\n     *      R.gte('z', 'a'); //=> true\n     */\n    var gte = _curry2(function gte(a, b) {\n        return a >= b;\n    });\n\n    /**\n     * Returns whether or not an object has an own property with\n     * the specified name\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      var hasName = R.has('name');\n     *      hasName({name: 'alice'});   //=> true\n     *      hasName({name: 'bob'});     //=> true\n     *      hasName({});                //=> false\n     *\n     *      var point = {x: 0, y: 0};\n     *      var pointHas = R.has(R.__, point);\n     *      pointHas('x');  //=> true\n     *      pointHas('y');  //=> true\n     *      pointHas('z');  //=> false\n     */\n    var has = _curry2(_has);\n\n    /**\n     * Returns whether or not an object or its prototype chain has\n     * a property with the specified name\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      function Rectangle(width, height) {\n     *        this.width = width;\n     *        this.height = height;\n     *      }\n     *      Rectangle.prototype.area = function() {\n     *        return this.width * this.height;\n     *      };\n     *\n     *      var square = new Rectangle(2, 2);\n     *      R.hasIn('width', square);  //=> true\n     *      R.hasIn('area', square);  //=> true\n     */\n    var hasIn = _curry2(function hasIn(prop, obj) {\n        return prop in obj;\n    });\n\n    /**\n     * Returns true if its arguments are identical, false otherwise. Values are\n     * identical if they reference the same memory. `NaN` is identical to `NaN`;\n     * `0` and `-0` are not identical.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      var o = {};\n     *      R.identical(o, o); //=> true\n     *      R.identical(1, 1); //=> true\n     *      R.identical(1, '1'); //=> false\n     *      R.identical([], []); //=> false\n     *      R.identical(0, -0); //=> false\n     *      R.identical(NaN, NaN); //=> true\n     */\n    // SameValue algorithm\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Step 6.a: NaN == NaN\n    var identical = _curry2(function identical(a, b) {\n        // SameValue algorithm\n        if (a === b) {\n            // Steps 1-5, 7-10\n            // Steps 6.b-6.e: +0 != -0\n            return a !== 0 || 1 / a === 1 / b;\n        } else {\n            // Step 6.a: NaN == NaN\n            return a !== a && b !== b;\n        }\n    });\n\n    /**\n     * A function that does nothing but return the parameter supplied to it. Good as a default\n     * or placeholder function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> a\n     * @param {*} x The value to return.\n     * @return {*} The input value, `x`.\n     * @example\n     *\n     *      R.identity(1); //=> 1\n     *\n     *      var obj = {};\n     *      R.identity(obj) === obj; //=> true\n     */\n    var identity = _curry1(_identity);\n\n    /**\n     * Creates a function that will process either the `onTrue` or the `onFalse` function depending\n     * upon the result of the `condition` predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n     * @param {Function} condition A predicate function\n     * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n     * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n     * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n     *                    function depending upon the result of the `condition` predicate.\n     * @example\n     *\n     *      // Flatten all arrays in the list but leave other values alone.\n     *      var flattenArrays = R.map(R.ifElse(Array.isArray, R.flatten, R.identity));\n     *\n     *      flattenArrays([[0], [[10], [8]], 1234, {}]); //=> [[0], [10, 8], 1234, {}]\n     *      flattenArrays([[[10], 123], [8, [10]], \"hello\"]); //=> [[10, 123], [8, 10], \"hello\"]\n     */\n    var ifElse = _curry3(function ifElse(condition, onTrue, onFalse) {\n        return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n            return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n        });\n    });\n\n    /**\n     * Increments its argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @see R.dec\n     * @example\n     *\n     *      R.inc(42); //=> 43\n     */\n    var inc = add(1);\n\n    /**\n     * Inserts the supplied element into the list, at index `index`.  _Note\n     * that this is not destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} index The position to insert the element\n     * @param {*} elt The element to insert into the Array\n     * @param {Array} list The list to insert into\n     * @return {Array} A new Array with `elt` inserted at `index`.\n     * @example\n     *\n     *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n     */\n    var insert = _curry3(function insert(idx, elt, list) {\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\n        var result = _slice(list);\n        result.splice(idx, 0, elt);\n        return result;\n    });\n\n    /**\n     * Inserts the sub-list into the list, at index `index`.  _Note  that this\n     * is not destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a] -> [a]\n     * @param {Number} index The position to insert the sub-list\n     * @param {Array} elts The sub-list to insert into the Array\n     * @param {Array} list The list to insert the sub-list into\n     * @return {Array} A new Array with `elts` inserted starting at `index`.\n     * @example\n     *\n     *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n     */\n    var insertAll = _curry3(function insertAll(idx, elts, list) {\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\n        return _concat(_concat(_slice(list, 0, idx), elts), _slice(list, idx));\n    });\n\n    /**\n     * See if an object (`val`) is an instance of the supplied constructor.\n     * This function will check up the inheritance chain, if any.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig (* -> {*}) -> a -> Boolean\n     * @param {Object} ctor A constructor\n     * @param {*} val The value to test\n     * @return {Boolean}\n     * @example\n     *\n     *      R.is(Object, {}); //=> true\n     *      R.is(Number, 1); //=> true\n     *      R.is(Object, 1); //=> false\n     *      R.is(String, 's'); //=> true\n     *      R.is(String, new String('')); //=> true\n     *      R.is(Object, new String('')); //=> true\n     *      R.is(Object, 's'); //=> false\n     *      R.is(Number, {}); //=> false\n     */\n    var is = _curry2(function is(Ctor, val) {\n        return val != null && val.constructor === Ctor || val instanceof Ctor;\n    });\n\n    /**\n     * Tests whether or not an object is similar to an array.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @category List\n     * @sig * -> Boolean\n     * @param {*} x The object to test.\n     * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n     * @example\n     *\n     *      R.isArrayLike([]); //=> true\n     *      R.isArrayLike(true); //=> false\n     *      R.isArrayLike({}); //=> false\n     *      R.isArrayLike({length: 10}); //=> false\n     *      R.isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n     */\n    var isArrayLike = _curry1(function isArrayLike(x) {\n        if (_isArray(x)) {\n            return true;\n        }\n        if (!x) {\n            return false;\n        }\n        if (typeof x !== 'object') {\n            return false;\n        }\n        if (x instanceof String) {\n            return false;\n        }\n        if (x.nodeType === 1) {\n            return !!x.length;\n        }\n        if (x.length === 0) {\n            return true;\n        }\n        if (x.length > 0) {\n            return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n        }\n        return false;\n    });\n\n    /**\n     * Reports whether the list has zero elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [a] -> Boolean\n     * @param {Array} list\n     * @return {Boolean}\n     * @example\n     *\n     *      R.isEmpty([1, 2, 3]);   //=> false\n     *      R.isEmpty([]);          //=> true\n     *      R.isEmpty('');          //=> true\n     *      R.isEmpty(null);        //=> false\n     *      R.isEmpty(R.keys({}));  //=> true\n     *      R.isEmpty({});          //=> false ({} does not have a length property)\n     *      R.isEmpty({length: 0}); //=> true\n     */\n    var isEmpty = _curry1(function isEmpty(list) {\n        return Object(list).length === 0;\n    });\n\n    /**\n     * Checks if the input value is `null` or `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig * -> Boolean\n     * @param {*} x The value to test.\n     * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n     * @example\n     *\n     *      R.isNil(null); //=> true\n     *      R.isNil(undefined); //=> true\n     *      R.isNil(0); //=> false\n     *      R.isNil([]); //=> false\n     */\n    var isNil = _curry1(function isNil(x) {\n        return x == null;\n    });\n\n    /**\n     * Returns a list containing the names of all the enumerable own\n     * properties of the supplied object.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own properties.\n     * @example\n     *\n     *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n     */\n    // cover IE < 9 keys issues\n    var keys = function () {\n        // cover IE < 9 keys issues\n        var hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');\n        var nonEnumerableProps = [\n            'constructor',\n            'valueOf',\n            'isPrototypeOf',\n            'toString',\n            'propertyIsEnumerable',\n            'hasOwnProperty',\n            'toLocaleString'\n        ];\n        var contains = function contains(list, item) {\n            var idx = 0;\n            while (idx < list.length) {\n                if (list[idx] === item) {\n                    return true;\n                }\n                idx += 1;\n            }\n            return false;\n        };\n        return typeof Object.keys === 'function' ? _curry1(function keys(obj) {\n            return Object(obj) !== obj ? [] : Object.keys(obj);\n        }) : _curry1(function keys(obj) {\n            if (Object(obj) !== obj) {\n                return [];\n            }\n            var prop, ks = [], nIdx;\n            for (prop in obj) {\n                if (_has(prop, obj)) {\n                    ks[ks.length] = prop;\n                }\n            }\n            if (hasEnumBug) {\n                nIdx = nonEnumerableProps.length - 1;\n                while (nIdx >= 0) {\n                    prop = nonEnumerableProps[nIdx];\n                    if (_has(prop, obj) && !contains(ks, prop)) {\n                        ks[ks.length] = prop;\n                    }\n                    nIdx -= 1;\n                }\n            }\n            return ks;\n        });\n    }();\n\n    /**\n     * Returns a list containing the names of all the\n     * properties of the supplied object, including prototype properties.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.keysIn(f); //=> ['x', 'y']\n     */\n    var keysIn = _curry1(function keysIn(obj) {\n        var prop, ks = [];\n        for (prop in obj) {\n            ks[ks.length] = prop;\n        }\n        return ks;\n    });\n\n    /**\n     * Returns the number of elements in the array by returning `list.length`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> Number\n     * @param {Array} list The array to inspect.\n     * @return {Number} The length of the array.\n     * @example\n     *\n     *      R.length([]); //=> 0\n     *      R.length([1, 2, 3]); //=> 3\n     */\n    var length = _curry1(function length(list) {\n        return list != null && is(Number, list.length) ? list.length : NaN;\n    });\n\n    /**\n     * Returns `true` if the first argument is less than the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @see R.gt\n     * @example\n     *\n     *      R.lt(2, 1); //=> false\n     *      R.lt(2, 2); //=> false\n     *      R.lt(2, 3); //=> true\n     *      R.lt('a', 'z'); //=> true\n     *      R.lt('z', 'a'); //=> false\n     */\n    var lt = _curry2(function lt(a, b) {\n        return a < b;\n    });\n\n    /**\n     * Returns `true` if the first argument is less than or equal to the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean}\n     * @see R.gte\n     * @example\n     *\n     *      R.lte(2, 1); //=> false\n     *      R.lte(2, 2); //=> true\n     *      R.lte(2, 3); //=> true\n     *      R.lte('a', 'z'); //=> true\n     *      R.lte('z', 'a'); //=> false\n     */\n    var lte = _curry2(function lte(a, b) {\n        return a <= b;\n    });\n\n    /**\n     * The mapAccum function behaves like a combination of map and reduce; it applies a\n     * function to each element of a list, passing an accumulating parameter from left to\n     * right, and returning a final value of this accumulator together with the new list.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should return\n     * a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var append = function(a, b) {\n     *        return [a + b, a + b];\n     *      }\n     *\n     *      R.mapAccum(append, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n     */\n    var mapAccum = _curry3(function mapAccum(fn, acc, list) {\n        var idx = 0, len = list.length, result = [], tuple = [acc];\n        while (idx < len) {\n            tuple = fn(tuple[0], list[idx]);\n            result[idx] = tuple[1];\n            idx += 1;\n        }\n        return [\n            tuple[0],\n            result\n        ];\n    });\n\n    /**\n     * The mapAccumRight function behaves like a combination of map and reduce; it applies a\n     * function to each element of a list, passing an accumulating parameter from right\n     * to left, and returning a final value of this accumulator together with the new list.\n     *\n     * Similar to `mapAccum`, except moves through the input list from the right to the\n     * left.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should return\n     * a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var append = function(a, b) {\n     *        return [a + b, a + b];\n     *      }\n     *\n     *      R.mapAccumRight(append, 0, digits); //=> ['04321', ['04321', '0432', '043', '04']]\n     */\n    var mapAccumRight = _curry3(function mapAccumRight(fn, acc, list) {\n        var idx = list.length - 1, result = [], tuple = [acc];\n        while (idx >= 0) {\n            tuple = fn(tuple[0], list[idx]);\n            result[idx] = tuple[1];\n            idx -= 1;\n        }\n        return [\n            tuple[0],\n            result\n        ];\n    });\n\n    /**\n     * Tests a regular expression against a String. Note that this function\n     * will return an empty array when there are no matches. This differs\n     * from [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n     * which returns `null` when there are no matches.\n     *\n     * @func\n     * @memberOf R\n     * @see R.test\n     * @category String\n     * @sig RegExp -> String -> [String | Undefined]\n     * @param {RegExp} rx A regular expression.\n     * @param {String} str The string to match against\n     * @return {Array} The list of matches or empty array.\n     * @example\n     *\n     *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n     *      R.match(/a/, 'b'); //=> []\n     *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n     */\n    var match = _curry2(function match(rx, str) {\n        return str.match(rx) || [];\n    });\n\n    /**\n     * mathMod behaves like the modulo operator should mathematically, unlike the `%`\n     * operator (and by extension, R.modulo). So while \"-17 % 5\" is -2,\n     * mathMod(-17, 5) is 3. mathMod requires Integer arguments, and returns NaN\n     * when the modulus is zero or negative.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} m The dividend.\n     * @param {Number} p the modulus.\n     * @return {Number} The result of `b mod a`.\n     * @example\n     *\n     *      R.mathMod(-17, 5);  //=> 3\n     *      R.mathMod(17, 5);   //=> 2\n     *      R.mathMod(17, -5);  //=> NaN\n     *      R.mathMod(17, 0);   //=> NaN\n     *      R.mathMod(17.2, 5); //=> NaN\n     *      R.mathMod(17, 5.3); //=> NaN\n     *\n     *      var clock = R.mathMod(R.__, 12);\n     *      clock(15); //=> 3\n     *      clock(24); //=> 0\n     *\n     *      var seventeenMod = R.mathMod(17);\n     *      seventeenMod(3);  //=> 2\n     *      seventeenMod(4);  //=> 1\n     *      seventeenMod(10); //=> 7\n     */\n    var mathMod = _curry2(function mathMod(m, p) {\n        if (!_isInteger(m)) {\n            return NaN;\n        }\n        if (!_isInteger(p) || p < 1) {\n            return NaN;\n        }\n        return (m % p + p) % p;\n    });\n\n    /**\n     * Returns the larger of its two arguments.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> a\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.maxBy, R.min\n     * @example\n     *\n     *      R.max(789, 123); //=> 789\n     *      R.max('a', 'b'); //=> 'b'\n     */\n    var max = _curry2(function max(a, b) {\n        return b > a ? b : a;\n    });\n\n    /**\n     * Takes a function and two values, and returns whichever value produces\n     * the larger result when passed to the provided function.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord b => (a -> b) -> a -> a -> a\n     * @param {Function} f\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.max, R.minBy\n     * @example\n     *\n     *      R.maxBy(function(n) { return n * n; }, -3, 2); //=> -3\n     */\n    var maxBy = _curry3(function maxBy(f, a, b) {\n        return f(b) > f(a) ? b : a;\n    });\n\n    /**\n     * Create a new object with the own properties of `a`\n     * merged with the own properties of object `b`.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> {k: v} -> {k: v}\n     * @param {Object} a\n     * @param {Object} b\n     * @return {Object}\n     * @example\n     *\n     *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n     *      //=> { 'name': 'fred', 'age': 40 }\n     *\n     *      var resetToDefault = R.merge(R.__, {x: 0});\n     *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n     */\n    var merge = _curry2(function merge(a, b) {\n        var result = {};\n        var ks = keys(a);\n        var idx = 0;\n        while (idx < ks.length) {\n            result[ks[idx]] = a[ks[idx]];\n            idx += 1;\n        }\n        ks = keys(b);\n        idx = 0;\n        while (idx < ks.length) {\n            result[ks[idx]] = b[ks[idx]];\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns the smaller of its two arguments.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> a\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.minBy, R.max\n     * @example\n     *\n     *      R.min(789, 123); //=> 123\n     *      R.min('a', 'b'); //=> 'a'\n     */\n    var min = _curry2(function min(a, b) {\n        return b < a ? b : a;\n    });\n\n    /**\n     * Takes a function and two values, and returns whichever value produces\n     * the smaller result when passed to the provided function.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord b => (a -> b) -> a -> a -> a\n     * @param {Function} f\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.min, R.maxBy\n     * @example\n     *\n     *      R.minBy(function(n) { return n * n; }, -3, 2); //=> 2\n     */\n    var minBy = _curry3(function minBy(f, a, b) {\n        return f(b) < f(a) ? b : a;\n    });\n\n    /**\n     * Divides the second parameter by the first and returns the remainder.\n     * Note that this functions preserves the JavaScript-style behavior for\n     * modulo. For mathematical modulo see `mathMod`\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The value to the divide.\n     * @param {Number} b The pseudo-modulus\n     * @return {Number} The result of `b % a`.\n     * @see R.mathMod\n     * @example\n     *\n     *      R.modulo(17, 3); //=> 2\n     *      // JS behavior:\n     *      R.modulo(-17, 3); //=> -2\n     *      R.modulo(17, -3); //=> 2\n     *\n     *      var isOdd = R.modulo(R.__, 2);\n     *      isOdd(42); //=> 0\n     *      isOdd(21); //=> 1\n     */\n    var modulo = _curry2(function modulo(a, b) {\n        return a % b;\n    });\n\n    /**\n     * Multiplies two numbers. Equivalent to `a * b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a * b`.\n     * @see R.divide\n     * @example\n     *\n     *      var double = R.multiply(2);\n     *      var triple = R.multiply(3);\n     *      double(3);       //=>  6\n     *      triple(4);       //=> 12\n     *      R.multiply(2, 5);  //=> 10\n     */\n    var multiply = _curry2(function multiply(a, b) {\n        return a * b;\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts exactly `n`\n     * parameters. Any extraneous parameters will not be passed to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} n The desired arity of the new function.\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity `n`.\n     * @example\n     *\n     *      var takesTwoArgs = function(a, b) {\n     *        return [a, b];\n     *      };\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.nAry(1, takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only `n` arguments are passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n    var nAry = _curry2(function nAry(n, fn) {\n        switch (n) {\n        case 0:\n            return function () {\n                return fn.call(this);\n            };\n        case 1:\n            return function (a0) {\n                return fn.call(this, a0);\n            };\n        case 2:\n            return function (a0, a1) {\n                return fn.call(this, a0, a1);\n            };\n        case 3:\n            return function (a0, a1, a2) {\n                return fn.call(this, a0, a1, a2);\n            };\n        case 4:\n            return function (a0, a1, a2, a3) {\n                return fn.call(this, a0, a1, a2, a3);\n            };\n        case 5:\n            return function (a0, a1, a2, a3, a4) {\n                return fn.call(this, a0, a1, a2, a3, a4);\n            };\n        case 6:\n            return function (a0, a1, a2, a3, a4, a5) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5);\n            };\n        case 7:\n            return function (a0, a1, a2, a3, a4, a5, a6) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n            };\n        case 8:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n            };\n        case 9:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n            };\n        case 10:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n            };\n        default:\n            throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n        }\n    });\n\n    /**\n     * Negates its argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @example\n     *\n     *      R.negate(42); //=> -42\n     */\n    var negate = _curry1(function negate(n) {\n        return -n;\n    });\n\n    /**\n     * A function that returns the `!` of its argument. It will return `true` when\n     * passed false-y value, and `false` when passed a truth-y one.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig * -> Boolean\n     * @param {*} a any value\n     * @return {Boolean} the logical inverse of passed argument.\n     * @see R.complement\n     * @example\n     *\n     *      R.not(true); //=> false\n     *      R.not(false); //=> true\n     *      R.not(0); => true\n     *      R.not(1); => false\n     */\n    var not = _curry1(function not(a) {\n        return !a;\n    });\n\n    /**\n     * Returns the nth element of the given list or string.\n     * If n is negative the element at index length + n is returned.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> a | Undefined\n     * @sig Number -> String -> String\n     * @param {Number} offset\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      var list = ['foo', 'bar', 'baz', 'quux'];\n     *      R.nth(1, list); //=> 'bar'\n     *      R.nth(-1, list); //=> 'quux'\n     *      R.nth(-99, list); //=> undefined\n     *\n     *      R.nth('abc', 2); //=> 'c'\n     *      R.nth('abc', 3); //=> ''\n     */\n    var nth = _curry2(function nth(offset, list) {\n        var idx = offset < 0 ? list.length + offset : offset;\n        return _isString(list) ? list.charAt(idx) : list[idx];\n    });\n\n    /**\n     * Returns a function which returns its nth argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> *... -> *\n     * @param {Number} n\n     * @return {Function}\n     * @example\n     *\n     *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n     *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n     */\n    var nthArg = _curry1(function nthArg(n) {\n        return function () {\n            return nth(n, arguments);\n        };\n    });\n\n    /**\n     * Returns the nth character of the given string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {String} str\n     * @return {String}\n     * @deprecated since v0.16.0\n     * @example\n     *\n     *      R.nthChar(2, 'Ramda'); //=> 'm'\n     *      R.nthChar(-2, 'Ramda'); //=> 'd'\n     */\n    var nthChar = _curry2(function nthChar(n, str) {\n        return str.charAt(n < 0 ? str.length + n : n);\n    });\n\n    /**\n     * Returns the character code of the nth character of the given string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig Number -> String -> Number\n     * @param {Number} n\n     * @param {String} str\n     * @return {Number}\n     * @deprecated since v0.16.0\n     * @example\n     *\n     *      R.nthCharCode(2, 'Ramda'); //=> 'm'.charCodeAt(0)\n     *      R.nthCharCode(-2, 'Ramda'); //=> 'd'.charCodeAt(0)\n     */\n    var nthCharCode = _curry2(function nthCharCode(n, str) {\n        return str.charCodeAt(n < 0 ? str.length + n : n);\n    });\n\n    /**\n     * Returns a singleton array containing the value provided.\n     *\n     * Note this `of` is different from the ES6 `of`; See\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> [a]\n     * @param {*} x any value\n     * @return {Array} An array wrapping `x`.\n     * @example\n     *\n     *      R.of(null); //=> [null]\n     *      R.of([42]); //=> [[42]]\n     */\n    var of = _curry1(function of(x) {\n        return [x];\n    });\n\n    /**\n     * Accepts a function `fn` and returns a function that guards invocation of `fn` such that\n     * `fn` can only ever be called once, no matter how many times the returned function is\n     * invoked.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a... -> b) -> (a... -> b)\n     * @param {Function} fn The function to wrap in a call-only-once wrapper.\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var addOneOnce = R.once(function(x){ return x + 1; });\n     *      addOneOnce(10); //=> 11\n     *      addOneOnce(addOneOnce(50)); //=> 11\n     */\n    var once = _curry1(function once(fn) {\n        var called = false, result;\n        return function () {\n            if (called) {\n                return result;\n            }\n            called = true;\n            result = fn.apply(this, arguments);\n            return result;\n        };\n    });\n\n    /**\n     * Returns the result of \"setting\" the portion of the given data structure\n     * focused by the given lens to the given value.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> (a -> a) -> s -> s\n     * @param {Lens} lens\n     * @param {*} v\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var headLens = R.lensIndex(0);\n     *\n     *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n     */\n    var over = function () {\n        var Identity = function (x) {\n            return {\n                value: x,\n                map: function (f) {\n                    return Identity(f(x));\n                }\n            };\n        };\n        return _curry3(function over(lens, f, x) {\n            return lens(function (y) {\n                return Identity(f(y));\n            })(x).value;\n        });\n    }();\n\n    /**\n     * Retrieve the value at a given path.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> {k: v} -> v | Undefined\n     * @param {Array} path The path to use.\n     * @return {*} The data at `path`.\n     * @example\n     *\n     *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n     *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n     */\n    var path = _curry2(function path(paths, obj) {\n        if (obj == null) {\n            return;\n        } else {\n            var val = obj;\n            for (var idx = 0, len = paths.length; idx < len && val != null; idx += 1) {\n                val = val[paths[idx]];\n            }\n            return val;\n        }\n    });\n\n    /**\n     * Returns a partial copy of an object containing only the keys specified.  If the key does not exist, the\n     * property is ignored.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.omit\n     * @example\n     *\n     *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n     */\n    var pick = _curry2(function pick(names, obj) {\n        var result = {};\n        var idx = 0;\n        while (idx < names.length) {\n            if (names[idx] in obj) {\n                result[names[idx]] = obj[names[idx]];\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Similar to `pick` except that this one includes a `key: undefined` pair for properties that don't exist.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n     */\n    var pickAll = _curry2(function pickAll(names, obj) {\n        var result = {};\n        var idx = 0;\n        var len = names.length;\n        while (idx < len) {\n            var name = names[idx];\n            result[name] = obj[name];\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a partial copy of an object containing only the keys that\n     * satisfy the supplied predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig (v, k -> Boolean) -> {k: v} -> {k: v}\n     * @param {Function} pred A predicate to determine whether or not a key\n     *        should be included on the output object.\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties that satisfy `pred`\n     *         on it.\n     * @see R.pick\n     * @example\n     *\n     *      var isUpperCase = function(val, key) { return key.toUpperCase() === key; }\n     *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n     */\n    var pickBy = _curry2(function pickBy(test, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (test(obj[prop], prop, obj)) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list with the given element at the front, followed by the contents of the\n     * list.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The item to add to the head of the output list.\n     * @param {Array} list The array to add to the tail of the output list.\n     * @return {Array} A new array.\n     * @see R.append\n     * @example\n     *\n     *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n     */\n    var prepend = _curry2(function prepend(el, list) {\n        return _concat([el], list);\n    });\n\n    /**\n     * Returns a function that when supplied an object returns the indicated property of that object, if it exists.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig s -> {s: a} -> a | Undefined\n     * @param {String} p The property name\n     * @param {Object} obj The object to query\n     * @return {*} The value at `obj.p`.\n     * @example\n     *\n     *      R.prop('x', {x: 100}); //=> 100\n     *      R.prop('x', {}); //=> undefined\n     */\n    var prop = _curry2(function prop(p, obj) {\n        return obj[p];\n    });\n\n    /**\n     * If the given, non-null object has an own property with the specified name,\n     * returns the value of that property.\n     * Otherwise returns the provided default value.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig a -> String -> Object -> a\n     * @param {*} val The default value.\n     * @param {String} p The name of the property to return.\n     * @param {Object} obj The object to query.\n     * @return {*} The value of given property of the supplied object or the default value.\n     * @example\n     *\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var favorite = R.prop('favoriteLibrary');\n     *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n     *\n     *      favorite(alice);  //=> undefined\n     *      favoriteWithDefault(alice);  //=> 'Ramda'\n     */\n    var propOr = _curry3(function propOr(val, p, obj) {\n        return obj != null && _has(p, obj) ? obj[p] : val;\n    });\n\n    /**\n     * Returns `true` if the specified object property satisfies the given\n     * predicate; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n     * @param {Function} pred\n     * @param {String} name\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.propEq\n     * @see R.propIs\n     * @example\n     *\n     *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n     */\n    var propSatisfies = _curry3(function propSatisfies(pred, name, obj) {\n        return pred(obj[name]);\n    });\n\n    /**\n     * Acts as multiple `prop`: array of keys in, array of values out. Preserves order.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [k] -> {k: v} -> [v]\n     * @param {Array} ps The property names to fetch\n     * @param {Object} obj The object to query\n     * @return {Array} The corresponding values or partially applied function.\n     * @example\n     *\n     *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n     *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n     *\n     *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n     *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n     */\n    var props = _curry2(function props(ps, obj) {\n        var len = ps.length;\n        var out = [];\n        var idx = 0;\n        while (idx < len) {\n            out[idx] = obj[ps[idx]];\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a list of numbers from `from` (inclusive) to `to`\n     * (exclusive).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> Number -> [Number]\n     * @param {Number} from The first number in the list.\n     * @param {Number} to One more than the last number in the list.\n     * @return {Array} The list of numbers in tthe set `[a, b)`.\n     * @example\n     *\n     *      R.range(1, 5);    //=> [1, 2, 3, 4]\n     *      R.range(50, 53);  //=> [50, 51, 52]\n     */\n    var range = _curry2(function range(from, to) {\n        if (!(_isNumber(from) && _isNumber(to))) {\n            throw new TypeError('Both arguments to range must be numbers');\n        }\n        var result = [];\n        var n = from;\n        while (n < to) {\n            result.push(n);\n            n += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a single item by iterating through the list, successively calling the iterator\n     * function and passing it an accumulator value and the current value from the array, and\n     * then passing the result to the next call.\n     *\n     * Similar to `reduce`, except moves through the input list from the right to the left.\n     *\n     * The iterator function receives two values: *(acc, value)*\n     *\n     * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse arrays), unlike\n     * the native `Array.prototype.reduce` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var pairs = [ ['a', 1], ['b', 2], ['c', 3] ];\n     *      var flattenPairs = function(acc, pair) {\n     *        return acc.concat(pair);\n     *      };\n     *\n     *      R.reduceRight(flattenPairs, [], pairs); //=> [ 'c', 3, 'b', 2, 'a', 1 ]\n     */\n    var reduceRight = _curry3(function reduceRight(fn, acc, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            acc = fn(acc, list[idx]);\n            idx -= 1;\n        }\n        return acc;\n    });\n\n    /**\n     * Returns a value wrapped to indicate that it is the final value of the\n     * reduce and transduce functions.  The returned value\n     * should be considered a black box: the internal structure is not\n     * guaranteed to be stable.\n     *\n     * Note: this optimization is unavailable to functions not explicitly listed\n     * above.  For instance, it is not currently supported by reduceIndexed,\n     * reduceRight, or reduceRightIndexed.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.reduce, R.transduce\n     * @sig a -> *\n     * @param {*} x The final value of the reduce.\n     * @return {*} The wrapped value.\n     * @example\n     *\n     *      R.reduce(\n     *        R.pipe(R.add, R.ifElse(R.lte(10), R.reduced, R.identity)),\n     *        0,\n     *        [1, 2, 3, 4, 5]) // 10\n     */\n    var reduced = _curry1(_reduced);\n\n    /**\n     * Removes the sub-list of `list` starting at index `start` and containing\n     * `count` elements.  _Note that this is not destructive_: it returns a\n     * copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @param {Number} start The position to start removing elements\n     * @param {Number} count The number of elements to remove\n     * @param {Array} list The list to remove from\n     * @return {Array} A new Array with `count` elements from `start` removed.\n     * @example\n     *\n     *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n     */\n    var remove = _curry3(function remove(start, count, list) {\n        return _concat(_slice(list, 0, Math.min(start, list.length)), _slice(list, Math.min(list.length, start + count)));\n    });\n\n    /**\n     * Replace a substring or regex match in a string with a replacement.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig RegExp|String -> String -> String -> String\n     * @param {RegExp|String} pattern A regular expression or a substring to match.\n     * @param {String} replacement The string to replace the matches with.\n     * @param {String} str The String to do the search and replacement in.\n     * @return {String} The result.\n     * @example\n     *\n     *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *\n     *      // Use the \"g\" (global) flag to replace all occurrences:\n     *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n     */\n    var replace = _curry3(function replace(regex, replacement, str) {\n        return str.replace(regex, replacement);\n    });\n\n    /**\n     * Returns a new list with the same elements as the original list, just\n     * in the reverse order.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The list to reverse.\n     * @return {Array} A copy of the list in reverse order.\n     * @example\n     *\n     *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n     *      R.reverse([1, 2]);     //=> [2, 1]\n     *      R.reverse([1]);        //=> [1]\n     *      R.reverse([]);         //=> []\n     */\n    var reverse = _curry1(function reverse(list) {\n        return _slice(list).reverse();\n    });\n\n    /**\n     * Scan is similar to reduce, but returns a list of successively reduced values from the left\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> [a]\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} A list of all intermediately reduced values.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n     */\n    var scan = _curry3(function scan(fn, acc, list) {\n        var idx = 0, len = list.length, result = [acc];\n        while (idx < len) {\n            acc = fn(acc, list[idx]);\n            result[idx + 1] = acc;\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns the result of \"setting\" the portion of the given data structure\n     * focused by the given lens to the given value.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> a -> s -> s\n     * @param {Lens} lens\n     * @param {*} v\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n     *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n     */\n    var set = _curry3(function set(lens, v, x) {\n        return over(lens, always(v), x);\n    });\n\n    /**\n     * Returns a copy of the list, sorted according to the comparator function, which should accept two values at a\n     * time and return a negative number if the first value is smaller, a positive number if it's larger, and zero\n     * if they are equal.  Please note that this is a **copy** of the list.  It does not modify the original.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,a -> Number) -> [a] -> [a]\n     * @param {Function} comparator A sorting function :: a -> b -> Int\n     * @param {Array} list The list to sort\n     * @return {Array} a new array with its elements sorted by the comparator function.\n     * @example\n     *\n     *      var diff = function(a, b) { return a - b; };\n     *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n     */\n    var sort = _curry2(function sort(comparator, list) {\n        return _slice(list).sort(comparator);\n    });\n\n    /**\n     * Sorts the list according to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord b => (a -> b) -> [a] -> [a]\n     * @param {Function} fn\n     * @param {Array} list The list to sort.\n     * @return {Array} A new list sorted by the keys generated by `fn`.\n     * @example\n     *\n     *      var sortByFirstItem = R.sortBy(prop(0));\n     *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n     *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n     *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var bob = {\n     *        name: 'Bob',\n     *        age: -10\n     *      };\n     *      var clara = {\n     *        name: 'clara',\n     *        age: 314.159\n     *      };\n     *      var people = [clara, bob, alice];\n     *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n     */\n    var sortBy = _curry2(function sortBy(fn, list) {\n        return _slice(list).sort(function (a, b) {\n            var aa = fn(a);\n            var bb = fn(b);\n            return aa < bb ? -1 : aa > bb ? 1 : 0;\n        });\n    });\n\n    /**\n     * Subtracts two numbers. Equivalent to `a - b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a - b`.\n     * @see R.add\n     * @example\n     *\n     *      R.subtract(10, 8); //=> 2\n     *\n     *      var minus5 = R.subtract(R.__, 5);\n     *      minus5(17); //=> 12\n     *\n     *      var complementaryAngle = R.subtract(90);\n     *      complementaryAngle(30); //=> 60\n     *      complementaryAngle(72); //=> 18\n     */\n    var subtract = _curry2(function subtract(a, b) {\n        return a - b;\n    });\n\n    /**\n     * Returns a new list containing the last `n` elements of a given list, passing each value\n     * to the supplied predicate function, and terminating when the predicate function returns\n     * `false`. Excludes the element that caused the predicate function to fail. The predicate\n     * function is passed one argument: *(value)*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.dropLastWhile\n     * @example\n     *\n     *      var isNotOne = function(x) {\n     *        return !(x === 1);\n     *      };\n     *\n     *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n     */\n    var takeLastWhile = _curry2(function takeLastWhile(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0 && fn(list[idx])) {\n            idx -= 1;\n        }\n        return _slice(list, idx + 1, Infinity);\n    });\n\n    /**\n     * Runs the given function with the supplied object, then returns the object.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> *) -> a -> a\n     * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n     * @param {*} x\n     * @return {*} `x`.\n     * @example\n     *\n     *      var sayX = function(x) { console.log('x is ' + x); };\n     *      R.tap(sayX, 100); //=> 100\n     *      //-> 'x is 100'\n     */\n    var tap = _curry2(function tap(fn, x) {\n        fn(x);\n        return x;\n    });\n\n    /**\n     * Determines whether a given string matches a given regular expression.\n     *\n     * @func\n     * @memberOf R\n     * @see R.match\n     * @category String\n     * @sig RegExp -> String -> Boolean\n     * @param {RegExp} pattern\n     * @param {String} str\n     * @return {Boolean}\n     * @example\n     *\n     *      R.test(/^x/, 'xyz'); //=> true\n     *      R.test(/^y/, 'xyz'); //=> false\n     */\n    var test = _curry2(function test(pattern, str) {\n        return _cloneRegExp(pattern).test(str);\n    });\n\n    /**\n     * Calls an input function `n` times, returning an array containing the results of those\n     * function calls.\n     *\n     * `fn` is passed one argument: The current value of `n`, which begins at `0` and is\n     * gradually incremented to `n - 1`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (i -> a) -> i -> [a]\n     * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n     * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n     * @return {Array} An array containing the return values of all calls to `fn`.\n     * @example\n     *\n     *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n     */\n    var times = _curry2(function times(fn, n) {\n        var len = Number(n);\n        var list = new Array(len);\n        var idx = 0;\n        while (idx < len) {\n            list[idx] = fn(idx);\n            idx += 1;\n        }\n        return list;\n    });\n\n    /**\n     * Converts an object into an array of key, value arrays.\n     * Only the object's own properties are used.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own properties.\n     * @see R.fromPairs\n     * @example\n     *\n     *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n     */\n    var toPairs = _curry1(function toPairs(obj) {\n        var pairs = [];\n        for (var prop in obj) {\n            if (_has(prop, obj)) {\n                pairs[pairs.length] = [\n                    prop,\n                    obj[prop]\n                ];\n            }\n        }\n        return pairs;\n    });\n\n    /**\n     * Converts an object into an array of key, value arrays.\n     * The object's own properties and prototype properties are used.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own\n     *         and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n     */\n    var toPairsIn = _curry1(function toPairsIn(obj) {\n        var pairs = [];\n        for (var prop in obj) {\n            pairs[pairs.length] = [\n                prop,\n                obj[prop]\n            ];\n        }\n        return pairs;\n    });\n\n    /**\n     * Removes (strips) whitespace from both ends of the string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to trim.\n     * @return {String} Trimmed version of `str`.\n     * @example\n     *\n     *      R.trim('   xyz  '); //=> 'xyz'\n     *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n     */\n    var trim = function () {\n        var ws = '\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\n        var zeroWidth = '\\u200B';\n        var hasProtoTrim = typeof String.prototype.trim === 'function';\n        if (!hasProtoTrim || (ws.trim() || !zeroWidth.trim())) {\n            return _curry1(function trim(str) {\n                var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n                var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n                return str.replace(beginRx, '').replace(endRx, '');\n            });\n        } else {\n            return _curry1(function trim(str) {\n                return str.trim();\n            });\n        }\n    }();\n\n    /**\n     * Gives a single-word string description of the (native) type of a value, returning such\n     * answers as 'Object', 'Number', 'Array', or 'Null'.  Does not attempt to distinguish user\n     * Object types any further, reporting them all as 'Object'.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig (* -> {*}) -> String\n     * @param {*} val The value to test\n     * @return {String}\n     * @example\n     *\n     *      R.type({}); //=> \"Object\"\n     *      R.type(1); //=> \"Number\"\n     *      R.type(false); //=> \"Boolean\"\n     *      R.type('s'); //=> \"String\"\n     *      R.type(null); //=> \"Null\"\n     *      R.type([]); //=> \"Array\"\n     *      R.type(/[A-z]/); //=> \"RegExp\"\n     */\n    var type = _curry1(function type(val) {\n        return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n    });\n\n    /**\n     * Takes a function `fn`, which takes a single array argument, and returns\n     * a function which:\n     *\n     *   - takes any number of positional arguments;\n     *   - passes these arguments to `fn` as an array; and\n     *   - returns the result.\n     *\n     * In other words, R.unapply derives a variadic function from a function\n     * which takes an array. R.unapply is the inverse of R.apply.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ([*...] -> a) -> (*... -> a)\n     * @param {Function} fn\n     * @return {Function}\n     * @see R.apply\n     * @example\n     *\n     *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n     */\n    var unapply = _curry1(function unapply(fn) {\n        return function () {\n            return fn(_slice(arguments));\n        };\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts exactly 1\n     * parameter. Any extraneous parameters will not be passed to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> b) -> (a -> b)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 1.\n     * @example\n     *\n     *      var takesTwoArgs = function(a, b) {\n     *        return [a, b];\n     *      };\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.unary(takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only 1 argument is passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n    var unary = _curry1(function unary(fn) {\n        return nAry(1, fn);\n    });\n\n    /**\n     * Returns a function of arity `n` from a (manually) curried function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (a -> b) -> (a -> c)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to uncurry.\n     * @return {Function} A new function.\n     * @see R.curry\n     * @example\n     *\n     *      var addFour = function(a) {\n     *        return function(b) {\n     *          return function(c) {\n     *            return function(d) {\n     *              return a + b + c + d;\n     *            };\n     *          };\n     *        };\n     *      };\n     *\n     *      var uncurriedAddFour = R.uncurryN(4, addFour);\n     *      curriedAddFour(1, 2, 3, 4); //=> 10\n     */\n    var uncurryN = _curry2(function uncurryN(depth, fn) {\n        return curryN(depth, function () {\n            var currentDepth = 1;\n            var value = fn;\n            var idx = 0;\n            var endIdx;\n            while (currentDepth <= depth && typeof value === 'function') {\n                endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n                value = value.apply(this, _slice(arguments, idx, endIdx));\n                currentDepth += 1;\n                idx = endIdx;\n            }\n            return value;\n        });\n    });\n\n    /**\n     * Builds a list from a seed value. Accepts an iterator function, which returns either false\n     * to stop iteration or an array of length 2 containing the value to add to the resulting\n     * list and the seed to be used in the next call to the iterator function.\n     *\n     * The iterator function receives one argument: *(seed)*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> [b]) -> * -> [b]\n     * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n     *        either false to quit iteration or an array of length two to proceed. The element\n     *        at index 0 of this array will be added to the resulting array, and the element\n     *        at index 1 will be passed to the next call to `fn`.\n     * @param {*} seed The seed value.\n     * @return {Array} The final list.\n     * @example\n     *\n     *      var f = function(n) { return n > 50 ? false : [-n, n + 10] };\n     *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n     */\n    var unfold = _curry2(function unfold(fn, seed) {\n        var pair = fn(seed);\n        var result = [];\n        while (pair && pair.length) {\n            result[result.length] = pair[0];\n            pair = fn(pair[1]);\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list containing only one copy of each element in the original list, based\n     * upon the value returned by applying the supplied predicate to two list elements. Prefers\n     * the first item if two items compare equal based on the predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      var strEq = function(a, b) { return String(a) === String(b); };\n     *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n     *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n     *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n     *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n     */\n    var uniqWith = _curry2(function uniqWith(pred, list) {\n        var idx = 0, len = list.length;\n        var result = [], item;\n        while (idx < len) {\n            item = list[idx];\n            if (!_containsWith(pred, item, result)) {\n                result[result.length] = item;\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new copy of the array with the element at the\n     * provided index replaced with the given value.\n     * @see R.adjust\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} idx The index to update.\n     * @param {*} x The value to exist at the given index of the returned array.\n     * @param {Array|Arguments} list The source array-like object to be updated.\n     * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n     * @example\n     *\n     *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n     *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n     */\n    var update = _curry3(function update(idx, x, list) {\n        return adjust(always(x), idx, list);\n    });\n\n    /**\n     * Returns a list of all the enumerable own properties of the supplied object.\n     * Note that the order of the output array is not guaranteed across\n     * different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own properties.\n     * @example\n     *\n     *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n     */\n    var values = _curry1(function values(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var vals = [];\n        var idx = 0;\n        while (idx < len) {\n            vals[idx] = obj[props[idx]];\n            idx += 1;\n        }\n        return vals;\n    });\n\n    /**\n     * Returns a list of all the properties, including prototype properties,\n     * of the supplied object.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.valuesIn(f); //=> ['X', 'Y']\n     */\n    var valuesIn = _curry1(function valuesIn(obj) {\n        var prop, vs = [];\n        for (prop in obj) {\n            vs[vs.length] = obj[prop];\n        }\n        return vs;\n    });\n\n    /**\n     * Returns a \"view\" of the given data structure, determined by the given lens.\n     * The lens's focus determines which portion of the data structure is visible.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> s -> a\n     * @param {Lens} lens\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.view(xLens, {x: 1, y: 2});  //=> 1\n     *      R.view(xLens, {x: 4, y: 2});  //=> 4\n     */\n    var view = function () {\n        var Const = function (x) {\n            return {\n                value: x,\n                map: function () {\n                    return this;\n                }\n            };\n        };\n        return _curry2(function view(lens, x) {\n            return lens(Const)(x).value;\n        });\n    }();\n\n    /**\n     * Takes a spec object and a test object; returns true if the test satisfies\n     * the spec. Each of the spec's own properties must be a predicate function.\n     * Each predicate is applied to the value of the corresponding property of\n     * the test object. `where` returns true if all the predicates return true,\n     * false otherwise.\n     *\n     * `where` is well suited to declaratively expressing constraints for other\n     * functions such as `filter` and `find`.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @example\n     *\n     *      // pred :: Object -> Boolean\n     *      var pred = R.where({\n     *        a: R.equals('foo'),\n     *        b: R.complement(R.equals('bar')),\n     *        x: R.gt(_, 10),\n     *        y: R.lt(_, 20)\n     *      });\n     *\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n     *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n     */\n    var where = _curry2(function where(spec, testObj) {\n        for (var prop in spec) {\n            if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n                return false;\n            }\n        }\n        return true;\n    });\n\n    /**\n     * Wrap a function inside another to allow you to make adjustments to the parameters, or do\n     * other processing either before the internal function is called or with its results.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a... -> b) -> ((a... -> b) -> a... -> c) -> (a... -> c)\n     * @param {Function} fn The function to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var greet = function(name) {return 'Hello ' + name;};\n     *\n     *      var shoutedGreet = R.wrap(greet, function(gr, name) {\n     *        return gr(name).toUpperCase();\n     *      });\n     *      shoutedGreet(\"Kathy\"); //=> \"HELLO KATHY\"\n     *\n     *      var shortenedGreet = R.wrap(greet, function(gr, name) {\n     *        return gr(name.substring(0, 3));\n     *      });\n     *      shortenedGreet(\"Robert\"); //=> \"Hello Rob\"\n     */\n    var wrap = _curry2(function wrap(fn, wrapper) {\n        return curryN(fn.length, function () {\n            return wrapper.apply(this, _concat([fn], arguments));\n        });\n    });\n\n    /**\n     * Creates a new list out of the two supplied by creating each possible\n     * pair from the lists.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The list made by combining each possible pair from\n     *         `as` and `bs` into pairs (`[a, b]`).\n     * @example\n     *\n     *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n     */\n    // = xprodWith(prepend); (takes about 3 times as long...)\n    var xprod = _curry2(function xprod(a, b) {\n        // = xprodWith(prepend); (takes about 3 times as long...)\n        var idx = 0;\n        var ilen = a.length;\n        var j;\n        var jlen = b.length;\n        var result = [];\n        while (idx < ilen) {\n            j = 0;\n            while (j < jlen) {\n                result[result.length] = [\n                    a[idx],\n                    b[j]\n                ];\n                j += 1;\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Creates a new list out of the two supplied by pairing up\n     * equally-positioned items from both lists.  The returned list is\n     * truncated to the length of the shorter of the two input lists.\n     * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n     * @example\n     *\n     *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n     */\n    var zip = _curry2(function zip(a, b) {\n        var rv = [];\n        var idx = 0;\n        var len = Math.min(a.length, b.length);\n        while (idx < len) {\n            rv[idx] = [\n                a[idx],\n                b[idx]\n            ];\n            idx += 1;\n        }\n        return rv;\n    });\n\n    /**\n     * Creates a new object out of a list of keys and a list of values.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [String] -> [*] -> {String: *}\n     * @param {Array} keys The array that will be properties on the output object.\n     * @param {Array} values The list of values on the output object.\n     * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n     * @example\n     *\n     *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n     */\n    var zipObj = _curry2(function zipObj(keys, values) {\n        var idx = 0, len = keys.length, out = {};\n        while (idx < len) {\n            out[keys[idx]] = values[idx];\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Creates a new list out of the two supplied by applying the function to\n     * each equally-positioned pair in the lists. The returned list is\n     * truncated to the length of the shorter of the two input lists.\n     *\n     * @function\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> c) -> [a] -> [b] -> [c]\n     * @param {Function} fn The function used to combine the two elements into one value.\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n     *         using `fn`.\n     * @example\n     *\n     *      var f = function(x, y) {\n     *        // ...\n     *      };\n     *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n     *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n     */\n    var zipWith = _curry3(function zipWith(fn, a, b) {\n        var rv = [], idx = 0, len = Math.min(a.length, b.length);\n        while (idx < len) {\n            rv[idx] = fn(a[idx], b[idx]);\n            idx += 1;\n        }\n        return rv;\n    });\n\n    /**\n     * A function that always returns `false`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig * -> false\n     * @return {Boolean} false\n     * @see R.always, R.T\n     * @example\n     *\n     *      R.F(); //=> false\n     */\n    var F = always(false);\n\n    /**\n     * A function that always returns `true`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig * -> true\n     * @return {Boolean} `true`.\n     * @see R.always, R.F\n     * @example\n     *\n     *      R.T(); //=> true\n     */\n    var T = always(true);\n\n    /**\n     * Similar to hasMethod, this checks whether a function has a [methodname]\n     * function. If it isn't an array it will execute that function otherwise it will\n     * default to the ramda implementation.\n     *\n     * @private\n     * @param {Function} fn ramda implemtation\n     * @param {String} methodname property to check for a custom implementation\n     * @return {Object} Whatever the return value of the method is.\n     */\n    var _checkForMethod = function _checkForMethod(methodname, fn) {\n        return function () {\n            var length = arguments.length;\n            if (length === 0) {\n                return fn();\n            }\n            var obj = arguments[length - 1];\n            return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, _slice(arguments, 0, length - 1));\n        };\n    };\n\n    /**\n     * Copies an object.\n     *\n     * @private\n     * @param {*} value The value to be copied\n     * @param {Array} refFrom Array containing the source references\n     * @param {Array} refTo Array containing the copied source references\n     * @return {*} The copied value.\n     */\n    var _clone = function _clone(value, refFrom, refTo) {\n        var copy = function copy(copiedValue) {\n            var len = refFrom.length;\n            var idx = 0;\n            while (idx < len) {\n                if (value === refFrom[idx]) {\n                    return refTo[idx];\n                }\n                idx += 1;\n            }\n            refFrom[idx + 1] = value;\n            refTo[idx + 1] = copiedValue;\n            for (var key in value) {\n                copiedValue[key] = _clone(value[key], refFrom, refTo);\n            }\n            return copiedValue;\n        };\n        switch (type(value)) {\n        case 'Object':\n            return copy({});\n        case 'Array':\n            return copy([]);\n        case 'Date':\n            return new Date(value);\n        case 'RegExp':\n            return _cloneRegExp(value);\n        default:\n            return value;\n        }\n    };\n\n    var _createPartialApplicator = function _createPartialApplicator(concat) {\n        return function (fn) {\n            var args = _slice(arguments, 1);\n            return _arity(Math.max(0, fn.length - args.length), function () {\n                return fn.apply(this, concat(args, arguments));\n            });\n        };\n    };\n\n    /**\n     * Returns a function that dispatches with different strategies based on the\n     * object in list position (last argument). If it is an array, executes [fn].\n     * Otherwise, if it has a  function with [methodname], it will execute that\n     * function (functor case). Otherwise, if it is a transformer, uses transducer\n     * [xf] to return a new transformer (transducer case). Otherwise, it will\n     * default to executing [fn].\n     *\n     * @private\n     * @param {String} methodname property to check for a custom implementation\n     * @param {Function} xf transducer to initialize if object is transformer\n     * @param {Function} fn default ramda implementation\n     * @return {Function} A function that dispatches on object in list position\n     */\n    var _dispatchable = function _dispatchable(methodname, xf, fn) {\n        return function () {\n            var length = arguments.length;\n            if (length === 0) {\n                return fn();\n            }\n            var obj = arguments[length - 1];\n            if (!_isArray(obj)) {\n                var args = _slice(arguments, 0, length - 1);\n                if (typeof obj[methodname] === 'function') {\n                    return obj[methodname].apply(obj, args);\n                }\n                if (_isTransformer(obj)) {\n                    var transducer = xf.apply(null, args);\n                    return transducer(obj);\n                }\n            }\n            return fn.apply(this, arguments);\n        };\n    };\n\n    // The algorithm used to handle cyclic structures is\n    // inspired by underscore's isEqual\n    // RegExp equality algorithm: http://stackoverflow.com/a/10776635\n    var _equals = function _equals(a, b, stackA, stackB) {\n        var typeA = type(a);\n        if (typeA !== type(b)) {\n            return false;\n        }\n        if (typeA === 'Boolean' || typeA === 'Number' || typeA === 'String') {\n            return typeof a === 'object' ? typeof b === 'object' && identical(a.valueOf(), b.valueOf()) : identical(a, b);\n        }\n        if (identical(a, b)) {\n            return true;\n        }\n        if (typeA === 'RegExp') {\n            // RegExp equality algorithm: http://stackoverflow.com/a/10776635\n            return a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode;\n        }\n        if (Object(a) === a) {\n            if (typeA === 'Date' && a.getTime() !== b.getTime()) {\n                return false;\n            }\n            var keysA = keys(a);\n            if (keysA.length !== keys(b).length) {\n                return false;\n            }\n            var idx = stackA.length - 1;\n            while (idx >= 0) {\n                if (stackA[idx] === a) {\n                    return stackB[idx] === b;\n                }\n                idx -= 1;\n            }\n            stackA[stackA.length] = a;\n            stackB[stackB.length] = b;\n            idx = keysA.length - 1;\n            while (idx >= 0) {\n                var key = keysA[idx];\n                if (!_has(key, b) || !_equals(b[key], a[key], stackA, stackB)) {\n                    return false;\n                }\n                idx -= 1;\n            }\n            stackA.pop();\n            stackB.pop();\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * Private function that determines whether or not a provided object has a given method.\n     * Does not ignore methods stored on the object's prototype chain. Used for dynamically\n     * dispatching Ramda methods to non-Array objects.\n     *\n     * @private\n     * @param {String} methodName The name of the method to check for.\n     * @param {Object} obj The object to test.\n     * @return {Boolean} `true` has a given method, `false` otherwise.\n     * @example\n     *\n     *      var person = { name: 'John' };\n     *      person.shout = function() { alert(this.name); };\n     *\n     *      _hasMethod('shout', person); //=> true\n     *      _hasMethod('foo', person); //=> false\n     */\n    var _hasMethod = function _hasMethod(methodName, obj) {\n        return obj != null && !_isArray(obj) && typeof obj[methodName] === 'function';\n    };\n\n    /**\n     * `_makeFlat` is a helper function that returns a one-level or fully recursive function\n     * based on the flag passed in.\n     *\n     * @private\n     */\n    var _makeFlat = function _makeFlat(recursive) {\n        return function flatt(list) {\n            var value, result = [], idx = 0, j, ilen = list.length, jlen;\n            while (idx < ilen) {\n                if (isArrayLike(list[idx])) {\n                    value = recursive ? flatt(list[idx]) : list[idx];\n                    j = 0;\n                    jlen = value.length;\n                    while (j < jlen) {\n                        result[result.length] = value[j];\n                        j += 1;\n                    }\n                } else {\n                    result[result.length] = list[idx];\n                }\n                idx += 1;\n            }\n            return result;\n        };\n    };\n\n    var _reduce = function () {\n        function _arrayReduce(xf, acc, list) {\n            var idx = 0, len = list.length;\n            while (idx < len) {\n                acc = xf['@@transducer/step'](acc, list[idx]);\n                if (acc && acc['@@transducer/reduced']) {\n                    acc = acc['@@transducer/value'];\n                    break;\n                }\n                idx += 1;\n            }\n            return xf['@@transducer/result'](acc);\n        }\n        function _iterableReduce(xf, acc, iter) {\n            var step = iter.next();\n            while (!step.done) {\n                acc = xf['@@transducer/step'](acc, step.value);\n                if (acc && acc['@@transducer/reduced']) {\n                    acc = acc['@@transducer/value'];\n                    break;\n                }\n                step = iter.next();\n            }\n            return xf['@@transducer/result'](acc);\n        }\n        function _methodReduce(xf, acc, obj) {\n            return xf['@@transducer/result'](obj.reduce(bind(xf['@@transducer/step'], xf), acc));\n        }\n        var symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n        return function _reduce(fn, acc, list) {\n            if (typeof fn === 'function') {\n                fn = _xwrap(fn);\n            }\n            if (isArrayLike(list)) {\n                return _arrayReduce(fn, acc, list);\n            }\n            if (typeof list.reduce === 'function') {\n                return _methodReduce(fn, acc, list);\n            }\n            if (list[symIterator] != null) {\n                return _iterableReduce(fn, acc, list[symIterator]());\n            }\n            if (typeof list.next === 'function') {\n                return _iterableReduce(fn, acc, list);\n            }\n            throw new TypeError('reduce: list must be array or iterable');\n        };\n    }();\n\n    var _stepCat = function () {\n        var _stepCatArray = {\n            '@@transducer/init': Array,\n            '@@transducer/step': function (xs, x) {\n                return _concat(xs, [x]);\n            },\n            '@@transducer/result': _identity\n        };\n        var _stepCatString = {\n            '@@transducer/init': String,\n            '@@transducer/step': function (a, b) {\n                return a + b;\n            },\n            '@@transducer/result': _identity\n        };\n        var _stepCatObject = {\n            '@@transducer/init': Object,\n            '@@transducer/step': function (result, input) {\n                return merge(result, isArrayLike(input) ? createMapEntry(input[0], input[1]) : input);\n            },\n            '@@transducer/result': _identity\n        };\n        return function _stepCat(obj) {\n            if (_isTransformer(obj)) {\n                return obj;\n            }\n            if (isArrayLike(obj)) {\n                return _stepCatArray;\n            }\n            if (typeof obj === 'string') {\n                return _stepCatString;\n            }\n            if (typeof obj === 'object') {\n                return _stepCatObject;\n            }\n            throw new Error('Cannot create transformer for ' + obj);\n        };\n    }();\n\n    var _xall = function () {\n        function XAll(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.all = true;\n        }\n        XAll.prototype['@@transducer/init'] = _xfBase.init;\n        XAll.prototype['@@transducer/result'] = function (result) {\n            if (this.all) {\n                result = this.xf['@@transducer/step'](result, true);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XAll.prototype['@@transducer/step'] = function (result, input) {\n            if (!this.f(input)) {\n                this.all = false;\n                result = _reduced(this.xf['@@transducer/step'](result, false));\n            }\n            return result;\n        };\n        return _curry2(function _xall(f, xf) {\n            return new XAll(f, xf);\n        });\n    }();\n\n    var _xany = function () {\n        function XAny(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.any = false;\n        }\n        XAny.prototype['@@transducer/init'] = _xfBase.init;\n        XAny.prototype['@@transducer/result'] = function (result) {\n            if (!this.any) {\n                result = this.xf['@@transducer/step'](result, false);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XAny.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.any = true;\n                result = _reduced(this.xf['@@transducer/step'](result, true));\n            }\n            return result;\n        };\n        return _curry2(function _xany(f, xf) {\n            return new XAny(f, xf);\n        });\n    }();\n\n    var _xdrop = function () {\n        function XDrop(n, xf) {\n            this.xf = xf;\n            this.n = n;\n        }\n        XDrop.prototype['@@transducer/init'] = _xfBase.init;\n        XDrop.prototype['@@transducer/result'] = _xfBase.result;\n        XDrop.prototype['@@transducer/step'] = function (result, input) {\n            if (this.n > 0) {\n                this.n -= 1;\n                return result;\n            }\n            return this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdrop(n, xf) {\n            return new XDrop(n, xf);\n        });\n    }();\n\n    var _xdropWhile = function () {\n        function XDropWhile(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n        XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f) {\n                if (this.f(input)) {\n                    return result;\n                }\n                this.f = null;\n            }\n            return this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdropWhile(f, xf) {\n            return new XDropWhile(f, xf);\n        });\n    }();\n\n    var _xgroupBy = function () {\n        function XGroupBy(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.inputs = {};\n        }\n        XGroupBy.prototype['@@transducer/init'] = _xfBase.init;\n        XGroupBy.prototype['@@transducer/result'] = function (result) {\n            var key;\n            for (key in this.inputs) {\n                if (_has(key, this.inputs)) {\n                    result = this.xf['@@transducer/step'](result, this.inputs[key]);\n                    if (result['@@transducer/reduced']) {\n                        result = result['@@transducer/value'];\n                        break;\n                    }\n                }\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XGroupBy.prototype['@@transducer/step'] = function (result, input) {\n            var key = this.f(input);\n            this.inputs[key] = this.inputs[key] || [\n                key,\n                []\n            ];\n            this.inputs[key][1] = append(input, this.inputs[key][1]);\n            return result;\n        };\n        return _curry2(function _xgroupBy(f, xf) {\n            return new XGroupBy(f, xf);\n        });\n    }();\n\n    /**\n     * Creates a new list iteration function from an existing one by adding two new parameters\n     * to its callback function: the current index, and the entire list.\n     *\n     * This would turn, for instance, Ramda's simple `map` function into one that more closely\n     * resembles `Array.prototype.map`.  Note that this will only work for functions in which\n     * the iteration callback function is the first parameter, and where the list is the last\n     * parameter.  (This latter might be unimportant if the list parameter is not used.)\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @category List\n     * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n     * @param {Function} fn A list iteration function that does not pass index or list to its callback\n     * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n     * @example\n     *\n     *      var mapIndexed = R.addIndex(R.map);\n     *      mapIndexed(function(val, idx) {return idx + '-' + val;}, ['f', 'o', 'o', 'b', 'a', 'r']);\n     *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n     */\n    var addIndex = _curry1(function addIndex(fn) {\n        return curryN(fn.length, function () {\n            var idx = 0;\n            var origFn = arguments[0];\n            var list = arguments[arguments.length - 1];\n            var args = _slice(arguments);\n            args[0] = function () {\n                var result = origFn.apply(this, _concat(arguments, [\n                    idx,\n                    list\n                ]));\n                idx += 1;\n                return result;\n            };\n            return fn.apply(this, args);\n        });\n    });\n\n    /**\n     * Returns `true` if all elements of the list match the predicate, `false` if there are any\n     * that don't.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n     *         otherwise.\n     * @see R.any, R.none\n     * @example\n     *\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      var lessThan3 = R.flip(R.lt)(3);\n     *      R.all(lessThan2)([1, 2]); //=> false\n     *      R.all(lessThan3)([1, 2]); //=> true\n     */\n    var all = _curry2(_dispatchable('all', _xall, function all(fn, list) {\n        var idx = 0;\n        while (idx < list.length) {\n            if (!fn(list[idx])) {\n                return false;\n            }\n            idx += 1;\n        }\n        return true;\n    }));\n\n    /**\n     * A function that returns the first argument if it's falsy otherwise the second\n     * argument. Note that this is NOT short-circuited, meaning that if expressions\n     * are passed they are both evaluated.\n     *\n     * Dispatches to the `and` method of the first argument if applicable.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {*} a any value\n     * @param {*} b any other value\n     * @return {*} the first argument if falsy otherwise the second argument.\n     * @see R.both\n     * @example\n     *\n     *      R.and(false, true); //=> false\n     *      R.and(0, []); //=> 0\n     *      R.and(null, ''); => null\n     */\n    var and = _curry2(function and(a, b) {\n        return _hasMethod('and', a) ? a.and(b) : a && b;\n    });\n\n    /**\n     * Returns `true` if at least one of elements of the list match the predicate, `false`\n     * otherwise.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n     *         otherwise.\n     * @see R.all, R.none\n     * @example\n     *\n     *      var lessThan0 = R.flip(R.lt)(0);\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      R.any(lessThan0)([1, 2]); //=> false\n     *      R.any(lessThan2)([1, 2]); //=> true\n     */\n    var any = _curry2(_dispatchable('any', _xany, function any(fn, list) {\n        var idx = 0;\n        while (idx < list.length) {\n            if (fn(list[idx])) {\n                return true;\n            }\n            idx += 1;\n        }\n        return false;\n    }));\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts exactly 2\n     * parameters. Any extraneous parameters will not be passed to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> c) -> (a, b -> c)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 2.\n     * @example\n     *\n     *      var takesThreeArgs = function(a, b, c) {\n     *        return [a, b, c];\n     *      };\n     *      takesThreeArgs.length; //=> 3\n     *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      var takesTwoArgs = R.binary(takesThreeArgs);\n     *      takesTwoArgs.length; //=> 2\n     *      // Only 2 arguments are passed to the wrapped function\n     *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n     */\n    var binary = _curry1(function binary(fn) {\n        return nAry(2, fn);\n    });\n\n    /**\n     * Creates a deep copy of the value which may contain (nested) `Array`s and\n     * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n     * not copied, but assigned by their reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {*} -> {*}\n     * @param {*} value The object or array to clone\n     * @return {*} A new object or array.\n     * @example\n     *\n     *      var objects = [{}, {}, {}];\n     *      var objectsClone = R.clone(objects);\n     *      objects[0] === objectsClone[0]; //=> false\n     */\n    var clone = _curry1(function clone(value) {\n        return _clone(value, [], []);\n    });\n\n    /**\n     * Returns a new list consisting of the elements of the first list followed by the elements\n     * of the second.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The first list to merge.\n     * @param {Array} list2 The second set to merge.\n     * @return {Array} A new array consisting of the contents of `list1` followed by the\n     *         contents of `list2`. If, instead of an Array for `list1`, you pass an\n     *         object with a `concat` method on it, `concat` will call `list1.concat`\n     *         and pass it the value of `list2`.\n     *\n     * @example\n     *\n     *      R.concat([], []); //=> []\n     *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n     */\n    var concat = _curry2(function concat(set1, set2) {\n        if (_isArray(set2)) {\n            return _concat(set1, set2);\n        } else if (_hasMethod('concat', set1)) {\n            return set1.concat(set2);\n        } else {\n            throw new TypeError('can\\'t concat ' + typeof set1);\n        }\n    });\n\n    /**\n     * Returns a curried equivalent of the provided function. The curried\n     * function has two unusual capabilities. First, its arguments needn't\n     * be provided one at a time. If `f` is a ternary function and `g` is\n     * `R.curry(f)`, the following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`,\n     * the following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> a) -> (* -> a)\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curryN\n     * @example\n     *\n     *      var addFourNumbers = function(a, b, c, d) {\n     *        return a + b + c + d;\n     *      };\n     *\n     *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n    var curry = _curry1(function curry(fn) {\n        return curryN(fn.length, fn);\n    });\n\n    /**\n     * Returns a new list containing the last `n` elements of a given list, passing each value\n     * to the supplied predicate function, skipping elements while the predicate function returns\n     * `true`. The predicate function is passed one argument: *(value)*.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.takeWhile\n     * @example\n     *\n     *      var lteTwo = function(x) {\n     *        return x <= 2;\n     *      };\n     *\n     *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n     */\n    var dropWhile = _curry2(_dispatchable('dropWhile', _xdropWhile, function dropWhile(pred, list) {\n        var idx = 0, len = list.length;\n        while (idx < len && pred(list[idx])) {\n            idx += 1;\n        }\n        return _slice(list, idx);\n    }));\n\n    /**\n     * Returns `true` if its arguments are equivalent, `false` otherwise.\n     * Dispatches to an `equals` method if present. Handles cyclical data\n     * structures.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig a -> b -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      R.equals(1, 1); //=> true\n     *      R.equals(1, '1'); //=> false\n     *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n     *\n     *      var a = {}; a.v = a;\n     *      var b = {}; b.v = b;\n     *      R.equals(a, b); //=> true\n     */\n    var equals = _curry2(function equals(a, b) {\n        return _hasMethod('equals', a) ? a.equals(b) : _hasMethod('equals', b) ? b.equals(a) : _equals(a, b, [], []);\n    });\n\n    /**\n     * Returns a new list containing only those items that match a given predicate function.\n     * The predicate function is passed one argument: *(value)*.\n     *\n     * Note that `R.filter` does not skip deleted or unassigned indices, unlike the native\n     * `Array.prototype.filter` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter#Description\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} The new filtered array.\n     * @see R.reject\n     * @example\n     *\n     *      var isEven = function(n) {\n     *        return n % 2 === 0;\n     *      };\n     *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n     */\n    var filter = _curry2(_dispatchable('filter', _xfilter, _filter));\n\n    /**\n     * Returns the first element of the list which matches the predicate, or `undefined` if no\n     * element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     *        desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n     *      R.find(R.propEq('a', 4))(xs); //=> undefined\n     */\n    var find = _curry2(_dispatchable('find', _xfind, function find(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (fn(list[idx])) {\n                return list[idx];\n            }\n            idx += 1;\n        }\n    }));\n\n    /**\n     * Returns the index of the first element of the list which matches the predicate, or `-1`\n     * if no element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n     *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n    var findIndex = _curry2(_dispatchable('findIndex', _xfindIndex, function findIndex(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (fn(list[idx])) {\n                return idx;\n            }\n            idx += 1;\n        }\n        return -1;\n    }));\n\n    /**\n     * Returns the last element of the list which matches the predicate, or `undefined` if no\n     * element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n     *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n     */\n    var findLast = _curry2(_dispatchable('findLast', _xfindLast, function findLast(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            if (fn(list[idx])) {\n                return list[idx];\n            }\n            idx -= 1;\n        }\n    }));\n\n    /**\n     * Returns the index of the last element of the list which matches the predicate, or\n     * `-1` if no element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n     *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n    var findLastIndex = _curry2(_dispatchable('findLastIndex', _xfindLastIndex, function findLastIndex(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            if (fn(list[idx])) {\n                return idx;\n            }\n            idx -= 1;\n        }\n        return -1;\n    }));\n\n    /**\n     * Returns a new list by pulling every item out of it (and all its sub-arrays) and putting\n     * them in a new array, depth-first.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b]\n     * @param {Array} list The array to consider.\n     * @return {Array} The flattened list.\n     * @see R.unnest\n     * @example\n     *\n     *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n     *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n     */\n    var flatten = _curry1(_makeFlat(true));\n\n    /**\n     * Returns a new function much like the supplied one, except that the first two arguments'\n     * order is reversed.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)\n     * @param {Function} fn The function to invoke with its first two parameters reversed.\n     * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n     * @example\n     *\n     *      var mergeThree = function(a, b, c) {\n     *        return ([]).concat(a, b, c);\n     *      };\n     *\n     *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n     */\n    var flip = _curry1(function flip(fn) {\n        return curry(function (a, b) {\n            var args = _slice(arguments);\n            args[0] = b;\n            args[1] = a;\n            return fn.apply(this, args);\n        });\n    });\n\n    /**\n     * Iterate over an input `list`, calling a provided function `fn` for each element in the\n     * list.\n     *\n     * `fn` receives one argument: *(value)*.\n     *\n     * Note: `R.forEach` does not skip deleted or unassigned indices (sparse arrays), unlike\n     * the native `Array.prototype.forEach` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n     *\n     * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns the original\n     * array. In some libraries this function is named `each`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> *) -> [a] -> [a]\n     * @param {Function} fn The function to invoke. Receives one argument, `value`.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} The original list.\n     * @example\n     *\n     *      var printXPlusFive = function(x) { console.log(x + 5); };\n     *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n     *      //-> 6\n     *      //-> 7\n     *      //-> 8\n     */\n    var forEach = _curry2(_checkForMethod('forEach', function forEach(fn, list) {\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            fn(list[idx]);\n            idx += 1;\n        }\n        return list;\n    }));\n\n    /**\n     * Returns a list of function names of object's own functions\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {*} -> [String]\n     * @param {Object} obj The objects with functions in it\n     * @return {Array} A list of the object's own properties that map to functions.\n     * @example\n     *\n     *      R.functions(R); // returns list of ramda's own function names\n     *\n     *      var F = function() { this.x = function(){}; this.y = 1; }\n     *      F.prototype.z = function() {};\n     *      F.prototype.a = 100;\n     *      R.functions(new F()); //=> [\"x\"]\n     */\n    var functions = _curry1(_functionsWith(keys));\n\n    /**\n     * Returns a list of function names of object's own and prototype functions\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {*} -> [String]\n     * @param {Object} obj The objects with functions in it\n     * @return {Array} A list of the object's own properties and prototype\n     *         properties that map to functions.\n     * @example\n     *\n     *      R.functionsIn(R); // returns list of ramda's own and prototype function names\n     *\n     *      var F = function() { this.x = function(){}; this.y = 1; }\n     *      F.prototype.z = function() {};\n     *      F.prototype.a = 100;\n     *      R.functionsIn(new F()); //=> [\"x\", \"z\"]\n     */\n    var functionsIn = _curry1(_functionsWith(keysIn));\n\n    /**\n     * Splits a list into sub-lists stored in an object, based on the result of calling a String-returning function\n     * on each element, and grouping the results according to values returned.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> String) -> [a] -> {String: [a]}\n     * @param {Function} fn Function :: a -> String\n     * @param {Array} list The array to group\n     * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n     *         that produced that key when passed to `fn`.\n     * @example\n     *\n     *      var byGrade = R.groupBy(function(student) {\n     *        var score = student.score;\n     *        return score < 65 ? 'F' :\n     *               score < 70 ? 'D' :\n     *               score < 80 ? 'C' :\n     *               score < 90 ? 'B' : 'A';\n     *      });\n     *      var students = [{name: 'Abby', score: 84},\n     *                      {name: 'Eddy', score: 58},\n     *                      // ...\n     *                      {name: 'Jack', score: 69}];\n     *      byGrade(students);\n     *      // {\n     *      //   'A': [{name: 'Dianne', score: 99}],\n     *      //   'B': [{name: 'Abby', score: 84}]\n     *      //   // ...,\n     *      //   'F': [{name: 'Eddy', score: 58}]\n     *      // }\n     */\n    var groupBy = _curry2(_dispatchable('groupBy', _xgroupBy, function groupBy(fn, list) {\n        return _reduce(function (acc, elt) {\n            var key = fn(elt);\n            acc[key] = append(elt, acc[key] || (acc[key] = []));\n            return acc;\n        }, {}, list);\n    }));\n\n    /**\n     * Returns the first element of the given list or string. In some libraries\n     * this function is named `first`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.tail, R.init, R.last\n     * @sig [a] -> a | Undefined\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n     *      R.head([]); //=> undefined\n     *\n     *      R.head('abc'); //=> 'a'\n     *      R.head(''); //=> ''\n     */\n    var head = nth(0);\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those\n     * elements common to both lists.  Duplication is determined according\n     * to the value returned by applying the supplied predicate to two list\n     * elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a,a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate function that determines whether\n     *        the two supplied elements are equal.\n     * @param {Array} list1 One list of items to compare\n     * @param {Array} list2 A second list of items to compare\n     * @see R.intersection\n     * @return {Array} A new list containing those elements common to both lists.\n     * @example\n     *\n     *      var buffaloSpringfield = [\n     *        {id: 824, name: 'Richie Furay'},\n     *        {id: 956, name: 'Dewey Martin'},\n     *        {id: 313, name: 'Bruce Palmer'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *      var csny = [\n     *        {id: 204, name: 'David Crosby'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 539, name: 'Graham Nash'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *\n     *      var sameId = function(o1, o2) {return o1.id === o2.id;};\n     *\n     *      R.intersectionWith(sameId, buffaloSpringfield, csny);\n     *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n     */\n    var intersectionWith = _curry3(function intersectionWith(pred, list1, list2) {\n        var results = [], idx = 0;\n        while (idx < list1.length) {\n            if (_containsWith(pred, list1[idx], list2)) {\n                results[results.length] = list1[idx];\n            }\n            idx += 1;\n        }\n        return uniqWith(pred, results);\n    });\n\n    /**\n     * Creates a new list with the separator interposed between elements.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} separator The element to add to the list.\n     * @param {Array} list The list to be interposed.\n     * @return {Array} The new list.\n     * @example\n     *\n     *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n     */\n    var intersperse = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {\n        var out = [];\n        var idx = 0;\n        var length = list.length;\n        while (idx < length) {\n            if (idx === length - 1) {\n                out.push(list[idx]);\n            } else {\n                out.push(list[idx], separator);\n            }\n            idx += 1;\n        }\n        return out;\n    }));\n\n    /**\n     * Transforms the items of the list with the transducer and appends the transformed items to\n     * the accumulator using an appropriate iterator function based on the accumulator type.\n     *\n     * The accumulator can be an array, string, object or a transformer. Iterated items will\n     * be appended to arrays and concatenated to strings. Objects will be merged directly or 2-item\n     * arrays will be merged as key, value pairs.\n     *\n     * The accumulator can also be a transformer object that provides a 2-arity reducing iterator\n     * function, step, 0-arity initial value function, init, and 1-arity result extraction function\n     * result. The step function is used as the iterator function in reduce. The result function is\n     * used to convert the final accumulator into the return type and in most cases is R.identity.\n     * The init function is used to provide the initial accumulator.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> (b -> b) -> [c] -> a\n     * @param {*} acc The initial accumulator value.\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.into([], transducer, numbers); //=> [2, 3]\n     *\n     *      var intoArray = R.into([]);\n     *      intoArray(transducer, numbers); //=> [2, 3]\n     */\n    var into = _curry3(function into(acc, xf, list) {\n        return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), acc, list);\n    });\n\n    /**\n     * Same as R.invertObj, however this accounts for objects\n     * with duplicate values by putting the values into an\n     * array.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {s: x} -> {x: [ s, ... ]}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object with keys\n     * in an array.\n     * @example\n     *\n     *      var raceResultsByFirstName = {\n     *        first: 'alice',\n     *        second: 'jake',\n     *        third: 'alice',\n     *      };\n     *      R.invert(raceResultsByFirstName);\n     *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n     */\n    var invert = _curry1(function invert(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var idx = 0;\n        var out = {};\n        while (idx < len) {\n            var key = props[idx];\n            var val = obj[key];\n            var list = _has(val, out) ? out[val] : out[val] = [];\n            list[list.length] = key;\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new object with the keys of the given object\n     * as values, and the values of the given object as keys.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {s: x} -> {x: s}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object\n     * @example\n     *\n     *      var raceResults = {\n     *        first: 'alice',\n     *        second: 'jake'\n     *      };\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': 'first', 'jake':'second' }\n     *\n     *      // Alternatively:\n     *      var raceResults = ['alice', 'jake'];\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': '0', 'jake':'1' }\n     */\n    var invertObj = _curry1(function invertObj(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var idx = 0;\n        var out = {};\n        while (idx < len) {\n            var key = props[idx];\n            out[obj[key]] = key;\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns the last element of the given list or string.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.init, R.head, R.tail\n     * @sig [a] -> a | Undefined\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n     *      R.last([]); //=> undefined\n     *\n     *      R.last('abc'); //=> 'c'\n     *      R.last(''); //=> ''\n     */\n    var last = nth(-1);\n\n    /**\n     * Returns the position of the last occurrence of an item in\n     * an array, or -1 if the item is not included in the array.\n     * `R.equals` is used to determine equality.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} xs The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     * @see R.indexOf\n     * @example\n     *\n     *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n     *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n     */\n    var lastIndexOf = _curry2(function lastIndexOf(target, xs) {\n        if (_hasMethod('lastIndexOf', xs)) {\n            return xs.lastIndexOf(target);\n        } else {\n            var idx = xs.length - 1;\n            while (idx >= 0) {\n                if (equals(xs[idx], target)) {\n                    return idx;\n                }\n                idx -= 1;\n            }\n            return -1;\n        }\n    });\n\n    /**\n     * Returns a new list, constructed by applying the supplied function to every element of the\n     * supplied list.\n     *\n     * Note: `R.map` does not skip deleted or unassigned indices (sparse arrays), unlike the\n     * native `Array.prototype.map` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map#Description\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> b) -> [a] -> [b]\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {Array} list The list to be iterated over.\n     * @return {Array} The new list.\n     * @example\n     *\n     *      var double = function(x) {\n     *        return x * 2;\n     *      };\n     *\n     *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n     */\n    var map = _curry2(_dispatchable('map', _xmap, _map));\n\n    /**\n     * Map, but for objects. Creates an object with the same keys as `obj` and values\n     * generated by running each property of `obj` through `fn`. `fn` is passed one argument:\n     * *(value)*.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig (v -> v) -> {k: v} -> {k: v}\n     * @param {Function} fn A function called for each property in `obj`. Its return value will\n     * become a new property on the return object.\n     * @param {Object} obj The object to iterate over.\n     * @return {Object} A new object with the same keys as `obj` and values that are the result\n     *         of running each property through `fn`.\n     * @example\n     *\n     *      var values = { x: 1, y: 2, z: 3 };\n     *      var double = function(num) {\n     *        return num * 2;\n     *      };\n     *\n     *      R.mapObj(double, values); //=> { x: 2, y: 4, z: 6 }\n     */\n    var mapObj = _curry2(function mapObj(fn, obj) {\n        return _reduce(function (acc, key) {\n            acc[key] = fn(obj[key]);\n            return acc;\n        }, {}, keys(obj));\n    });\n\n    /**\n     * Like `mapObj`, but but passes additional arguments to the predicate function. The\n     * predicate function is passed three arguments: *(value, key, obj)*.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig (v, k, {k: v} -> v) -> {k: v} -> {k: v}\n     * @param {Function} fn A function called for each property in `obj`. Its return value will\n     *        become a new property on the return object.\n     * @param {Object} obj The object to iterate over.\n     * @return {Object} A new object with the same keys as `obj` and values that are the result\n     *         of running each property through `fn`.\n     * @example\n     *\n     *      var values = { x: 1, y: 2, z: 3 };\n     *      var prependKeyAndDouble = function(num, key, obj) {\n     *        return key + (num * 2);\n     *      };\n     *\n     *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n     */\n    var mapObjIndexed = _curry2(function mapObjIndexed(fn, obj) {\n        return _reduce(function (acc, key) {\n            acc[key] = fn(obj[key], key, obj);\n            return acc;\n        }, {}, keys(obj));\n    });\n\n    /**\n     * Returns `true` if no elements of the list match the predicate,\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n     * @see R.all, R.any\n     * @example\n     *\n     *      R.none(R.isNaN, [1, 2, 3]); //=> true\n     *      R.none(R.isNaN, [1, 2, 3, NaN]); //=> false\n     */\n    var none = _curry2(_complement(_dispatchable('any', _xany, any)));\n\n    /**\n     * A function that returns the first truthy of two arguments otherwise the\n     * last argument. Note that this is NOT short-circuited, meaning that if\n     * expressions are passed they are both evaluated.\n     *\n     * Dispatches to the `or` method of the first argument if applicable.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {*} a any value\n     * @param {*} b any other value\n     * @return {*} the first truthy argument, otherwise the last argument.\n     * @see R.either\n     * @example\n     *\n     *      R.or(false, true); //=> true\n     *      R.or(0, []); //=> []\n     *      R.or(null, ''); => ''\n     */\n    var or = _curry2(function or(a, b) {\n        return _hasMethod('or', a) ? a.or(b) : a || b;\n    });\n\n    /**\n     * Accepts as its arguments a function and any number of values and returns a function that,\n     * when invoked, calls the original function with all of the values prepended to the\n     * original function's arguments list. In some libraries this function is named `applyLeft`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> b -> ... -> i -> j -> ... -> m -> n) -> a -> b-> ... -> i -> (j -> ... -> m -> n)\n     * @param {Function} fn The function to invoke.\n     * @param {...*} [args] Arguments to prepend to `fn` when the returned function is invoked.\n     * @return {Function} A new function wrapping `fn`. When invoked, it will call `fn`\n     *         with `args` prepended to `fn`'s arguments list.\n     * @example\n     *\n     *      var multiply = function(a, b) { return a * b; };\n     *      var double = R.partial(multiply, 2);\n     *      double(2); //=> 4\n     *\n     *      var greet = function(salutation, title, firstName, lastName) {\n     *        return salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *      };\n     *      var sayHello = R.partial(greet, 'Hello');\n     *      var sayHelloToMs = R.partial(sayHello, 'Ms.');\n     *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n     */\n    var partial = curry(_createPartialApplicator(_concat));\n\n    /**\n     * Accepts as its arguments a function and any number of values and returns a function that,\n     * when invoked, calls the original function with all of the values appended to the original\n     * function's arguments list.\n     *\n     * Note that `partialRight` is the opposite of `partial`: `partialRight` fills `fn`'s arguments\n     * from the right to the left.  In some libraries this function is named `applyRight`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> b-> ... -> i -> j -> ... -> m -> n) -> j -> ... -> m -> n -> (a -> b-> ... -> i)\n     * @param {Function} fn The function to invoke.\n     * @param {...*} [args] Arguments to append to `fn` when the returned function is invoked.\n     * @return {Function} A new function wrapping `fn`. When invoked, it will call `fn` with\n     *         `args` appended to `fn`'s arguments list.\n     * @example\n     *\n     *      var greet = function(salutation, title, firstName, lastName) {\n     *        return salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *      };\n     *      var greetMsJaneJones = R.partialRight(greet, 'Ms.', 'Jane', 'Jones');\n     *\n     *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n     */\n    var partialRight = curry(_createPartialApplicator(flip(_concat)));\n\n    /**\n     * Takes a predicate and a list and returns the pair of lists of\n     * elements which do and do not satisfy the predicate, respectively.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [[a],[a]]\n     * @param {Function} pred A predicate to determine which array the element belongs to.\n     * @param {Array} list The array to partition.\n     * @return {Array} A nested array, containing first an array of elements that satisfied the predicate,\n     *         and second an array of elements that did not satisfy.\n     * @example\n     *\n     *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n     *      //=> [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n     */\n    var partition = _curry2(function partition(pred, list) {\n        return _reduce(function (acc, elt) {\n            var xs = acc[pred(elt) ? 0 : 1];\n            xs[xs.length] = elt;\n            return acc;\n        }, [\n            [],\n            []\n        ], list);\n    });\n\n    /**\n     * Determines whether a nested path on an object has a specific value,\n     * in `R.equals` terms. Most likely used to filter a list.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [String] -> * -> {String: *} -> Boolean\n     * @param {Array} path The path of the nested property to use\n     * @param {*} val The value to compare the nested property with\n     * @param {Object} obj The object to check the nested property in\n     * @return {Boolean} `true` if the value equals the nested object property,\n     *         `false` otherwise.\n     * @example\n     *\n     *      var user1 = { address: { zipCode: 90210 } };\n     *      var user2 = { address: { zipCode: 55555 } };\n     *      var user3 = { name: 'Bob' };\n     *      var users = [ user1, user2, user3 ];\n     *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n     *      R.filter(isFamous, users); //=> [ user1 ]\n     */\n    var pathEq = _curry3(function pathEq(_path, val, obj) {\n        return equals(path(_path, obj), val);\n    });\n\n    /**\n     * Returns a new list by plucking the same named property off all objects in the list supplied.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig k -> [{k: v}] -> [v]\n     * @param {Number|String} key The key name to pluck off of each object.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of values for the given key.\n     * @example\n     *\n     *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n     *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n     */\n    var pluck = _curry2(function pluck(p, list) {\n        return map(prop(p), list);\n    });\n\n    /**\n     * Returns `true` if the specified object property is equal, in `R.equals`\n     * terms, to the given value; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig String -> a -> Object -> Boolean\n     * @param {String} name\n     * @param {*} val\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.equals, R.propSatisfies\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n     *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n     *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n     *      var kids = [abby, fred, rusty, alois];\n     *      var hasBrownHair = R.propEq('hair', 'brown');\n     *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n     */\n    var propEq = _curry3(function propEq(name, val, obj) {\n        return propSatisfies(equals(val), name, obj);\n    });\n\n    /**\n     * Returns `true` if the specified object property is of the given type;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig Type -> String -> Object -> Boolean\n     * @param {Function} type\n     * @param {String} name\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.is\n     * @see R.propSatisfies\n     * @example\n     *\n     *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n     *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n     *      R.propIs(Number, 'x', {});            //=> false\n     */\n    var propIs = _curry3(function propIs(type, name, obj) {\n        return propSatisfies(is(type), name, obj);\n    });\n\n    /**\n     * Returns a single item by iterating through the list, successively calling the iterator\n     * function and passing it an accumulator value and the current value from the array, and\n     * then passing the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*.  It may use `R.reduced` to\n     * shortcut the iteration.\n     *\n     * Note: `R.reduce` does not skip deleted or unassigned indices (sparse arrays), unlike\n     * the native `Array.prototype.reduce` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n     * @see R.reduced\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3];\n     *      var add = function(a, b) {\n     *        return a + b;\n     *      };\n     *\n     *      R.reduce(add, 10, numbers); //=> 16\n     */\n    var reduce = _curry3(_reduce);\n\n    /**\n     * Similar to `filter`, except that it keeps only values for which the given predicate\n     * function returns falsy. The predicate function is passed one argument: *(value)*.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} The new filtered array.\n     * @see R.filter\n     * @example\n     *\n     *      var isOdd = function(n) {\n     *        return n % 2 === 1;\n     *      };\n     *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n     */\n    var reject = _curry2(function reject(fn, list) {\n        return filter(_complement(fn), list);\n    });\n\n    /**\n     * Returns a fixed list of size `n` containing a specified identical value.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> n -> [a]\n     * @param {*} value The value to repeat.\n     * @param {Number} n The desired size of the output list.\n     * @return {Array} A new array containing `n` `value`s.\n     * @example\n     *\n     *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n     *\n     *      var obj = {};\n     *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n     *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n     */\n    var repeat = _curry2(function repeat(value, n) {\n        return times(always(value), n);\n    });\n\n    /**\n     * Returns the elements of the given list or string (or object with a `slice`\n     * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @sig Number -> Number -> String -> String\n     * @param {Number} fromIndex The start index (inclusive).\n     * @param {Number} toIndex The end index (exclusive).\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n     *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n     *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n     *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n     *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n     */\n    var slice = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n        return Array.prototype.slice.call(list, fromIndex, toIndex);\n    }));\n\n    /**\n     * Splits a collection into slices of the specified length.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @sig Number -> String -> [String]\n     * @param {Number} n\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n     *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n     */\n    var splitEvery = _curry2(function splitEvery(n, list) {\n        if (n <= 0) {\n            throw new Error('First argument to splitEvery must be a positive integer');\n        }\n        var result = [];\n        var idx = 0;\n        while (idx < list.length) {\n            result.push(slice(idx, idx += n, list));\n        }\n        return result;\n    });\n\n    /**\n     * Adds together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The sum of all the numbers in the list.\n     * @see R.reduce\n     * @example\n     *\n     *      R.sum([2,4,6,8,100,1]); //=> 121\n     */\n    var sum = reduce(add, 0);\n\n    /**\n     * Returns all but the first element of the given list or string (or object\n     * with a `tail` method).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.head, R.init, R.last\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.tail([1, 2, 3]);  //=> [2, 3]\n     *      R.tail([1, 2]);     //=> [2]\n     *      R.tail([1]);        //=> []\n     *      R.tail([]);         //=> []\n     *\n     *      R.tail('abc');  //=> 'bc'\n     *      R.tail('ab');   //=> 'b'\n     *      R.tail('a');    //=> ''\n     *      R.tail('');     //=> ''\n     */\n    var tail = _checkForMethod('tail', slice(1, Infinity));\n\n    /**\n     * Returns the first `n` elements of the given list, string, or\n     * transducer/transformer (or object with a `take` method).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {*} list\n     * @return {*}\n     * @see R.drop\n     * @example\n     *\n     *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n     *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n     *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.take(3, 'ramda');               //=> 'ram'\n     *\n     *      var personnel = [\n     *        'Dave Brubeck',\n     *        'Paul Desmond',\n     *        'Eugene Wright',\n     *        'Joe Morello',\n     *        'Gerry Mulligan',\n     *        'Bob Bates',\n     *        'Joe Dodge',\n     *        'Ron Crotty'\n     *      ];\n     *\n     *      var takeFive = R.take(5);\n     *      takeFive(personnel);\n     *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n     */\n    var take = _curry2(_dispatchable('take', _xtake, function take(n, xs) {\n        return slice(0, n < 0 ? Infinity : n, xs);\n    }));\n\n    /**\n     * Returns a new list containing the first `n` elements of a given list, passing each value\n     * to the supplied predicate function, and terminating when the predicate function returns\n     * `false`. Excludes the element that caused the predicate function to fail. The predicate\n     * function is passed one argument: *(value)*.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.dropWhile\n     * @example\n     *\n     *      var isNotFour = function(x) {\n     *        return !(x === 4);\n     *      };\n     *\n     *      R.takeWhile(isNotFour, [1, 2, 3, 4]); //=> [1, 2, 3]\n     */\n    var takeWhile = _curry2(_dispatchable('takeWhile', _xtakeWhile, function takeWhile(fn, list) {\n        var idx = 0, len = list.length;\n        while (idx < len && fn(list[idx])) {\n            idx += 1;\n        }\n        return _slice(list, 0, idx);\n    }));\n\n    /**\n     * Initializes a transducer using supplied iterator function. Returns a single item by\n     * iterating through the list, successively calling the transformed iterator function and\n     * passing it an accumulator value and the current value from the array, and then passing\n     * the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*. It will be wrapped as a\n     * transformer to initialize the transducer. A transformer can be passed directly in place\n     * of an iterator function.  In both cases, iteration may be stopped early with the\n     * `R.reduced` function.\n     *\n     * A transducer is a function that accepts a transformer and returns a transformer and can\n     * be composed directly.\n     *\n     * A transformer is an an object that provides a 2-arity reducing iterator function, step,\n     * 0-arity initial value function, init, and 1-arity result extraction function, result.\n     * The step function is used as the iterator function in reduce. The result function is used\n     * to convert the final accumulator into the return type and in most cases is R.identity.\n     * The init function can be used to provide an initial accumulator, but is ignored by transduce.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.reduce, R.reduced, R.into\n     * @sig (c -> c) -> (a,b -> a) -> a -> [b] -> a\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array. Wrapped as transformer, if necessary, and used to\n     *        initialize the transducer\n     * @param {*} acc The initial accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n     */\n    var transduce = curryN(4, function transduce(xf, fn, acc, list) {\n        return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n    });\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the elements of each list.  Duplication is\n     * determined according to the value returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a,a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @see R.union\n     * @example\n     *\n     *      function cmp(x, y) { return x.a === y.a; }\n     *      var l1 = [{a: 1}, {a: 2}];\n     *      var l2 = [{a: 1}, {a: 4}];\n     *      R.unionWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n     */\n    var unionWith = _curry3(function unionWith(pred, list1, list2) {\n        return uniqWith(pred, _concat(list1, list2));\n    });\n\n    /**\n     * Returns a new list containing only one copy of each element in the original list.\n     * `R.equals` is used to determine equality.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n     *      R.uniq([1, '1']);     //=> [1, '1']\n     *      R.uniq([[42], [42]]); //=> [[42]]\n     */\n    var uniq = uniqWith(equals);\n\n    /**\n     * Returns a new list by pulling every item at the first level of nesting out, and putting\n     * them in a new array.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b]\n     * @param {Array} list The array to consider.\n     * @return {Array} The flattened list.\n     * @see R.flatten\n     * @example\n     *\n     *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n     *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n     */\n    var unnest = _curry1(_makeFlat(false));\n\n    /**\n     * Accepts a function `fn` and any number of transformer functions and returns a new\n     * function. When the new function is invoked, it calls the function `fn` with parameters\n     * consisting of the result of calling each supplied handler on successive arguments to the\n     * new function.\n     *\n     * If more arguments are passed to the returned function than transformer functions, those\n     * arguments are passed directly to `fn` as additional parameters. If you expect additional\n     * arguments that don't need to be transformed, although you can ignore them, it's best to\n     * pass an identity function so that the new function reports the correct arity.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (x1 -> x2 -> ... -> z) -> ((a -> x1), (b -> x2), ...) -> (a -> b -> ... -> z)\n     * @param {Function} fn The function to wrap.\n     * @param {...Function} transformers A variable number of transformer functions\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var double = function(y) { return y * 2; };\n     *      var square = function(x) { return x * x; };\n     *      var add = function(a, b) { return a + b; };\n     *      // Adds any number of arguments together\n     *      var addAll = function() {\n     *        return R.reduce(add, 0, arguments);\n     *      };\n     *\n     *      // Basic example\n     *      var addDoubleAndSquare = R.useWith(addAll, double, square);\n     *\n     *      //≅ addAll(double(10), square(5));\n     *      addDoubleAndSquare(10, 5); //=> 45\n     *\n     *      // Example of passing more arguments than transformers\n     *      //≅ addAll(double(10), square(5), 100);\n     *      addDoubleAndSquare(10, 5, 100); //=> 145\n     *\n     *      // If there are extra _expected_ arguments that don't need to be transformed, although\n     *      // you can ignore them, it might be best to pass in the identity function so that the new\n     *      // function correctly reports arity.\n     *      var addDoubleAndSquareWithExtraParams = R.useWith(addAll, double, square, R.identity);\n     *      // addDoubleAndSquareWithExtraParams.length //=> 3\n     *      //≅ addAll(double(10), square(5), R.identity(100));\n     *      addDoubleAndSquare(10, 5, 100); //=> 145\n     */\n    /*, transformers */\n    var useWith = curry(function useWith(fn) {\n        var transformers = _slice(arguments, 1);\n        var tlen = transformers.length;\n        return curry(_arity(tlen, function () {\n            var args = [], idx = 0;\n            while (idx < tlen) {\n                args[idx] = transformers[idx](arguments[idx]);\n                idx += 1;\n            }\n            return fn.apply(this, args.concat(_slice(arguments, tlen)));\n        }));\n    });\n\n    /**\n     * Takes a spec object and a test object; returns true if the test satisfies\n     * the spec, false otherwise. An object satisfies the spec if, for each of the\n     * spec's own properties, accessing that property of the object gives the same\n     * value (in `R.equals` terms) as accessing that property of the spec.\n     *\n     * `whereEq` is a specialization of [`where`](#where).\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {String: *} -> {String: *} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @see R.where\n     * @example\n     *\n     *      // pred :: Object -> Boolean\n     *      var pred = R.whereEq({a: 1, b: 2});\n     *\n     *      pred({a: 1});              //=> false\n     *      pred({a: 1, b: 2});        //=> true\n     *      pred({a: 1, b: 2, c: 3});  //=> true\n     *      pred({a: 1, b: 1});        //=> false\n     */\n    var whereEq = _curry2(function whereEq(spec, testObj) {\n        return where(mapObj(equals, spec), testObj);\n    });\n\n    var _flatCat = function () {\n        var preservingReduced = function (xf) {\n            return {\n                '@@transducer/init': _xfBase.init,\n                '@@transducer/result': function (result) {\n                    return xf['@@transducer/result'](result);\n                },\n                '@@transducer/step': function (result, input) {\n                    var ret = xf['@@transducer/step'](result, input);\n                    return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n                }\n            };\n        };\n        return function _xcat(xf) {\n            var rxf = preservingReduced(xf);\n            return {\n                '@@transducer/init': _xfBase.init,\n                '@@transducer/result': function (result) {\n                    return rxf['@@transducer/result'](result);\n                },\n                '@@transducer/step': function (result, input) {\n                    return !isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n                }\n            };\n        };\n    }();\n\n    var _indexOf = function _indexOf(list, item, from) {\n        var idx = from;\n        while (idx < list.length) {\n            if (equals(list[idx], item)) {\n                return idx;\n            }\n            idx += 1;\n        }\n        return -1;\n    };\n\n    /**\n     * Create a predicate wrapper which will call a pick function (all/any) for each predicate\n     *\n     * @private\n     * @see R.all\n     * @see R.any\n     */\n    // Call function immediately if given arguments\n    // Return a function which will call the predicates with the provided arguments\n    var _predicateWrap = function _predicateWrap(predPicker) {\n        return function (preds) {\n            var predIterator = function () {\n                var args = arguments;\n                return predPicker(function (predicate) {\n                    return predicate.apply(null, args);\n                }, preds);\n            };\n            return arguments.length > 1 ? // Call function immediately if given arguments\n            predIterator.apply(null, _slice(arguments, 1)) : // Return a function which will call the predicates with the provided arguments\n            _arity(Math.max.apply(Math, pluck('length', preds)), predIterator);\n        };\n    };\n\n    var _xchain = _curry2(function _xchain(f, xf) {\n        return map(f, _flatCat(xf));\n    });\n\n    /**\n     * Given a list of predicates, returns a new predicate that will be true exactly when all of them are.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} list An array of predicate functions\n     * @param {*} optional Any arguments to pass into the predicates\n     * @return {Function} a function that applies its arguments to each of\n     *         the predicates, returning `true` if all are satisfied.\n     * @see R.anyPass\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0};\n     *      var f = R.allPass([gt10, even]);\n     *      f(11); //=> false\n     *      f(12); //=> true\n     */\n    var allPass = _curry1(_predicateWrap(all));\n\n    /**\n     * Given a list of predicates returns a new predicate that will be true exactly when any one of them is.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} list An array of predicate functions\n     * @param {*} optional Any arguments to pass into the predicates\n     * @return {Function} A function that applies its arguments to each of the predicates, returning\n     *         `true` if all are satisfied.\n     * @see R.allPass\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0};\n     *      var f = R.anyPass([gt10, even]);\n     *      f(11); //=> true\n     *      f(8); //=> true\n     *      f(9); //=> false\n     */\n    var anyPass = _curry1(_predicateWrap(any));\n\n    /**\n     * ap applies a list of functions to a list of values.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig [f] -> [a] -> [f a]\n     * @param {Array} fns An array of functions\n     * @param {Array} vs An array of values\n     * @return {Array} An array of results of applying each of `fns` to all of `vs` in turn.\n     * @example\n     *\n     *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n     */\n    var ap = _curry2(function ap(fns, vs) {\n        return _hasMethod('ap', fns) ? fns.ap(vs) : _reduce(function (acc, fn) {\n            return _concat(acc, map(fn, vs));\n        }, [], fns);\n    });\n\n    /**\n     * Returns the result of calling its first argument with the remaining\n     * arguments. This is occasionally useful as a converging function for\n     * `R.converge`: the left branch can produce a function while the right\n     * branch produces a value to be passed to that function as an argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (*... -> a),*... -> a\n     * @param {Function} fn The function to apply to the remaining arguments.\n     * @param {...*} args Any number of positional arguments.\n     * @return {*}\n     * @see R.apply\n     * @example\n     *\n     *      var indentN = R.pipe(R.times(R.always(' ')),\n     *                           R.join(''),\n     *                           R.replace(/^(?!$)/gm));\n     *\n     *      var format = R.converge(R.call,\n     *                              R.pipe(R.prop('indent'), indentN),\n     *                              R.prop('value'));\n     *\n     *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n     */\n    var call = curry(function call(fn) {\n        return fn.apply(this, _slice(arguments, 1));\n    });\n\n    /**\n     * `chain` maps a function over a list and concatenates the results.\n     * This implementation is compatible with the\n     * Fantasy-land Chain spec, and will work with types that implement that spec.\n     * `chain` is also known as `flatMap` in some libraries\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> [b]) -> [a] -> [b]\n     * @param {Function} fn\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      var duplicate = function(n) {\n     *        return [n, n];\n     *      };\n     *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n     */\n    var chain = _curry2(_dispatchable('chain', _xchain, function chain(fn, list) {\n        return unnest(map(fn, list));\n    }));\n\n    /**\n     * Turns a list of Functors into a Functor of a list, applying\n     * a mapping function to the elements of the list along the way.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.commute\n     * @sig Functor f => (f a -> f b) -> (x -> f x) -> [f a] -> f [b]\n     * @param {Function} fn The transformation function\n     * @param {Function} of A function that returns the data type to return\n     * @param {Array} list An array of functors of the same type\n     * @return {*}\n     * @example\n     *\n     *      R.commuteMap(R.map(R.add(10)), R.of, [[1], [2, 3]]);   //=> [[11, 12], [11, 13]]\n     *      R.commuteMap(R.map(R.add(10)), R.of, [[1, 2], [3]]);   //=> [[11, 13], [12, 13]]\n     *      R.commuteMap(R.map(R.add(10)), R.of, [[1], [2], [3]]); //=> [[11, 12, 13]]\n     *      R.commuteMap(R.map(R.add(10)), Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([11, 12, 13])\n     *      R.commuteMap(R.map(R.add(10)), Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n     */\n    var commuteMap = _curry3(function commuteMap(fn, of, list) {\n        function consF(acc, ftor) {\n            return ap(map(append, fn(ftor)), acc);\n        }\n        return _reduce(consF, of([]), list);\n    });\n\n    /**\n     * Wraps a constructor function inside a curried function that can be called with the same\n     * arguments and returns the same type. The arity of the function returned is specified\n     * to allow using variadic constructor functions.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (* -> {*}) -> (* -> {*})\n     * @param {Number} n The arity of the constructor function.\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Variadic constructor function\n     *      var Widget = function() {\n     *        this.children = Array.prototype.slice.call(arguments);\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = [\n     *        // ...\n     *      ];\n     *      R.map(R.constructN(1, Widget), allConfigs); // a list of Widgets\n     */\n    var constructN = _curry2(function constructN(n, Fn) {\n        if (n > 10) {\n            throw new Error('Constructor with greater than ten arguments');\n        }\n        if (n === 0) {\n            return function () {\n                return new Fn();\n            };\n        }\n        return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n            switch (arguments.length) {\n            case 1:\n                return new Fn($0);\n            case 2:\n                return new Fn($0, $1);\n            case 3:\n                return new Fn($0, $1, $2);\n            case 4:\n                return new Fn($0, $1, $2, $3);\n            case 5:\n                return new Fn($0, $1, $2, $3, $4);\n            case 6:\n                return new Fn($0, $1, $2, $3, $4, $5);\n            case 7:\n                return new Fn($0, $1, $2, $3, $4, $5, $6);\n            case 8:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n            case 9:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n            case 10:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n            }\n        }));\n    });\n\n    /**\n     * Accepts at least three functions and returns a new function. When invoked, this new\n     * function will invoke the first function, `after`, passing as its arguments the\n     * results of invoking the subsequent functions with whatever arguments are passed to\n     * the new function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (x1 -> x2 -> ... -> z) -> ((a -> b -> ... -> x1), (a -> b -> ... -> x2), ...) -> (a -> b -> ... -> z)\n     * @param {Function} after A function. `after` will be invoked with the return values of\n     *        `fn1` and `fn2` as its arguments.\n     * @param {...Function} functions A variable number of functions.\n     * @return {Function} A new function.\n     * @example\n     *\n     *      var add = function(a, b) { return a + b; };\n     *      var multiply = function(a, b) { return a * b; };\n     *      var subtract = function(a, b) { return a - b; };\n     *\n     *      //≅ multiply( add(1, 2), subtract(1, 2) );\n     *      R.converge(multiply, add, subtract)(1, 2); //=> -3\n     *\n     *      var add3 = function(a, b, c) { return a + b + c; };\n     *      R.converge(add3, multiply, add, subtract)(1, 2); //=> 4\n     */\n    var converge = curryN(3, function converge(after) {\n        var fns = _slice(arguments, 1);\n        return curryN(Math.max.apply(Math, pluck('length', fns)), function () {\n            var args = arguments;\n            var context = this;\n            return after.apply(context, _map(function (fn) {\n                return fn.apply(context, args);\n            }, fns));\n        });\n    });\n\n    /**\n     * Returns all but the first `n` elements of the given list, string, or\n     * transducer/transformer (or object with a `drop` method).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.transduce\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {*} list\n     * @return {*}\n     * @see R.take\n     * @example\n     *\n     *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n     *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n     *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n     *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n     *      R.drop(3, 'ramda');               //=> 'da'\n     */\n    var drop = _curry2(_dispatchable('drop', _xdrop, function drop(n, xs) {\n        return slice(Math.max(0, n), Infinity, xs);\n    }));\n\n    /**\n     * Returns a list containing all but the last `n` elements of the given `list`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n The number of elements of `xs` to skip.\n     * @param {Array} xs The collection to consider.\n     * @return {Array}\n     * @see R.takeLast\n     * @example\n     *\n     *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n     *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n     *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n     *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n     *      R.dropLast(3, 'ramda');               //=> 'ra'\n     */\n    var dropLast = _curry2(function dropLast(n, xs) {\n        return take(n < xs.length ? xs.length - n : 0, xs);\n    });\n\n    /**\n     * Returns a new list without any consecutively repeating elements. Equality is\n     * determined by applying the supplied predicate two consecutive elements.\n     * The first element in a series of equal element is the one being preserved.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} `list` without repeating elements.\n     * @example\n     *\n     *      function lengthEq(x, y) { return Math.abs(x) === Math.abs(y); };\n     *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n     *      R.dropRepeatsWith(lengthEq, l); //=> [1, 3, 4, -5, 3]\n     */\n    var dropRepeatsWith = _curry2(_dispatchable('dropRepeatsWith', _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n        var result = [];\n        var idx = 1;\n        var len = list.length;\n        if (len !== 0) {\n            result[0] = list[0];\n            while (idx < len) {\n                if (!pred(last(result), list[idx])) {\n                    result[result.length] = list[idx];\n                }\n                idx += 1;\n            }\n        }\n        return result;\n    }));\n\n    /**\n     * Reports whether two objects have the same value, in `R.equals` terms,\n     * for the specified property. Useful as a curried predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig k -> {k: v} -> {k: v} -> Boolean\n     * @param {String} prop The name of the property to compare\n     * @param {Object} obj1\n     * @param {Object} obj2\n     * @return {Boolean}\n     *\n     * @example\n     *\n     *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n     *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n     *      R.eqProps('a', o1, o2); //=> false\n     *      R.eqProps('c', o1, o2); //=> true\n     */\n    var eqProps = _curry3(function eqProps(prop, obj1, obj2) {\n        return equals(obj1[prop], obj2[prop]);\n    });\n\n    /**\n     * Returns the position of the first occurrence of an item in an array,\n     * or -1 if the item is not included in the array. `R.equals` is used to\n     * determine equality.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} xs The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     * @see R.lastIndexOf\n     * @example\n     *\n     *      R.indexOf(3, [1,2,3,4]); //=> 2\n     *      R.indexOf(10, [1,2,3,4]); //=> -1\n     */\n    var indexOf = _curry2(function indexOf(target, xs) {\n        return _hasMethod('indexOf', xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n    });\n\n    /**\n     * Returns all but the last element of the given list or string.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.last, R.head, R.tail\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.init([1, 2, 3]);  //=> [1, 2]\n     *      R.init([1, 2]);     //=> [1]\n     *      R.init([1]);        //=> []\n     *      R.init([]);         //=> []\n     *\n     *      R.init('abc');  //=> 'ab'\n     *      R.init('ab');   //=> 'a'\n     *      R.init('a');    //=> ''\n     *      R.init('');     //=> ''\n     */\n    var init = slice(0, -1);\n\n    /**\n     * Returns `true` if all elements are unique, in `R.equals` terms,\n     * otherwise `false`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> Boolean\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if all elements are unique, else `false`.\n     * @example\n     *\n     *      R.isSet(['1', 1]); //=> true\n     *      R.isSet([1, 1]);   //=> false\n     *      R.isSet([[42], [42]]); //=> false\n     */\n    var isSet = _curry1(function isSet(list) {\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            if (_indexOf(list, list[idx], idx + 1) >= 0) {\n                return false;\n            }\n            idx += 1;\n        }\n        return true;\n    });\n\n    /**\n     * Returns a lens for the given getter and setter functions. The getter \"gets\"\n     * the value of the focus; the setter \"sets\" the value of the focus. The setter\n     * should not mutate the data structure.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n     * @param {Function} getter\n     * @param {Function} setter\n     * @return {Lens}\n     * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n     *\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n     */\n    var lens = _curry2(function lens(getter, setter) {\n        return function (f) {\n            return function (s) {\n                return map(function (v) {\n                    return setter(v, s);\n                }, f(getter(s)));\n            };\n        };\n    });\n\n    /**\n     * Returns a lens whose focus is the specified index.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Number -> Lens s a\n     * @param {Number} n\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var headLens = R.lensIndex(0);\n     *\n     *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n     *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n     *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n     */\n    var lensIndex = _curry1(function lensIndex(n) {\n        return lens(nth(n), update(n));\n    });\n\n    /**\n     * Returns a lens whose focus is the specified property.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig String -> Lens s a\n     * @param {String} k\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n     */\n    var lensProp = _curry1(function lensProp(k) {\n        return lens(prop(k), assoc(k));\n    });\n\n    /**\n     * \"lifts\" a function to be the specified arity, so that it may \"map over\" that many\n     * lists (or other Functors).\n     *\n     * @func\n     * @memberOf R\n     * @see R.lift\n     * @category Function\n     * @sig Number -> (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The function `fn` applicable to mappable objects.\n     * @example\n     *\n     *      var madd3 = R.liftN(3, R.curryN(3, function() {\n     *        return R.reduce(R.add, 0, arguments);\n     *      }));\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     */\n    var liftN = _curry2(function liftN(arity, fn) {\n        var lifted = curryN(arity, fn);\n        return curryN(arity, function () {\n            return _reduce(ap, map(lifted, arguments[0]), _slice(arguments, 1));\n        });\n    });\n\n    /**\n     * Returns the mean of the given list of numbers.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list\n     * @return {Number}\n     * @example\n     *\n     *      R.mean([2, 7, 9]); //=> 6\n     *      R.mean([]); //=> NaN\n     */\n    var mean = _curry1(function mean(list) {\n        return sum(list) / list.length;\n    });\n\n    /**\n     * Returns the median of the given list of numbers.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list\n     * @return {Number}\n     * @example\n     *\n     *      R.median([2, 9, 7]); //=> 7\n     *      R.median([7, 2, 10, 9]); //=> 8\n     *      R.median([]); //=> NaN\n     */\n    var median = _curry1(function median(list) {\n        var len = list.length;\n        if (len === 0) {\n            return NaN;\n        }\n        var width = 2 - len % 2;\n        var idx = (len - width) / 2;\n        return mean(_slice(list).sort(function (a, b) {\n            return a < b ? -1 : a > b ? 1 : 0;\n        }).slice(idx, idx + width));\n    });\n\n    /**\n     * Merges a list of objects together into one object.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [{k: v}] -> {k: v}\n     * @param {Array} list An array of objects\n     * @return {Object} A merged object.\n     * @see R.reduce\n     * @example\n     *\n     *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n     *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n     */\n    var mergeAll = _curry1(function mergeAll(list) {\n        return reduce(merge, {}, list);\n    });\n\n    /**\n     * Performs left-to-right function composition. The leftmost function may have\n     * any arity; the remaining functions must be unary.\n     *\n     * In some libraries this function is named `sequence`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> (a -> b -> ... -> n -> z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.compose\n     * @example\n     *\n     *      var f = R.pipe(Math.pow, R.negate, R.inc);\n     *\n     *      f(3, 4); // -(3^4) + 1\n     */\n    var pipe = function pipe() {\n        if (arguments.length === 0) {\n            throw new Error('pipe requires at least one argument');\n        }\n        return curryN(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n    };\n\n    /**\n     * Performs left-to-right composition of one or more Promise-returning\n     * functions. The leftmost function may have any arity; the remaining\n     * functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.composeP\n     * @example\n     *\n     *      //  followersForUser :: String -> Promise [User]\n     *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n     */\n    var pipeP = function pipeP() {\n        if (arguments.length === 0) {\n            throw new Error('pipeP requires at least one argument');\n        }\n        return curryN(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n    };\n\n    /**\n     * Multiplies together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The product of all the numbers in the list.\n     * @see R.reduce\n     * @example\n     *\n     *      R.product([2,4,6,8,100,1]); //=> 38400\n     */\n    var product = reduce(multiply, 1);\n\n    /**\n     * Reasonable analog to SQL `select` statement.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @category Relation\n     * @sig [k] -> [{k: v}] -> [{k: v}]\n     * @param {Array} props The property names to project\n     * @param {Array} objs The objects to query\n     * @return {Array} An array of objects with just the `props` properties.\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n     *      var kids = [abby, fred];\n     *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n     */\n    // passing `identity` gives correct arity\n    var project = useWith(_map, pickAll, identity);\n\n    /**\n     * Returns a new list containing the last `n` elements of the given list.\n     * If `n > list.length`, returns a list of `list.length` elements.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n The number of elements to return.\n     * @param {Array} xs The collection to consider.\n     * @return {Array}\n     * @see R.dropLast\n     * @example\n     *\n     *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n     *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['for', 'baz']\n     *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.takeLast(3, 'ramda');               //=> 'mda'\n     */\n    var takeLast = _curry2(function takeLast(n, xs) {\n        return drop(n >= 0 ? xs.length - n : 0, xs);\n    });\n\n    var _contains = function _contains(a, list) {\n        return _indexOf(list, a, 0) >= 0;\n    };\n\n    //  mapPairs :: (Object, [String]) -> [String]\n    // Function, RegExp, user-defined types\n    var _toString = function _toString(x, seen) {\n        var recur = function recur(y) {\n            var xs = seen.concat([x]);\n            return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n        };\n        //  mapPairs :: (Object, [String]) -> [String]\n        var mapPairs = function (obj, keys) {\n            return _map(function (k) {\n                return _quote(k) + ': ' + recur(obj[k]);\n            }, keys.slice().sort());\n        };\n        switch (Object.prototype.toString.call(x)) {\n        case '[object Arguments]':\n            return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n        case '[object Array]':\n            return '[' + _map(recur, x).concat(mapPairs(x, reject(test(/^\\d+$/), keys(x)))).join(', ') + ']';\n        case '[object Boolean]':\n            return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n        case '[object Date]':\n            return 'new Date(' + _quote(_toISOString(x)) + ')';\n        case '[object Null]':\n            return 'null';\n        case '[object Number]':\n            return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n        case '[object String]':\n            return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n        case '[object Undefined]':\n            return 'undefined';\n        default:\n            return typeof x.constructor === 'function' && x.constructor.name !== 'Object' && typeof x.toString === 'function' && x.toString() !== '[object Object]' ? x.toString() : // Function, RegExp, user-defined types\n            '{' + mapPairs(x, keys(x)).join(', ') + '}';\n        }\n    };\n\n    /**\n     * Turns a list of Functors into a Functor of a list.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.commuteMap\n     * @sig Functor f => (x -> f x) -> [f a] -> f [a]\n     * @param {Function} of A function that returns the data type to return\n     * @param {Array} list An array of functors of the same type\n     * @return {*}\n     * @example\n     *\n     *      R.commute(R.of, [[1], [2, 3]]);   //=> [[1, 2], [1, 3]]\n     *      R.commute(R.of, [[1, 2], [3]]);   //=> [[1, 3], [2, 3]]\n     *      R.commute(R.of, [[1], [2], [3]]); //=> [[1, 2, 3]]\n     *      R.commute(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n     *      R.commute(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n     */\n    var commute = commuteMap(identity);\n\n    /**\n     * Performs right-to-left function composition. The rightmost function may have\n     * any arity; the remaining functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> (a -> b -> ... -> n -> z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.pipe\n     * @example\n     *\n     *      var f = R.compose(R.inc, R.negate, Math.pow);\n     *\n     *      f(3, 4); // -(3^4) + 1\n     */\n    var compose = function compose() {\n        if (arguments.length === 0) {\n            throw new Error('compose requires at least one argument');\n        }\n        return pipe.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Returns the right-to-left Kleisli composition of the provided functions,\n     * each of which must return a value of a type supported by [`chain`](#chain).\n     *\n     * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @see R.pipeK\n     * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (m a -> m z)\n     * @param {...Function}\n     * @return {Function}\n     * @example\n     *\n     *      //  parseJson :: String -> Maybe *\n     *      //  get :: String -> Object -> Maybe *\n     *\n     *      //  getStateCode :: Maybe String -> Maybe String\n     *      var getStateCode = R.composeK(\n     *        R.compose(Maybe.of, R.toUpper),\n     *        get('state'),\n     *        get('address'),\n     *        get('user'),\n     *        parseJson\n     *      );\n     *\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n     *      //=> Just('NY')\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\n     *      //=> Nothing()\n     */\n    var composeK = function composeK() {\n        return arguments.length === 0 ? identity : compose.apply(this, map(chain, arguments));\n    };\n\n    /**\n     * Performs right-to-left composition of one or more Promise-returning\n     * functions. The rightmost function may have any arity; the remaining\n     * functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.pipeP\n     * @example\n     *\n     *      //  followersForUser :: String -> Promise [User]\n     *      var followersForUser = R.composeP(db.getFollowers, db.getUserById);\n     */\n    var composeP = function composeP() {\n        if (arguments.length === 0) {\n            throw new Error('composeP requires at least one argument');\n        }\n        return pipeP.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Wraps a constructor function inside a curried function that can be called with the same\n     * arguments and returns the same type.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> {*}) -> (* -> {*})\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Constructor function\n     *      var Widget = function(config) {\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = [\n     *        // ...\n     *      ];\n     *      R.map(R.construct(Widget), allConfigs); // a list of Widgets\n     */\n    var construct = _curry1(function construct(Fn) {\n        return constructN(Fn.length, Fn);\n    });\n\n    /**\n     * Returns `true` if the specified value is equal, in `R.equals` terms,\n     * to at least one element of the given list; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> Boolean\n     * @param {Object} a The item to compare against.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the item is in the list, `false` otherwise.\n     *\n     * @example\n     *\n     *      R.contains(3, [1, 2, 3]); //=> true\n     *      R.contains(4, [1, 2, 3]); //=> false\n     *      R.contains([42], [[42]]); //=> true\n     */\n    var contains = _curry2(_contains);\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not contained in the second list.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @see R.differenceWith\n     * @example\n     *\n     *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n     *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n     */\n    var difference = _curry2(function difference(first, second) {\n        var out = [];\n        var idx = 0;\n        var firstLen = first.length;\n        while (idx < firstLen) {\n            if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n                out[out.length] = first[idx];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new list without any consecutively repeating elements.\n     * `R.equals` is used to determine equality.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} `list` without repeating elements.\n     * @example\n     *\n     *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n     */\n    var dropRepeats = _curry1(_dispatchable('dropRepeats', _xdropRepeatsWith(equals), dropRepeatsWith(equals)));\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those elements common to both lists.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @see R.intersectionWith\n     * @return {Array} The list of elements found in both `list1` and `list2`.\n     * @example\n     *\n     *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n     */\n    var intersection = _curry2(function intersection(list1, list2) {\n        return uniq(_filter(flip(_contains)(list1), list2));\n    });\n\n    /**\n     * \"lifts\" a function of arity > 1 so that it may \"map over\" an Array or\n     * other Functor.\n     *\n     * @func\n     * @memberOf R\n     * @see R.liftN\n     * @category Function\n     * @sig (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The function `fn` applicable to mappable objects.\n     * @example\n     *\n     *      var madd3 = R.lift(R.curry(function(a, b, c) {\n     *        return a + b + c;\n     *      }));\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     *\n     *      var madd5 = R.lift(R.curry(function(a, b, c, d, e) {\n     *        return a + b + c + d + e;\n     *      }));\n     *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n     */\n    var lift = _curry1(function lift(fn) {\n        return liftN(fn.length, fn);\n    });\n\n    /**\n     * Returns a partial copy of an object omitting the keys specified.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> {String: *} -> {String: *}\n     * @param {Array} names an array of String property names to omit from the new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with properties from `names` not on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n     */\n    var omit = _curry2(function omit(names, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (!_contains(prop, names)) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns the left-to-right Kleisli composition of the provided functions,\n     * each of which must return a value of a type supported by [`chain`](#chain).\n     *\n     * `R.pipeK(f, g, h)` is equivalent to `R.pipe(R.chain(f), R.chain(g), R.chain(h))`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @see R.composeK\n     * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (m a -> m z)\n     * @param {...Function}\n     * @return {Function}\n     * @example\n     *\n     *      //  parseJson :: String -> Maybe *\n     *      //  get :: String -> Object -> Maybe *\n     *\n     *      //  getStateCode :: Maybe String -> Maybe String\n     *      var getStateCode = R.pipeK(\n     *        parseJson,\n     *        get('user'),\n     *        get('address'),\n     *        get('state'),\n     *        R.compose(Maybe.of, R.toUpper)\n     *      );\n     *\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n     *      //=> Just('NY')\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\n     *      //=> Nothing()\n     */\n    var pipeK = function pipeK() {\n        return composeK.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Returns the string representation of the given value. `eval`'ing the output\n     * should result in a value equivalent to the input value. Many of the built-in\n     * `toString` methods do not satisfy this requirement.\n     *\n     * If the given value is an `[object Object]` with a `toString` method other\n     * than `Object.prototype.toString`, this method is invoked with no arguments\n     * to produce the return value. This means user-defined constructor functions\n     * can provide a suitable `toString` method. For example:\n     *\n     *     function Point(x, y) {\n     *       this.x = x;\n     *       this.y = y;\n     *     }\n     *\n     *     Point.prototype.toString = function() {\n     *       return 'new Point(' + this.x + ', ' + this.y + ')';\n     *     };\n     *\n     *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig * -> String\n     * @param {*} val\n     * @return {String}\n     * @example\n     *\n     *      R.toString(42); //=> '42'\n     *      R.toString('abc'); //=> '\"abc\"'\n     *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n     *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n     *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n     */\n    var toString = _curry1(function toString(val) {\n        return _toString(val, []);\n    });\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the\n     * elements of each list.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @example\n     *\n     *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n     */\n    var union = _curry2(compose(uniq, _concat));\n\n    /**\n     * Returns a new list containing only one copy of each element in the\n     * original list, based upon the value returned by applying the supplied\n     * function to each list element. Prefers the first item if the supplied\n     * function produces the same value on two items. `R.equals` is used for\n     * comparison.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> b) -> [a] -> [a]\n     * @param {Function} fn A function used to produce a value to use during comparisons.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n     */\n    var uniqBy = _curry2(function uniqBy(fn, list) {\n        var idx = 0, applied = [], result = [], appliedItem, item;\n        while (idx < list.length) {\n            item = list[idx];\n            appliedItem = fn(item);\n            if (!_contains(appliedItem, applied)) {\n                result.push(item);\n                applied.push(appliedItem);\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Turns a named method with a specified arity into a function\n     * that can be called directly supplied with arguments and a target object.\n     *\n     * The returned function is curried and accepts `arity + 1` parameters where\n     * the final parameter is the target object.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n     * @param {Number} arity Number of arguments the returned function should take\n     *        before the target object.\n     * @param {Function} method Name of the method to call.\n     * @return {Function} A new curried function.\n     * @example\n     *\n     *      var sliceFrom = R.invoker(1, 'slice');\n     *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n     *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n     *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n     */\n    var invoker = _curry2(function invoker(arity, method) {\n        return curryN(arity + 1, function () {\n            var target = arguments[arity];\n            if (target != null && is(Function, target[method])) {\n                return target[method].apply(target, _slice(arguments, 0, arity));\n            }\n            throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n        });\n    });\n\n    /**\n     * Returns a string made by inserting the `separator` between each\n     * element and concatenating all the elements into a single string.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig String -> [a] -> String\n     * @param {Number|String} separator The string used to separate the elements.\n     * @param {Array} xs The elements to join into a string.\n     * @return {String} str The string made by concatenating `xs` with `separator`.\n     * @see R.split\n     * @example\n     *\n     *      var spacer = R.join(' ');\n     *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n     *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n     */\n    var join = invoker(1, 'join');\n\n    /**\n     * Creates a new function that, when invoked, caches the result of calling `fn` for a given\n     * argument set and returns the result. Subsequent calls to the memoized `fn` with the same\n     * argument set will not result in an additional call to `fn`; instead, the cached result\n     * for that set of arguments will be returned.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (*... -> a) -> (*... -> a)\n     * @param {Function} fn The function to memoize.\n     * @return {Function} Memoized version of `fn`.\n     * @example\n     *\n     *      var count = 0;\n     *      var factorial = R.memoize(function(n) {\n     *        count += 1;\n     *        return R.product(R.range(1, n + 1));\n     *      });\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      count; //=> 1\n     */\n    var memoize = _curry1(function memoize(fn) {\n        var cache = {};\n        return function () {\n            var key = toString(arguments);\n            if (!_has(key, cache)) {\n                cache[key] = fn.apply(this, arguments);\n            }\n            return cache[key];\n        };\n    });\n\n    /**\n     * Splits a string into an array of strings based on the given\n     * separator.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String -> [String]\n     * @param {String} sep The separator string.\n     * @param {String} str The string to separate into an array.\n     * @return {Array} The array of strings from `str` separated by `str`.\n     * @see R.join\n     * @example\n     *\n     *      var pathComponents = R.split('/');\n     *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n     *\n     *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n     */\n    var split = invoker(1, 'split');\n\n    /**\n     * The lower case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to lower case.\n     * @return {String} The lower case version of `str`.\n     * @see R.toUpper\n     * @example\n     *\n     *      R.toLower('XYZ'); //=> 'xyz'\n     */\n    var toLower = invoker(0, 'toLowerCase');\n\n    /**\n     * The upper case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to upper case.\n     * @return {String} The upper case version of `str`.\n     * @see R.toLower\n     * @example\n     *\n     *      R.toUpper('abc'); //=> 'ABC'\n     */\n    var toUpper = invoker(0, 'toUpperCase');\n\n    var R = {\n        F: F,\n        T: T,\n        __: __,\n        add: add,\n        addIndex: addIndex,\n        adjust: adjust,\n        all: all,\n        allPass: allPass,\n        always: always,\n        and: and,\n        any: any,\n        anyPass: anyPass,\n        ap: ap,\n        aperture: aperture,\n        append: append,\n        apply: apply,\n        assoc: assoc,\n        assocPath: assocPath,\n        binary: binary,\n        bind: bind,\n        both: both,\n        call: call,\n        chain: chain,\n        clone: clone,\n        commute: commute,\n        commuteMap: commuteMap,\n        comparator: comparator,\n        complement: complement,\n        compose: compose,\n        composeK: composeK,\n        composeP: composeP,\n        concat: concat,\n        cond: cond,\n        construct: construct,\n        constructN: constructN,\n        contains: contains,\n        containsWith: containsWith,\n        converge: converge,\n        countBy: countBy,\n        createMapEntry: createMapEntry,\n        curry: curry,\n        curryN: curryN,\n        dec: dec,\n        defaultTo: defaultTo,\n        difference: difference,\n        differenceWith: differenceWith,\n        dissoc: dissoc,\n        dissocPath: dissocPath,\n        divide: divide,\n        drop: drop,\n        dropLast: dropLast,\n        dropLastWhile: dropLastWhile,\n        dropRepeats: dropRepeats,\n        dropRepeatsWith: dropRepeatsWith,\n        dropWhile: dropWhile,\n        either: either,\n        empty: empty,\n        eqProps: eqProps,\n        equals: equals,\n        evolve: evolve,\n        filter: filter,\n        find: find,\n        findIndex: findIndex,\n        findLast: findLast,\n        findLastIndex: findLastIndex,\n        flatten: flatten,\n        flip: flip,\n        forEach: forEach,\n        fromPairs: fromPairs,\n        functions: functions,\n        functionsIn: functionsIn,\n        groupBy: groupBy,\n        gt: gt,\n        gte: gte,\n        has: has,\n        hasIn: hasIn,\n        head: head,\n        identical: identical,\n        identity: identity,\n        ifElse: ifElse,\n        inc: inc,\n        indexOf: indexOf,\n        init: init,\n        insert: insert,\n        insertAll: insertAll,\n        intersection: intersection,\n        intersectionWith: intersectionWith,\n        intersperse: intersperse,\n        into: into,\n        invert: invert,\n        invertObj: invertObj,\n        invoker: invoker,\n        is: is,\n        isArrayLike: isArrayLike,\n        isEmpty: isEmpty,\n        isNil: isNil,\n        isSet: isSet,\n        join: join,\n        keys: keys,\n        keysIn: keysIn,\n        last: last,\n        lastIndexOf: lastIndexOf,\n        length: length,\n        lens: lens,\n        lensIndex: lensIndex,\n        lensProp: lensProp,\n        lift: lift,\n        liftN: liftN,\n        lt: lt,\n        lte: lte,\n        map: map,\n        mapAccum: mapAccum,\n        mapAccumRight: mapAccumRight,\n        mapObj: mapObj,\n        mapObjIndexed: mapObjIndexed,\n        match: match,\n        mathMod: mathMod,\n        max: max,\n        maxBy: maxBy,\n        mean: mean,\n        median: median,\n        memoize: memoize,\n        merge: merge,\n        mergeAll: mergeAll,\n        min: min,\n        minBy: minBy,\n        modulo: modulo,\n        multiply: multiply,\n        nAry: nAry,\n        negate: negate,\n        none: none,\n        not: not,\n        nth: nth,\n        nthArg: nthArg,\n        nthChar: nthChar,\n        nthCharCode: nthCharCode,\n        of: of,\n        omit: omit,\n        once: once,\n        or: or,\n        over: over,\n        partial: partial,\n        partialRight: partialRight,\n        partition: partition,\n        path: path,\n        pathEq: pathEq,\n        pick: pick,\n        pickAll: pickAll,\n        pickBy: pickBy,\n        pipe: pipe,\n        pipeK: pipeK,\n        pipeP: pipeP,\n        pluck: pluck,\n        prepend: prepend,\n        product: product,\n        project: project,\n        prop: prop,\n        propEq: propEq,\n        propIs: propIs,\n        propOr: propOr,\n        propSatisfies: propSatisfies,\n        props: props,\n        range: range,\n        reduce: reduce,\n        reduceRight: reduceRight,\n        reduced: reduced,\n        reject: reject,\n        remove: remove,\n        repeat: repeat,\n        replace: replace,\n        reverse: reverse,\n        scan: scan,\n        set: set,\n        slice: slice,\n        sort: sort,\n        sortBy: sortBy,\n        split: split,\n        splitEvery: splitEvery,\n        subtract: subtract,\n        sum: sum,\n        tail: tail,\n        take: take,\n        takeLast: takeLast,\n        takeLastWhile: takeLastWhile,\n        takeWhile: takeWhile,\n        tap: tap,\n        test: test,\n        times: times,\n        toLower: toLower,\n        toPairs: toPairs,\n        toPairsIn: toPairsIn,\n        toString: toString,\n        toUpper: toUpper,\n        transduce: transduce,\n        trim: trim,\n        type: type,\n        unapply: unapply,\n        unary: unary,\n        uncurryN: uncurryN,\n        unfold: unfold,\n        union: union,\n        unionWith: unionWith,\n        uniq: uniq,\n        uniqBy: uniqBy,\n        uniqWith: uniqWith,\n        unnest: unnest,\n        update: update,\n        useWith: useWith,\n        values: values,\n        valuesIn: valuesIn,\n        view: view,\n        where: where,\n        whereEq: whereEq,\n        wrap: wrap,\n        xprod: xprod,\n        zip: zip,\n        zipObj: zipObj,\n        zipWith: zipWith\n    };\n\n  /* TEST_ENTRY_POINT */\n\n  if (true) {\n    module.exports = R;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function() { return R; });\n  } else {\n    this.R = R;\n  }\n\n}.call(this));\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getNative = __webpack_require__(12),\n    root = __webpack_require__(7);\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is loosely based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar eq = __webpack_require__(66);\n\n/**\n * Gets the index at which the first occurrence of `key` is found in `array`\n * of key-value pairs.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getNative = __webpack_require__(12);\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module, global) {var checkGlobal = __webpack_require__(75);\n\n/** Used to determine if values are of the language type `Object`. */\nvar objectTypes = {\n  'function': true,\n  'object': true\n};\n\n/** Detect free variable `exports`. */\nvar freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType) ? exports : null;\n\n/** Detect free variable `module`. */\nvar freeModule = (objectTypes[typeof module] && module && !module.nodeType) ? module : null;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);\n\n/** Detect free variable `self`. */\nvar freeSelf = checkGlobal(objectTypes[typeof self] && self);\n\n/** Detect free variable `window`. */\nvar freeWindow = checkGlobal(objectTypes[typeof window] && window);\n\n/** Detect `this` as the global object. */\nvar thisGlobal = checkGlobal(objectTypes[typeof this] && this);\n\n/**\n * Used as a reference to the global object.\n *\n * The `this` value is used if it's the global object to avoid Greasemonkey's\n * restricted `window` object, otherwise the `window` object is used.\n */\nvar root = freeGlobal || ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) || freeSelf || thisGlobal || Function('return this')();\n\nmodule.exports = root;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(74)(module), __webpack_require__(15)))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'number' || type == 'boolean' ||\n    (type == 'string' && value !== '__proto__') || value == null;\n}\n\nmodule.exports = isKeyable;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\nmodule.exports = isHostObject;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseHas = __webpack_require__(18),\n    baseKeys = __webpack_require__(55),\n    indexKeys = __webpack_require__(56),\n    isArrayLike = __webpack_require__(20),\n    isIndex = __webpack_require__(24),\n    isPrototype = __webpack_require__(60);\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  var isProto = isPrototype(object);\n  if (!(isProto || isArrayLike(object))) {\n    return baseKeys(object);\n  }\n  var indexes = indexKeys(object),\n      skipIndexes = !!indexes,\n      result = indexes || [],\n      length = result.length;\n\n  for (var key in object) {\n    if (baseHas(object, key) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n        !(isProto && key == 'constructor')) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keys;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isNative = __webpack_require__(73);\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = __webpack_require__(1);\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (typeof value == 'number') {\n    return true;\n  }\n  return !isArray(value) &&\n    (reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n      (object != null && value in Object(object)));\n}\n\nmodule.exports = isKey;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar asap = __webpack_require__(42);\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.default = map2tree;\n\nvar _isArray = __webpack_require__(1);\n\nvar _isArray2 = _interopRequireDefault(_isArray);\n\nvar _isPlainObject = __webpack_require__(50);\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _mapValues = __webpack_require__(51);\n\nvar _mapValues2 = _interopRequireDefault(_mapValues);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction visit(parent, visitFn, childrenFn) {\n  if (!parent) return;\n\n  visitFn(parent);\n\n  var children = childrenFn(parent);\n  if (children) {\n    var count = children.length;\n    for (var i = 0; i < count; i++) {\n      visit(children[i], visitFn, childrenFn);\n    }\n  }\n}\n\nfunction getNode(tree, key) {\n  var node = null;\n\n  visit(tree, function (d) {\n    if (d.name === key) {\n      node = d;\n    }\n  }, function (d) {\n    return d.children;\n  });\n\n  return node;\n}\n\nfunction map2tree(root) {\n  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n  var tree = arguments.length <= 2 || arguments[2] === undefined ? { name: options.key || 'state', children: [] } : arguments[2];\n\n  if (!(0, _isPlainObject2.default)(root) && root && !root.toJS) {\n    return {};\n  }\n\n  var _options$key = options.key;\n  var rootNodeKey = _options$key === undefined ? 'state' : _options$key;\n  var _options$pushMethod = options.pushMethod;\n  var pushMethod = _options$pushMethod === undefined ? 'push' : _options$pushMethod;\n\n  var currentNode = getNode(tree, rootNodeKey);\n\n  if (currentNode === null) {\n    return {};\n  }\n\n  (0, _mapValues2.default)(root && root.toJS ? root.toJS() : root, function (maybeImmutable, key) {\n    var value = maybeImmutable && maybeImmutable.toJS ? maybeImmutable.toJS() : maybeImmutable;\n    var newNode = { name: key };\n\n    if ((0, _isArray2.default)(value)) {\n      newNode.children = [];\n\n      for (var i = 0; i < value.length; i++) {\n        var _newNode$children$pus;\n\n        newNode.children[pushMethod]((_newNode$children$pus = {\n          name: key + '[' + i + ']'\n        }, _newNode$children$pus[(0, _isPlainObject2.default)(value[i]) ? 'object' : 'value'] = value[i], _newNode$children$pus));\n      }\n    } else if ((0, _isPlainObject2.default)(value)) {\n      newNode.children = [];\n    } else {\n      newNode.value = value;\n    }\n\n    currentNode.children[pushMethod](newNode);\n\n    map2tree(value, { key: key, pushMethod: pushMethod }, tree);\n  });\n\n  return tree;\n}\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar getPrototypeOf = Object.getPrototypeOf;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n  // that are composed entirely of index properties, return `false` for\n  // `hasOwnProperty` checks of them.\n  return hasOwnProperty.call(object, key) ||\n    (typeof object == 'object' && key in object && getPrototypeOf(object) === null);\n}\n\nmodule.exports = baseHas;\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArrayLikeObject = __webpack_require__(58);\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\nmodule.exports = isArguments;\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getLength = __webpack_require__(59),\n    isFunction = __webpack_require__(22),\n    isLength = __webpack_require__(4);\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null &&\n    !(typeof value == 'function' && isFunction(value)) && isLength(getLength(value));\n}\n\nmodule.exports = isArrayLike;\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(11);\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array constructors, and\n  // PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\nmodule.exports = isFunction;\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = __webpack_require__(1),\n    isObjectLike = __webpack_require__(2);\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\nmodule.exports = isString;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar stackClear = __webpack_require__(64),\n    stackDelete = __webpack_require__(65),\n    stackGet = __webpack_require__(67),\n    stackHas = __webpack_require__(68),\n    stackSet = __webpack_require__(69);\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @param {Array} [values] The values to cache.\n */\nfunction Stack(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = values[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add functions to the `Stack` cache.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assocIndexOf = __webpack_require__(5);\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the associative array.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction assocDelete(array, key) {\n  var index = assocIndexOf(array, key);\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = array.length - 1;\n  if (index == lastIndex) {\n    array.pop();\n  } else {\n    splice.call(array, index, 1);\n  }\n  return true;\n}\n\nmodule.exports = assocDelete;\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assocIndexOf = __webpack_require__(5);\n\n/**\n * Gets the associative array value for `key`.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction assocGet(array, key) {\n  var index = assocIndexOf(array, key);\n  return index < 0 ? undefined : array[index][1];\n}\n\nmodule.exports = assocGet;\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assocIndexOf = __webpack_require__(5);\n\n/**\n * Checks if an associative array value for `key` exists.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction assocHas(array, key) {\n  return assocIndexOf(array, key) > -1;\n}\n\nmodule.exports = assocHas;\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar nativeCreate = __webpack_require__(6);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @param {Object} hash The hash to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(hash, key) {\n  return nativeCreate ? hash[key] !== undefined : hasOwnProperty.call(hash, key);\n}\n\nmodule.exports = hashHas;\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assocIndexOf = __webpack_require__(5);\n\n/**\n * Sets the associative array `key` to `value`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n */\nfunction assocSet(array, key, value) {\n  var index = assocIndexOf(array, key);\n  if (index < 0) {\n    array.push([key, value]);\n  } else {\n    array[index][1] = value;\n  }\n}\n\nmodule.exports = assocSet;\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseIsEqualDeep = __webpack_require__(83),\n    isObject = __webpack_require__(11),\n    isObjectLike = __webpack_require__(2);\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {boolean} [bitmask] The bitmask of comparison flags.\n *  The bitmask may be composed of the following flags:\n *     1 - Unordered comparison\n *     2 - Partial comparison\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, bitmask, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n}\n\nmodule.exports = baseIsEqual;\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar root = __webpack_require__(7);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseGet = __webpack_require__(34);\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined` the `defaultValue` is used in its place.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseToPath = __webpack_require__(35),\n    isKey = __webpack_require__(13);\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path + ''] : baseToPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[path[index++]];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = __webpack_require__(1),\n    stringToPath = __webpack_require__(100);\n\n/**\n * The base implementation of `_.toPath` which only converts `value` to a\n * path if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Array} Returns the property path array.\n */\nfunction baseToPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\nmodule.exports = baseToPath;\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.deepmerge = factory();\n    }\n}(this, function () {\n\nreturn function deepmerge(target, src) {\n    var array = Array.isArray(src);\n    var dst = array && [] || {};\n\n    if (array) {\n        target = target || [];\n        dst = dst.concat(target);\n        src.forEach(function(e, i) {\n            if (typeof dst[i] === 'undefined') {\n                dst[i] = e;\n            } else if (typeof e === 'object') {\n                dst[i] = deepmerge(target[i], e);\n            } else {\n                if (target.indexOf(e) === -1) {\n                    dst.push(e);\n                }\n            }\n        });\n    } else {\n        if (target && typeof target === 'object') {\n            Object.keys(target).forEach(function (key) {\n                dst[key] = target[key];\n            })\n        }\n        Object.keys(src).forEach(function (key) {\n            if (typeof src[key] !== 'object' || !src[key]) {\n                dst[key] = src[key];\n            }\n            else {\n                if (!target[key]) {\n                    dst[key] = src[key];\n                } else {\n                    dst[key] = deepmerge(target[key], src[key]);\n                }\n            }\n        });\n    }\n\n    return dst;\n}\n\n}));\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.__esModule = true;\nexports.default = tooltip;\n\nvar _ramda = __webpack_require__(0);\n\nvar _utils = __webpack_require__(114);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _ref = _utils2.default.default || _utils2.default;\n\nvar prependClass = _ref.prependClass;\nvar functor = _ref.functor;\n\nvar defaultOptions = {\n  left: undefined, // mouseX\n  top: undefined, // mouseY\n  offset: { left: 0, top: 0 },\n  root: undefined\n};\n\nfunction tooltip(d3) {\n  var className = arguments.length <= 1 || arguments[1] === undefined ? 'tooltip' : arguments[1];\n  var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n  var _defaultOptions$optio = _extends({}, defaultOptions, options);\n\n  var left = _defaultOptions$optio.left;\n  var top = _defaultOptions$optio.top;\n  var offset = _defaultOptions$optio.offset;\n  var root = _defaultOptions$optio.root;\n\n  var attrs = { 'class': className };\n  var text = function text() {\n    return '';\n  };\n  var styles = {};\n\n  var el = undefined;\n  var anchor = root || d3.select('body');\n  var rootNode = anchor.node();\n\n  function tip(selection) {\n    selection.on({\n      'mouseover.tip': function mouseoverTip(node) {\n        var _d3$mouse = d3.mouse(rootNode);\n\n        var mouseX = _d3$mouse[0];\n        var mouseY = _d3$mouse[1];\n        var x = left || mouseX + offset.left;\n        var y = top || mouseY - offset.top;\n\n        anchor.selectAll('div.' + className).remove();\n\n        el = anchor.append('div').attr(prependClass(className)(attrs)).style(_extends({\n          position: 'absolute',\n          'z-index': 1001,\n          left: x + 'px',\n          top: y + 'px'\n        }, styles)).html(function () {\n          return text(node);\n        });\n      },\n\n      'mousemove.tip': function mousemoveTip(node) {\n        var _d3$mouse2 = d3.mouse(rootNode);\n\n        var mouseX = _d3$mouse2[0];\n        var mouseY = _d3$mouse2[1];\n        var x = left || mouseX + offset.left;\n        var y = top || mouseY - offset.top;\n\n        el.style({\n          left: x + 'px',\n          top: y + 'px'\n        }).html(function () {\n          return text(node);\n        });\n      },\n\n      'mouseout.tip': function mouseoutTip() {\n        return el.remove();\n      }\n    });\n  }\n\n  tip.attr = function setAttr(d) {\n    if ((0, _ramda.is)(Object, d)) {\n      attrs = _extends({}, attrs, d);\n    }\n    return this;\n  };\n\n  tip.style = function setStyle(d) {\n    if ((0, _ramda.is)(Object, d)) {\n      styles = _extends({}, styles, d);\n    }\n    return this;\n  };\n\n  tip.text = function setText(d) {\n    text = functor(d);\n    return this;\n  };\n\n  return tip;\n}\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.default = functor;\n\nvar _ramda = __webpack_require__(0);\n\nfunction functor(v) {\n  return (0, _ramda.is)(Function, v) ? v : function () {\n    return v;\n  };\n}\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(40);\nmodule.exports = __webpack_require__(46);\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n// @remove-on-eject-end\n\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  __webpack_require__(41).enable();\n  window.Promise = __webpack_require__(43);\n}\n\n// fetch() polyfill for making API calls.\n__webpack_require__(44);\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = __webpack_require__(45);\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Promise = __webpack_require__(14);\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._47 = null;\n  Promise._71 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._47 = function (promise) {\n    if (\n      promise._83 === 2 && // IS REJECTED\n      rejections[promise._56]\n    ) {\n      if (rejections[promise._56].logged) {\n        onHandled(promise._56);\n      } else {\n        clearTimeout(rejections[promise._56].timeout);\n      }\n      delete rejections[promise._56];\n    }\n  };\n  Promise._71 = function (promise, err) {\n    if (promise._75 === 0) { // not yet handled\n      promise._56 = id++;\n      rejections[promise._56] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._56),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(15)))\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = __webpack_require__(14);\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports) {\n\n(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_state_visualizer__ = __webpack_require__(47);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_state_visualizer___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_d3_state_visualizer__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_before_fix_charts_tree_tree__ = __webpack_require__(116);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_immutability_helper__ = __webpack_require__(119);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_immutability_helper___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_immutability_helper__);\nvar defaultAppState={test:[0],todoStore:{todos:[{title:'d3'},{title:'state'},{title:'visualizer'},{title:'tree'}],completedCount:1}};var appStates=[defaultAppState];appStates.push(__WEBPACK_IMPORTED_MODULE_2_immutability_helper___default()(appStates[appStates.length-1],{todoStore:{todos:{$unshift:[{title:'hey'}]}}}));appStates.push(__WEBPACK_IMPORTED_MODULE_2_immutability_helper___default()(appStates[appStates.length-1],{test:{$push:[1]}}));appStates.push(__WEBPACK_IMPORTED_MODULE_2_immutability_helper___default()(appStates[appStates.length-1],{test:{$push:[2]}}));appStates.push(__WEBPACK_IMPORTED_MODULE_2_immutability_helper___default()(appStates[appStates.length-1],{test:{$push:[3]}}));appStates.push(__WEBPACK_IMPORTED_MODULE_2_immutability_helper___default()(appStates[appStates.length-1],{test:{1:{$set:[42]},3:{$set:[42]}}}));appStates.push(__WEBPACK_IMPORTED_MODULE_2_immutability_helper___default()(appStates[appStates.length-1],{todoStore:{$set:{}}}));var config={state:defaultAppState,id:'treeExample',size:600,aspectRatio:0.5,isSorted:false,widthBetweenNodesCoeff:1.5,heightBetweenNodesCoeff:2,style:{border:'1px solid black'},tooltipOptions:{offset:{left:30,top:10},indentationSize:2},transitionDuration:700};var stateDuration=2000;var oldRender=Object(__WEBPACK_IMPORTED_MODULE_1__lib_before_fix_charts_tree_tree__[\"a\" /* default */])(document.getElementById('oldRoot'),__WEBPACK_IMPORTED_MODULE_2_immutability_helper___default()(config,{id:{$set:'oldTreeExample'}}));var render=Object(__WEBPACK_IMPORTED_MODULE_0_d3_state_visualizer__[\"tree\"])(document.getElementById('root'),config);var i=0;var updateState=function updateState(){i=(i+1)%appStates.length;oldRender(appStates[i]);render(appStates[i]);};setInterval(updateState,stateDuration);updateState();\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.tree = undefined;\n\nvar _charts = __webpack_require__(48);\n\nObject.defineProperty(exports, 'tree', {\n  enumerable: true,\n  get: function get() {\n    return _charts.tree;\n  }\n});\n\nvar charts = _interopRequireWildcard(_charts);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.default = charts;\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.tree = undefined;\n\nvar _tree2 = __webpack_require__(49);\n\nvar _tree3 = _interopRequireDefault(_tree2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.tree = _tree3.default;\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function (DOMNode) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _deepmerge = (0, _deepmerge3.default)(defaultOptions, options);\n\n  var id = _deepmerge.id;\n  var style = _deepmerge.style;\n  var size = _deepmerge.size;\n  var aspectRatio = _deepmerge.aspectRatio;\n  var initialZoom = _deepmerge.initialZoom;\n  var margin = _deepmerge.margin;\n  var isSorted = _deepmerge.isSorted;\n  var widthBetweenNodesCoeff = _deepmerge.widthBetweenNodesCoeff;\n  var heightBetweenNodesCoeff = _deepmerge.heightBetweenNodesCoeff;\n  var transitionDuration = _deepmerge.transitionDuration;\n  var state = _deepmerge.state;\n  var rootKeyName = _deepmerge.rootKeyName;\n  var pushMethod = _deepmerge.pushMethod;\n  var tree = _deepmerge.tree;\n  var tooltipOptions = _deepmerge.tooltipOptions;\n  var onClickText = _deepmerge.onClickText;\n\n\n  var width = size - margin.left - margin.right;\n  var height = size * aspectRatio - margin.top - margin.bottom;\n  var fullWidth = size;\n  var fullHeight = size * aspectRatio;\n\n  var attr = {\n    id: id,\n    preserveAspectRatio: 'xMinYMin slice'\n  };\n\n  if (!style.width) {\n    attr.width = fullWidth;\n  }\n\n  if (!style.width || !style.height) {\n    attr.viewBox = '0 0 ' + fullWidth + ' ' + fullHeight;\n  }\n\n  var root = _d4.default.select(DOMNode);\n  var zoom = _d4.default.behavior.zoom().scaleExtent([0.1, 3]).scale(initialZoom);\n  var vis = root.append('svg').attr(attr).style(_extends({ cursor: '-webkit-grab' }, style)).call(zoom.on('zoom', function () {\n    var _d3$event = _d4.default.event;\n    var translate = _d3$event.translate;\n    var scale = _d3$event.scale;\n\n    vis.attr('transform', 'translate(' + translate + ')scale(' + scale + ')');\n  })).append('g').attr({\n    transform: 'translate(' + (margin.left + style.node.radius) + ', ' + margin.top + ') scale(' + initialZoom + ')'\n  });\n\n  var layout = _d4.default.layout.tree().size([width, height]);\n  var data = void 0;\n\n  if (isSorted) {\n    layout.sort(function (a, b) {\n      return b.name.toLowerCase() < a.name.toLowerCase() ? 1 : -1;\n    });\n  }\n\n  return function renderChart() {\n    var nextState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : tree || state;\n\n    data = !tree ? (0, _map2tree2.default)(nextState, { key: rootKeyName, pushMethod: pushMethod }) : nextState;\n\n    if ((0, _ramda.isEmpty)(data) || !data.name) {\n      data = { name: 'error', message: 'Please provide a state map or a tree structure' };\n    }\n\n    var nodeIndex = 0;\n    var maxLabelLength = 0;\n\n    (0, _utils.visit)(data, function (node) {\n      return maxLabelLength = Math.max(node.name.length, maxLabelLength);\n    }, function (node) {\n      return node.children && node.children.length > 0 ? node.children : null;\n    });\n\n    data.x0 = height / 2;\n    data.y0 = 0;\n    /*eslint-disable*/\n    update(data);\n    /*eslint-enable*/\n\n    function update(source) {\n      // path generator for links\n      var diagonal = _d4.default.svg.diagonal().projection(function (d) {\n        return [d.y, d.x];\n      });\n      // set tree dimensions and spacing between branches and nodes\n      var maxNodeCountByLevel = Math.max.apply(Math, (0, _utils.getNodeGroupByDepthCount)(data));\n\n      layout = layout.size([maxNodeCountByLevel * 25 * heightBetweenNodesCoeff, width]);\n\n      var nodes = layout.nodes(data);\n      var links = layout.links(nodes);\n\n      nodes.forEach(function (node) {\n        return node.y = node.depth * (maxLabelLength * 7 * widthBetweenNodesCoeff);\n      });\n\n      // process the node selection\n      var node = vis.selectAll('g.node').property('__oldData__', function (d) {\n        return d;\n      }).data(nodes, function (d) {\n        return d.id || (d.id = ++nodeIndex);\n      });\n\n      var nodeEnter = node.enter().append('g').attr({\n        'class': 'node',\n        transform: function transform(d) {\n          return 'translate(' + source.y0 + ',' + source.x0 + ')';\n        }\n      }).style({\n        fill: style.text.colors.default,\n        cursor: 'pointer'\n      }).on({\n        mouseover: function mouseover(d, i) {\n          _d4.default.select(this).style({\n            fill: style.text.colors.hover\n          });\n        },\n        mouseout: function mouseout(d, i) {\n          _d4.default.select(this).style({\n            fill: style.text.colors.default\n          });\n        }\n      });\n\n      if (!tooltipOptions.disabled) {\n        nodeEnter.call((0, _d3tooltip2.default)(_d4.default, 'tooltip', _extends({}, tooltipOptions, { root: root })).text(function (d, i) {\n          return (0, _utils.getTooltipString)(d, i, tooltipOptions);\n        }).style(tooltipOptions.style));\n      }\n\n      nodeEnter.append('circle').attr({\n        'class': 'nodeCircle'\n      }).on({\n        click: function click(clickedNode) {\n          if (_d4.default.event.defaultPrevented) return;\n          update((0, _utils.toggleChildren)(clickedNode));\n        }\n      });\n\n      nodeEnter.append('text').attr({\n        'class': 'nodeText',\n        dy: '.35em'\n      }).style({\n        'fill-opacity': 0\n      }).text(function (d) {\n        return d.name;\n      }).on({\n        click: onClickText\n      });\n\n      // update the text to reflect whether node has children or not\n      node.select('text').attr({\n        x: function x(d) {\n          return d.children || d._children ? -(style.node.radius + 10) : style.node.radius + 10;\n        },\n        'text-anchor': function textAnchor(d) {\n          return d.children || d._children ? 'end' : 'start';\n        }\n      }).text(function (d) {\n        return d.name;\n      });\n\n      // change the circle fill depending on whether it has children and is collapsed\n      node.select('circle.nodeCircle').attr({\n        r: style.node.radius\n      }).style({\n        stroke: 'black',\n        'stroke-width': '1.5px',\n        fill: function fill(d) {\n          return d._children ? style.node.colors.collapsed : d.children ? style.node.colors.parent : style.node.colors.default;\n        }\n      });\n\n      // transition nodes to their new position\n      var nodeUpdate = node.transition().duration(transitionDuration).attr({\n        transform: function transform(d) {\n          return 'translate(' + d.y + ',' + d.x + ')';\n        }\n      });\n\n      // fade the text in\n      nodeUpdate.select('text').style('fill-opacity', 1);\n\n      // restore the circle\n      nodeUpdate.select('circle').attr('r', 7);\n\n      // blink updated nodes\n      nodeUpdate.filter(function flick(d) {\n        // test whether the relevant properties of d match\n        // the equivalent property of the oldData\n        // also test whether the old data exists,\n        // to catch the entering elements!\n        return !this.__oldData__ || d.value !== this.__oldData__.value;\n      }).style('fill-opacity', '0.3').transition().duration(100).style('fill-opacity', '1');\n\n      // transition exiting nodes to the parent's new position\n      var nodeExit = node.exit().transition().duration(transitionDuration).attr({\n        transform: function transform(d) {\n          return 'translate(' + source.y + ',' + source.x + ')';\n        }\n      }).remove();\n\n      nodeExit.select('circle').attr('r', 0);\n\n      nodeExit.select('text').style('fill-opacity', 0);\n\n      // update the links\n      var link = vis.selectAll('path.link').data(links, function (d) {\n        return d.target.id;\n      });\n\n      // enter any new links at the parent's previous position\n      link.enter().insert('path', 'g').attr({\n        'class': 'link',\n        d: function d(_d) {\n          var o = {\n            x: source.x0,\n            y: source.y0\n          };\n          return diagonal({\n            source: o,\n            target: o\n          });\n        }\n      }).style(style.link);\n\n      // transition links to their new position\n      link.transition().duration(transitionDuration).attr({\n        d: diagonal\n      });\n\n      // transition exiting nodes to the parent's new position\n      link.exit().transition().duration(transitionDuration).attr({\n        d: function d(_d2) {\n          var o = {\n            x: source.x,\n            y: source.y\n          };\n          return diagonal({\n            source: o,\n            target: o\n          });\n        }\n      }).remove();\n\n      // delete the old data once it's no longer needed\n      node.property('__oldData__', null);\n\n      // stash the old positions for transition\n      nodes.forEach(function (d) {\n        d.x0 = d.x;\n        d.y0 = d.y;\n      });\n    }\n  };\n};\n\nvar _d3 = __webpack_require__(16);\n\nvar _d4 = _interopRequireDefault(_d3);\n\nvar _ramda = __webpack_require__(0);\n\nvar _map2tree = __webpack_require__(17);\n\nvar _map2tree2 = _interopRequireDefault(_map2tree);\n\nvar _deepmerge2 = __webpack_require__(36);\n\nvar _deepmerge3 = _interopRequireDefault(_deepmerge2);\n\nvar _utils = __webpack_require__(112);\n\nvar _d3tooltip = __webpack_require__(37);\n\nvar _d3tooltip2 = _interopRequireDefault(_d3tooltip);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultOptions = {\n  state: undefined,\n  rootKeyName: 'state',\n  pushMethod: 'push',\n  tree: undefined,\n  id: 'd3svg',\n  style: {\n    node: {\n      colors: {\n        'default': '#ccc',\n        collapsed: 'lightsteelblue',\n        parent: 'white'\n      },\n      radius: 5\n    },\n    text: {\n      colors: {\n        'default': 'black',\n        hover: 'skyblue'\n      }\n    },\n    link: {\n      stroke: '#000',\n      fill: 'none'\n    }\n  },\n  size: 500,\n  aspectRatio: 1.0,\n  initialZoom: 1,\n  margin: {\n    top: 10,\n    right: 10,\n    bottom: 10,\n    left: 50\n  },\n  isSorted: false,\n  heightBetweenNodesCoeff: 2,\n  widthBetweenNodesCoeff: 1,\n  transitionDuration: 750,\n  onClickText: function onClickText() {},\n  tooltipOptions: {\n    disabled: false,\n    left: undefined,\n    right: undefined,\n    offset: {\n      left: 0,\n      top: 0\n    },\n    style: undefined\n  }\n};\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isHostObject = __webpack_require__(9),\n    isObjectLike = __webpack_require__(2);\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar getPrototypeOf = Object.getPrototypeOf;\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = objectProto;\n  if (typeof value.constructor == 'function') {\n    proto = getPrototypeOf(value);\n  }\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseForOwn = __webpack_require__(52),\n    baseIteratee = __webpack_require__(61);\n\n/**\n * Creates an object with the same keys as `object` and values generated by\n * running each own enumerable property of `object` through `iteratee`. The\n * iteratee function is invoked with three arguments: (value, key, object).\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    result[key] = iteratee(value, key, object);\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseFor = __webpack_require__(53),\n    keys = __webpack_require__(10);\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createBaseFor = __webpack_require__(54);\n\n/**\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\n * each property. Iteratee functions may exit iteration early by explicitly\n * returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports) {\n\n/**\n * Creates a base function for methods like `_.forIn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports) {\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = Object.keys;\n\n/**\n * The base implementation of `_.keys` which doesn't skip the constructor\n * property of prototypes or treat sparse arrays as dense.\n *\n * @private\n * @type Function\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  return nativeKeys(Object(object));\n}\n\nmodule.exports = baseKeys;\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseTimes = __webpack_require__(57),\n    isArguments = __webpack_require__(19),\n    isArray = __webpack_require__(1),\n    isLength = __webpack_require__(4),\n    isString = __webpack_require__(23);\n\n/**\n * Creates an array of index keys for `object` values of arrays,\n * `arguments` objects, and strings, otherwise `null` is returned.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array|null} Returns index keys, else `null`.\n */\nfunction indexKeys(object) {\n  var length = object ? object.length : undefined;\n  if (isLength(length) &&\n      (isArray(object) || isString(object) || isArguments(object))) {\n    return baseTimes(length, String);\n  }\n  return null;\n}\n\nmodule.exports = indexKeys;\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports) {\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArrayLike = __webpack_require__(20),\n    isObjectLike = __webpack_require__(2);\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object, else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseProperty = __webpack_require__(21);\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\nmodule.exports = getLength;\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports) {\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseMatches = __webpack_require__(62),\n    baseMatchesProperty = __webpack_require__(99),\n    identity = __webpack_require__(109),\n    isArray = __webpack_require__(1),\n    property = __webpack_require__(110);\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  var type = typeof value;\n  if (type == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (type == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseIsMatch = __webpack_require__(63),\n    getMatchData = __webpack_require__(94);\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    var key = matchData[0][0],\n        value = matchData[0][1];\n\n    return function(object) {\n      if (object == null) {\n        return false;\n      }\n      return object[key] === value &&\n        (value !== undefined || (key in Object(object)));\n    };\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Stack = __webpack_require__(25),\n    baseIsEqual = __webpack_require__(31);\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack,\n          result = customizer ? customizer(objValue, srcValue, key, object, source, stack) : undefined;\n\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports) {\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = { 'array': [], 'map': null };\n}\n\nmodule.exports = stackClear;\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assocDelete = __webpack_require__(26);\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      array = data.array;\n\n  return array ? assocDelete(array, key) : data.map['delete'](key);\n}\n\nmodule.exports = stackDelete;\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports) {\n\n/**\n * Performs a [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'user': 'fred' };\n * var other = { 'user': 'fred' };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assocGet = __webpack_require__(27);\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  var data = this.__data__,\n      array = data.array;\n\n  return array ? assocGet(array, key) : data.map.get(key);\n}\n\nmodule.exports = stackGet;\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assocHas = __webpack_require__(28);\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  var data = this.__data__,\n      array = data.array;\n\n  return array ? assocHas(array, key) : data.map.has(key);\n}\n\nmodule.exports = stackHas;\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar MapCache = __webpack_require__(70),\n    assocSet = __webpack_require__(30);\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache object.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__,\n      array = data.array;\n\n  if (array) {\n    if (array.length < (LARGE_ARRAY_SIZE - 1)) {\n      assocSet(array, key, value);\n    } else {\n      data.array = null;\n      data.map = new MapCache(array);\n    }\n  }\n  var map = data.map;\n  if (map) {\n    map.set(key, value);\n  }\n  return this;\n}\n\nmodule.exports = stackSet;\n\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar mapClear = __webpack_require__(71),\n    mapDelete = __webpack_require__(76),\n    mapGet = __webpack_require__(78),\n    mapHas = __webpack_require__(80),\n    mapSet = __webpack_require__(81);\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @param {Array} [values] The values to cache.\n */\nfunction MapCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = values[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add functions to the `MapCache`.\nMapCache.prototype.clear = mapClear;\nMapCache.prototype['delete'] = mapDelete;\nMapCache.prototype.get = mapGet;\nMapCache.prototype.has = mapHas;\nMapCache.prototype.set = mapSet;\n\nmodule.exports = MapCache;\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Hash = __webpack_require__(72),\n    Map = __webpack_require__(3);\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapClear() {\n  this.__data__ = { 'hash': new Hash, 'map': Map ? new Map : [], 'string': new Hash };\n}\n\nmodule.exports = mapClear;\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar nativeCreate = __webpack_require__(6);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Creates an hash object.\n *\n * @private\n * @returns {Object} Returns the new hash object.\n */\nfunction Hash() {}\n\n// Avoid inheriting from `Object.prototype` when possible.\nHash.prototype = nativeCreate ? nativeCreate(null) : objectProto;\n\nmodule.exports = Hash;\n\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isFunction = __webpack_require__(22),\n    isHostObject = __webpack_require__(9),\n    isObjectLike = __webpack_require__(2);\n\n/** Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns). */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(funcToString.call(value));\n  }\n  return isObjectLike(value) &&\n    (isHostObject(value) ? reIsNative : reIsHostCtor).test(value);\n}\n\nmodule.exports = isNative;\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is a global object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n */\nfunction checkGlobal(value) {\n  return (value && value.Object === Object) ? value : null;\n}\n\nmodule.exports = checkGlobal;\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Map = __webpack_require__(3),\n    assocDelete = __webpack_require__(26),\n    hashDelete = __webpack_require__(77),\n    isKeyable = __webpack_require__(8);\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapDelete(key) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    return hashDelete(typeof key == 'string' ? data.string : data.hash, key);\n  }\n  return Map ? data.map['delete'](key) : assocDelete(data.map, key);\n}\n\nmodule.exports = mapDelete;\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar hashHas = __webpack_require__(29);\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(hash, key) {\n  return hashHas(hash, key) && delete hash[key];\n}\n\nmodule.exports = hashDelete;\n\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Map = __webpack_require__(3),\n    assocGet = __webpack_require__(27),\n    hashGet = __webpack_require__(79),\n    isKeyable = __webpack_require__(8);\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapGet(key) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    return hashGet(typeof key == 'string' ? data.string : data.hash, key);\n  }\n  return Map ? data.map.get(key) : assocGet(data.map, key);\n}\n\nmodule.exports = mapGet;\n\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar nativeCreate = __webpack_require__(6);\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @param {Object} hash The hash to query.\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(hash, key) {\n  if (nativeCreate) {\n    var result = hash[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(hash, key) ? hash[key] : undefined;\n}\n\nmodule.exports = hashGet;\n\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Map = __webpack_require__(3),\n    assocHas = __webpack_require__(28),\n    hashHas = __webpack_require__(29),\n    isKeyable = __webpack_require__(8);\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapHas(key) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    return hashHas(typeof key == 'string' ? data.string : data.hash, key);\n  }\n  return Map ? data.map.has(key) : assocHas(data.map, key);\n}\n\nmodule.exports = mapHas;\n\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Map = __webpack_require__(3),\n    assocSet = __webpack_require__(30),\n    hashSet = __webpack_require__(82),\n    isKeyable = __webpack_require__(8);\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache object.\n */\nfunction mapSet(key, value) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    hashSet(typeof key == 'string' ? data.string : data.hash, key, value);\n  } else if (Map) {\n    data.map.set(key, value);\n  } else {\n    assocSet(data.map, key, value);\n  }\n  return this;\n}\n\nmodule.exports = mapSet;\n\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar nativeCreate = __webpack_require__(6);\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n */\nfunction hashSet(hash, key, value) {\n  hash[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n}\n\nmodule.exports = hashSet;\n\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Stack = __webpack_require__(25),\n    equalArrays = __webpack_require__(84),\n    equalByTag = __webpack_require__(86),\n    equalObjects = __webpack_require__(90),\n    getTag = __webpack_require__(91),\n    isArray = __webpack_require__(1),\n    isHostObject = __webpack_require__(9),\n    isTypedArray = __webpack_require__(93);\n\n/** Used to compose bitmasks for comparison styles. */\nvar PARTIAL_COMPARE_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = getTag(object);\n    if (objTag == argsTag) {\n      objTag = objectTag;\n    } else if (objTag != objectTag) {\n      objIsArr = isTypedArray(object);\n    }\n  }\n  if (!othIsArr) {\n    othTag = getTag(other);\n    if (othTag == argsTag) {\n      othTag = objectTag;\n    } else if (othTag != objectTag) {\n      othIsArr = isTypedArray(other);\n    }\n  }\n  var objIsObj = objTag == objectTag && !isHostObject(object),\n      othIsObj = othTag == objectTag && !isHostObject(other),\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !(objIsArr || objIsObj)) {\n    return equalByTag(object, other, objTag, equalFunc, customizer, bitmask);\n  }\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n  if (!isPartial) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, bitmask, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, bitmask, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar arraySome = __webpack_require__(85);\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n * @param {Object} [stack] Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n  var index = -1,\n      isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      isUnordered = bitmask & UNORDERED_COMPARE_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(array, other);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (isUnordered) {\n      if (!arraySome(other, function(othValue) {\n            return arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack);\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  return result;\n}\n\nmodule.exports = equalArrays;\n\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports) {\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Symbol = __webpack_require__(32),\n    Uint8Array = __webpack_require__(87),\n    mapToArray = __webpack_require__(88),\n    setToArray = __webpack_require__(89);\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = Symbol ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, equalFunc, customizer, bitmask) {\n  switch (tag) {\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n      // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n      // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n      return +object == +other;\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case numberTag:\n      // Treat `NaN` vs. `NaN` as equal.\n      return (object != +object) ? other != +other : object == +other;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings primitives and string\n      // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n      convert || (convert = setToArray);\n\n      // Recursively compare objects (susceptible to call stack limits).\n      return (isPartial || object.size == other.size) &&\n        equalFunc(convert(object), convert(other), customizer, bitmask | UNORDERED_COMPARE_FLAG);\n\n    case symbolTag:\n      return !!Symbol && (symbolValueOf.call(object) == symbolValueOf.call(other));\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar root = __webpack_require__(7);\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports) {\n\n/**\n * Converts `map` to an array.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports) {\n\n/**\n * Converts `set` to an array.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseHas = __webpack_require__(18),\n    keys = __webpack_require__(10);\n\n/** Used to compose bitmasks for comparison styles. */\nvar PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : baseHas(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  return result;\n}\n\nmodule.exports = equalObjects;\n\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Map = __webpack_require__(3),\n    Set = __webpack_require__(92);\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect maps and sets. */\nvar mapCtorString = Map ? funcToString.call(Map) : '',\n    setCtorString = Set ? funcToString.call(Set) : '';\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction getTag(value) {\n  return objectToString.call(value);\n}\n\n// Fallback for IE 11 providing `toStringTag` values for maps and sets.\nif ((Map && getTag(new Map) != mapTag) || (Set && getTag(new Set) != setTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : null,\n        ctorString = typeof Ctor == 'function' ? funcToString.call(Ctor) : '';\n\n    if (ctorString) {\n      if (ctorString == mapCtorString) {\n        return mapTag;\n      }\n      if (ctorString == setCtorString) {\n        return setTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getNative = __webpack_require__(12),\n    root = __webpack_require__(7);\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isLength = __webpack_require__(4),\n    isObjectLike = __webpack_require__(2);\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dateTag] = typedArrayTags[errorTag] =\ntypedArrayTags[funcTag] = typedArrayTags[mapTag] =\ntypedArrayTags[numberTag] = typedArrayTags[objectTag] =\ntypedArrayTags[regexpTag] = typedArrayTags[setTag] =\ntypedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nfunction isTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n}\n\nmodule.exports = isTypedArray;\n\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isStrictComparable = __webpack_require__(95),\n    toPairs = __webpack_require__(96);\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = toPairs(object),\n      length = result.length;\n\n  while (length--) {\n    result[length][2] = isStrictComparable(result[length][1]);\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(11);\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseToPairs = __webpack_require__(97),\n    keys = __webpack_require__(10);\n\n/**\n * Creates an array of own enumerable key-value pairs for `object`.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the new array of key-value pairs.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.toPairs(new Foo);\n * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n */\nfunction toPairs(object) {\n  return baseToPairs(object, keys(object));\n}\n\nmodule.exports = toPairs;\n\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar arrayMap = __webpack_require__(98);\n\n/**\n * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n * of key-value pairs for `object` corresponding to the property names of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the new array of key-value pairs.\n */\nfunction baseToPairs(object, props) {\n  return arrayMap(props, function(key) {\n    return [key, object[key]];\n  });\n}\n\nmodule.exports = baseToPairs;\n\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports) {\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseIsEqual = __webpack_require__(31),\n    get = __webpack_require__(33),\n    hasIn = __webpack_require__(103);\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toString = __webpack_require__(101);\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nfunction stringToPath(string) {\n  var result = [];\n  toString(string).replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n}\n\nmodule.exports = stringToPath;\n\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Symbol = __webpack_require__(32),\n    isSymbol = __webpack_require__(102);\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = Symbol ? symbolProto.toString : undefined;\n\n/**\n * Converts `value` to a string if it's not one. An empty string is returned\n * for `null` and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (value == null) {\n    return '';\n  }\n  if (isSymbol(value)) {\n    return Symbol ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toString;\n\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObjectLike = __webpack_require__(2);\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseHasIn = __webpack_require__(104),\n    hasPath = __webpack_require__(105);\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b.c');\n * // => true\n *\n * _.hasIn(object, ['a', 'b', 'c']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports) {\n\n/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseToPath = __webpack_require__(35),\n    isArguments = __webpack_require__(19),\n    isArray = __webpack_require__(1),\n    isIndex = __webpack_require__(24),\n    isKey = __webpack_require__(13),\n    isLength = __webpack_require__(4),\n    isString = __webpack_require__(23),\n    last = __webpack_require__(106),\n    parent = __webpack_require__(107);\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  if (object == null) {\n    return false;\n  }\n  var result = hasFunc(object, path);\n  if (!result && !isKey(path)) {\n    path = baseToPath(path);\n    object = parent(object, path);\n    if (object != null) {\n      path = last(path);\n      result = hasFunc(object, path);\n    }\n  }\n  var length = object ? object.length : undefined;\n  return result || (\n    !!length && isLength(length) && isIndex(path, length) &&\n    (isArray(object) || isString(object) || isArguments(object))\n  );\n}\n\nmodule.exports = hasPath;\n\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports) {\n\n/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array ? array.length : 0;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseSlice = __webpack_require__(108),\n    get = __webpack_require__(33);\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length == 1 ? object : get(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports) {\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports) {\n\n/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseProperty = __webpack_require__(21),\n    basePropertyDeep = __webpack_require__(111),\n    isKey = __webpack_require__(13);\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': { 'c': 2 } } },\n *   { 'a': { 'b': { 'c': 1 } } }\n * ];\n *\n * _.map(objects, _.property('a.b.c'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseGet = __webpack_require__(34);\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.collapseChildren = collapseChildren;\nexports.expandChildren = expandChildren;\nexports.toggleChildren = toggleChildren;\nexports.visit = visit;\nexports.getNodeGroupByDepthCount = getNodeGroupByDepthCount;\nexports.getTooltipString = getTooltipString;\n\nvar _ramda = __webpack_require__(0);\n\nvar _sortAndSerialize = __webpack_require__(113);\n\nvar _sortAndSerialize2 = _interopRequireDefault(_sortAndSerialize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction collapseChildren(node) {\n  if (node.children) {\n    node._children = node.children;\n    node._children.forEach(collapseChildren);\n    node.children = null;\n  }\n}\n\nfunction expandChildren(node) {\n  if (node._children) {\n    node.children = node._children;\n    node.children.forEach(expandChildren);\n    node._children = null;\n  }\n}\n\nfunction toggleChildren(node) {\n  if (node.children) {\n    node._children = node.children;\n    node.children = null;\n  } else if (node._children) {\n    node.children = node._children;\n    node._children = null;\n  }\n  return node;\n}\n\nfunction visit(parent, visitFn, childrenFn) {\n  if (!parent) {\n    return;\n  }\n\n  visitFn(parent);\n\n  var children = childrenFn(parent);\n  if (children) {\n    var count = children.length;\n\n    for (var i = 0; i < count; i++) {\n      visit(children[i], visitFn, childrenFn);\n    }\n  }\n}\n\nfunction getNodeGroupByDepthCount(rootNode) {\n  var nodeGroupByDepthCount = [1];\n\n  var traverseFrom = function traverseFrom(node) {\n    var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (!node.children || node.children.length === 0) {\n      return 0;\n    }\n\n    if (nodeGroupByDepthCount.length <= depth + 1) {\n      nodeGroupByDepthCount.push(0);\n    }\n\n    nodeGroupByDepthCount[depth + 1] += node.children.length;\n\n    node.children.forEach(function (childNode) {\n      traverseFrom(childNode, depth + 1);\n    });\n  };\n\n  traverseFrom(rootNode);\n  return nodeGroupByDepthCount;\n}\n\nfunction getTooltipString(node, i, _ref) {\n  var _ref$indentationSize = _ref.indentationSize;\n  var indentationSize = _ref$indentationSize === undefined ? 4 : _ref$indentationSize;\n\n  if (!(0, _ramda.is)(Object, node)) return '';\n\n  var spacer = (0, _ramda.join)('&nbsp;&nbsp;');\n  var cr2br = (0, _ramda.replace)(/\\n/g, '<br/>');\n  var spaces2nbsp = (0, _ramda.replace)(/\\s{2}/g, spacer(new Array(indentationSize)));\n  var json2html = (0, _ramda.pipe)(_sortAndSerialize2.default, cr2br, spaces2nbsp);\n\n  var children = node.children || node._children;\n\n  if (typeof node.value !== 'undefined') return json2html(node.value);\n  if (typeof node.object !== 'undefined') return json2html(node.object);\n  if (children && children.length) return 'childrenCount: ' + children.length;\n  return 'empty';\n}\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = sortAndSerialize;\n\nvar _ramda = __webpack_require__(0);\n\nfunction sortObject(obj, strict) {\n  if (obj instanceof Array) {\n    var ary = void 0;\n    if (strict) {\n      ary = obj.sort();\n    } else {\n      ary = obj;\n    }\n    return ary;\n  }\n\n  if (obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {\n    var _ret = function () {\n      var tObj = {};\n      Object.keys(obj).sort().forEach(function (key) {\n        return tObj[key] = sortObject(obj[key]);\n      });\n      return {\n        v: tObj\n      };\n    }();\n\n    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n  }\n\n  return obj;\n}\n\nfunction sortAndSerialize(obj) {\n  return JSON.stringify(sortObject(obj, true), undefined, 2);\n}\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _prependClass = __webpack_require__(115);\n\nvar _prependClass2 = _interopRequireDefault(_prependClass);\n\nvar _functor = __webpack_require__(38);\n\nvar _functor2 = _interopRequireDefault(_functor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  prependClass: _prependClass2.default,\n  functor: _functor2.default\n};\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nexports.__esModule = true;\nexports.default = prependClass;\n\nvar _ramda = __webpack_require__(0);\n\nvar _functor = __webpack_require__(38);\n\nvar _functor2 = _interopRequireDefault(_functor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction prependClass(className) {\n  return (0, _ramda.mapObjIndexed)(function (value, key) {\n    if (key === 'class') {\n      var _ret = function () {\n        var fn = (0, _functor2.default)(value);\n\n        return {\n          v: function v(d, i) {\n            var classNames = fn(d, i);\n            if (classNames !== className) {\n              return (0, _ramda.join)(' ', [className, classNames]);\n            }\n            return classNames;\n          }\n        };\n      }();\n\n      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n    }\n\n    return value;\n  });\n}\n\n/***/ }),\n/* 116 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_d3__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ramda__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ramda___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_ramda__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_map2tree__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_map2tree___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_map2tree__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_deepmerge__ = __webpack_require__(36);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_deepmerge___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_deepmerge__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utils__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_d3tooltip__ = __webpack_require__(37);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_d3tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_d3tooltip__);\nfunction _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}var defaultOptions={state:undefined,rootKeyName:'state',pushMethod:'push',tree:undefined,id:'d3svg',style:{node:{colors:{'default':'#ccc',collapsed:'lightsteelblue',parent:'white'},radius:5},text:{colors:{'default':'black',hover:'skyblue'}},link:{stroke:'#000',fill:'none'}},size:500,aspectRatio:1.0,initialZoom:1,margin:{top:10,right:10,bottom:10,left:50},isSorted:false,heightBetweenNodesCoeff:2,widthBetweenNodesCoeff:1,transitionDuration:750,onClickText:function onClickText(){},tooltipOptions:{disabled:false,left:undefined,right:undefined,offset:{left:0,top:0},style:undefined}};/* harmony default export */ __webpack_exports__[\"a\"] = (function(DOMNode){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _deepmerge=__WEBPACK_IMPORTED_MODULE_3_deepmerge___default()(defaultOptions,options),id=_deepmerge.id,style=_deepmerge.style,size=_deepmerge.size,aspectRatio=_deepmerge.aspectRatio,initialZoom=_deepmerge.initialZoom,margin=_deepmerge.margin,isSorted=_deepmerge.isSorted,widthBetweenNodesCoeff=_deepmerge.widthBetweenNodesCoeff,heightBetweenNodesCoeff=_deepmerge.heightBetweenNodesCoeff,transitionDuration=_deepmerge.transitionDuration,state=_deepmerge.state,rootKeyName=_deepmerge.rootKeyName,pushMethod=_deepmerge.pushMethod,tree=_deepmerge.tree,tooltipOptions=_deepmerge.tooltipOptions,onClickText=_deepmerge.onClickText;var width=size-margin.left-margin.right;var height=size*aspectRatio-margin.top-margin.bottom;var fullWidth=size;var fullHeight=size*aspectRatio;var attr={id:id,preserveAspectRatio:'xMinYMin slice'};if(!style.width){attr.width=fullWidth;}if(!style.width||!style.height){attr.viewBox='0 0 '+fullWidth+' '+fullHeight;}var root=__WEBPACK_IMPORTED_MODULE_0_d3___default.a.select(DOMNode);var zoom=__WEBPACK_IMPORTED_MODULE_0_d3___default.a.behavior.zoom().scaleExtent([0.1,3]).scale(initialZoom);var vis=root.append('svg').attr(attr).style(Object.assign({cursor:'-webkit-grab'},style)).call(zoom.on('zoom',function(){var _d3$event=__WEBPACK_IMPORTED_MODULE_0_d3___default.a.event,translate=_d3$event.translate,scale=_d3$event.scale;vis.attr('transform','translate('+translate+')scale('+scale+')');})).append('g').attr({transform:'translate('+(margin.left+style.node.radius)+', '+margin.top+') scale('+initialZoom+')'});var layout=__WEBPACK_IMPORTED_MODULE_0_d3___default.a.layout.tree().size([width,height]);var data=void 0;if(isSorted){layout.sort(function(a,b){return b.name.toLowerCase()<a.name.toLowerCase()?1:-1;});}return function renderChart(){var nextState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:tree||state;data=!tree?__WEBPACK_IMPORTED_MODULE_2_map2tree___default()(nextState,{key:rootKeyName,pushMethod:pushMethod}):nextState;if(Object(__WEBPACK_IMPORTED_MODULE_1_ramda__[\"isEmpty\"])(data)||!data.name){data={name:'error',message:'Please provide a state map or a tree structure'};}var nodeIndex=0;var maxLabelLength=0;Object(__WEBPACK_IMPORTED_MODULE_4__utils__[\"d\" /* visit */])(data,function(node){return maxLabelLength=Math.max(node.name.length,maxLabelLength);},function(node){return node.children&&node.children.length>0?node.children:null;});data.x0=height/2;data.y0=0;/*eslint-disable*/update(data);/*eslint-enable*/function update(source){// path generator for links\nvar diagonal=__WEBPACK_IMPORTED_MODULE_0_d3___default.a.svg.diagonal().projection(function(d){return[d.y,d.x];});// set tree dimensions and spacing between branches and nodes\nvar maxNodeCountByLevel=Math.max.apply(Math,_toConsumableArray(Object(__WEBPACK_IMPORTED_MODULE_4__utils__[\"a\" /* getNodeGroupByDepthCount */])(data)));layout=layout.size([maxNodeCountByLevel*25*heightBetweenNodesCoeff,width]);var nodes=layout.nodes(data);var links=layout.links(nodes);nodes.forEach(function(node){return node.y=node.depth*(maxLabelLength*7*widthBetweenNodesCoeff);});// process the node selection\nvar node=vis.selectAll('g.node').property('__oldData__',function(d){return d;}).data(nodes,function(d){return d.id||(d.id=++nodeIndex);});var nodeEnter=node.enter().append('g').attr({'class':'node',transform:function transform(d){return'translate('+source.y0+','+source.x0+')';}}).style({fill:style.text.colors.default,cursor:'pointer'}).on({mouseover:function mouseover(d,i){__WEBPACK_IMPORTED_MODULE_0_d3___default.a.select(this).style({fill:style.text.colors.hover});},mouseout:function mouseout(d,i){__WEBPACK_IMPORTED_MODULE_0_d3___default.a.select(this).style({fill:style.text.colors.default});}});if(!tooltipOptions.disabled){nodeEnter.call(__WEBPACK_IMPORTED_MODULE_5_d3tooltip___default()(__WEBPACK_IMPORTED_MODULE_0_d3___default.a,'tooltip',Object.assign({},tooltipOptions,{root:root})).text(function(d,i){return Object(__WEBPACK_IMPORTED_MODULE_4__utils__[\"b\" /* getTooltipString */])(d,i,tooltipOptions);}).style(tooltipOptions.style));}nodeEnter.append('circle').attr({'class':'nodeCircle'}).on({click:function click(clickedNode){if(__WEBPACK_IMPORTED_MODULE_0_d3___default.a.event.defaultPrevented)return;update(Object(__WEBPACK_IMPORTED_MODULE_4__utils__[\"c\" /* toggleChildren */])(clickedNode));}});nodeEnter.append('text').attr({'class':'nodeText',dy:'.35em'}).style({'fill-opacity':0}).text(function(d){return d.name;}).on({click:onClickText});// update the text to reflect whether node has children or not\nnode.select('text').attr({x:function x(d){return d.children||d._children?-(style.node.radius+10):style.node.radius+10;},'text-anchor':function textAnchor(d){return d.children||d._children?'end':'start';}}).text(function(d){return d.name;});// change the circle fill depending on whether it has children and is collapsed\nnode.select('circle.nodeCircle').attr({r:style.node.radius}).style({stroke:'black','stroke-width':'1.5px',fill:function fill(d){return d._children?style.node.colors.collapsed:d.children?style.node.colors.parent:style.node.colors.default;}});// transition nodes to their new position\nvar nodeUpdate=node.transition().duration(transitionDuration).attr({transform:function transform(d){return'translate('+d.y+','+d.x+')';}});// fade the text in\nnodeUpdate.select('text').style('fill-opacity',1);// restore the circle\nnodeUpdate.select('circle').attr('r',7);// blink updated nodes\nnodeUpdate.filter(function flick(d){// test whether the relevant properties of d match\n// the equivalent property of the oldData\n// also test whether the old data exists,\n// to catch the entering elements!\nreturn!this.__oldData__||d.value!==this.__oldData__.value;}).style('fill-opacity','0.3').transition().duration(100).style('fill-opacity','1');// transition exiting nodes to the parent's new position\nvar nodeExit=node.exit().transition().duration(transitionDuration).attr({transform:function transform(d){return'translate('+source.y+','+source.x+')';}}).remove();nodeExit.select('circle').attr('r',0);nodeExit.select('text').style('fill-opacity',0);// update the links\nvar link=vis.selectAll('path.link').data(links,function(d){return d.target.id;});// enter any new links at the parent's previous position\nlink.enter().insert('path','g').attr({'class':'link',d:function d(_d){var o={x:source.x0,y:source.y0};return diagonal({source:o,target:o});}}).style(style.link);// transition links to their new position\nlink.transition().duration(transitionDuration).attr({d:diagonal});// transition exiting nodes to the parent's new position\nlink.exit().transition().duration(transitionDuration).attr({d:function d(_d2){var o={x:source.x,y:source.y};return diagonal({source:o,target:o});}}).remove();// delete the old data once it's no longer needed\nnode.property('__oldData__',null);// stash the old positions for transition\nnodes.forEach(function(d){d.x0=d.x;d.y0=d.y;});}};});\n\n/***/ }),\n/* 117 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export collapseChildren */\n/* unused harmony export expandChildren */\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = toggleChildren;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = visit;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getNodeGroupByDepthCount;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = getTooltipString;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_ramda__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_ramda___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_ramda__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__sortAndSerialize__ = __webpack_require__(118);\nfunction collapseChildren(node){if(node.children){node._children=node.children;node._children.forEach(collapseChildren);node.children=null;}}function expandChildren(node){if(node._children){node.children=node._children;node.children.forEach(expandChildren);node._children=null;}}function toggleChildren(node){if(node.children){node._children=node.children;node.children=null;}else if(node._children){node.children=node._children;node._children=null;}return node;}function visit(parent,visitFn,childrenFn){if(!parent){return;}visitFn(parent);var children=childrenFn(parent);if(children){var count=children.length;for(var i=0;i<count;i++){visit(children[i],visitFn,childrenFn);}}}function getNodeGroupByDepthCount(rootNode){var nodeGroupByDepthCount=[1];var traverseFrom=function traverseFrom(node){var depth=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;if(!node.children||node.children.length===0){return 0;}if(nodeGroupByDepthCount.length<=depth+1){nodeGroupByDepthCount.push(0);}nodeGroupByDepthCount[depth+1]+=node.children.length;node.children.forEach(function(childNode){traverseFrom(childNode,depth+1);});};traverseFrom(rootNode);return nodeGroupByDepthCount;}function getTooltipString(node,i,_ref){var _ref$indentationSize=_ref.indentationSize,indentationSize=_ref$indentationSize===undefined?4:_ref$indentationSize;if(!Object(__WEBPACK_IMPORTED_MODULE_0_ramda__[\"is\"])(Object,node))return'';var spacer=Object(__WEBPACK_IMPORTED_MODULE_0_ramda__[\"join\"])('&nbsp;&nbsp;');var cr2br=Object(__WEBPACK_IMPORTED_MODULE_0_ramda__[\"replace\"])(/\\n/g,'<br/>');var spaces2nbsp=Object(__WEBPACK_IMPORTED_MODULE_0_ramda__[\"replace\"])(/\\s{2}/g,spacer(new Array(indentationSize)));var json2html=Object(__WEBPACK_IMPORTED_MODULE_0_ramda__[\"pipe\"])(__WEBPACK_IMPORTED_MODULE_1__sortAndSerialize__[\"a\" /* default */],cr2br,spaces2nbsp);var children=node.children||node._children;if(typeof node.value!=='undefined')return json2html(node.value);if(typeof node.object!=='undefined')return json2html(node.object);if(children&&children.length)return'childrenCount: '+children.length;return'empty';}\n\n/***/ }),\n/* 118 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = sortAndSerialize;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_ramda__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_ramda___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_ramda__);\nvar _typeof=typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};function sortObject(obj,strict){if(obj instanceof Array){var ary=void 0;if(strict){ary=obj.sort();}else{ary=obj;}return ary;}if(obj&&(typeof obj==='undefined'?'undefined':_typeof(obj))==='object'){var tObj={};Object.keys(obj).sort().forEach(function(key){return tObj[key]=sortObject(obj[key]);});return tObj;}return obj;}function sortAndSerialize(obj){return JSON.stringify(sortObject(obj,true),undefined,2);}\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar invariant = __webpack_require__(120);\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar splice = Array.prototype.splice;\n\nvar assign = Object.assign || /* istanbul ignore next */ function assign(target, source) {\n  getAllKeys(source).forEach(function(key) {\n    if (hasOwnProperty.call(source, key)) {\n      target[key] = source[key];\n    }\n  });\n  return target;\n};\n\nvar getAllKeys = typeof Object.getOwnPropertySymbols === 'function' ?\n  function(obj) { return Object.keys(obj).concat(Object.getOwnPropertySymbols(obj)) } :\n  /* istanbul ignore next */ function(obj) { return Object.keys(obj) };\n\n/* istanbul ignore next */\nfunction copy(object) {\n  if (object instanceof Array) {\n    return assign(object.constructor(object.length), object)\n  } else if (object && typeof object === 'object') {\n    var prototype = object.constructor && object.constructor.prototype\n    return assign(Object.create(prototype || null), object);\n  } else {\n    return object;\n  }\n}\n\nfunction newContext() {\n  var commands = assign({}, defaultCommands);\n  update.extend = function(directive, fn) {\n    commands[directive] = fn;\n  };\n  update.isEquals = function(a, b) { return a === b; };\n\n  return update;\n\n  function update(object, spec) {\n    if (!(Array.isArray(object) && Array.isArray(spec))) {\n      invariant(\n        !Array.isArray(spec),\n        'update(): You provided an invalid spec to update(). The spec may ' +\n        'not contain an array except as the value of $set, $push, $unshift, ' +\n        '$splice or any custom command allowing an array value.'\n      );\n    }\n\n    invariant(\n      typeof spec === 'object' && spec !== null,\n      'update(): You provided an invalid spec to update(). The spec and ' +\n      'every included key path must be plain objects containing one of the ' +\n      'following commands: %s.',\n      Object.keys(commands).join(', ')\n    );\n\n    var nextObject = object;\n    var index, key;\n    getAllKeys(spec).forEach(function(key) {\n      if (hasOwnProperty.call(commands, key)) {\n        var objectWasNextObject = object === nextObject;\n        nextObject = commands[key](spec[key], nextObject, spec, object);\n        if (objectWasNextObject && update.isEquals(nextObject, object)) {\n          nextObject = object;\n        }\n      } else {\n        var nextValueForKey = update(object[key], spec[key]);\n        if (!update.isEquals(nextValueForKey, nextObject[key]) || typeof nextValueForKey === 'undefined' && !hasOwnProperty.call(object, key)) {\n          if (nextObject === object) {\n            nextObject = copy(object);\n          }\n          nextObject[key] = nextValueForKey;\n        }\n      }\n    })\n    return nextObject;\n  }\n\n}\n\nvar defaultCommands = {\n  $push: function(value, nextObject, spec) {\n    invariantPushAndUnshift(nextObject, spec, '$push');\n    return value.length ? nextObject.concat(value) : nextObject;\n  },\n  $unshift: function(value, nextObject, spec) {\n    invariantPushAndUnshift(nextObject, spec, '$unshift');\n    return value.length ? value.concat(nextObject) : nextObject;\n  },\n  $splice: function(value, nextObject, spec, originalObject) {\n    invariantSplices(nextObject, spec);\n    value.forEach(function(args) {\n      invariantSplice(args);\n      if (nextObject === originalObject && args.length) nextObject = copy(originalObject);\n      splice.apply(nextObject, args);\n    });\n    return nextObject;\n  },\n  $set: function(value, nextObject, spec) {\n    invariantSet(spec);\n    return value;\n  },\n  $unset: function(value, nextObject, spec, originalObject) {\n    invariant(\n      Array.isArray(value),\n      'update(): expected spec of $unset to be an array; got %s. ' +\n      'Did you forget to wrap the key(s) in an array?',\n      value\n    );\n    value.forEach(function(key) {\n      if (Object.hasOwnProperty.call(nextObject, key)) {\n        if (nextObject === originalObject) nextObject = copy(originalObject);\n        delete nextObject[key];\n      }\n    });\n    return nextObject;\n  },\n  $merge: function(value, nextObject, spec, originalObject) {\n    invariantMerge(nextObject, value);\n    getAllKeys(value).forEach(function(key) {\n      if (value[key] !== nextObject[key]) {\n        if (nextObject === originalObject) nextObject = copy(originalObject);\n        nextObject[key] = value[key];\n      }\n    });\n    return nextObject;\n  },\n  $apply: function(value, original) {\n    invariantApply(value);\n    return value(original);\n  }\n};\n\nmodule.exports = newContext();\nmodule.exports.newContext = newContext;\n\n// invariants\n\nfunction invariantPushAndUnshift(value, spec, command) {\n  invariant(\n    Array.isArray(value),\n    'update(): expected target of %s to be an array; got %s.',\n    command,\n    value\n  );\n  var specValue = spec[command];\n  invariant(\n    Array.isArray(specValue),\n    'update(): expected spec of %s to be an array; got %s. ' +\n    'Did you forget to wrap your parameter in an array?',\n    command,\n    specValue\n  );\n}\n\nfunction invariantSplices(value, spec) {\n  invariant(\n    Array.isArray(value),\n    'Expected $splice target to be an array; got %s',\n    value\n  );\n  invariantSplice(spec['$splice']);\n}\n\nfunction invariantSplice(value) {\n  invariant(\n    Array.isArray(value),\n    'update(): expected spec of $splice to be an array of arrays; got %s. ' +\n    'Did you forget to wrap your parameters in an array?',\n    value\n  );\n}\n\nfunction invariantApply(fn) {\n  invariant(\n    typeof fn === 'function',\n    'update(): expected spec of $apply to be a function; got %s.',\n    fn\n  );\n}\n\nfunction invariantSet(spec) {\n  invariant(\n    Object.keys(spec).length === 1,\n    'Cannot have more than one key in an object with $set'\n  );\n}\n\nfunction invariantMerge(target, specValue) {\n  invariant(\n    specValue && typeof specValue === 'object',\n    'update(): $merge expects a spec of type \\'object\\'; got %s',\n    specValue\n  );\n  invariant(\n    target && typeof target === 'object',\n    'update(): $merge expects a target of type \\'object\\'; got %s',\n    target\n  );\n}\n\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (false) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// static/js/main.52a767d2.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 39);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8ef59ea3d3dd78f5d8dd","//  Ramda v0.17.1\n//  https://github.com/ramda/ramda\n//  (c) 2013-2015 Scott Sauyet, Michael Hurley, and David Chambers\n//  Ramda may be freely distributed under the MIT license.\n\n;(function() {\n\n  'use strict';\n\n  /**\n     * A special placeholder value used to specify \"gaps\" within curried functions,\n     * allowing partial application of any combination of arguments,\n     * regardless of their positions.\n     *\n     * If `g` is a curried ternary function and `_` is `R.__`, the following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2, _)(1, 3)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @constant\n     * @memberOf R\n     * @category Function\n     * @example\n     *\n     *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n     *      greet('Alice'); //=> 'Hello, Alice!'\n     */\n    var __ = { '@@functional/placeholder': true };\n\n    // jshint unused:vars\n    var _arity = function _arity(n, fn) {\n        // jshint unused:vars\n        switch (n) {\n        case 0:\n            return function () {\n                return fn.apply(this, arguments);\n            };\n        case 1:\n            return function (a0) {\n                return fn.apply(this, arguments);\n            };\n        case 2:\n            return function (a0, a1) {\n                return fn.apply(this, arguments);\n            };\n        case 3:\n            return function (a0, a1, a2) {\n                return fn.apply(this, arguments);\n            };\n        case 4:\n            return function (a0, a1, a2, a3) {\n                return fn.apply(this, arguments);\n            };\n        case 5:\n            return function (a0, a1, a2, a3, a4) {\n                return fn.apply(this, arguments);\n            };\n        case 6:\n            return function (a0, a1, a2, a3, a4, a5) {\n                return fn.apply(this, arguments);\n            };\n        case 7:\n            return function (a0, a1, a2, a3, a4, a5, a6) {\n                return fn.apply(this, arguments);\n            };\n        case 8:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                return fn.apply(this, arguments);\n            };\n        case 9:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                return fn.apply(this, arguments);\n            };\n        case 10:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                return fn.apply(this, arguments);\n            };\n        default:\n            throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n        }\n    };\n\n    var _cloneRegExp = function _cloneRegExp(pattern) {\n        return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n    };\n\n    var _complement = function _complement(f) {\n        return function () {\n            return !f.apply(this, arguments);\n        };\n    };\n\n    /**\n     * Private `concat` function to merge two array-like objects.\n     *\n     * @private\n     * @param {Array|Arguments} [set1=[]] An array-like object.\n     * @param {Array|Arguments} [set2=[]] An array-like object.\n     * @return {Array} A new, merged array.\n     * @example\n     *\n     *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     */\n    var _concat = function _concat(set1, set2) {\n        set1 = set1 || [];\n        set2 = set2 || [];\n        var idx;\n        var len1 = set1.length;\n        var len2 = set2.length;\n        var result = [];\n        idx = 0;\n        while (idx < len1) {\n            result[result.length] = set1[idx];\n            idx += 1;\n        }\n        idx = 0;\n        while (idx < len2) {\n            result[result.length] = set2[idx];\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _containsWith = function _containsWith(pred, x, list) {\n        var idx = 0, len = list.length;\n        while (idx < len) {\n            if (pred(x, list[idx])) {\n                return true;\n            }\n            idx += 1;\n        }\n        return false;\n    };\n\n    /**\n     * Optimized internal two-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry1 = function _curry1(fn) {\n        return function f1(a) {\n            if (arguments.length === 0) {\n                return f1;\n            } else if (a != null && a['@@functional/placeholder'] === true) {\n                return f1;\n            } else {\n                return fn.apply(this, arguments);\n            }\n        };\n    };\n\n    /**\n     * Optimized internal two-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry2 = function _curry2(fn) {\n        return function f2(a, b) {\n            var n = arguments.length;\n            if (n === 0) {\n                return f2;\n            } else if (n === 1 && a != null && a['@@functional/placeholder'] === true) {\n                return f2;\n            } else if (n === 1) {\n                return _curry1(function (b) {\n                    return fn(a, b);\n                });\n            } else if (n === 2 && a != null && a['@@functional/placeholder'] === true && b != null && b['@@functional/placeholder'] === true) {\n                return f2;\n            } else if (n === 2 && a != null && a['@@functional/placeholder'] === true) {\n                return _curry1(function (a) {\n                    return fn(a, b);\n                });\n            } else if (n === 2 && b != null && b['@@functional/placeholder'] === true) {\n                return _curry1(function (b) {\n                    return fn(a, b);\n                });\n            } else {\n                return fn(a, b);\n            }\n        };\n    };\n\n    /**\n     * Optimized internal three-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry3 = function _curry3(fn) {\n        return function f3(a, b, c) {\n            var n = arguments.length;\n            if (n === 0) {\n                return f3;\n            } else if (n === 1 && a != null && a['@@functional/placeholder'] === true) {\n                return f3;\n            } else if (n === 1) {\n                return _curry2(function (b, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 2 && a != null && a['@@functional/placeholder'] === true && b != null && b['@@functional/placeholder'] === true) {\n                return f3;\n            } else if (n === 2 && a != null && a['@@functional/placeholder'] === true) {\n                return _curry2(function (a, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 2 && b != null && b['@@functional/placeholder'] === true) {\n                return _curry2(function (b, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 2) {\n                return _curry1(function (c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && a != null && a['@@functional/placeholder'] === true && b != null && b['@@functional/placeholder'] === true && c != null && c['@@functional/placeholder'] === true) {\n                return f3;\n            } else if (n === 3 && a != null && a['@@functional/placeholder'] === true && b != null && b['@@functional/placeholder'] === true) {\n                return _curry2(function (a, b) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && a != null && a['@@functional/placeholder'] === true && c != null && c['@@functional/placeholder'] === true) {\n                return _curry2(function (a, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && b != null && b['@@functional/placeholder'] === true && c != null && c['@@functional/placeholder'] === true) {\n                return _curry2(function (b, c) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && a != null && a['@@functional/placeholder'] === true) {\n                return _curry1(function (a) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && b != null && b['@@functional/placeholder'] === true) {\n                return _curry1(function (b) {\n                    return fn(a, b, c);\n                });\n            } else if (n === 3 && c != null && c['@@functional/placeholder'] === true) {\n                return _curry1(function (c) {\n                    return fn(a, b, c);\n                });\n            } else {\n                return fn(a, b, c);\n            }\n        };\n    };\n\n    /**\n     * Internal curryN function.\n     *\n     * @private\n     * @category Function\n     * @param {Number} length The arity of the curried function.\n     * @return {array} An array of arguments received thus far.\n     * @param {Function} fn The function to curry.\n     */\n    var _curryN = function _curryN(length, received, fn) {\n        return function () {\n            var combined = [];\n            var argsIdx = 0;\n            var left = length;\n            var combinedIdx = 0;\n            while (combinedIdx < received.length || argsIdx < arguments.length) {\n                var result;\n                if (combinedIdx < received.length && (received[combinedIdx] == null || received[combinedIdx]['@@functional/placeholder'] !== true || argsIdx >= arguments.length)) {\n                    result = received[combinedIdx];\n                } else {\n                    result = arguments[argsIdx];\n                    argsIdx += 1;\n                }\n                combined[combinedIdx] = result;\n                if (result == null || result['@@functional/placeholder'] !== true) {\n                    left -= 1;\n                }\n                combinedIdx += 1;\n            }\n            return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n        };\n    };\n\n    var _filter = function _filter(fn, list) {\n        var idx = 0, len = list.length, result = [];\n        while (idx < len) {\n            if (fn(list[idx])) {\n                result[result.length] = list[idx];\n            }\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _forceReduced = function _forceReduced(x) {\n        return {\n            '@@transducer/value': x,\n            '@@transducer/reduced': true\n        };\n    };\n\n    /**\n     * @private\n     * @param {Function} fn The strategy for extracting function names from an object\n     * @return {Function} A function that takes an object and returns an array of function names.\n     */\n    var _functionsWith = function _functionsWith(fn) {\n        return function (obj) {\n            return _filter(function (key) {\n                return typeof obj[key] === 'function';\n            }, fn(obj));\n        };\n    };\n\n    var _has = function _has(prop, obj) {\n        return Object.prototype.hasOwnProperty.call(obj, prop);\n    };\n\n    var _identity = function _identity(x) {\n        return x;\n    };\n\n    /**\n     * Tests whether or not an object is an array.\n     *\n     * @private\n     * @param {*} val The object to test.\n     * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n     * @example\n     *\n     *      _isArray([]); //=> true\n     *      _isArray(null); //=> false\n     *      _isArray({}); //=> false\n     */\n    var _isArray = Array.isArray || function _isArray(val) {\n        return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n    };\n\n    /**\n     * Determine if the passed argument is an integer.\n     *\n     * @private\n     * @param {*} n\n     * @category Type\n     * @return {Boolean}\n     */\n    var _isInteger = Number.isInteger || function _isInteger(n) {\n        return n << 0 === n;\n    };\n\n    var _isNumber = function _isNumber(x) {\n        return Object.prototype.toString.call(x) === '[object Number]';\n    };\n\n    var _isString = function _isString(x) {\n        return Object.prototype.toString.call(x) === '[object String]';\n    };\n\n    var _isTransformer = function _isTransformer(obj) {\n        return typeof obj['@@transducer/step'] === 'function';\n    };\n\n    var _map = function _map(fn, list) {\n        var idx = 0, len = list.length, result = Array(len);\n        while (idx < len) {\n            result[idx] = fn(list[idx]);\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _pipe = function _pipe(f, g) {\n        return function () {\n            return g.call(this, f.apply(this, arguments));\n        };\n    };\n\n    var _pipeP = function _pipeP(f, g) {\n        return function () {\n            var ctx = this;\n            return f.apply(ctx, arguments).then(function (x) {\n                return g.call(ctx, x);\n            });\n        };\n    };\n\n    var _quote = function _quote(s) {\n        return '\"' + s.replace(/\"/g, '\\\\\"') + '\"';\n    };\n\n    var _reduced = function _reduced(x) {\n        return x && x['@@transducer/reduced'] ? x : {\n            '@@transducer/value': x,\n            '@@transducer/reduced': true\n        };\n    };\n\n    /**\n     * An optimized, private array `slice` implementation.\n     *\n     * @private\n     * @param {Arguments|Array} args The array or arguments object to consider.\n     * @param {Number} [from=0] The array index to slice from, inclusive.\n     * @param {Number} [to=args.length] The array index to slice to, exclusive.\n     * @return {Array} A new, sliced array.\n     * @example\n     *\n     *      _slice([1, 2, 3, 4, 5], 1, 3); //=> [2, 3]\n     *\n     *      var firstThreeArgs = function(a, b, c, d) {\n     *        return _slice(arguments, 0, 3);\n     *      };\n     *      firstThreeArgs(1, 2, 3, 4); //=> [1, 2, 3]\n     */\n    var _slice = function _slice(args, from, to) {\n        switch (arguments.length) {\n        case 1:\n            return _slice(args, 0, args.length);\n        case 2:\n            return _slice(args, from, args.length);\n        default:\n            var list = [];\n            var idx = 0;\n            var len = Math.max(0, Math.min(args.length, to) - from);\n            while (idx < len) {\n                list[idx] = args[from + idx];\n                idx += 1;\n            }\n            return list;\n        }\n    };\n\n    /**\n     * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n     */\n    var _toISOString = function () {\n        var pad = function pad(n) {\n            return (n < 10 ? '0' : '') + n;\n        };\n        return typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n            return d.toISOString();\n        } : function _toISOString(d) {\n            return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n        };\n    }();\n\n    var _xdropRepeatsWith = function () {\n        function XDropRepeatsWith(pred, xf) {\n            this.xf = xf;\n            this.pred = pred;\n            this.lastValue = undefined;\n            this.seenFirstValue = false;\n        }\n        XDropRepeatsWith.prototype['@@transducer/init'] = function () {\n            return this.xf['@@transducer/init']();\n        };\n        XDropRepeatsWith.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](result);\n        };\n        XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n            var sameAsLast = false;\n            if (!this.seenFirstValue) {\n                this.seenFirstValue = true;\n            } else if (this.pred(this.lastValue, input)) {\n                sameAsLast = true;\n            }\n            this.lastValue = input;\n            return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdropRepeatsWith(pred, xf) {\n            return new XDropRepeatsWith(pred, xf);\n        });\n    }();\n\n    var _xfBase = {\n        init: function () {\n            return this.xf['@@transducer/init']();\n        },\n        result: function (result) {\n            return this.xf['@@transducer/result'](result);\n        }\n    };\n\n    var _xfilter = function () {\n        function XFilter(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XFilter.prototype['@@transducer/init'] = _xfBase.init;\n        XFilter.prototype['@@transducer/result'] = _xfBase.result;\n        XFilter.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n        };\n        return _curry2(function _xfilter(f, xf) {\n            return new XFilter(f, xf);\n        });\n    }();\n\n    var _xfind = function () {\n        function XFind(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.found = false;\n        }\n        XFind.prototype['@@transducer/init'] = _xfBase.init;\n        XFind.prototype['@@transducer/result'] = function (result) {\n            if (!this.found) {\n                result = this.xf['@@transducer/step'](result, void 0);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XFind.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.found = true;\n                result = _reduced(this.xf['@@transducer/step'](result, input));\n            }\n            return result;\n        };\n        return _curry2(function _xfind(f, xf) {\n            return new XFind(f, xf);\n        });\n    }();\n\n    var _xfindIndex = function () {\n        function XFindIndex(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.idx = -1;\n            this.found = false;\n        }\n        XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n        XFindIndex.prototype['@@transducer/result'] = function (result) {\n            if (!this.found) {\n                result = this.xf['@@transducer/step'](result, -1);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n            this.idx += 1;\n            if (this.f(input)) {\n                this.found = true;\n                result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n            }\n            return result;\n        };\n        return _curry2(function _xfindIndex(f, xf) {\n            return new XFindIndex(f, xf);\n        });\n    }();\n\n    var _xfindLast = function () {\n        function XFindLast(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n        XFindLast.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n        };\n        XFindLast.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.last = input;\n            }\n            return result;\n        };\n        return _curry2(function _xfindLast(f, xf) {\n            return new XFindLast(f, xf);\n        });\n    }();\n\n    var _xfindLastIndex = function () {\n        function XFindLastIndex(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.idx = -1;\n            this.lastIdx = -1;\n        }\n        XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n        XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n        };\n        XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n            this.idx += 1;\n            if (this.f(input)) {\n                this.lastIdx = this.idx;\n            }\n            return result;\n        };\n        return _curry2(function _xfindLastIndex(f, xf) {\n            return new XFindLastIndex(f, xf);\n        });\n    }();\n\n    var _xmap = function () {\n        function XMap(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XMap.prototype['@@transducer/init'] = _xfBase.init;\n        XMap.prototype['@@transducer/result'] = _xfBase.result;\n        XMap.prototype['@@transducer/step'] = function (result, input) {\n            return this.xf['@@transducer/step'](result, this.f(input));\n        };\n        return _curry2(function _xmap(f, xf) {\n            return new XMap(f, xf);\n        });\n    }();\n\n    var _xtake = function () {\n        function XTake(n, xf) {\n            this.xf = xf;\n            this.n = n;\n        }\n        XTake.prototype['@@transducer/init'] = _xfBase.init;\n        XTake.prototype['@@transducer/result'] = _xfBase.result;\n        XTake.prototype['@@transducer/step'] = function (result, input) {\n            if (this.n === 0) {\n                return _reduced(result);\n            } else {\n                this.n -= 1;\n                return this.xf['@@transducer/step'](result, input);\n            }\n        };\n        return _curry2(function _xtake(n, xf) {\n            return new XTake(n, xf);\n        });\n    }();\n\n    var _xtakeWhile = function () {\n        function XTakeWhile(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n        XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n        };\n        return _curry2(function _xtakeWhile(f, xf) {\n            return new XTakeWhile(f, xf);\n        });\n    }();\n\n    var _xwrap = function () {\n        function XWrap(fn) {\n            this.f = fn;\n        }\n        XWrap.prototype['@@transducer/init'] = function () {\n            throw new Error('init not implemented on XWrap');\n        };\n        XWrap.prototype['@@transducer/result'] = function (acc) {\n            return acc;\n        };\n        XWrap.prototype['@@transducer/step'] = function (acc, x) {\n            return this.f(acc, x);\n        };\n        return function _xwrap(fn) {\n            return new XWrap(fn);\n        };\n    }();\n\n    /**\n     * Adds two numbers. Equivalent to `a + b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Number}\n     * @see R.subtract\n     * @example\n     *\n     *      R.add(2, 3);       //=>  5\n     *      R.add(7)(10);      //=> 17\n     */\n    var add = _curry2(function add(a, b) {\n        return a + b;\n    });\n\n    /**\n     * Applies a function to the value at the given index of an array,\n     * returning a new copy of the array with the element at the given\n     * index replaced with the result of the function application.\n     * @see R.update\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> a) -> Number -> [a] -> [a]\n     * @param {Function} fn The function to apply.\n     * @param {Number} idx The index.\n     * @param {Array|Arguments} list An array-like object whose value\n     *        at the supplied index will be replaced.\n     * @return {Array} A copy of the supplied array-like object with\n     *         the element at index `idx` replaced with the value\n     *         returned by applying `fn` to the existing element.\n     * @example\n     *\n     *      R.adjust(R.add(10), 1, [0, 1, 2]);     //=> [0, 11, 2]\n     *      R.adjust(R.add(10))(1)([0, 1, 2]);     //=> [0, 11, 2]\n     */\n    var adjust = _curry3(function adjust(fn, idx, list) {\n        if (idx >= list.length || idx < -list.length) {\n            return list;\n        }\n        var start = idx < 0 ? list.length : 0;\n        var _idx = start + idx;\n        var _list = _concat(list);\n        _list[_idx] = fn(list[_idx]);\n        return _list;\n    });\n\n    /**\n     * Returns a function that always returns the given value. Note that for\n     * non-primitives the value returned is a reference to the original value.\n     *\n     * This function is known as `const`, `constant`, or `K` (for K combinator)\n     * in other languages and libraries.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> (* -> a)\n     * @param {*} val The value to wrap in a function\n     * @return {Function} A Function :: * -> val.\n     * @example\n     *\n     *      var t = R.always('Tee');\n     *      t(); //=> 'Tee'\n     */\n    var always = _curry1(function always(val) {\n        return function () {\n            return val;\n        };\n    });\n\n    /**\n     * Returns a new list, composed of n-tuples of consecutive elements\n     * If `n` is greater than the length of the list, an empty list is returned.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @param {Number} n The size of the tuples to create\n     * @param {Array} list The list to split into `n`-tuples\n     * @return {Array} The new list.\n     * @example\n     *\n     *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n     *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n     *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n     */\n    var aperture = _curry2(function aperture(n, list) {\n        var idx = 0;\n        var limit = list.length - (n - 1);\n        var acc = new Array(limit >= 0 ? limit : 0);\n        while (idx < limit) {\n            acc[idx] = _slice(list, idx, idx + n);\n            idx += 1;\n        }\n        return acc;\n    });\n\n    /**\n     * Returns a new list containing the contents of the given list, followed by the given\n     * element.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The element to add to the end of the new list.\n     * @param {Array} list The list whose contents will be added to the beginning of the output\n     *        list.\n     * @return {Array} A new list containing the contents of the old list followed by `el`.\n     * @see R.prepend\n     * @example\n     *\n     *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n     *      R.append('tests', []); //=> ['tests']\n     *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n     */\n    var append = _curry2(function append(el, list) {\n        return _concat(list, [el]);\n    });\n\n    /**\n     * Applies function `fn` to the argument list `args`. This is useful for\n     * creating a fixed-arity function from a variadic function. `fn` should\n     * be a bound function if context is significant.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (*... -> a) -> [*] -> a\n     * @param {Function} fn\n     * @param {Array} args\n     * @return {*}\n     * @see R.call, R.unapply\n     * @example\n     *\n     *      var nums = [1, 2, 3, -99, 42, 6, 7];\n     *      R.apply(Math.max, nums); //=> 42\n     */\n    var apply = _curry2(function apply(fn, args) {\n        return fn.apply(this, args);\n    });\n\n    /**\n     * Makes a shallow clone of an object, setting or overriding the specified\n     * property with the given value.  Note that this copies and flattens\n     * prototype properties onto the new object as well.  All non-primitive\n     * properties are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig String -> a -> {k: v} -> {k: v}\n     * @param {String} prop the property name to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except for the specified property.\n     * @see R.dissoc\n     * @example\n     *\n     *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n     */\n    var assoc = _curry3(function assoc(prop, val, obj) {\n        var result = {};\n        for (var p in obj) {\n            result[p] = obj[p];\n        }\n        result[prop] = val;\n        return result;\n    });\n\n    /**\n     * Makes a shallow clone of an object, setting or overriding the nodes\n     * required to create the given path, and placing the specific value at the\n     * tail end of that path.  Note that this copies and flattens prototype\n     * properties onto the new object as well.  All non-primitive properties\n     * are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> a -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except along the specified path.\n     * @see R.dissocPath\n     * @example\n     *\n     *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n     */\n    var assocPath = _curry3(function assocPath(path, val, obj) {\n        switch (path.length) {\n        case 0:\n            return obj;\n        case 1:\n            return assoc(path[0], val, obj);\n        default:\n            return assoc(path[0], assocPath(_slice(path, 1), val, Object(obj[path[0]])), obj);\n        }\n    });\n\n    /**\n     * Creates a function that is bound to a context.\n     * Note: `R.bind` does not provide the additional argument-binding capabilities of\n     * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @category Object\n     * @see R.partial\n     * @sig (* -> *) -> {*} -> (* -> *)\n     * @param {Function} fn The function to bind to context\n     * @param {Object} thisObj The context to bind `fn` to\n     * @return {Function} A function that will execute in the context of `thisObj`.\n     */\n    var bind = _curry2(function bind(fn, thisObj) {\n        return _arity(fn.length, function () {\n            return fn.apply(thisObj, arguments);\n        });\n    });\n\n    /**\n     * A function wrapping calls to the two functions in an `&&` operation, returning the result of the first\n     * function if it is false-y and the result of the second function otherwise.  Note that this is\n     * short-circuited, meaning that the second function will not be invoked if the first returns a false-y\n     * value.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n     * @see R.and\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0 };\n     *      var f = R.both(gt10, even);\n     *      f(100); //=> true\n     *      f(101); //=> false\n     */\n    var both = _curry2(function both(f, g) {\n        return function _both() {\n            return f.apply(this, arguments) && g.apply(this, arguments);\n        };\n    });\n\n    /**\n     * Makes a comparator function out of a function that reports whether the first element is less than the second.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a, b -> Boolean) -> (a, b -> Number)\n     * @param {Function} pred A predicate function of arity two.\n     * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`.\n     * @example\n     *\n     *      var cmp = R.comparator(function(a, b) {\n     *        return a.age < b.age;\n     *      });\n     *      var people = [\n     *        // ...\n     *      ];\n     *      R.sort(cmp, people);\n     */\n    var comparator = _curry1(function comparator(pred) {\n        return function (a, b) {\n            return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n        };\n    });\n\n    /**\n     * Takes a function `f` and returns a function `g` such that:\n     *\n     *   - applying `g` to zero or more arguments will give __true__ if applying\n     *     the same arguments to `f` gives a logical __false__ value; and\n     *\n     *   - applying `g` to zero or more arguments will give __false__ if applying\n     *     the same arguments to `f` gives a logical __true__ value.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> *) -> (*... -> Boolean)\n     * @param {Function} f\n     * @return {Function}\n     * @see R.not\n     * @example\n     *\n     *      var isEven = function(n) { return n % 2 === 0; };\n     *      var isOdd = R.complement(isEven);\n     *      isOdd(21); //=> true\n     *      isOdd(42); //=> false\n     */\n    var complement = _curry1(_complement);\n\n    /**\n     * Returns a function, `fn`, which encapsulates if/else-if/else logic.\n     * `R.cond` takes a list of [predicate, transform] pairs. All of the\n     * arguments to `fn` are applied to each of the predicates in turn\n     * until one returns a \"truthy\" value, at which point `fn` returns the\n     * result of applying its arguments to the corresponding transformer.\n     * If none of the predicates matches, `fn` returns undefined.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n     * @param {Array} pairs\n     * @return {Function}\n     * @example\n     *\n     *      var fn = R.cond([\n     *        [R.equals(0),   R.always('water freezes at 0°C')],\n     *        [R.equals(100), R.always('water boils at 100°C')],\n     *        [R.T,           function(temp) { return 'nothing special happens at ' + temp + '°C'; }]\n     *      ]);\n     *      fn(0); //=> 'water freezes at 0°C'\n     *      fn(50); //=> 'nothing special happens at 50°C'\n     *      fn(100); //=> 'water boils at 100°C'\n     */\n    var cond = _curry1(function cond(pairs) {\n        return function () {\n            var idx = 0;\n            while (idx < pairs.length) {\n                if (pairs[idx][0].apply(this, arguments)) {\n                    return pairs[idx][1].apply(this, arguments);\n                }\n                idx += 1;\n            }\n        };\n    });\n\n    /**\n     * Returns `true` if the `x` is found in the `list`, using `pred` as an\n     * equality predicate for `x`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a, a -> Boolean) -> a -> [a] -> Boolean\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {*} x The item to find\n     * @param {Array} list The list to iterate over\n     * @return {Boolean} `true` if `x` is in `list`, else `false`.\n     * @example\n     *\n     *      var xs = [{x: 12}, {x: 11}, {x: 10}];\n     *      R.containsWith(function(a, b) { return a.x === b.x; }, {x: 10}, xs); //=> true\n     *      R.containsWith(function(a, b) { return a.x === b.x; }, {x: 1}, xs); //=> false\n     */\n    var containsWith = _curry3(_containsWith);\n\n    /**\n     * Counts the elements of a list according to how many match each value\n     * of a key generated by the supplied function. Returns an object\n     * mapping the keys produced by `fn` to the number of occurrences in\n     * the list. Note that all keys are coerced to strings because of how\n     * JavaScript objects work.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a -> String) -> [a] -> {*}\n     * @param {Function} fn The function used to map values to keys.\n     * @param {Array} list The list to count elements from.\n     * @return {Object} An object mapping keys to number of occurrences in the list.\n     * @example\n     *\n     *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n     *      var letters = R.split('', 'abcABCaaaBBc');\n     *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n     *      R.countBy(R.toLower)(letters);   //=> {'a': 5, 'b': 4, 'c': 3}\n     */\n    var countBy = _curry2(function countBy(fn, list) {\n        var counts = {};\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            var key = fn(list[idx]);\n            counts[key] = (_has(key, counts) ? counts[key] : 0) + 1;\n            idx += 1;\n        }\n        return counts;\n    });\n\n    /**\n     * Creates an object containing a single key:value pair.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig String -> a -> {String:a}\n     * @param {String} key\n     * @param {*} val\n     * @return {Object}\n     * @example\n     *\n     *      var matchPhrases = R.compose(\n     *        R.createMapEntry('must'),\n     *        R.map(R.createMapEntry('match_phrase'))\n     *      );\n     *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n     */\n    var createMapEntry = _curry2(function createMapEntry(key, val) {\n        var obj = {};\n        obj[key] = val;\n        return obj;\n    });\n\n    /**\n     * Returns a curried equivalent of the provided function, with the\n     * specified arity. The curried function has two unusual capabilities.\n     * First, its arguments needn't be provided one at a time. If `g` is\n     * `R.curryN(3, f)`, the following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`,\n     * the following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curry\n     * @example\n     *\n     *      var addFourNumbers = function() {\n     *        return R.sum([].slice.call(arguments, 0, 4));\n     *      };\n     *\n     *      var curriedAddFourNumbers = R.curryN(4, addFourNumbers);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n    var curryN = _curry2(function curryN(length, fn) {\n        if (length === 1) {\n            return _curry1(fn);\n        }\n        return _arity(length, _curryN(length, [], fn));\n    });\n\n    /**\n     * Decrements its argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @see R.inc\n     * @example\n     *\n     *      R.dec(42); //=> 41\n     */\n    var dec = add(-1);\n\n    /**\n     * Returns the second argument if it is not null or undefined. If it is null\n     * or undefined, the first (default) argument is returned.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig a -> b -> a | b\n     * @param {a} val The default value.\n     * @param {b} val The value to return if it is not null or undefined\n     * @return {*} The the second value or the default value\n     * @example\n     *\n     *      var defaultTo42 = defaultTo(42);\n     *\n     *      defaultTo42(null);  //=> 42\n     *      defaultTo42(undefined);  //=> 42\n     *      defaultTo42('Ramda');  //=> 'Ramda'\n     */\n    var defaultTo = _curry2(function defaultTo(d, v) {\n        return v == null ? d : v;\n    });\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not contained in the second list.\n     * Duplication is determined according to the value returned by applying the supplied predicate to two list\n     * elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a,a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @see R.difference\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @example\n     *\n     *      function cmp(x, y) { return x.a === y.a; }\n     *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n     *      var l2 = [{a: 3}, {a: 4}];\n     *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n     */\n    var differenceWith = _curry3(function differenceWith(pred, first, second) {\n        var out = [];\n        var idx = 0;\n        var firstLen = first.length;\n        var containsPred = containsWith(pred);\n        while (idx < firstLen) {\n            if (!containsPred(first[idx], second) && !containsPred(first[idx], out)) {\n                out[out.length] = first[idx];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new object that does not contain a `prop` property.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig String -> {k: v} -> {k: v}\n     * @param {String} prop the name of the property to dissociate\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original but without the specified property\n     * @see R.assoc\n     * @example\n     *\n     *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n     */\n    var dissoc = _curry2(function dissoc(prop, obj) {\n        var result = {};\n        for (var p in obj) {\n            if (p !== prop) {\n                result[p] = obj[p];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Makes a shallow clone of an object, omitting the property at the\n     * given path. Note that this copies and flattens prototype properties\n     * onto the new object as well.  All non-primitive properties are copied\n     * by reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object without the property at path\n     * @see R.assocPath\n     * @example\n     *\n     *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n     */\n    var dissocPath = _curry2(function dissocPath(path, obj) {\n        switch (path.length) {\n        case 0:\n            return obj;\n        case 1:\n            return dissoc(path[0], obj);\n        default:\n            var head = path[0];\n            var tail = _slice(path, 1);\n            return obj[head] == null ? obj : assoc(head, dissocPath(tail, obj[head]), obj);\n        }\n    });\n\n    /**\n     * Divides two numbers. Equivalent to `a / b`.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a / b`.\n     * @see R.multiply\n     * @example\n     *\n     *      R.divide(71, 100); //=> 0.71\n     *\n     *      var half = R.divide(R.__, 2);\n     *      half(42); //=> 21\n     *\n     *      var reciprocal = R.divide(1);\n     *      reciprocal(4);   //=> 0.25\n     */\n    var divide = _curry2(function divide(a, b) {\n        return a / b;\n    });\n\n    /**\n     * Returns a new list containing all but last the`n` elements of a given list,\n     * passing each value from the right to the supplied predicate function, skipping\n     * elements while the predicate function returns `true`. The predicate function\n     * is passed one argument: (value)*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.takeLastWhile\n     * @example\n     *\n     *      var lteThree = function(x) {\n     *        return x <= 3;\n     *      };\n     *\n     *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2]\n     */\n    var dropLastWhile = _curry2(function dropLastWhile(pred, list) {\n        var idx = list.length - 1;\n        while (idx >= 0 && pred(list[idx])) {\n            idx -= 1;\n        }\n        return _slice(list, 0, idx + 1);\n    });\n\n    /**\n     * A function wrapping calls to the two functions in an `||` operation, returning the result of the first\n     * function if it is truth-y and the result of the second function otherwise.  Note that this is\n     * short-circuited, meaning that the second function will not be invoked if the first returns a truth-y\n     * value.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n     * @see R.or\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0 };\n     *      var f = R.either(gt10, even);\n     *      f(101); //=> true\n     *      f(8); //=> true\n     */\n    var either = _curry2(function either(f, g) {\n        return function _either() {\n            return f.apply(this, arguments) || g.apply(this, arguments);\n        };\n    });\n\n    /**\n     * Returns the empty value of its argument's type. Ramda defines the empty\n     * value of Array (`[]`), Object (`{}`), and String (`''`). Other types are\n     * supported if they define `<Type>.empty` and/or `<Type>.prototype.empty`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> a\n     * @param {*} x\n     * @return {*}\n     * @example\n     *\n     *      R.empty(Just(42));      //=> Nothing()\n     *      R.empty([1, 2, 3]);     //=> []\n     *      R.empty('unicorns');    //=> ''\n     *      R.empty({x: 1, y: 2});  //=> {}\n     */\n    var empty = _curry1(function empty(x) {\n        if (x != null && typeof x.empty === 'function') {\n            return x.empty();\n        } else if (x != null && typeof x.constructor != null && typeof x.constructor.empty === 'function') {\n            return x.constructor.empty();\n        } else {\n            switch (Object.prototype.toString.call(x)) {\n            case '[object Array]':\n                return [];\n            case '[object Object]':\n                return {};\n            case '[object String]':\n                return '';\n            }\n        }\n    });\n\n    /**\n     * Creates a new object by recursively evolving a shallow copy of `object`, according to the\n     * `transformation` functions. All non-primitive properties are copied by reference.\n     *\n     * A `tranformation` function will not be invoked if its corresponding key does not exist in\n     * the evolved object.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n     * @param {Object} transformations The object specifying transformation functions to apply\n     *        to the object.\n     * @param {Object} object The object to be transformed.\n     * @return {Object} The transformed object.\n     * @example\n     *\n     *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n     *      var transformations = {\n     *        firstName: R.trim,\n     *        lastName: R.trim, // Will not get invoked.\n     *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n     *      };\n     *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n     */\n    var evolve = _curry2(function evolve(transformations, object) {\n        var transformation, key, type, result = {};\n        for (key in object) {\n            transformation = transformations[key];\n            type = typeof transformation;\n            result[key] = type === 'function' ? transformation(object[key]) : type === 'object' ? evolve(transformations[key], object[key]) : object[key];\n        }\n        return result;\n    });\n\n    /**\n     * Creates a new object out of a list key-value pairs.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [[k,v]] -> {k: v}\n     * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n     * @return {Object} The object made by pairing up `keys` and `values`.\n     * @see R.toPairs\n     * @example\n     *\n     *      R.fromPairs([['a', 1], ['b', 2],  ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n     */\n    var fromPairs = _curry1(function fromPairs(pairs) {\n        var idx = 0, len = pairs.length, out = {};\n        while (idx < len) {\n            if (_isArray(pairs[idx]) && pairs[idx].length) {\n                out[pairs[idx][0]] = pairs[idx][1];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns `true` if the first argument is greater than the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @see R.lt\n     * @example\n     *\n     *      R.gt(2, 1); //=> true\n     *      R.gt(2, 2); //=> false\n     *      R.gt(2, 3); //=> false\n     *      R.gt('a', 'z'); //=> false\n     *      R.gt('z', 'a'); //=> true\n     */\n    var gt = _curry2(function gt(a, b) {\n        return a > b;\n    });\n\n    /**\n     * Returns `true` if the first argument is greater than or equal to the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean}\n     * @see R.lte\n     * @example\n     *\n     *      R.gte(2, 1); //=> true\n     *      R.gte(2, 2); //=> true\n     *      R.gte(2, 3); //=> false\n     *      R.gte('a', 'z'); //=> false\n     *      R.gte('z', 'a'); //=> true\n     */\n    var gte = _curry2(function gte(a, b) {\n        return a >= b;\n    });\n\n    /**\n     * Returns whether or not an object has an own property with\n     * the specified name\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      var hasName = R.has('name');\n     *      hasName({name: 'alice'});   //=> true\n     *      hasName({name: 'bob'});     //=> true\n     *      hasName({});                //=> false\n     *\n     *      var point = {x: 0, y: 0};\n     *      var pointHas = R.has(R.__, point);\n     *      pointHas('x');  //=> true\n     *      pointHas('y');  //=> true\n     *      pointHas('z');  //=> false\n     */\n    var has = _curry2(_has);\n\n    /**\n     * Returns whether or not an object or its prototype chain has\n     * a property with the specified name\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      function Rectangle(width, height) {\n     *        this.width = width;\n     *        this.height = height;\n     *      }\n     *      Rectangle.prototype.area = function() {\n     *        return this.width * this.height;\n     *      };\n     *\n     *      var square = new Rectangle(2, 2);\n     *      R.hasIn('width', square);  //=> true\n     *      R.hasIn('area', square);  //=> true\n     */\n    var hasIn = _curry2(function hasIn(prop, obj) {\n        return prop in obj;\n    });\n\n    /**\n     * Returns true if its arguments are identical, false otherwise. Values are\n     * identical if they reference the same memory. `NaN` is identical to `NaN`;\n     * `0` and `-0` are not identical.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      var o = {};\n     *      R.identical(o, o); //=> true\n     *      R.identical(1, 1); //=> true\n     *      R.identical(1, '1'); //=> false\n     *      R.identical([], []); //=> false\n     *      R.identical(0, -0); //=> false\n     *      R.identical(NaN, NaN); //=> true\n     */\n    // SameValue algorithm\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Step 6.a: NaN == NaN\n    var identical = _curry2(function identical(a, b) {\n        // SameValue algorithm\n        if (a === b) {\n            // Steps 1-5, 7-10\n            // Steps 6.b-6.e: +0 != -0\n            return a !== 0 || 1 / a === 1 / b;\n        } else {\n            // Step 6.a: NaN == NaN\n            return a !== a && b !== b;\n        }\n    });\n\n    /**\n     * A function that does nothing but return the parameter supplied to it. Good as a default\n     * or placeholder function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> a\n     * @param {*} x The value to return.\n     * @return {*} The input value, `x`.\n     * @example\n     *\n     *      R.identity(1); //=> 1\n     *\n     *      var obj = {};\n     *      R.identity(obj) === obj; //=> true\n     */\n    var identity = _curry1(_identity);\n\n    /**\n     * Creates a function that will process either the `onTrue` or the `onFalse` function depending\n     * upon the result of the `condition` predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n     * @param {Function} condition A predicate function\n     * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n     * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n     * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n     *                    function depending upon the result of the `condition` predicate.\n     * @example\n     *\n     *      // Flatten all arrays in the list but leave other values alone.\n     *      var flattenArrays = R.map(R.ifElse(Array.isArray, R.flatten, R.identity));\n     *\n     *      flattenArrays([[0], [[10], [8]], 1234, {}]); //=> [[0], [10, 8], 1234, {}]\n     *      flattenArrays([[[10], 123], [8, [10]], \"hello\"]); //=> [[10, 123], [8, 10], \"hello\"]\n     */\n    var ifElse = _curry3(function ifElse(condition, onTrue, onFalse) {\n        return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n            return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n        });\n    });\n\n    /**\n     * Increments its argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @see R.dec\n     * @example\n     *\n     *      R.inc(42); //=> 43\n     */\n    var inc = add(1);\n\n    /**\n     * Inserts the supplied element into the list, at index `index`.  _Note\n     * that this is not destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} index The position to insert the element\n     * @param {*} elt The element to insert into the Array\n     * @param {Array} list The list to insert into\n     * @return {Array} A new Array with `elt` inserted at `index`.\n     * @example\n     *\n     *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n     */\n    var insert = _curry3(function insert(idx, elt, list) {\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\n        var result = _slice(list);\n        result.splice(idx, 0, elt);\n        return result;\n    });\n\n    /**\n     * Inserts the sub-list into the list, at index `index`.  _Note  that this\n     * is not destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a] -> [a]\n     * @param {Number} index The position to insert the sub-list\n     * @param {Array} elts The sub-list to insert into the Array\n     * @param {Array} list The list to insert the sub-list into\n     * @return {Array} A new Array with `elts` inserted starting at `index`.\n     * @example\n     *\n     *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n     */\n    var insertAll = _curry3(function insertAll(idx, elts, list) {\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\n        return _concat(_concat(_slice(list, 0, idx), elts), _slice(list, idx));\n    });\n\n    /**\n     * See if an object (`val`) is an instance of the supplied constructor.\n     * This function will check up the inheritance chain, if any.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig (* -> {*}) -> a -> Boolean\n     * @param {Object} ctor A constructor\n     * @param {*} val The value to test\n     * @return {Boolean}\n     * @example\n     *\n     *      R.is(Object, {}); //=> true\n     *      R.is(Number, 1); //=> true\n     *      R.is(Object, 1); //=> false\n     *      R.is(String, 's'); //=> true\n     *      R.is(String, new String('')); //=> true\n     *      R.is(Object, new String('')); //=> true\n     *      R.is(Object, 's'); //=> false\n     *      R.is(Number, {}); //=> false\n     */\n    var is = _curry2(function is(Ctor, val) {\n        return val != null && val.constructor === Ctor || val instanceof Ctor;\n    });\n\n    /**\n     * Tests whether or not an object is similar to an array.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @category List\n     * @sig * -> Boolean\n     * @param {*} x The object to test.\n     * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n     * @example\n     *\n     *      R.isArrayLike([]); //=> true\n     *      R.isArrayLike(true); //=> false\n     *      R.isArrayLike({}); //=> false\n     *      R.isArrayLike({length: 10}); //=> false\n     *      R.isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n     */\n    var isArrayLike = _curry1(function isArrayLike(x) {\n        if (_isArray(x)) {\n            return true;\n        }\n        if (!x) {\n            return false;\n        }\n        if (typeof x !== 'object') {\n            return false;\n        }\n        if (x instanceof String) {\n            return false;\n        }\n        if (x.nodeType === 1) {\n            return !!x.length;\n        }\n        if (x.length === 0) {\n            return true;\n        }\n        if (x.length > 0) {\n            return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n        }\n        return false;\n    });\n\n    /**\n     * Reports whether the list has zero elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [a] -> Boolean\n     * @param {Array} list\n     * @return {Boolean}\n     * @example\n     *\n     *      R.isEmpty([1, 2, 3]);   //=> false\n     *      R.isEmpty([]);          //=> true\n     *      R.isEmpty('');          //=> true\n     *      R.isEmpty(null);        //=> false\n     *      R.isEmpty(R.keys({}));  //=> true\n     *      R.isEmpty({});          //=> false ({} does not have a length property)\n     *      R.isEmpty({length: 0}); //=> true\n     */\n    var isEmpty = _curry1(function isEmpty(list) {\n        return Object(list).length === 0;\n    });\n\n    /**\n     * Checks if the input value is `null` or `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig * -> Boolean\n     * @param {*} x The value to test.\n     * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n     * @example\n     *\n     *      R.isNil(null); //=> true\n     *      R.isNil(undefined); //=> true\n     *      R.isNil(0); //=> false\n     *      R.isNil([]); //=> false\n     */\n    var isNil = _curry1(function isNil(x) {\n        return x == null;\n    });\n\n    /**\n     * Returns a list containing the names of all the enumerable own\n     * properties of the supplied object.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own properties.\n     * @example\n     *\n     *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n     */\n    // cover IE < 9 keys issues\n    var keys = function () {\n        // cover IE < 9 keys issues\n        var hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');\n        var nonEnumerableProps = [\n            'constructor',\n            'valueOf',\n            'isPrototypeOf',\n            'toString',\n            'propertyIsEnumerable',\n            'hasOwnProperty',\n            'toLocaleString'\n        ];\n        var contains = function contains(list, item) {\n            var idx = 0;\n            while (idx < list.length) {\n                if (list[idx] === item) {\n                    return true;\n                }\n                idx += 1;\n            }\n            return false;\n        };\n        return typeof Object.keys === 'function' ? _curry1(function keys(obj) {\n            return Object(obj) !== obj ? [] : Object.keys(obj);\n        }) : _curry1(function keys(obj) {\n            if (Object(obj) !== obj) {\n                return [];\n            }\n            var prop, ks = [], nIdx;\n            for (prop in obj) {\n                if (_has(prop, obj)) {\n                    ks[ks.length] = prop;\n                }\n            }\n            if (hasEnumBug) {\n                nIdx = nonEnumerableProps.length - 1;\n                while (nIdx >= 0) {\n                    prop = nonEnumerableProps[nIdx];\n                    if (_has(prop, obj) && !contains(ks, prop)) {\n                        ks[ks.length] = prop;\n                    }\n                    nIdx -= 1;\n                }\n            }\n            return ks;\n        });\n    }();\n\n    /**\n     * Returns a list containing the names of all the\n     * properties of the supplied object, including prototype properties.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.keysIn(f); //=> ['x', 'y']\n     */\n    var keysIn = _curry1(function keysIn(obj) {\n        var prop, ks = [];\n        for (prop in obj) {\n            ks[ks.length] = prop;\n        }\n        return ks;\n    });\n\n    /**\n     * Returns the number of elements in the array by returning `list.length`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> Number\n     * @param {Array} list The array to inspect.\n     * @return {Number} The length of the array.\n     * @example\n     *\n     *      R.length([]); //=> 0\n     *      R.length([1, 2, 3]); //=> 3\n     */\n    var length = _curry1(function length(list) {\n        return list != null && is(Number, list.length) ? list.length : NaN;\n    });\n\n    /**\n     * Returns `true` if the first argument is less than the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @see R.gt\n     * @example\n     *\n     *      R.lt(2, 1); //=> false\n     *      R.lt(2, 2); //=> false\n     *      R.lt(2, 3); //=> true\n     *      R.lt('a', 'z'); //=> true\n     *      R.lt('z', 'a'); //=> false\n     */\n    var lt = _curry2(function lt(a, b) {\n        return a < b;\n    });\n\n    /**\n     * Returns `true` if the first argument is less than or equal to the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean}\n     * @see R.gte\n     * @example\n     *\n     *      R.lte(2, 1); //=> false\n     *      R.lte(2, 2); //=> true\n     *      R.lte(2, 3); //=> true\n     *      R.lte('a', 'z'); //=> true\n     *      R.lte('z', 'a'); //=> false\n     */\n    var lte = _curry2(function lte(a, b) {\n        return a <= b;\n    });\n\n    /**\n     * The mapAccum function behaves like a combination of map and reduce; it applies a\n     * function to each element of a list, passing an accumulating parameter from left to\n     * right, and returning a final value of this accumulator together with the new list.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should return\n     * a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var append = function(a, b) {\n     *        return [a + b, a + b];\n     *      }\n     *\n     *      R.mapAccum(append, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n     */\n    var mapAccum = _curry3(function mapAccum(fn, acc, list) {\n        var idx = 0, len = list.length, result = [], tuple = [acc];\n        while (idx < len) {\n            tuple = fn(tuple[0], list[idx]);\n            result[idx] = tuple[1];\n            idx += 1;\n        }\n        return [\n            tuple[0],\n            result\n        ];\n    });\n\n    /**\n     * The mapAccumRight function behaves like a combination of map and reduce; it applies a\n     * function to each element of a list, passing an accumulating parameter from right\n     * to left, and returning a final value of this accumulator together with the new list.\n     *\n     * Similar to `mapAccum`, except moves through the input list from the right to the\n     * left.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should return\n     * a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var append = function(a, b) {\n     *        return [a + b, a + b];\n     *      }\n     *\n     *      R.mapAccumRight(append, 0, digits); //=> ['04321', ['04321', '0432', '043', '04']]\n     */\n    var mapAccumRight = _curry3(function mapAccumRight(fn, acc, list) {\n        var idx = list.length - 1, result = [], tuple = [acc];\n        while (idx >= 0) {\n            tuple = fn(tuple[0], list[idx]);\n            result[idx] = tuple[1];\n            idx -= 1;\n        }\n        return [\n            tuple[0],\n            result\n        ];\n    });\n\n    /**\n     * Tests a regular expression against a String. Note that this function\n     * will return an empty array when there are no matches. This differs\n     * from [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n     * which returns `null` when there are no matches.\n     *\n     * @func\n     * @memberOf R\n     * @see R.test\n     * @category String\n     * @sig RegExp -> String -> [String | Undefined]\n     * @param {RegExp} rx A regular expression.\n     * @param {String} str The string to match against\n     * @return {Array} The list of matches or empty array.\n     * @example\n     *\n     *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n     *      R.match(/a/, 'b'); //=> []\n     *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n     */\n    var match = _curry2(function match(rx, str) {\n        return str.match(rx) || [];\n    });\n\n    /**\n     * mathMod behaves like the modulo operator should mathematically, unlike the `%`\n     * operator (and by extension, R.modulo). So while \"-17 % 5\" is -2,\n     * mathMod(-17, 5) is 3. mathMod requires Integer arguments, and returns NaN\n     * when the modulus is zero or negative.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} m The dividend.\n     * @param {Number} p the modulus.\n     * @return {Number} The result of `b mod a`.\n     * @example\n     *\n     *      R.mathMod(-17, 5);  //=> 3\n     *      R.mathMod(17, 5);   //=> 2\n     *      R.mathMod(17, -5);  //=> NaN\n     *      R.mathMod(17, 0);   //=> NaN\n     *      R.mathMod(17.2, 5); //=> NaN\n     *      R.mathMod(17, 5.3); //=> NaN\n     *\n     *      var clock = R.mathMod(R.__, 12);\n     *      clock(15); //=> 3\n     *      clock(24); //=> 0\n     *\n     *      var seventeenMod = R.mathMod(17);\n     *      seventeenMod(3);  //=> 2\n     *      seventeenMod(4);  //=> 1\n     *      seventeenMod(10); //=> 7\n     */\n    var mathMod = _curry2(function mathMod(m, p) {\n        if (!_isInteger(m)) {\n            return NaN;\n        }\n        if (!_isInteger(p) || p < 1) {\n            return NaN;\n        }\n        return (m % p + p) % p;\n    });\n\n    /**\n     * Returns the larger of its two arguments.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> a\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.maxBy, R.min\n     * @example\n     *\n     *      R.max(789, 123); //=> 789\n     *      R.max('a', 'b'); //=> 'b'\n     */\n    var max = _curry2(function max(a, b) {\n        return b > a ? b : a;\n    });\n\n    /**\n     * Takes a function and two values, and returns whichever value produces\n     * the larger result when passed to the provided function.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord b => (a -> b) -> a -> a -> a\n     * @param {Function} f\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.max, R.minBy\n     * @example\n     *\n     *      R.maxBy(function(n) { return n * n; }, -3, 2); //=> -3\n     */\n    var maxBy = _curry3(function maxBy(f, a, b) {\n        return f(b) > f(a) ? b : a;\n    });\n\n    /**\n     * Create a new object with the own properties of `a`\n     * merged with the own properties of object `b`.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> {k: v} -> {k: v}\n     * @param {Object} a\n     * @param {Object} b\n     * @return {Object}\n     * @example\n     *\n     *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n     *      //=> { 'name': 'fred', 'age': 40 }\n     *\n     *      var resetToDefault = R.merge(R.__, {x: 0});\n     *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n     */\n    var merge = _curry2(function merge(a, b) {\n        var result = {};\n        var ks = keys(a);\n        var idx = 0;\n        while (idx < ks.length) {\n            result[ks[idx]] = a[ks[idx]];\n            idx += 1;\n        }\n        ks = keys(b);\n        idx = 0;\n        while (idx < ks.length) {\n            result[ks[idx]] = b[ks[idx]];\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns the smaller of its two arguments.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord a => a -> a -> a\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.minBy, R.max\n     * @example\n     *\n     *      R.min(789, 123); //=> 123\n     *      R.min('a', 'b'); //=> 'a'\n     */\n    var min = _curry2(function min(a, b) {\n        return b < a ? b : a;\n    });\n\n    /**\n     * Takes a function and two values, and returns whichever value produces\n     * the smaller result when passed to the provided function.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord b => (a -> b) -> a -> a -> a\n     * @param {Function} f\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.min, R.maxBy\n     * @example\n     *\n     *      R.minBy(function(n) { return n * n; }, -3, 2); //=> 2\n     */\n    var minBy = _curry3(function minBy(f, a, b) {\n        return f(b) < f(a) ? b : a;\n    });\n\n    /**\n     * Divides the second parameter by the first and returns the remainder.\n     * Note that this functions preserves the JavaScript-style behavior for\n     * modulo. For mathematical modulo see `mathMod`\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The value to the divide.\n     * @param {Number} b The pseudo-modulus\n     * @return {Number} The result of `b % a`.\n     * @see R.mathMod\n     * @example\n     *\n     *      R.modulo(17, 3); //=> 2\n     *      // JS behavior:\n     *      R.modulo(-17, 3); //=> -2\n     *      R.modulo(17, -3); //=> 2\n     *\n     *      var isOdd = R.modulo(R.__, 2);\n     *      isOdd(42); //=> 0\n     *      isOdd(21); //=> 1\n     */\n    var modulo = _curry2(function modulo(a, b) {\n        return a % b;\n    });\n\n    /**\n     * Multiplies two numbers. Equivalent to `a * b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a * b`.\n     * @see R.divide\n     * @example\n     *\n     *      var double = R.multiply(2);\n     *      var triple = R.multiply(3);\n     *      double(3);       //=>  6\n     *      triple(4);       //=> 12\n     *      R.multiply(2, 5);  //=> 10\n     */\n    var multiply = _curry2(function multiply(a, b) {\n        return a * b;\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts exactly `n`\n     * parameters. Any extraneous parameters will not be passed to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} n The desired arity of the new function.\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity `n`.\n     * @example\n     *\n     *      var takesTwoArgs = function(a, b) {\n     *        return [a, b];\n     *      };\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.nAry(1, takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only `n` arguments are passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n    var nAry = _curry2(function nAry(n, fn) {\n        switch (n) {\n        case 0:\n            return function () {\n                return fn.call(this);\n            };\n        case 1:\n            return function (a0) {\n                return fn.call(this, a0);\n            };\n        case 2:\n            return function (a0, a1) {\n                return fn.call(this, a0, a1);\n            };\n        case 3:\n            return function (a0, a1, a2) {\n                return fn.call(this, a0, a1, a2);\n            };\n        case 4:\n            return function (a0, a1, a2, a3) {\n                return fn.call(this, a0, a1, a2, a3);\n            };\n        case 5:\n            return function (a0, a1, a2, a3, a4) {\n                return fn.call(this, a0, a1, a2, a3, a4);\n            };\n        case 6:\n            return function (a0, a1, a2, a3, a4, a5) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5);\n            };\n        case 7:\n            return function (a0, a1, a2, a3, a4, a5, a6) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n            };\n        case 8:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n            };\n        case 9:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n            };\n        case 10:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n            };\n        default:\n            throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n        }\n    });\n\n    /**\n     * Negates its argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @example\n     *\n     *      R.negate(42); //=> -42\n     */\n    var negate = _curry1(function negate(n) {\n        return -n;\n    });\n\n    /**\n     * A function that returns the `!` of its argument. It will return `true` when\n     * passed false-y value, and `false` when passed a truth-y one.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig * -> Boolean\n     * @param {*} a any value\n     * @return {Boolean} the logical inverse of passed argument.\n     * @see R.complement\n     * @example\n     *\n     *      R.not(true); //=> false\n     *      R.not(false); //=> true\n     *      R.not(0); => true\n     *      R.not(1); => false\n     */\n    var not = _curry1(function not(a) {\n        return !a;\n    });\n\n    /**\n     * Returns the nth element of the given list or string.\n     * If n is negative the element at index length + n is returned.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> a | Undefined\n     * @sig Number -> String -> String\n     * @param {Number} offset\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      var list = ['foo', 'bar', 'baz', 'quux'];\n     *      R.nth(1, list); //=> 'bar'\n     *      R.nth(-1, list); //=> 'quux'\n     *      R.nth(-99, list); //=> undefined\n     *\n     *      R.nth('abc', 2); //=> 'c'\n     *      R.nth('abc', 3); //=> ''\n     */\n    var nth = _curry2(function nth(offset, list) {\n        var idx = offset < 0 ? list.length + offset : offset;\n        return _isString(list) ? list.charAt(idx) : list[idx];\n    });\n\n    /**\n     * Returns a function which returns its nth argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> *... -> *\n     * @param {Number} n\n     * @return {Function}\n     * @example\n     *\n     *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n     *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n     */\n    var nthArg = _curry1(function nthArg(n) {\n        return function () {\n            return nth(n, arguments);\n        };\n    });\n\n    /**\n     * Returns the nth character of the given string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {String} str\n     * @return {String}\n     * @deprecated since v0.16.0\n     * @example\n     *\n     *      R.nthChar(2, 'Ramda'); //=> 'm'\n     *      R.nthChar(-2, 'Ramda'); //=> 'd'\n     */\n    var nthChar = _curry2(function nthChar(n, str) {\n        return str.charAt(n < 0 ? str.length + n : n);\n    });\n\n    /**\n     * Returns the character code of the nth character of the given string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig Number -> String -> Number\n     * @param {Number} n\n     * @param {String} str\n     * @return {Number}\n     * @deprecated since v0.16.0\n     * @example\n     *\n     *      R.nthCharCode(2, 'Ramda'); //=> 'm'.charCodeAt(0)\n     *      R.nthCharCode(-2, 'Ramda'); //=> 'd'.charCodeAt(0)\n     */\n    var nthCharCode = _curry2(function nthCharCode(n, str) {\n        return str.charCodeAt(n < 0 ? str.length + n : n);\n    });\n\n    /**\n     * Returns a singleton array containing the value provided.\n     *\n     * Note this `of` is different from the ES6 `of`; See\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig a -> [a]\n     * @param {*} x any value\n     * @return {Array} An array wrapping `x`.\n     * @example\n     *\n     *      R.of(null); //=> [null]\n     *      R.of([42]); //=> [[42]]\n     */\n    var of = _curry1(function of(x) {\n        return [x];\n    });\n\n    /**\n     * Accepts a function `fn` and returns a function that guards invocation of `fn` such that\n     * `fn` can only ever be called once, no matter how many times the returned function is\n     * invoked.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a... -> b) -> (a... -> b)\n     * @param {Function} fn The function to wrap in a call-only-once wrapper.\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var addOneOnce = R.once(function(x){ return x + 1; });\n     *      addOneOnce(10); //=> 11\n     *      addOneOnce(addOneOnce(50)); //=> 11\n     */\n    var once = _curry1(function once(fn) {\n        var called = false, result;\n        return function () {\n            if (called) {\n                return result;\n            }\n            called = true;\n            result = fn.apply(this, arguments);\n            return result;\n        };\n    });\n\n    /**\n     * Returns the result of \"setting\" the portion of the given data structure\n     * focused by the given lens to the given value.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> (a -> a) -> s -> s\n     * @param {Lens} lens\n     * @param {*} v\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var headLens = R.lensIndex(0);\n     *\n     *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n     */\n    var over = function () {\n        var Identity = function (x) {\n            return {\n                value: x,\n                map: function (f) {\n                    return Identity(f(x));\n                }\n            };\n        };\n        return _curry3(function over(lens, f, x) {\n            return lens(function (y) {\n                return Identity(f(y));\n            })(x).value;\n        });\n    }();\n\n    /**\n     * Retrieve the value at a given path.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> {k: v} -> v | Undefined\n     * @param {Array} path The path to use.\n     * @return {*} The data at `path`.\n     * @example\n     *\n     *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n     *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n     */\n    var path = _curry2(function path(paths, obj) {\n        if (obj == null) {\n            return;\n        } else {\n            var val = obj;\n            for (var idx = 0, len = paths.length; idx < len && val != null; idx += 1) {\n                val = val[paths[idx]];\n            }\n            return val;\n        }\n    });\n\n    /**\n     * Returns a partial copy of an object containing only the keys specified.  If the key does not exist, the\n     * property is ignored.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.omit\n     * @example\n     *\n     *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n     */\n    var pick = _curry2(function pick(names, obj) {\n        var result = {};\n        var idx = 0;\n        while (idx < names.length) {\n            if (names[idx] in obj) {\n                result[names[idx]] = obj[names[idx]];\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Similar to `pick` except that this one includes a `key: undefined` pair for properties that don't exist.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n     */\n    var pickAll = _curry2(function pickAll(names, obj) {\n        var result = {};\n        var idx = 0;\n        var len = names.length;\n        while (idx < len) {\n            var name = names[idx];\n            result[name] = obj[name];\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a partial copy of an object containing only the keys that\n     * satisfy the supplied predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig (v, k -> Boolean) -> {k: v} -> {k: v}\n     * @param {Function} pred A predicate to determine whether or not a key\n     *        should be included on the output object.\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties that satisfy `pred`\n     *         on it.\n     * @see R.pick\n     * @example\n     *\n     *      var isUpperCase = function(val, key) { return key.toUpperCase() === key; }\n     *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n     */\n    var pickBy = _curry2(function pickBy(test, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (test(obj[prop], prop, obj)) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list with the given element at the front, followed by the contents of the\n     * list.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The item to add to the head of the output list.\n     * @param {Array} list The array to add to the tail of the output list.\n     * @return {Array} A new array.\n     * @see R.append\n     * @example\n     *\n     *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n     */\n    var prepend = _curry2(function prepend(el, list) {\n        return _concat([el], list);\n    });\n\n    /**\n     * Returns a function that when supplied an object returns the indicated property of that object, if it exists.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig s -> {s: a} -> a | Undefined\n     * @param {String} p The property name\n     * @param {Object} obj The object to query\n     * @return {*} The value at `obj.p`.\n     * @example\n     *\n     *      R.prop('x', {x: 100}); //=> 100\n     *      R.prop('x', {}); //=> undefined\n     */\n    var prop = _curry2(function prop(p, obj) {\n        return obj[p];\n    });\n\n    /**\n     * If the given, non-null object has an own property with the specified name,\n     * returns the value of that property.\n     * Otherwise returns the provided default value.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig a -> String -> Object -> a\n     * @param {*} val The default value.\n     * @param {String} p The name of the property to return.\n     * @param {Object} obj The object to query.\n     * @return {*} The value of given property of the supplied object or the default value.\n     * @example\n     *\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var favorite = R.prop('favoriteLibrary');\n     *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n     *\n     *      favorite(alice);  //=> undefined\n     *      favoriteWithDefault(alice);  //=> 'Ramda'\n     */\n    var propOr = _curry3(function propOr(val, p, obj) {\n        return obj != null && _has(p, obj) ? obj[p] : val;\n    });\n\n    /**\n     * Returns `true` if the specified object property satisfies the given\n     * predicate; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n     * @param {Function} pred\n     * @param {String} name\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.propEq\n     * @see R.propIs\n     * @example\n     *\n     *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n     */\n    var propSatisfies = _curry3(function propSatisfies(pred, name, obj) {\n        return pred(obj[name]);\n    });\n\n    /**\n     * Acts as multiple `prop`: array of keys in, array of values out. Preserves order.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [k] -> {k: v} -> [v]\n     * @param {Array} ps The property names to fetch\n     * @param {Object} obj The object to query\n     * @return {Array} The corresponding values or partially applied function.\n     * @example\n     *\n     *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n     *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n     *\n     *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n     *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n     */\n    var props = _curry2(function props(ps, obj) {\n        var len = ps.length;\n        var out = [];\n        var idx = 0;\n        while (idx < len) {\n            out[idx] = obj[ps[idx]];\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a list of numbers from `from` (inclusive) to `to`\n     * (exclusive).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> Number -> [Number]\n     * @param {Number} from The first number in the list.\n     * @param {Number} to One more than the last number in the list.\n     * @return {Array} The list of numbers in tthe set `[a, b)`.\n     * @example\n     *\n     *      R.range(1, 5);    //=> [1, 2, 3, 4]\n     *      R.range(50, 53);  //=> [50, 51, 52]\n     */\n    var range = _curry2(function range(from, to) {\n        if (!(_isNumber(from) && _isNumber(to))) {\n            throw new TypeError('Both arguments to range must be numbers');\n        }\n        var result = [];\n        var n = from;\n        while (n < to) {\n            result.push(n);\n            n += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a single item by iterating through the list, successively calling the iterator\n     * function and passing it an accumulator value and the current value from the array, and\n     * then passing the result to the next call.\n     *\n     * Similar to `reduce`, except moves through the input list from the right to the left.\n     *\n     * The iterator function receives two values: *(acc, value)*\n     *\n     * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse arrays), unlike\n     * the native `Array.prototype.reduce` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var pairs = [ ['a', 1], ['b', 2], ['c', 3] ];\n     *      var flattenPairs = function(acc, pair) {\n     *        return acc.concat(pair);\n     *      };\n     *\n     *      R.reduceRight(flattenPairs, [], pairs); //=> [ 'c', 3, 'b', 2, 'a', 1 ]\n     */\n    var reduceRight = _curry3(function reduceRight(fn, acc, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            acc = fn(acc, list[idx]);\n            idx -= 1;\n        }\n        return acc;\n    });\n\n    /**\n     * Returns a value wrapped to indicate that it is the final value of the\n     * reduce and transduce functions.  The returned value\n     * should be considered a black box: the internal structure is not\n     * guaranteed to be stable.\n     *\n     * Note: this optimization is unavailable to functions not explicitly listed\n     * above.  For instance, it is not currently supported by reduceIndexed,\n     * reduceRight, or reduceRightIndexed.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.reduce, R.transduce\n     * @sig a -> *\n     * @param {*} x The final value of the reduce.\n     * @return {*} The wrapped value.\n     * @example\n     *\n     *      R.reduce(\n     *        R.pipe(R.add, R.ifElse(R.lte(10), R.reduced, R.identity)),\n     *        0,\n     *        [1, 2, 3, 4, 5]) // 10\n     */\n    var reduced = _curry1(_reduced);\n\n    /**\n     * Removes the sub-list of `list` starting at index `start` and containing\n     * `count` elements.  _Note that this is not destructive_: it returns a\n     * copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @param {Number} start The position to start removing elements\n     * @param {Number} count The number of elements to remove\n     * @param {Array} list The list to remove from\n     * @return {Array} A new Array with `count` elements from `start` removed.\n     * @example\n     *\n     *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n     */\n    var remove = _curry3(function remove(start, count, list) {\n        return _concat(_slice(list, 0, Math.min(start, list.length)), _slice(list, Math.min(list.length, start + count)));\n    });\n\n    /**\n     * Replace a substring or regex match in a string with a replacement.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig RegExp|String -> String -> String -> String\n     * @param {RegExp|String} pattern A regular expression or a substring to match.\n     * @param {String} replacement The string to replace the matches with.\n     * @param {String} str The String to do the search and replacement in.\n     * @return {String} The result.\n     * @example\n     *\n     *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *\n     *      // Use the \"g\" (global) flag to replace all occurrences:\n     *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n     */\n    var replace = _curry3(function replace(regex, replacement, str) {\n        return str.replace(regex, replacement);\n    });\n\n    /**\n     * Returns a new list with the same elements as the original list, just\n     * in the reverse order.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The list to reverse.\n     * @return {Array} A copy of the list in reverse order.\n     * @example\n     *\n     *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n     *      R.reverse([1, 2]);     //=> [2, 1]\n     *      R.reverse([1]);        //=> [1]\n     *      R.reverse([]);         //=> []\n     */\n    var reverse = _curry1(function reverse(list) {\n        return _slice(list).reverse();\n    });\n\n    /**\n     * Scan is similar to reduce, but returns a list of successively reduced values from the left\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> [a]\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} A list of all intermediately reduced values.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n     */\n    var scan = _curry3(function scan(fn, acc, list) {\n        var idx = 0, len = list.length, result = [acc];\n        while (idx < len) {\n            acc = fn(acc, list[idx]);\n            result[idx + 1] = acc;\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns the result of \"setting\" the portion of the given data structure\n     * focused by the given lens to the given value.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> a -> s -> s\n     * @param {Lens} lens\n     * @param {*} v\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n     *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n     */\n    var set = _curry3(function set(lens, v, x) {\n        return over(lens, always(v), x);\n    });\n\n    /**\n     * Returns a copy of the list, sorted according to the comparator function, which should accept two values at a\n     * time and return a negative number if the first value is smaller, a positive number if it's larger, and zero\n     * if they are equal.  Please note that this is a **copy** of the list.  It does not modify the original.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,a -> Number) -> [a] -> [a]\n     * @param {Function} comparator A sorting function :: a -> b -> Int\n     * @param {Array} list The list to sort\n     * @return {Array} a new array with its elements sorted by the comparator function.\n     * @example\n     *\n     *      var diff = function(a, b) { return a - b; };\n     *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n     */\n    var sort = _curry2(function sort(comparator, list) {\n        return _slice(list).sort(comparator);\n    });\n\n    /**\n     * Sorts the list according to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig Ord b => (a -> b) -> [a] -> [a]\n     * @param {Function} fn\n     * @param {Array} list The list to sort.\n     * @return {Array} A new list sorted by the keys generated by `fn`.\n     * @example\n     *\n     *      var sortByFirstItem = R.sortBy(prop(0));\n     *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n     *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n     *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var bob = {\n     *        name: 'Bob',\n     *        age: -10\n     *      };\n     *      var clara = {\n     *        name: 'clara',\n     *        age: 314.159\n     *      };\n     *      var people = [clara, bob, alice];\n     *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n     */\n    var sortBy = _curry2(function sortBy(fn, list) {\n        return _slice(list).sort(function (a, b) {\n            var aa = fn(a);\n            var bb = fn(b);\n            return aa < bb ? -1 : aa > bb ? 1 : 0;\n        });\n    });\n\n    /**\n     * Subtracts two numbers. Equivalent to `a - b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a - b`.\n     * @see R.add\n     * @example\n     *\n     *      R.subtract(10, 8); //=> 2\n     *\n     *      var minus5 = R.subtract(R.__, 5);\n     *      minus5(17); //=> 12\n     *\n     *      var complementaryAngle = R.subtract(90);\n     *      complementaryAngle(30); //=> 60\n     *      complementaryAngle(72); //=> 18\n     */\n    var subtract = _curry2(function subtract(a, b) {\n        return a - b;\n    });\n\n    /**\n     * Returns a new list containing the last `n` elements of a given list, passing each value\n     * to the supplied predicate function, and terminating when the predicate function returns\n     * `false`. Excludes the element that caused the predicate function to fail. The predicate\n     * function is passed one argument: *(value)*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.dropLastWhile\n     * @example\n     *\n     *      var isNotOne = function(x) {\n     *        return !(x === 1);\n     *      };\n     *\n     *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n     */\n    var takeLastWhile = _curry2(function takeLastWhile(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0 && fn(list[idx])) {\n            idx -= 1;\n        }\n        return _slice(list, idx + 1, Infinity);\n    });\n\n    /**\n     * Runs the given function with the supplied object, then returns the object.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> *) -> a -> a\n     * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n     * @param {*} x\n     * @return {*} `x`.\n     * @example\n     *\n     *      var sayX = function(x) { console.log('x is ' + x); };\n     *      R.tap(sayX, 100); //=> 100\n     *      //-> 'x is 100'\n     */\n    var tap = _curry2(function tap(fn, x) {\n        fn(x);\n        return x;\n    });\n\n    /**\n     * Determines whether a given string matches a given regular expression.\n     *\n     * @func\n     * @memberOf R\n     * @see R.match\n     * @category String\n     * @sig RegExp -> String -> Boolean\n     * @param {RegExp} pattern\n     * @param {String} str\n     * @return {Boolean}\n     * @example\n     *\n     *      R.test(/^x/, 'xyz'); //=> true\n     *      R.test(/^y/, 'xyz'); //=> false\n     */\n    var test = _curry2(function test(pattern, str) {\n        return _cloneRegExp(pattern).test(str);\n    });\n\n    /**\n     * Calls an input function `n` times, returning an array containing the results of those\n     * function calls.\n     *\n     * `fn` is passed one argument: The current value of `n`, which begins at `0` and is\n     * gradually incremented to `n - 1`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (i -> a) -> i -> [a]\n     * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n     * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n     * @return {Array} An array containing the return values of all calls to `fn`.\n     * @example\n     *\n     *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n     */\n    var times = _curry2(function times(fn, n) {\n        var len = Number(n);\n        var list = new Array(len);\n        var idx = 0;\n        while (idx < len) {\n            list[idx] = fn(idx);\n            idx += 1;\n        }\n        return list;\n    });\n\n    /**\n     * Converts an object into an array of key, value arrays.\n     * Only the object's own properties are used.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own properties.\n     * @see R.fromPairs\n     * @example\n     *\n     *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n     */\n    var toPairs = _curry1(function toPairs(obj) {\n        var pairs = [];\n        for (var prop in obj) {\n            if (_has(prop, obj)) {\n                pairs[pairs.length] = [\n                    prop,\n                    obj[prop]\n                ];\n            }\n        }\n        return pairs;\n    });\n\n    /**\n     * Converts an object into an array of key, value arrays.\n     * The object's own properties and prototype properties are used.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own\n     *         and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n     */\n    var toPairsIn = _curry1(function toPairsIn(obj) {\n        var pairs = [];\n        for (var prop in obj) {\n            pairs[pairs.length] = [\n                prop,\n                obj[prop]\n            ];\n        }\n        return pairs;\n    });\n\n    /**\n     * Removes (strips) whitespace from both ends of the string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to trim.\n     * @return {String} Trimmed version of `str`.\n     * @example\n     *\n     *      R.trim('   xyz  '); //=> 'xyz'\n     *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n     */\n    var trim = function () {\n        var ws = '\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\n        var zeroWidth = '\\u200B';\n        var hasProtoTrim = typeof String.prototype.trim === 'function';\n        if (!hasProtoTrim || (ws.trim() || !zeroWidth.trim())) {\n            return _curry1(function trim(str) {\n                var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n                var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n                return str.replace(beginRx, '').replace(endRx, '');\n            });\n        } else {\n            return _curry1(function trim(str) {\n                return str.trim();\n            });\n        }\n    }();\n\n    /**\n     * Gives a single-word string description of the (native) type of a value, returning such\n     * answers as 'Object', 'Number', 'Array', or 'Null'.  Does not attempt to distinguish user\n     * Object types any further, reporting them all as 'Object'.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig (* -> {*}) -> String\n     * @param {*} val The value to test\n     * @return {String}\n     * @example\n     *\n     *      R.type({}); //=> \"Object\"\n     *      R.type(1); //=> \"Number\"\n     *      R.type(false); //=> \"Boolean\"\n     *      R.type('s'); //=> \"String\"\n     *      R.type(null); //=> \"Null\"\n     *      R.type([]); //=> \"Array\"\n     *      R.type(/[A-z]/); //=> \"RegExp\"\n     */\n    var type = _curry1(function type(val) {\n        return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n    });\n\n    /**\n     * Takes a function `fn`, which takes a single array argument, and returns\n     * a function which:\n     *\n     *   - takes any number of positional arguments;\n     *   - passes these arguments to `fn` as an array; and\n     *   - returns the result.\n     *\n     * In other words, R.unapply derives a variadic function from a function\n     * which takes an array. R.unapply is the inverse of R.apply.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ([*...] -> a) -> (*... -> a)\n     * @param {Function} fn\n     * @return {Function}\n     * @see R.apply\n     * @example\n     *\n     *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n     */\n    var unapply = _curry1(function unapply(fn) {\n        return function () {\n            return fn(_slice(arguments));\n        };\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts exactly 1\n     * parameter. Any extraneous parameters will not be passed to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> b) -> (a -> b)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 1.\n     * @example\n     *\n     *      var takesTwoArgs = function(a, b) {\n     *        return [a, b];\n     *      };\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.unary(takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only 1 argument is passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n    var unary = _curry1(function unary(fn) {\n        return nAry(1, fn);\n    });\n\n    /**\n     * Returns a function of arity `n` from a (manually) curried function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (a -> b) -> (a -> c)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to uncurry.\n     * @return {Function} A new function.\n     * @see R.curry\n     * @example\n     *\n     *      var addFour = function(a) {\n     *        return function(b) {\n     *          return function(c) {\n     *            return function(d) {\n     *              return a + b + c + d;\n     *            };\n     *          };\n     *        };\n     *      };\n     *\n     *      var uncurriedAddFour = R.uncurryN(4, addFour);\n     *      curriedAddFour(1, 2, 3, 4); //=> 10\n     */\n    var uncurryN = _curry2(function uncurryN(depth, fn) {\n        return curryN(depth, function () {\n            var currentDepth = 1;\n            var value = fn;\n            var idx = 0;\n            var endIdx;\n            while (currentDepth <= depth && typeof value === 'function') {\n                endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n                value = value.apply(this, _slice(arguments, idx, endIdx));\n                currentDepth += 1;\n                idx = endIdx;\n            }\n            return value;\n        });\n    });\n\n    /**\n     * Builds a list from a seed value. Accepts an iterator function, which returns either false\n     * to stop iteration or an array of length 2 containing the value to add to the resulting\n     * list and the seed to be used in the next call to the iterator function.\n     *\n     * The iterator function receives one argument: *(seed)*.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> [b]) -> * -> [b]\n     * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n     *        either false to quit iteration or an array of length two to proceed. The element\n     *        at index 0 of this array will be added to the resulting array, and the element\n     *        at index 1 will be passed to the next call to `fn`.\n     * @param {*} seed The seed value.\n     * @return {Array} The final list.\n     * @example\n     *\n     *      var f = function(n) { return n > 50 ? false : [-n, n + 10] };\n     *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n     */\n    var unfold = _curry2(function unfold(fn, seed) {\n        var pair = fn(seed);\n        var result = [];\n        while (pair && pair.length) {\n            result[result.length] = pair[0];\n            pair = fn(pair[1]);\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list containing only one copy of each element in the original list, based\n     * upon the value returned by applying the supplied predicate to two list elements. Prefers\n     * the first item if two items compare equal based on the predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      var strEq = function(a, b) { return String(a) === String(b); };\n     *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n     *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n     *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n     *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n     */\n    var uniqWith = _curry2(function uniqWith(pred, list) {\n        var idx = 0, len = list.length;\n        var result = [], item;\n        while (idx < len) {\n            item = list[idx];\n            if (!_containsWith(pred, item, result)) {\n                result[result.length] = item;\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new copy of the array with the element at the\n     * provided index replaced with the given value.\n     * @see R.adjust\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} idx The index to update.\n     * @param {*} x The value to exist at the given index of the returned array.\n     * @param {Array|Arguments} list The source array-like object to be updated.\n     * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n     * @example\n     *\n     *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n     *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n     */\n    var update = _curry3(function update(idx, x, list) {\n        return adjust(always(x), idx, list);\n    });\n\n    /**\n     * Returns a list of all the enumerable own properties of the supplied object.\n     * Note that the order of the output array is not guaranteed across\n     * different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own properties.\n     * @example\n     *\n     *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n     */\n    var values = _curry1(function values(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var vals = [];\n        var idx = 0;\n        while (idx < len) {\n            vals[idx] = obj[props[idx]];\n            idx += 1;\n        }\n        return vals;\n    });\n\n    /**\n     * Returns a list of all the properties, including prototype properties,\n     * of the supplied object.\n     * Note that the order of the output array is not guaranteed to be\n     * consistent across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.valuesIn(f); //=> ['X', 'Y']\n     */\n    var valuesIn = _curry1(function valuesIn(obj) {\n        var prop, vs = [];\n        for (prop in obj) {\n            vs[vs.length] = obj[prop];\n        }\n        return vs;\n    });\n\n    /**\n     * Returns a \"view\" of the given data structure, determined by the given lens.\n     * The lens's focus determines which portion of the data structure is visible.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> s -> a\n     * @param {Lens} lens\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.view(xLens, {x: 1, y: 2});  //=> 1\n     *      R.view(xLens, {x: 4, y: 2});  //=> 4\n     */\n    var view = function () {\n        var Const = function (x) {\n            return {\n                value: x,\n                map: function () {\n                    return this;\n                }\n            };\n        };\n        return _curry2(function view(lens, x) {\n            return lens(Const)(x).value;\n        });\n    }();\n\n    /**\n     * Takes a spec object and a test object; returns true if the test satisfies\n     * the spec. Each of the spec's own properties must be a predicate function.\n     * Each predicate is applied to the value of the corresponding property of\n     * the test object. `where` returns true if all the predicates return true,\n     * false otherwise.\n     *\n     * `where` is well suited to declaratively expressing constraints for other\n     * functions such as `filter` and `find`.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @example\n     *\n     *      // pred :: Object -> Boolean\n     *      var pred = R.where({\n     *        a: R.equals('foo'),\n     *        b: R.complement(R.equals('bar')),\n     *        x: R.gt(_, 10),\n     *        y: R.lt(_, 20)\n     *      });\n     *\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n     *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n     */\n    var where = _curry2(function where(spec, testObj) {\n        for (var prop in spec) {\n            if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n                return false;\n            }\n        }\n        return true;\n    });\n\n    /**\n     * Wrap a function inside another to allow you to make adjustments to the parameters, or do\n     * other processing either before the internal function is called or with its results.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a... -> b) -> ((a... -> b) -> a... -> c) -> (a... -> c)\n     * @param {Function} fn The function to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var greet = function(name) {return 'Hello ' + name;};\n     *\n     *      var shoutedGreet = R.wrap(greet, function(gr, name) {\n     *        return gr(name).toUpperCase();\n     *      });\n     *      shoutedGreet(\"Kathy\"); //=> \"HELLO KATHY\"\n     *\n     *      var shortenedGreet = R.wrap(greet, function(gr, name) {\n     *        return gr(name.substring(0, 3));\n     *      });\n     *      shortenedGreet(\"Robert\"); //=> \"Hello Rob\"\n     */\n    var wrap = _curry2(function wrap(fn, wrapper) {\n        return curryN(fn.length, function () {\n            return wrapper.apply(this, _concat([fn], arguments));\n        });\n    });\n\n    /**\n     * Creates a new list out of the two supplied by creating each possible\n     * pair from the lists.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The list made by combining each possible pair from\n     *         `as` and `bs` into pairs (`[a, b]`).\n     * @example\n     *\n     *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n     */\n    // = xprodWith(prepend); (takes about 3 times as long...)\n    var xprod = _curry2(function xprod(a, b) {\n        // = xprodWith(prepend); (takes about 3 times as long...)\n        var idx = 0;\n        var ilen = a.length;\n        var j;\n        var jlen = b.length;\n        var result = [];\n        while (idx < ilen) {\n            j = 0;\n            while (j < jlen) {\n                result[result.length] = [\n                    a[idx],\n                    b[j]\n                ];\n                j += 1;\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Creates a new list out of the two supplied by pairing up\n     * equally-positioned items from both lists.  The returned list is\n     * truncated to the length of the shorter of the two input lists.\n     * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n     * @example\n     *\n     *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n     */\n    var zip = _curry2(function zip(a, b) {\n        var rv = [];\n        var idx = 0;\n        var len = Math.min(a.length, b.length);\n        while (idx < len) {\n            rv[idx] = [\n                a[idx],\n                b[idx]\n            ];\n            idx += 1;\n        }\n        return rv;\n    });\n\n    /**\n     * Creates a new object out of a list of keys and a list of values.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [String] -> [*] -> {String: *}\n     * @param {Array} keys The array that will be properties on the output object.\n     * @param {Array} values The list of values on the output object.\n     * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n     * @example\n     *\n     *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n     */\n    var zipObj = _curry2(function zipObj(keys, values) {\n        var idx = 0, len = keys.length, out = {};\n        while (idx < len) {\n            out[keys[idx]] = values[idx];\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Creates a new list out of the two supplied by applying the function to\n     * each equally-positioned pair in the lists. The returned list is\n     * truncated to the length of the shorter of the two input lists.\n     *\n     * @function\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> c) -> [a] -> [b] -> [c]\n     * @param {Function} fn The function used to combine the two elements into one value.\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n     *         using `fn`.\n     * @example\n     *\n     *      var f = function(x, y) {\n     *        // ...\n     *      };\n     *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n     *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n     */\n    var zipWith = _curry3(function zipWith(fn, a, b) {\n        var rv = [], idx = 0, len = Math.min(a.length, b.length);\n        while (idx < len) {\n            rv[idx] = fn(a[idx], b[idx]);\n            idx += 1;\n        }\n        return rv;\n    });\n\n    /**\n     * A function that always returns `false`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig * -> false\n     * @return {Boolean} false\n     * @see R.always, R.T\n     * @example\n     *\n     *      R.F(); //=> false\n     */\n    var F = always(false);\n\n    /**\n     * A function that always returns `true`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig * -> true\n     * @return {Boolean} `true`.\n     * @see R.always, R.F\n     * @example\n     *\n     *      R.T(); //=> true\n     */\n    var T = always(true);\n\n    /**\n     * Similar to hasMethod, this checks whether a function has a [methodname]\n     * function. If it isn't an array it will execute that function otherwise it will\n     * default to the ramda implementation.\n     *\n     * @private\n     * @param {Function} fn ramda implemtation\n     * @param {String} methodname property to check for a custom implementation\n     * @return {Object} Whatever the return value of the method is.\n     */\n    var _checkForMethod = function _checkForMethod(methodname, fn) {\n        return function () {\n            var length = arguments.length;\n            if (length === 0) {\n                return fn();\n            }\n            var obj = arguments[length - 1];\n            return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, _slice(arguments, 0, length - 1));\n        };\n    };\n\n    /**\n     * Copies an object.\n     *\n     * @private\n     * @param {*} value The value to be copied\n     * @param {Array} refFrom Array containing the source references\n     * @param {Array} refTo Array containing the copied source references\n     * @return {*} The copied value.\n     */\n    var _clone = function _clone(value, refFrom, refTo) {\n        var copy = function copy(copiedValue) {\n            var len = refFrom.length;\n            var idx = 0;\n            while (idx < len) {\n                if (value === refFrom[idx]) {\n                    return refTo[idx];\n                }\n                idx += 1;\n            }\n            refFrom[idx + 1] = value;\n            refTo[idx + 1] = copiedValue;\n            for (var key in value) {\n                copiedValue[key] = _clone(value[key], refFrom, refTo);\n            }\n            return copiedValue;\n        };\n        switch (type(value)) {\n        case 'Object':\n            return copy({});\n        case 'Array':\n            return copy([]);\n        case 'Date':\n            return new Date(value);\n        case 'RegExp':\n            return _cloneRegExp(value);\n        default:\n            return value;\n        }\n    };\n\n    var _createPartialApplicator = function _createPartialApplicator(concat) {\n        return function (fn) {\n            var args = _slice(arguments, 1);\n            return _arity(Math.max(0, fn.length - args.length), function () {\n                return fn.apply(this, concat(args, arguments));\n            });\n        };\n    };\n\n    /**\n     * Returns a function that dispatches with different strategies based on the\n     * object in list position (last argument). If it is an array, executes [fn].\n     * Otherwise, if it has a  function with [methodname], it will execute that\n     * function (functor case). Otherwise, if it is a transformer, uses transducer\n     * [xf] to return a new transformer (transducer case). Otherwise, it will\n     * default to executing [fn].\n     *\n     * @private\n     * @param {String} methodname property to check for a custom implementation\n     * @param {Function} xf transducer to initialize if object is transformer\n     * @param {Function} fn default ramda implementation\n     * @return {Function} A function that dispatches on object in list position\n     */\n    var _dispatchable = function _dispatchable(methodname, xf, fn) {\n        return function () {\n            var length = arguments.length;\n            if (length === 0) {\n                return fn();\n            }\n            var obj = arguments[length - 1];\n            if (!_isArray(obj)) {\n                var args = _slice(arguments, 0, length - 1);\n                if (typeof obj[methodname] === 'function') {\n                    return obj[methodname].apply(obj, args);\n                }\n                if (_isTransformer(obj)) {\n                    var transducer = xf.apply(null, args);\n                    return transducer(obj);\n                }\n            }\n            return fn.apply(this, arguments);\n        };\n    };\n\n    // The algorithm used to handle cyclic structures is\n    // inspired by underscore's isEqual\n    // RegExp equality algorithm: http://stackoverflow.com/a/10776635\n    var _equals = function _equals(a, b, stackA, stackB) {\n        var typeA = type(a);\n        if (typeA !== type(b)) {\n            return false;\n        }\n        if (typeA === 'Boolean' || typeA === 'Number' || typeA === 'String') {\n            return typeof a === 'object' ? typeof b === 'object' && identical(a.valueOf(), b.valueOf()) : identical(a, b);\n        }\n        if (identical(a, b)) {\n            return true;\n        }\n        if (typeA === 'RegExp') {\n            // RegExp equality algorithm: http://stackoverflow.com/a/10776635\n            return a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode;\n        }\n        if (Object(a) === a) {\n            if (typeA === 'Date' && a.getTime() !== b.getTime()) {\n                return false;\n            }\n            var keysA = keys(a);\n            if (keysA.length !== keys(b).length) {\n                return false;\n            }\n            var idx = stackA.length - 1;\n            while (idx >= 0) {\n                if (stackA[idx] === a) {\n                    return stackB[idx] === b;\n                }\n                idx -= 1;\n            }\n            stackA[stackA.length] = a;\n            stackB[stackB.length] = b;\n            idx = keysA.length - 1;\n            while (idx >= 0) {\n                var key = keysA[idx];\n                if (!_has(key, b) || !_equals(b[key], a[key], stackA, stackB)) {\n                    return false;\n                }\n                idx -= 1;\n            }\n            stackA.pop();\n            stackB.pop();\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * Private function that determines whether or not a provided object has a given method.\n     * Does not ignore methods stored on the object's prototype chain. Used for dynamically\n     * dispatching Ramda methods to non-Array objects.\n     *\n     * @private\n     * @param {String} methodName The name of the method to check for.\n     * @param {Object} obj The object to test.\n     * @return {Boolean} `true` has a given method, `false` otherwise.\n     * @example\n     *\n     *      var person = { name: 'John' };\n     *      person.shout = function() { alert(this.name); };\n     *\n     *      _hasMethod('shout', person); //=> true\n     *      _hasMethod('foo', person); //=> false\n     */\n    var _hasMethod = function _hasMethod(methodName, obj) {\n        return obj != null && !_isArray(obj) && typeof obj[methodName] === 'function';\n    };\n\n    /**\n     * `_makeFlat` is a helper function that returns a one-level or fully recursive function\n     * based on the flag passed in.\n     *\n     * @private\n     */\n    var _makeFlat = function _makeFlat(recursive) {\n        return function flatt(list) {\n            var value, result = [], idx = 0, j, ilen = list.length, jlen;\n            while (idx < ilen) {\n                if (isArrayLike(list[idx])) {\n                    value = recursive ? flatt(list[idx]) : list[idx];\n                    j = 0;\n                    jlen = value.length;\n                    while (j < jlen) {\n                        result[result.length] = value[j];\n                        j += 1;\n                    }\n                } else {\n                    result[result.length] = list[idx];\n                }\n                idx += 1;\n            }\n            return result;\n        };\n    };\n\n    var _reduce = function () {\n        function _arrayReduce(xf, acc, list) {\n            var idx = 0, len = list.length;\n            while (idx < len) {\n                acc = xf['@@transducer/step'](acc, list[idx]);\n                if (acc && acc['@@transducer/reduced']) {\n                    acc = acc['@@transducer/value'];\n                    break;\n                }\n                idx += 1;\n            }\n            return xf['@@transducer/result'](acc);\n        }\n        function _iterableReduce(xf, acc, iter) {\n            var step = iter.next();\n            while (!step.done) {\n                acc = xf['@@transducer/step'](acc, step.value);\n                if (acc && acc['@@transducer/reduced']) {\n                    acc = acc['@@transducer/value'];\n                    break;\n                }\n                step = iter.next();\n            }\n            return xf['@@transducer/result'](acc);\n        }\n        function _methodReduce(xf, acc, obj) {\n            return xf['@@transducer/result'](obj.reduce(bind(xf['@@transducer/step'], xf), acc));\n        }\n        var symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n        return function _reduce(fn, acc, list) {\n            if (typeof fn === 'function') {\n                fn = _xwrap(fn);\n            }\n            if (isArrayLike(list)) {\n                return _arrayReduce(fn, acc, list);\n            }\n            if (typeof list.reduce === 'function') {\n                return _methodReduce(fn, acc, list);\n            }\n            if (list[symIterator] != null) {\n                return _iterableReduce(fn, acc, list[symIterator]());\n            }\n            if (typeof list.next === 'function') {\n                return _iterableReduce(fn, acc, list);\n            }\n            throw new TypeError('reduce: list must be array or iterable');\n        };\n    }();\n\n    var _stepCat = function () {\n        var _stepCatArray = {\n            '@@transducer/init': Array,\n            '@@transducer/step': function (xs, x) {\n                return _concat(xs, [x]);\n            },\n            '@@transducer/result': _identity\n        };\n        var _stepCatString = {\n            '@@transducer/init': String,\n            '@@transducer/step': function (a, b) {\n                return a + b;\n            },\n            '@@transducer/result': _identity\n        };\n        var _stepCatObject = {\n            '@@transducer/init': Object,\n            '@@transducer/step': function (result, input) {\n                return merge(result, isArrayLike(input) ? createMapEntry(input[0], input[1]) : input);\n            },\n            '@@transducer/result': _identity\n        };\n        return function _stepCat(obj) {\n            if (_isTransformer(obj)) {\n                return obj;\n            }\n            if (isArrayLike(obj)) {\n                return _stepCatArray;\n            }\n            if (typeof obj === 'string') {\n                return _stepCatString;\n            }\n            if (typeof obj === 'object') {\n                return _stepCatObject;\n            }\n            throw new Error('Cannot create transformer for ' + obj);\n        };\n    }();\n\n    var _xall = function () {\n        function XAll(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.all = true;\n        }\n        XAll.prototype['@@transducer/init'] = _xfBase.init;\n        XAll.prototype['@@transducer/result'] = function (result) {\n            if (this.all) {\n                result = this.xf['@@transducer/step'](result, true);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XAll.prototype['@@transducer/step'] = function (result, input) {\n            if (!this.f(input)) {\n                this.all = false;\n                result = _reduced(this.xf['@@transducer/step'](result, false));\n            }\n            return result;\n        };\n        return _curry2(function _xall(f, xf) {\n            return new XAll(f, xf);\n        });\n    }();\n\n    var _xany = function () {\n        function XAny(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.any = false;\n        }\n        XAny.prototype['@@transducer/init'] = _xfBase.init;\n        XAny.prototype['@@transducer/result'] = function (result) {\n            if (!this.any) {\n                result = this.xf['@@transducer/step'](result, false);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XAny.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.any = true;\n                result = _reduced(this.xf['@@transducer/step'](result, true));\n            }\n            return result;\n        };\n        return _curry2(function _xany(f, xf) {\n            return new XAny(f, xf);\n        });\n    }();\n\n    var _xdrop = function () {\n        function XDrop(n, xf) {\n            this.xf = xf;\n            this.n = n;\n        }\n        XDrop.prototype['@@transducer/init'] = _xfBase.init;\n        XDrop.prototype['@@transducer/result'] = _xfBase.result;\n        XDrop.prototype['@@transducer/step'] = function (result, input) {\n            if (this.n > 0) {\n                this.n -= 1;\n                return result;\n            }\n            return this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdrop(n, xf) {\n            return new XDrop(n, xf);\n        });\n    }();\n\n    var _xdropWhile = function () {\n        function XDropWhile(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n        XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f) {\n                if (this.f(input)) {\n                    return result;\n                }\n                this.f = null;\n            }\n            return this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdropWhile(f, xf) {\n            return new XDropWhile(f, xf);\n        });\n    }();\n\n    var _xgroupBy = function () {\n        function XGroupBy(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.inputs = {};\n        }\n        XGroupBy.prototype['@@transducer/init'] = _xfBase.init;\n        XGroupBy.prototype['@@transducer/result'] = function (result) {\n            var key;\n            for (key in this.inputs) {\n                if (_has(key, this.inputs)) {\n                    result = this.xf['@@transducer/step'](result, this.inputs[key]);\n                    if (result['@@transducer/reduced']) {\n                        result = result['@@transducer/value'];\n                        break;\n                    }\n                }\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XGroupBy.prototype['@@transducer/step'] = function (result, input) {\n            var key = this.f(input);\n            this.inputs[key] = this.inputs[key] || [\n                key,\n                []\n            ];\n            this.inputs[key][1] = append(input, this.inputs[key][1]);\n            return result;\n        };\n        return _curry2(function _xgroupBy(f, xf) {\n            return new XGroupBy(f, xf);\n        });\n    }();\n\n    /**\n     * Creates a new list iteration function from an existing one by adding two new parameters\n     * to its callback function: the current index, and the entire list.\n     *\n     * This would turn, for instance, Ramda's simple `map` function into one that more closely\n     * resembles `Array.prototype.map`.  Note that this will only work for functions in which\n     * the iteration callback function is the first parameter, and where the list is the last\n     * parameter.  (This latter might be unimportant if the list parameter is not used.)\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @category List\n     * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n     * @param {Function} fn A list iteration function that does not pass index or list to its callback\n     * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n     * @example\n     *\n     *      var mapIndexed = R.addIndex(R.map);\n     *      mapIndexed(function(val, idx) {return idx + '-' + val;}, ['f', 'o', 'o', 'b', 'a', 'r']);\n     *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n     */\n    var addIndex = _curry1(function addIndex(fn) {\n        return curryN(fn.length, function () {\n            var idx = 0;\n            var origFn = arguments[0];\n            var list = arguments[arguments.length - 1];\n            var args = _slice(arguments);\n            args[0] = function () {\n                var result = origFn.apply(this, _concat(arguments, [\n                    idx,\n                    list\n                ]));\n                idx += 1;\n                return result;\n            };\n            return fn.apply(this, args);\n        });\n    });\n\n    /**\n     * Returns `true` if all elements of the list match the predicate, `false` if there are any\n     * that don't.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n     *         otherwise.\n     * @see R.any, R.none\n     * @example\n     *\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      var lessThan3 = R.flip(R.lt)(3);\n     *      R.all(lessThan2)([1, 2]); //=> false\n     *      R.all(lessThan3)([1, 2]); //=> true\n     */\n    var all = _curry2(_dispatchable('all', _xall, function all(fn, list) {\n        var idx = 0;\n        while (idx < list.length) {\n            if (!fn(list[idx])) {\n                return false;\n            }\n            idx += 1;\n        }\n        return true;\n    }));\n\n    /**\n     * A function that returns the first argument if it's falsy otherwise the second\n     * argument. Note that this is NOT short-circuited, meaning that if expressions\n     * are passed they are both evaluated.\n     *\n     * Dispatches to the `and` method of the first argument if applicable.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {*} a any value\n     * @param {*} b any other value\n     * @return {*} the first argument if falsy otherwise the second argument.\n     * @see R.both\n     * @example\n     *\n     *      R.and(false, true); //=> false\n     *      R.and(0, []); //=> 0\n     *      R.and(null, ''); => null\n     */\n    var and = _curry2(function and(a, b) {\n        return _hasMethod('and', a) ? a.and(b) : a && b;\n    });\n\n    /**\n     * Returns `true` if at least one of elements of the list match the predicate, `false`\n     * otherwise.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n     *         otherwise.\n     * @see R.all, R.none\n     * @example\n     *\n     *      var lessThan0 = R.flip(R.lt)(0);\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      R.any(lessThan0)([1, 2]); //=> false\n     *      R.any(lessThan2)([1, 2]); //=> true\n     */\n    var any = _curry2(_dispatchable('any', _xany, function any(fn, list) {\n        var idx = 0;\n        while (idx < list.length) {\n            if (fn(list[idx])) {\n                return true;\n            }\n            idx += 1;\n        }\n        return false;\n    }));\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts exactly 2\n     * parameters. Any extraneous parameters will not be passed to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> c) -> (a, b -> c)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 2.\n     * @example\n     *\n     *      var takesThreeArgs = function(a, b, c) {\n     *        return [a, b, c];\n     *      };\n     *      takesThreeArgs.length; //=> 3\n     *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      var takesTwoArgs = R.binary(takesThreeArgs);\n     *      takesTwoArgs.length; //=> 2\n     *      // Only 2 arguments are passed to the wrapped function\n     *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n     */\n    var binary = _curry1(function binary(fn) {\n        return nAry(2, fn);\n    });\n\n    /**\n     * Creates a deep copy of the value which may contain (nested) `Array`s and\n     * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n     * not copied, but assigned by their reference.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {*} -> {*}\n     * @param {*} value The object or array to clone\n     * @return {*} A new object or array.\n     * @example\n     *\n     *      var objects = [{}, {}, {}];\n     *      var objectsClone = R.clone(objects);\n     *      objects[0] === objectsClone[0]; //=> false\n     */\n    var clone = _curry1(function clone(value) {\n        return _clone(value, [], []);\n    });\n\n    /**\n     * Returns a new list consisting of the elements of the first list followed by the elements\n     * of the second.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The first list to merge.\n     * @param {Array} list2 The second set to merge.\n     * @return {Array} A new array consisting of the contents of `list1` followed by the\n     *         contents of `list2`. If, instead of an Array for `list1`, you pass an\n     *         object with a `concat` method on it, `concat` will call `list1.concat`\n     *         and pass it the value of `list2`.\n     *\n     * @example\n     *\n     *      R.concat([], []); //=> []\n     *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n     */\n    var concat = _curry2(function concat(set1, set2) {\n        if (_isArray(set2)) {\n            return _concat(set1, set2);\n        } else if (_hasMethod('concat', set1)) {\n            return set1.concat(set2);\n        } else {\n            throw new TypeError('can\\'t concat ' + typeof set1);\n        }\n    });\n\n    /**\n     * Returns a curried equivalent of the provided function. The curried\n     * function has two unusual capabilities. First, its arguments needn't\n     * be provided one at a time. If `f` is a ternary function and `g` is\n     * `R.curry(f)`, the following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`,\n     * the following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> a) -> (* -> a)\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curryN\n     * @example\n     *\n     *      var addFourNumbers = function(a, b, c, d) {\n     *        return a + b + c + d;\n     *      };\n     *\n     *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n    var curry = _curry1(function curry(fn) {\n        return curryN(fn.length, fn);\n    });\n\n    /**\n     * Returns a new list containing the last `n` elements of a given list, passing each value\n     * to the supplied predicate function, skipping elements while the predicate function returns\n     * `true`. The predicate function is passed one argument: *(value)*.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.takeWhile\n     * @example\n     *\n     *      var lteTwo = function(x) {\n     *        return x <= 2;\n     *      };\n     *\n     *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n     */\n    var dropWhile = _curry2(_dispatchable('dropWhile', _xdropWhile, function dropWhile(pred, list) {\n        var idx = 0, len = list.length;\n        while (idx < len && pred(list[idx])) {\n            idx += 1;\n        }\n        return _slice(list, idx);\n    }));\n\n    /**\n     * Returns `true` if its arguments are equivalent, `false` otherwise.\n     * Dispatches to an `equals` method if present. Handles cyclical data\n     * structures.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig a -> b -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      R.equals(1, 1); //=> true\n     *      R.equals(1, '1'); //=> false\n     *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n     *\n     *      var a = {}; a.v = a;\n     *      var b = {}; b.v = b;\n     *      R.equals(a, b); //=> true\n     */\n    var equals = _curry2(function equals(a, b) {\n        return _hasMethod('equals', a) ? a.equals(b) : _hasMethod('equals', b) ? b.equals(a) : _equals(a, b, [], []);\n    });\n\n    /**\n     * Returns a new list containing only those items that match a given predicate function.\n     * The predicate function is passed one argument: *(value)*.\n     *\n     * Note that `R.filter` does not skip deleted or unassigned indices, unlike the native\n     * `Array.prototype.filter` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter#Description\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} The new filtered array.\n     * @see R.reject\n     * @example\n     *\n     *      var isEven = function(n) {\n     *        return n % 2 === 0;\n     *      };\n     *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n     */\n    var filter = _curry2(_dispatchable('filter', _xfilter, _filter));\n\n    /**\n     * Returns the first element of the list which matches the predicate, or `undefined` if no\n     * element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     *        desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n     *      R.find(R.propEq('a', 4))(xs); //=> undefined\n     */\n    var find = _curry2(_dispatchable('find', _xfind, function find(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (fn(list[idx])) {\n                return list[idx];\n            }\n            idx += 1;\n        }\n    }));\n\n    /**\n     * Returns the index of the first element of the list which matches the predicate, or `-1`\n     * if no element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n     *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n    var findIndex = _curry2(_dispatchable('findIndex', _xfindIndex, function findIndex(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (fn(list[idx])) {\n                return idx;\n            }\n            idx += 1;\n        }\n        return -1;\n    }));\n\n    /**\n     * Returns the last element of the list which matches the predicate, or `undefined` if no\n     * element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n     *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n     */\n    var findLast = _curry2(_dispatchable('findLast', _xfindLast, function findLast(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            if (fn(list[idx])) {\n                return list[idx];\n            }\n            idx -= 1;\n        }\n    }));\n\n    /**\n     * Returns the index of the last element of the list which matches the predicate, or\n     * `-1` if no element matches.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n     *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n    var findLastIndex = _curry2(_dispatchable('findLastIndex', _xfindLastIndex, function findLastIndex(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            if (fn(list[idx])) {\n                return idx;\n            }\n            idx -= 1;\n        }\n        return -1;\n    }));\n\n    /**\n     * Returns a new list by pulling every item out of it (and all its sub-arrays) and putting\n     * them in a new array, depth-first.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b]\n     * @param {Array} list The array to consider.\n     * @return {Array} The flattened list.\n     * @see R.unnest\n     * @example\n     *\n     *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n     *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n     */\n    var flatten = _curry1(_makeFlat(true));\n\n    /**\n     * Returns a new function much like the supplied one, except that the first two arguments'\n     * order is reversed.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)\n     * @param {Function} fn The function to invoke with its first two parameters reversed.\n     * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n     * @example\n     *\n     *      var mergeThree = function(a, b, c) {\n     *        return ([]).concat(a, b, c);\n     *      };\n     *\n     *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n     */\n    var flip = _curry1(function flip(fn) {\n        return curry(function (a, b) {\n            var args = _slice(arguments);\n            args[0] = b;\n            args[1] = a;\n            return fn.apply(this, args);\n        });\n    });\n\n    /**\n     * Iterate over an input `list`, calling a provided function `fn` for each element in the\n     * list.\n     *\n     * `fn` receives one argument: *(value)*.\n     *\n     * Note: `R.forEach` does not skip deleted or unassigned indices (sparse arrays), unlike\n     * the native `Array.prototype.forEach` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n     *\n     * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns the original\n     * array. In some libraries this function is named `each`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> *) -> [a] -> [a]\n     * @param {Function} fn The function to invoke. Receives one argument, `value`.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} The original list.\n     * @example\n     *\n     *      var printXPlusFive = function(x) { console.log(x + 5); };\n     *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n     *      //-> 6\n     *      //-> 7\n     *      //-> 8\n     */\n    var forEach = _curry2(_checkForMethod('forEach', function forEach(fn, list) {\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            fn(list[idx]);\n            idx += 1;\n        }\n        return list;\n    }));\n\n    /**\n     * Returns a list of function names of object's own functions\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {*} -> [String]\n     * @param {Object} obj The objects with functions in it\n     * @return {Array} A list of the object's own properties that map to functions.\n     * @example\n     *\n     *      R.functions(R); // returns list of ramda's own function names\n     *\n     *      var F = function() { this.x = function(){}; this.y = 1; }\n     *      F.prototype.z = function() {};\n     *      F.prototype.a = 100;\n     *      R.functions(new F()); //=> [\"x\"]\n     */\n    var functions = _curry1(_functionsWith(keys));\n\n    /**\n     * Returns a list of function names of object's own and prototype functions\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {*} -> [String]\n     * @param {Object} obj The objects with functions in it\n     * @return {Array} A list of the object's own properties and prototype\n     *         properties that map to functions.\n     * @example\n     *\n     *      R.functionsIn(R); // returns list of ramda's own and prototype function names\n     *\n     *      var F = function() { this.x = function(){}; this.y = 1; }\n     *      F.prototype.z = function() {};\n     *      F.prototype.a = 100;\n     *      R.functionsIn(new F()); //=> [\"x\", \"z\"]\n     */\n    var functionsIn = _curry1(_functionsWith(keysIn));\n\n    /**\n     * Splits a list into sub-lists stored in an object, based on the result of calling a String-returning function\n     * on each element, and grouping the results according to values returned.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> String) -> [a] -> {String: [a]}\n     * @param {Function} fn Function :: a -> String\n     * @param {Array} list The array to group\n     * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n     *         that produced that key when passed to `fn`.\n     * @example\n     *\n     *      var byGrade = R.groupBy(function(student) {\n     *        var score = student.score;\n     *        return score < 65 ? 'F' :\n     *               score < 70 ? 'D' :\n     *               score < 80 ? 'C' :\n     *               score < 90 ? 'B' : 'A';\n     *      });\n     *      var students = [{name: 'Abby', score: 84},\n     *                      {name: 'Eddy', score: 58},\n     *                      // ...\n     *                      {name: 'Jack', score: 69}];\n     *      byGrade(students);\n     *      // {\n     *      //   'A': [{name: 'Dianne', score: 99}],\n     *      //   'B': [{name: 'Abby', score: 84}]\n     *      //   // ...,\n     *      //   'F': [{name: 'Eddy', score: 58}]\n     *      // }\n     */\n    var groupBy = _curry2(_dispatchable('groupBy', _xgroupBy, function groupBy(fn, list) {\n        return _reduce(function (acc, elt) {\n            var key = fn(elt);\n            acc[key] = append(elt, acc[key] || (acc[key] = []));\n            return acc;\n        }, {}, list);\n    }));\n\n    /**\n     * Returns the first element of the given list or string. In some libraries\n     * this function is named `first`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.tail, R.init, R.last\n     * @sig [a] -> a | Undefined\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n     *      R.head([]); //=> undefined\n     *\n     *      R.head('abc'); //=> 'a'\n     *      R.head(''); //=> ''\n     */\n    var head = nth(0);\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those\n     * elements common to both lists.  Duplication is determined according\n     * to the value returned by applying the supplied predicate to two list\n     * elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a,a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate function that determines whether\n     *        the two supplied elements are equal.\n     * @param {Array} list1 One list of items to compare\n     * @param {Array} list2 A second list of items to compare\n     * @see R.intersection\n     * @return {Array} A new list containing those elements common to both lists.\n     * @example\n     *\n     *      var buffaloSpringfield = [\n     *        {id: 824, name: 'Richie Furay'},\n     *        {id: 956, name: 'Dewey Martin'},\n     *        {id: 313, name: 'Bruce Palmer'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *      var csny = [\n     *        {id: 204, name: 'David Crosby'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 539, name: 'Graham Nash'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *\n     *      var sameId = function(o1, o2) {return o1.id === o2.id;};\n     *\n     *      R.intersectionWith(sameId, buffaloSpringfield, csny);\n     *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n     */\n    var intersectionWith = _curry3(function intersectionWith(pred, list1, list2) {\n        var results = [], idx = 0;\n        while (idx < list1.length) {\n            if (_containsWith(pred, list1[idx], list2)) {\n                results[results.length] = list1[idx];\n            }\n            idx += 1;\n        }\n        return uniqWith(pred, results);\n    });\n\n    /**\n     * Creates a new list with the separator interposed between elements.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} separator The element to add to the list.\n     * @param {Array} list The list to be interposed.\n     * @return {Array} The new list.\n     * @example\n     *\n     *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n     */\n    var intersperse = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {\n        var out = [];\n        var idx = 0;\n        var length = list.length;\n        while (idx < length) {\n            if (idx === length - 1) {\n                out.push(list[idx]);\n            } else {\n                out.push(list[idx], separator);\n            }\n            idx += 1;\n        }\n        return out;\n    }));\n\n    /**\n     * Transforms the items of the list with the transducer and appends the transformed items to\n     * the accumulator using an appropriate iterator function based on the accumulator type.\n     *\n     * The accumulator can be an array, string, object or a transformer. Iterated items will\n     * be appended to arrays and concatenated to strings. Objects will be merged directly or 2-item\n     * arrays will be merged as key, value pairs.\n     *\n     * The accumulator can also be a transformer object that provides a 2-arity reducing iterator\n     * function, step, 0-arity initial value function, init, and 1-arity result extraction function\n     * result. The step function is used as the iterator function in reduce. The result function is\n     * used to convert the final accumulator into the return type and in most cases is R.identity.\n     * The init function is used to provide the initial accumulator.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> (b -> b) -> [c] -> a\n     * @param {*} acc The initial accumulator value.\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.into([], transducer, numbers); //=> [2, 3]\n     *\n     *      var intoArray = R.into([]);\n     *      intoArray(transducer, numbers); //=> [2, 3]\n     */\n    var into = _curry3(function into(acc, xf, list) {\n        return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), acc, list);\n    });\n\n    /**\n     * Same as R.invertObj, however this accounts for objects\n     * with duplicate values by putting the values into an\n     * array.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {s: x} -> {x: [ s, ... ]}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object with keys\n     * in an array.\n     * @example\n     *\n     *      var raceResultsByFirstName = {\n     *        first: 'alice',\n     *        second: 'jake',\n     *        third: 'alice',\n     *      };\n     *      R.invert(raceResultsByFirstName);\n     *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n     */\n    var invert = _curry1(function invert(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var idx = 0;\n        var out = {};\n        while (idx < len) {\n            var key = props[idx];\n            var val = obj[key];\n            var list = _has(val, out) ? out[val] : out[val] = [];\n            list[list.length] = key;\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new object with the keys of the given object\n     * as values, and the values of the given object as keys.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {s: x} -> {x: s}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object\n     * @example\n     *\n     *      var raceResults = {\n     *        first: 'alice',\n     *        second: 'jake'\n     *      };\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': 'first', 'jake':'second' }\n     *\n     *      // Alternatively:\n     *      var raceResults = ['alice', 'jake'];\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': '0', 'jake':'1' }\n     */\n    var invertObj = _curry1(function invertObj(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var idx = 0;\n        var out = {};\n        while (idx < len) {\n            var key = props[idx];\n            out[obj[key]] = key;\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns the last element of the given list or string.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.init, R.head, R.tail\n     * @sig [a] -> a | Undefined\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n     *      R.last([]); //=> undefined\n     *\n     *      R.last('abc'); //=> 'c'\n     *      R.last(''); //=> ''\n     */\n    var last = nth(-1);\n\n    /**\n     * Returns the position of the last occurrence of an item in\n     * an array, or -1 if the item is not included in the array.\n     * `R.equals` is used to determine equality.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} xs The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     * @see R.indexOf\n     * @example\n     *\n     *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n     *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n     */\n    var lastIndexOf = _curry2(function lastIndexOf(target, xs) {\n        if (_hasMethod('lastIndexOf', xs)) {\n            return xs.lastIndexOf(target);\n        } else {\n            var idx = xs.length - 1;\n            while (idx >= 0) {\n                if (equals(xs[idx], target)) {\n                    return idx;\n                }\n                idx -= 1;\n            }\n            return -1;\n        }\n    });\n\n    /**\n     * Returns a new list, constructed by applying the supplied function to every element of the\n     * supplied list.\n     *\n     * Note: `R.map` does not skip deleted or unassigned indices (sparse arrays), unlike the\n     * native `Array.prototype.map` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map#Description\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> b) -> [a] -> [b]\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {Array} list The list to be iterated over.\n     * @return {Array} The new list.\n     * @example\n     *\n     *      var double = function(x) {\n     *        return x * 2;\n     *      };\n     *\n     *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n     */\n    var map = _curry2(_dispatchable('map', _xmap, _map));\n\n    /**\n     * Map, but for objects. Creates an object with the same keys as `obj` and values\n     * generated by running each property of `obj` through `fn`. `fn` is passed one argument:\n     * *(value)*.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig (v -> v) -> {k: v} -> {k: v}\n     * @param {Function} fn A function called for each property in `obj`. Its return value will\n     * become a new property on the return object.\n     * @param {Object} obj The object to iterate over.\n     * @return {Object} A new object with the same keys as `obj` and values that are the result\n     *         of running each property through `fn`.\n     * @example\n     *\n     *      var values = { x: 1, y: 2, z: 3 };\n     *      var double = function(num) {\n     *        return num * 2;\n     *      };\n     *\n     *      R.mapObj(double, values); //=> { x: 2, y: 4, z: 6 }\n     */\n    var mapObj = _curry2(function mapObj(fn, obj) {\n        return _reduce(function (acc, key) {\n            acc[key] = fn(obj[key]);\n            return acc;\n        }, {}, keys(obj));\n    });\n\n    /**\n     * Like `mapObj`, but but passes additional arguments to the predicate function. The\n     * predicate function is passed three arguments: *(value, key, obj)*.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig (v, k, {k: v} -> v) -> {k: v} -> {k: v}\n     * @param {Function} fn A function called for each property in `obj`. Its return value will\n     *        become a new property on the return object.\n     * @param {Object} obj The object to iterate over.\n     * @return {Object} A new object with the same keys as `obj` and values that are the result\n     *         of running each property through `fn`.\n     * @example\n     *\n     *      var values = { x: 1, y: 2, z: 3 };\n     *      var prependKeyAndDouble = function(num, key, obj) {\n     *        return key + (num * 2);\n     *      };\n     *\n     *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n     */\n    var mapObjIndexed = _curry2(function mapObjIndexed(fn, obj) {\n        return _reduce(function (acc, key) {\n            acc[key] = fn(obj[key], key, obj);\n            return acc;\n        }, {}, keys(obj));\n    });\n\n    /**\n     * Returns `true` if no elements of the list match the predicate,\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n     * @see R.all, R.any\n     * @example\n     *\n     *      R.none(R.isNaN, [1, 2, 3]); //=> true\n     *      R.none(R.isNaN, [1, 2, 3, NaN]); //=> false\n     */\n    var none = _curry2(_complement(_dispatchable('any', _xany, any)));\n\n    /**\n     * A function that returns the first truthy of two arguments otherwise the\n     * last argument. Note that this is NOT short-circuited, meaning that if\n     * expressions are passed they are both evaluated.\n     *\n     * Dispatches to the `or` method of the first argument if applicable.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {*} a any value\n     * @param {*} b any other value\n     * @return {*} the first truthy argument, otherwise the last argument.\n     * @see R.either\n     * @example\n     *\n     *      R.or(false, true); //=> true\n     *      R.or(0, []); //=> []\n     *      R.or(null, ''); => ''\n     */\n    var or = _curry2(function or(a, b) {\n        return _hasMethod('or', a) ? a.or(b) : a || b;\n    });\n\n    /**\n     * Accepts as its arguments a function and any number of values and returns a function that,\n     * when invoked, calls the original function with all of the values prepended to the\n     * original function's arguments list. In some libraries this function is named `applyLeft`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> b -> ... -> i -> j -> ... -> m -> n) -> a -> b-> ... -> i -> (j -> ... -> m -> n)\n     * @param {Function} fn The function to invoke.\n     * @param {...*} [args] Arguments to prepend to `fn` when the returned function is invoked.\n     * @return {Function} A new function wrapping `fn`. When invoked, it will call `fn`\n     *         with `args` prepended to `fn`'s arguments list.\n     * @example\n     *\n     *      var multiply = function(a, b) { return a * b; };\n     *      var double = R.partial(multiply, 2);\n     *      double(2); //=> 4\n     *\n     *      var greet = function(salutation, title, firstName, lastName) {\n     *        return salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *      };\n     *      var sayHello = R.partial(greet, 'Hello');\n     *      var sayHelloToMs = R.partial(sayHello, 'Ms.');\n     *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n     */\n    var partial = curry(_createPartialApplicator(_concat));\n\n    /**\n     * Accepts as its arguments a function and any number of values and returns a function that,\n     * when invoked, calls the original function with all of the values appended to the original\n     * function's arguments list.\n     *\n     * Note that `partialRight` is the opposite of `partial`: `partialRight` fills `fn`'s arguments\n     * from the right to the left.  In some libraries this function is named `applyRight`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (a -> b-> ... -> i -> j -> ... -> m -> n) -> j -> ... -> m -> n -> (a -> b-> ... -> i)\n     * @param {Function} fn The function to invoke.\n     * @param {...*} [args] Arguments to append to `fn` when the returned function is invoked.\n     * @return {Function} A new function wrapping `fn`. When invoked, it will call `fn` with\n     *         `args` appended to `fn`'s arguments list.\n     * @example\n     *\n     *      var greet = function(salutation, title, firstName, lastName) {\n     *        return salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *      };\n     *      var greetMsJaneJones = R.partialRight(greet, 'Ms.', 'Jane', 'Jones');\n     *\n     *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n     */\n    var partialRight = curry(_createPartialApplicator(flip(_concat)));\n\n    /**\n     * Takes a predicate and a list and returns the pair of lists of\n     * elements which do and do not satisfy the predicate, respectively.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [[a],[a]]\n     * @param {Function} pred A predicate to determine which array the element belongs to.\n     * @param {Array} list The array to partition.\n     * @return {Array} A nested array, containing first an array of elements that satisfied the predicate,\n     *         and second an array of elements that did not satisfy.\n     * @example\n     *\n     *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n     *      //=> [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n     */\n    var partition = _curry2(function partition(pred, list) {\n        return _reduce(function (acc, elt) {\n            var xs = acc[pred(elt) ? 0 : 1];\n            xs[xs.length] = elt;\n            return acc;\n        }, [\n            [],\n            []\n        ], list);\n    });\n\n    /**\n     * Determines whether a nested path on an object has a specific value,\n     * in `R.equals` terms. Most likely used to filter a list.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [String] -> * -> {String: *} -> Boolean\n     * @param {Array} path The path of the nested property to use\n     * @param {*} val The value to compare the nested property with\n     * @param {Object} obj The object to check the nested property in\n     * @return {Boolean} `true` if the value equals the nested object property,\n     *         `false` otherwise.\n     * @example\n     *\n     *      var user1 = { address: { zipCode: 90210 } };\n     *      var user2 = { address: { zipCode: 55555 } };\n     *      var user3 = { name: 'Bob' };\n     *      var users = [ user1, user2, user3 ];\n     *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n     *      R.filter(isFamous, users); //=> [ user1 ]\n     */\n    var pathEq = _curry3(function pathEq(_path, val, obj) {\n        return equals(path(_path, obj), val);\n    });\n\n    /**\n     * Returns a new list by plucking the same named property off all objects in the list supplied.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig k -> [{k: v}] -> [v]\n     * @param {Number|String} key The key name to pluck off of each object.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of values for the given key.\n     * @example\n     *\n     *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n     *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n     */\n    var pluck = _curry2(function pluck(p, list) {\n        return map(prop(p), list);\n    });\n\n    /**\n     * Returns `true` if the specified object property is equal, in `R.equals`\n     * terms, to the given value; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig String -> a -> Object -> Boolean\n     * @param {String} name\n     * @param {*} val\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.equals, R.propSatisfies\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n     *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n     *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n     *      var kids = [abby, fred, rusty, alois];\n     *      var hasBrownHair = R.propEq('hair', 'brown');\n     *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n     */\n    var propEq = _curry3(function propEq(name, val, obj) {\n        return propSatisfies(equals(val), name, obj);\n    });\n\n    /**\n     * Returns `true` if the specified object property is of the given type;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category Type\n     * @sig Type -> String -> Object -> Boolean\n     * @param {Function} type\n     * @param {String} name\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.is\n     * @see R.propSatisfies\n     * @example\n     *\n     *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n     *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n     *      R.propIs(Number, 'x', {});            //=> false\n     */\n    var propIs = _curry3(function propIs(type, name, obj) {\n        return propSatisfies(is(type), name, obj);\n    });\n\n    /**\n     * Returns a single item by iterating through the list, successively calling the iterator\n     * function and passing it an accumulator value and the current value from the array, and\n     * then passing the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*.  It may use `R.reduced` to\n     * shortcut the iteration.\n     *\n     * Note: `R.reduce` does not skip deleted or unassigned indices (sparse arrays), unlike\n     * the native `Array.prototype.reduce` method. For more details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n     * @see R.reduced\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3];\n     *      var add = function(a, b) {\n     *        return a + b;\n     *      };\n     *\n     *      R.reduce(add, 10, numbers); //=> 16\n     */\n    var reduce = _curry3(_reduce);\n\n    /**\n     * Similar to `filter`, except that it keeps only values for which the given predicate\n     * function returns falsy. The predicate function is passed one argument: *(value)*.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} The new filtered array.\n     * @see R.filter\n     * @example\n     *\n     *      var isOdd = function(n) {\n     *        return n % 2 === 1;\n     *      };\n     *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n     */\n    var reject = _curry2(function reject(fn, list) {\n        return filter(_complement(fn), list);\n    });\n\n    /**\n     * Returns a fixed list of size `n` containing a specified identical value.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> n -> [a]\n     * @param {*} value The value to repeat.\n     * @param {Number} n The desired size of the output list.\n     * @return {Array} A new array containing `n` `value`s.\n     * @example\n     *\n     *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n     *\n     *      var obj = {};\n     *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n     *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n     */\n    var repeat = _curry2(function repeat(value, n) {\n        return times(always(value), n);\n    });\n\n    /**\n     * Returns the elements of the given list or string (or object with a `slice`\n     * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @sig Number -> Number -> String -> String\n     * @param {Number} fromIndex The start index (inclusive).\n     * @param {Number} toIndex The end index (exclusive).\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n     *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n     *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n     *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n     *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n     */\n    var slice = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n        return Array.prototype.slice.call(list, fromIndex, toIndex);\n    }));\n\n    /**\n     * Splits a collection into slices of the specified length.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @sig Number -> String -> [String]\n     * @param {Number} n\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n     *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n     */\n    var splitEvery = _curry2(function splitEvery(n, list) {\n        if (n <= 0) {\n            throw new Error('First argument to splitEvery must be a positive integer');\n        }\n        var result = [];\n        var idx = 0;\n        while (idx < list.length) {\n            result.push(slice(idx, idx += n, list));\n        }\n        return result;\n    });\n\n    /**\n     * Adds together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The sum of all the numbers in the list.\n     * @see R.reduce\n     * @example\n     *\n     *      R.sum([2,4,6,8,100,1]); //=> 121\n     */\n    var sum = reduce(add, 0);\n\n    /**\n     * Returns all but the first element of the given list or string (or object\n     * with a `tail` method).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.head, R.init, R.last\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.tail([1, 2, 3]);  //=> [2, 3]\n     *      R.tail([1, 2]);     //=> [2]\n     *      R.tail([1]);        //=> []\n     *      R.tail([]);         //=> []\n     *\n     *      R.tail('abc');  //=> 'bc'\n     *      R.tail('ab');   //=> 'b'\n     *      R.tail('a');    //=> ''\n     *      R.tail('');     //=> ''\n     */\n    var tail = _checkForMethod('tail', slice(1, Infinity));\n\n    /**\n     * Returns the first `n` elements of the given list, string, or\n     * transducer/transformer (or object with a `take` method).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {*} list\n     * @return {*}\n     * @see R.drop\n     * @example\n     *\n     *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n     *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n     *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.take(3, 'ramda');               //=> 'ram'\n     *\n     *      var personnel = [\n     *        'Dave Brubeck',\n     *        'Paul Desmond',\n     *        'Eugene Wright',\n     *        'Joe Morello',\n     *        'Gerry Mulligan',\n     *        'Bob Bates',\n     *        'Joe Dodge',\n     *        'Ron Crotty'\n     *      ];\n     *\n     *      var takeFive = R.take(5);\n     *      takeFive(personnel);\n     *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n     */\n    var take = _curry2(_dispatchable('take', _xtake, function take(n, xs) {\n        return slice(0, n < 0 ? Infinity : n, xs);\n    }));\n\n    /**\n     * Returns a new list containing the first `n` elements of a given list, passing each value\n     * to the supplied predicate function, and terminating when the predicate function returns\n     * `false`. Excludes the element that caused the predicate function to fail. The predicate\n     * function is passed one argument: *(value)*.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.dropWhile\n     * @example\n     *\n     *      var isNotFour = function(x) {\n     *        return !(x === 4);\n     *      };\n     *\n     *      R.takeWhile(isNotFour, [1, 2, 3, 4]); //=> [1, 2, 3]\n     */\n    var takeWhile = _curry2(_dispatchable('takeWhile', _xtakeWhile, function takeWhile(fn, list) {\n        var idx = 0, len = list.length;\n        while (idx < len && fn(list[idx])) {\n            idx += 1;\n        }\n        return _slice(list, 0, idx);\n    }));\n\n    /**\n     * Initializes a transducer using supplied iterator function. Returns a single item by\n     * iterating through the list, successively calling the transformed iterator function and\n     * passing it an accumulator value and the current value from the array, and then passing\n     * the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*. It will be wrapped as a\n     * transformer to initialize the transducer. A transformer can be passed directly in place\n     * of an iterator function.  In both cases, iteration may be stopped early with the\n     * `R.reduced` function.\n     *\n     * A transducer is a function that accepts a transformer and returns a transformer and can\n     * be composed directly.\n     *\n     * A transformer is an an object that provides a 2-arity reducing iterator function, step,\n     * 0-arity initial value function, init, and 1-arity result extraction function, result.\n     * The step function is used as the iterator function in reduce. The result function is used\n     * to convert the final accumulator into the return type and in most cases is R.identity.\n     * The init function can be used to provide an initial accumulator, but is ignored by transduce.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.reduce, R.reduced, R.into\n     * @sig (c -> c) -> (a,b -> a) -> a -> [b] -> a\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array. Wrapped as transformer, if necessary, and used to\n     *        initialize the transducer\n     * @param {*} acc The initial accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n     */\n    var transduce = curryN(4, function transduce(xf, fn, acc, list) {\n        return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n    });\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the elements of each list.  Duplication is\n     * determined according to the value returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig (a,a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @see R.union\n     * @example\n     *\n     *      function cmp(x, y) { return x.a === y.a; }\n     *      var l1 = [{a: 1}, {a: 2}];\n     *      var l2 = [{a: 1}, {a: 4}];\n     *      R.unionWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n     */\n    var unionWith = _curry3(function unionWith(pred, list1, list2) {\n        return uniqWith(pred, _concat(list1, list2));\n    });\n\n    /**\n     * Returns a new list containing only one copy of each element in the original list.\n     * `R.equals` is used to determine equality.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n     *      R.uniq([1, '1']);     //=> [1, '1']\n     *      R.uniq([[42], [42]]); //=> [[42]]\n     */\n    var uniq = uniqWith(equals);\n\n    /**\n     * Returns a new list by pulling every item at the first level of nesting out, and putting\n     * them in a new array.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [b]\n     * @param {Array} list The array to consider.\n     * @return {Array} The flattened list.\n     * @see R.flatten\n     * @example\n     *\n     *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n     *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n     */\n    var unnest = _curry1(_makeFlat(false));\n\n    /**\n     * Accepts a function `fn` and any number of transformer functions and returns a new\n     * function. When the new function is invoked, it calls the function `fn` with parameters\n     * consisting of the result of calling each supplied handler on successive arguments to the\n     * new function.\n     *\n     * If more arguments are passed to the returned function than transformer functions, those\n     * arguments are passed directly to `fn` as additional parameters. If you expect additional\n     * arguments that don't need to be transformed, although you can ignore them, it's best to\n     * pass an identity function so that the new function reports the correct arity.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (x1 -> x2 -> ... -> z) -> ((a -> x1), (b -> x2), ...) -> (a -> b -> ... -> z)\n     * @param {Function} fn The function to wrap.\n     * @param {...Function} transformers A variable number of transformer functions\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var double = function(y) { return y * 2; };\n     *      var square = function(x) { return x * x; };\n     *      var add = function(a, b) { return a + b; };\n     *      // Adds any number of arguments together\n     *      var addAll = function() {\n     *        return R.reduce(add, 0, arguments);\n     *      };\n     *\n     *      // Basic example\n     *      var addDoubleAndSquare = R.useWith(addAll, double, square);\n     *\n     *      //≅ addAll(double(10), square(5));\n     *      addDoubleAndSquare(10, 5); //=> 45\n     *\n     *      // Example of passing more arguments than transformers\n     *      //≅ addAll(double(10), square(5), 100);\n     *      addDoubleAndSquare(10, 5, 100); //=> 145\n     *\n     *      // If there are extra _expected_ arguments that don't need to be transformed, although\n     *      // you can ignore them, it might be best to pass in the identity function so that the new\n     *      // function correctly reports arity.\n     *      var addDoubleAndSquareWithExtraParams = R.useWith(addAll, double, square, R.identity);\n     *      // addDoubleAndSquareWithExtraParams.length //=> 3\n     *      //≅ addAll(double(10), square(5), R.identity(100));\n     *      addDoubleAndSquare(10, 5, 100); //=> 145\n     */\n    /*, transformers */\n    var useWith = curry(function useWith(fn) {\n        var transformers = _slice(arguments, 1);\n        var tlen = transformers.length;\n        return curry(_arity(tlen, function () {\n            var args = [], idx = 0;\n            while (idx < tlen) {\n                args[idx] = transformers[idx](arguments[idx]);\n                idx += 1;\n            }\n            return fn.apply(this, args.concat(_slice(arguments, tlen)));\n        }));\n    });\n\n    /**\n     * Takes a spec object and a test object; returns true if the test satisfies\n     * the spec, false otherwise. An object satisfies the spec if, for each of the\n     * spec's own properties, accessing that property of the object gives the same\n     * value (in `R.equals` terms) as accessing that property of the spec.\n     *\n     * `whereEq` is a specialization of [`where`](#where).\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig {String: *} -> {String: *} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @see R.where\n     * @example\n     *\n     *      // pred :: Object -> Boolean\n     *      var pred = R.whereEq({a: 1, b: 2});\n     *\n     *      pred({a: 1});              //=> false\n     *      pred({a: 1, b: 2});        //=> true\n     *      pred({a: 1, b: 2, c: 3});  //=> true\n     *      pred({a: 1, b: 1});        //=> false\n     */\n    var whereEq = _curry2(function whereEq(spec, testObj) {\n        return where(mapObj(equals, spec), testObj);\n    });\n\n    var _flatCat = function () {\n        var preservingReduced = function (xf) {\n            return {\n                '@@transducer/init': _xfBase.init,\n                '@@transducer/result': function (result) {\n                    return xf['@@transducer/result'](result);\n                },\n                '@@transducer/step': function (result, input) {\n                    var ret = xf['@@transducer/step'](result, input);\n                    return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n                }\n            };\n        };\n        return function _xcat(xf) {\n            var rxf = preservingReduced(xf);\n            return {\n                '@@transducer/init': _xfBase.init,\n                '@@transducer/result': function (result) {\n                    return rxf['@@transducer/result'](result);\n                },\n                '@@transducer/step': function (result, input) {\n                    return !isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n                }\n            };\n        };\n    }();\n\n    var _indexOf = function _indexOf(list, item, from) {\n        var idx = from;\n        while (idx < list.length) {\n            if (equals(list[idx], item)) {\n                return idx;\n            }\n            idx += 1;\n        }\n        return -1;\n    };\n\n    /**\n     * Create a predicate wrapper which will call a pick function (all/any) for each predicate\n     *\n     * @private\n     * @see R.all\n     * @see R.any\n     */\n    // Call function immediately if given arguments\n    // Return a function which will call the predicates with the provided arguments\n    var _predicateWrap = function _predicateWrap(predPicker) {\n        return function (preds) {\n            var predIterator = function () {\n                var args = arguments;\n                return predPicker(function (predicate) {\n                    return predicate.apply(null, args);\n                }, preds);\n            };\n            return arguments.length > 1 ? // Call function immediately if given arguments\n            predIterator.apply(null, _slice(arguments, 1)) : // Return a function which will call the predicates with the provided arguments\n            _arity(Math.max.apply(Math, pluck('length', preds)), predIterator);\n        };\n    };\n\n    var _xchain = _curry2(function _xchain(f, xf) {\n        return map(f, _flatCat(xf));\n    });\n\n    /**\n     * Given a list of predicates, returns a new predicate that will be true exactly when all of them are.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} list An array of predicate functions\n     * @param {*} optional Any arguments to pass into the predicates\n     * @return {Function} a function that applies its arguments to each of\n     *         the predicates, returning `true` if all are satisfied.\n     * @see R.anyPass\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0};\n     *      var f = R.allPass([gt10, even]);\n     *      f(11); //=> false\n     *      f(12); //=> true\n     */\n    var allPass = _curry1(_predicateWrap(all));\n\n    /**\n     * Given a list of predicates returns a new predicate that will be true exactly when any one of them is.\n     *\n     * @func\n     * @memberOf R\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} list An array of predicate functions\n     * @param {*} optional Any arguments to pass into the predicates\n     * @return {Function} A function that applies its arguments to each of the predicates, returning\n     *         `true` if all are satisfied.\n     * @see R.allPass\n     * @example\n     *\n     *      var gt10 = function(x) { return x > 10; };\n     *      var even = function(x) { return x % 2 === 0};\n     *      var f = R.anyPass([gt10, even]);\n     *      f(11); //=> true\n     *      f(8); //=> true\n     *      f(9); //=> false\n     */\n    var anyPass = _curry1(_predicateWrap(any));\n\n    /**\n     * ap applies a list of functions to a list of values.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig [f] -> [a] -> [f a]\n     * @param {Array} fns An array of functions\n     * @param {Array} vs An array of values\n     * @return {Array} An array of results of applying each of `fns` to all of `vs` in turn.\n     * @example\n     *\n     *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n     */\n    var ap = _curry2(function ap(fns, vs) {\n        return _hasMethod('ap', fns) ? fns.ap(vs) : _reduce(function (acc, fn) {\n            return _concat(acc, map(fn, vs));\n        }, [], fns);\n    });\n\n    /**\n     * Returns the result of calling its first argument with the remaining\n     * arguments. This is occasionally useful as a converging function for\n     * `R.converge`: the left branch can produce a function while the right\n     * branch produces a value to be passed to that function as an argument.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (*... -> a),*... -> a\n     * @param {Function} fn The function to apply to the remaining arguments.\n     * @param {...*} args Any number of positional arguments.\n     * @return {*}\n     * @see R.apply\n     * @example\n     *\n     *      var indentN = R.pipe(R.times(R.always(' ')),\n     *                           R.join(''),\n     *                           R.replace(/^(?!$)/gm));\n     *\n     *      var format = R.converge(R.call,\n     *                              R.pipe(R.prop('indent'), indentN),\n     *                              R.prop('value'));\n     *\n     *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n     */\n    var call = curry(function call(fn) {\n        return fn.apply(this, _slice(arguments, 1));\n    });\n\n    /**\n     * `chain` maps a function over a list and concatenates the results.\n     * This implementation is compatible with the\n     * Fantasy-land Chain spec, and will work with types that implement that spec.\n     * `chain` is also known as `flatMap` in some libraries\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> [b]) -> [a] -> [b]\n     * @param {Function} fn\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      var duplicate = function(n) {\n     *        return [n, n];\n     *      };\n     *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n     */\n    var chain = _curry2(_dispatchable('chain', _xchain, function chain(fn, list) {\n        return unnest(map(fn, list));\n    }));\n\n    /**\n     * Turns a list of Functors into a Functor of a list, applying\n     * a mapping function to the elements of the list along the way.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.commute\n     * @sig Functor f => (f a -> f b) -> (x -> f x) -> [f a] -> f [b]\n     * @param {Function} fn The transformation function\n     * @param {Function} of A function that returns the data type to return\n     * @param {Array} list An array of functors of the same type\n     * @return {*}\n     * @example\n     *\n     *      R.commuteMap(R.map(R.add(10)), R.of, [[1], [2, 3]]);   //=> [[11, 12], [11, 13]]\n     *      R.commuteMap(R.map(R.add(10)), R.of, [[1, 2], [3]]);   //=> [[11, 13], [12, 13]]\n     *      R.commuteMap(R.map(R.add(10)), R.of, [[1], [2], [3]]); //=> [[11, 12, 13]]\n     *      R.commuteMap(R.map(R.add(10)), Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([11, 12, 13])\n     *      R.commuteMap(R.map(R.add(10)), Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n     */\n    var commuteMap = _curry3(function commuteMap(fn, of, list) {\n        function consF(acc, ftor) {\n            return ap(map(append, fn(ftor)), acc);\n        }\n        return _reduce(consF, of([]), list);\n    });\n\n    /**\n     * Wraps a constructor function inside a curried function that can be called with the same\n     * arguments and returns the same type. The arity of the function returned is specified\n     * to allow using variadic constructor functions.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> (* -> {*}) -> (* -> {*})\n     * @param {Number} n The arity of the constructor function.\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Variadic constructor function\n     *      var Widget = function() {\n     *        this.children = Array.prototype.slice.call(arguments);\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = [\n     *        // ...\n     *      ];\n     *      R.map(R.constructN(1, Widget), allConfigs); // a list of Widgets\n     */\n    var constructN = _curry2(function constructN(n, Fn) {\n        if (n > 10) {\n            throw new Error('Constructor with greater than ten arguments');\n        }\n        if (n === 0) {\n            return function () {\n                return new Fn();\n            };\n        }\n        return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n            switch (arguments.length) {\n            case 1:\n                return new Fn($0);\n            case 2:\n                return new Fn($0, $1);\n            case 3:\n                return new Fn($0, $1, $2);\n            case 4:\n                return new Fn($0, $1, $2, $3);\n            case 5:\n                return new Fn($0, $1, $2, $3, $4);\n            case 6:\n                return new Fn($0, $1, $2, $3, $4, $5);\n            case 7:\n                return new Fn($0, $1, $2, $3, $4, $5, $6);\n            case 8:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n            case 9:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n            case 10:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n            }\n        }));\n    });\n\n    /**\n     * Accepts at least three functions and returns a new function. When invoked, this new\n     * function will invoke the first function, `after`, passing as its arguments the\n     * results of invoking the subsequent functions with whatever arguments are passed to\n     * the new function.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (x1 -> x2 -> ... -> z) -> ((a -> b -> ... -> x1), (a -> b -> ... -> x2), ...) -> (a -> b -> ... -> z)\n     * @param {Function} after A function. `after` will be invoked with the return values of\n     *        `fn1` and `fn2` as its arguments.\n     * @param {...Function} functions A variable number of functions.\n     * @return {Function} A new function.\n     * @example\n     *\n     *      var add = function(a, b) { return a + b; };\n     *      var multiply = function(a, b) { return a * b; };\n     *      var subtract = function(a, b) { return a - b; };\n     *\n     *      //≅ multiply( add(1, 2), subtract(1, 2) );\n     *      R.converge(multiply, add, subtract)(1, 2); //=> -3\n     *\n     *      var add3 = function(a, b, c) { return a + b + c; };\n     *      R.converge(add3, multiply, add, subtract)(1, 2); //=> 4\n     */\n    var converge = curryN(3, function converge(after) {\n        var fns = _slice(arguments, 1);\n        return curryN(Math.max.apply(Math, pluck('length', fns)), function () {\n            var args = arguments;\n            var context = this;\n            return after.apply(context, _map(function (fn) {\n                return fn.apply(context, args);\n            }, fns));\n        });\n    });\n\n    /**\n     * Returns all but the first `n` elements of the given list, string, or\n     * transducer/transformer (or object with a `drop` method).\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.transduce\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {*} list\n     * @return {*}\n     * @see R.take\n     * @example\n     *\n     *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n     *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n     *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n     *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n     *      R.drop(3, 'ramda');               //=> 'da'\n     */\n    var drop = _curry2(_dispatchable('drop', _xdrop, function drop(n, xs) {\n        return slice(Math.max(0, n), Infinity, xs);\n    }));\n\n    /**\n     * Returns a list containing all but the last `n` elements of the given `list`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n The number of elements of `xs` to skip.\n     * @param {Array} xs The collection to consider.\n     * @return {Array}\n     * @see R.takeLast\n     * @example\n     *\n     *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n     *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n     *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n     *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n     *      R.dropLast(3, 'ramda');               //=> 'ra'\n     */\n    var dropLast = _curry2(function dropLast(n, xs) {\n        return take(n < xs.length ? xs.length - n : 0, xs);\n    });\n\n    /**\n     * Returns a new list without any consecutively repeating elements. Equality is\n     * determined by applying the supplied predicate two consecutive elements.\n     * The first element in a series of equal element is the one being preserved.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} `list` without repeating elements.\n     * @example\n     *\n     *      function lengthEq(x, y) { return Math.abs(x) === Math.abs(y); };\n     *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n     *      R.dropRepeatsWith(lengthEq, l); //=> [1, 3, 4, -5, 3]\n     */\n    var dropRepeatsWith = _curry2(_dispatchable('dropRepeatsWith', _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n        var result = [];\n        var idx = 1;\n        var len = list.length;\n        if (len !== 0) {\n            result[0] = list[0];\n            while (idx < len) {\n                if (!pred(last(result), list[idx])) {\n                    result[result.length] = list[idx];\n                }\n                idx += 1;\n            }\n        }\n        return result;\n    }));\n\n    /**\n     * Reports whether two objects have the same value, in `R.equals` terms,\n     * for the specified property. Useful as a curried predicate.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig k -> {k: v} -> {k: v} -> Boolean\n     * @param {String} prop The name of the property to compare\n     * @param {Object} obj1\n     * @param {Object} obj2\n     * @return {Boolean}\n     *\n     * @example\n     *\n     *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n     *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n     *      R.eqProps('a', o1, o2); //=> false\n     *      R.eqProps('c', o1, o2); //=> true\n     */\n    var eqProps = _curry3(function eqProps(prop, obj1, obj2) {\n        return equals(obj1[prop], obj2[prop]);\n    });\n\n    /**\n     * Returns the position of the first occurrence of an item in an array,\n     * or -1 if the item is not included in the array. `R.equals` is used to\n     * determine equality.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} xs The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     * @see R.lastIndexOf\n     * @example\n     *\n     *      R.indexOf(3, [1,2,3,4]); //=> 2\n     *      R.indexOf(10, [1,2,3,4]); //=> -1\n     */\n    var indexOf = _curry2(function indexOf(target, xs) {\n        return _hasMethod('indexOf', xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n    });\n\n    /**\n     * Returns all but the last element of the given list or string.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.last, R.head, R.tail\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.init([1, 2, 3]);  //=> [1, 2]\n     *      R.init([1, 2]);     //=> [1]\n     *      R.init([1]);        //=> []\n     *      R.init([]);         //=> []\n     *\n     *      R.init('abc');  //=> 'ab'\n     *      R.init('ab');   //=> 'a'\n     *      R.init('a');    //=> ''\n     *      R.init('');     //=> ''\n     */\n    var init = slice(0, -1);\n\n    /**\n     * Returns `true` if all elements are unique, in `R.equals` terms,\n     * otherwise `false`.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> Boolean\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if all elements are unique, else `false`.\n     * @example\n     *\n     *      R.isSet(['1', 1]); //=> true\n     *      R.isSet([1, 1]);   //=> false\n     *      R.isSet([[42], [42]]); //=> false\n     */\n    var isSet = _curry1(function isSet(list) {\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            if (_indexOf(list, list[idx], idx + 1) >= 0) {\n                return false;\n            }\n            idx += 1;\n        }\n        return true;\n    });\n\n    /**\n     * Returns a lens for the given getter and setter functions. The getter \"gets\"\n     * the value of the focus; the setter \"sets\" the value of the focus. The setter\n     * should not mutate the data structure.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n     * @param {Function} getter\n     * @param {Function} setter\n     * @return {Lens}\n     * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n     *\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n     */\n    var lens = _curry2(function lens(getter, setter) {\n        return function (f) {\n            return function (s) {\n                return map(function (v) {\n                    return setter(v, s);\n                }, f(getter(s)));\n            };\n        };\n    });\n\n    /**\n     * Returns a lens whose focus is the specified index.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Number -> Lens s a\n     * @param {Number} n\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var headLens = R.lensIndex(0);\n     *\n     *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n     *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n     *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n     */\n    var lensIndex = _curry1(function lensIndex(n) {\n        return lens(nth(n), update(n));\n    });\n\n    /**\n     * Returns a lens whose focus is the specified property.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @typedef Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig String -> Lens s a\n     * @param {String} k\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n     */\n    var lensProp = _curry1(function lensProp(k) {\n        return lens(prop(k), assoc(k));\n    });\n\n    /**\n     * \"lifts\" a function to be the specified arity, so that it may \"map over\" that many\n     * lists (or other Functors).\n     *\n     * @func\n     * @memberOf R\n     * @see R.lift\n     * @category Function\n     * @sig Number -> (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The function `fn` applicable to mappable objects.\n     * @example\n     *\n     *      var madd3 = R.liftN(3, R.curryN(3, function() {\n     *        return R.reduce(R.add, 0, arguments);\n     *      }));\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     */\n    var liftN = _curry2(function liftN(arity, fn) {\n        var lifted = curryN(arity, fn);\n        return curryN(arity, function () {\n            return _reduce(ap, map(lifted, arguments[0]), _slice(arguments, 1));\n        });\n    });\n\n    /**\n     * Returns the mean of the given list of numbers.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list\n     * @return {Number}\n     * @example\n     *\n     *      R.mean([2, 7, 9]); //=> 6\n     *      R.mean([]); //=> NaN\n     */\n    var mean = _curry1(function mean(list) {\n        return sum(list) / list.length;\n    });\n\n    /**\n     * Returns the median of the given list of numbers.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list\n     * @return {Number}\n     * @example\n     *\n     *      R.median([2, 9, 7]); //=> 7\n     *      R.median([7, 2, 10, 9]); //=> 8\n     *      R.median([]); //=> NaN\n     */\n    var median = _curry1(function median(list) {\n        var len = list.length;\n        if (len === 0) {\n            return NaN;\n        }\n        var width = 2 - len % 2;\n        var idx = (len - width) / 2;\n        return mean(_slice(list).sort(function (a, b) {\n            return a < b ? -1 : a > b ? 1 : 0;\n        }).slice(idx, idx + width));\n    });\n\n    /**\n     * Merges a list of objects together into one object.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [{k: v}] -> {k: v}\n     * @param {Array} list An array of objects\n     * @return {Object} A merged object.\n     * @see R.reduce\n     * @example\n     *\n     *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n     *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n     */\n    var mergeAll = _curry1(function mergeAll(list) {\n        return reduce(merge, {}, list);\n    });\n\n    /**\n     * Performs left-to-right function composition. The leftmost function may have\n     * any arity; the remaining functions must be unary.\n     *\n     * In some libraries this function is named `sequence`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> (a -> b -> ... -> n -> z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.compose\n     * @example\n     *\n     *      var f = R.pipe(Math.pow, R.negate, R.inc);\n     *\n     *      f(3, 4); // -(3^4) + 1\n     */\n    var pipe = function pipe() {\n        if (arguments.length === 0) {\n            throw new Error('pipe requires at least one argument');\n        }\n        return curryN(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n    };\n\n    /**\n     * Performs left-to-right composition of one or more Promise-returning\n     * functions. The leftmost function may have any arity; the remaining\n     * functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.composeP\n     * @example\n     *\n     *      //  followersForUser :: String -> Promise [User]\n     *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n     */\n    var pipeP = function pipeP() {\n        if (arguments.length === 0) {\n            throw new Error('pipeP requires at least one argument');\n        }\n        return curryN(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n    };\n\n    /**\n     * Multiplies together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The product of all the numbers in the list.\n     * @see R.reduce\n     * @example\n     *\n     *      R.product([2,4,6,8,100,1]); //=> 38400\n     */\n    var product = reduce(multiply, 1);\n\n    /**\n     * Reasonable analog to SQL `select` statement.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @category Relation\n     * @sig [k] -> [{k: v}] -> [{k: v}]\n     * @param {Array} props The property names to project\n     * @param {Array} objs The objects to query\n     * @return {Array} An array of objects with just the `props` properties.\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n     *      var kids = [abby, fred];\n     *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n     */\n    // passing `identity` gives correct arity\n    var project = useWith(_map, pickAll, identity);\n\n    /**\n     * Returns a new list containing the last `n` elements of the given list.\n     * If `n > list.length`, returns a list of `list.length` elements.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n The number of elements to return.\n     * @param {Array} xs The collection to consider.\n     * @return {Array}\n     * @see R.dropLast\n     * @example\n     *\n     *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n     *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['for', 'baz']\n     *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.takeLast(3, 'ramda');               //=> 'mda'\n     */\n    var takeLast = _curry2(function takeLast(n, xs) {\n        return drop(n >= 0 ? xs.length - n : 0, xs);\n    });\n\n    var _contains = function _contains(a, list) {\n        return _indexOf(list, a, 0) >= 0;\n    };\n\n    //  mapPairs :: (Object, [String]) -> [String]\n    // Function, RegExp, user-defined types\n    var _toString = function _toString(x, seen) {\n        var recur = function recur(y) {\n            var xs = seen.concat([x]);\n            return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n        };\n        //  mapPairs :: (Object, [String]) -> [String]\n        var mapPairs = function (obj, keys) {\n            return _map(function (k) {\n                return _quote(k) + ': ' + recur(obj[k]);\n            }, keys.slice().sort());\n        };\n        switch (Object.prototype.toString.call(x)) {\n        case '[object Arguments]':\n            return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n        case '[object Array]':\n            return '[' + _map(recur, x).concat(mapPairs(x, reject(test(/^\\d+$/), keys(x)))).join(', ') + ']';\n        case '[object Boolean]':\n            return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n        case '[object Date]':\n            return 'new Date(' + _quote(_toISOString(x)) + ')';\n        case '[object Null]':\n            return 'null';\n        case '[object Number]':\n            return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n        case '[object String]':\n            return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n        case '[object Undefined]':\n            return 'undefined';\n        default:\n            return typeof x.constructor === 'function' && x.constructor.name !== 'Object' && typeof x.toString === 'function' && x.toString() !== '[object Object]' ? x.toString() : // Function, RegExp, user-defined types\n            '{' + mapPairs(x, keys(x)).join(', ') + '}';\n        }\n    };\n\n    /**\n     * Turns a list of Functors into a Functor of a list.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @see R.commuteMap\n     * @sig Functor f => (x -> f x) -> [f a] -> f [a]\n     * @param {Function} of A function that returns the data type to return\n     * @param {Array} list An array of functors of the same type\n     * @return {*}\n     * @example\n     *\n     *      R.commute(R.of, [[1], [2, 3]]);   //=> [[1, 2], [1, 3]]\n     *      R.commute(R.of, [[1, 2], [3]]);   //=> [[1, 3], [2, 3]]\n     *      R.commute(R.of, [[1], [2], [3]]); //=> [[1, 2, 3]]\n     *      R.commute(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n     *      R.commute(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n     */\n    var commute = commuteMap(identity);\n\n    /**\n     * Performs right-to-left function composition. The rightmost function may have\n     * any arity; the remaining functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> (a -> b -> ... -> n -> z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.pipe\n     * @example\n     *\n     *      var f = R.compose(R.inc, R.negate, Math.pow);\n     *\n     *      f(3, 4); // -(3^4) + 1\n     */\n    var compose = function compose() {\n        if (arguments.length === 0) {\n            throw new Error('compose requires at least one argument');\n        }\n        return pipe.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Returns the right-to-left Kleisli composition of the provided functions,\n     * each of which must return a value of a type supported by [`chain`](#chain).\n     *\n     * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @see R.pipeK\n     * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (m a -> m z)\n     * @param {...Function}\n     * @return {Function}\n     * @example\n     *\n     *      //  parseJson :: String -> Maybe *\n     *      //  get :: String -> Object -> Maybe *\n     *\n     *      //  getStateCode :: Maybe String -> Maybe String\n     *      var getStateCode = R.composeK(\n     *        R.compose(Maybe.of, R.toUpper),\n     *        get('state'),\n     *        get('address'),\n     *        get('user'),\n     *        parseJson\n     *      );\n     *\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n     *      //=> Just('NY')\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\n     *      //=> Nothing()\n     */\n    var composeK = function composeK() {\n        return arguments.length === 0 ? identity : compose.apply(this, map(chain, arguments));\n    };\n\n    /**\n     * Performs right-to-left composition of one or more Promise-returning\n     * functions. The rightmost function may have any arity; the remaining\n     * functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.pipeP\n     * @example\n     *\n     *      //  followersForUser :: String -> Promise [User]\n     *      var followersForUser = R.composeP(db.getFollowers, db.getUserById);\n     */\n    var composeP = function composeP() {\n        if (arguments.length === 0) {\n            throw new Error('composeP requires at least one argument');\n        }\n        return pipeP.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Wraps a constructor function inside a curried function that can be called with the same\n     * arguments and returns the same type.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (* -> {*}) -> (* -> {*})\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Constructor function\n     *      var Widget = function(config) {\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = [\n     *        // ...\n     *      ];\n     *      R.map(R.construct(Widget), allConfigs); // a list of Widgets\n     */\n    var construct = _curry1(function construct(Fn) {\n        return constructN(Fn.length, Fn);\n    });\n\n    /**\n     * Returns `true` if the specified value is equal, in `R.equals` terms,\n     * to at least one element of the given list; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig a -> [a] -> Boolean\n     * @param {Object} a The item to compare against.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the item is in the list, `false` otherwise.\n     *\n     * @example\n     *\n     *      R.contains(3, [1, 2, 3]); //=> true\n     *      R.contains(4, [1, 2, 3]); //=> false\n     *      R.contains([42], [[42]]); //=> true\n     */\n    var contains = _curry2(_contains);\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not contained in the second list.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @see R.differenceWith\n     * @example\n     *\n     *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n     *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n     */\n    var difference = _curry2(function difference(first, second) {\n        var out = [];\n        var idx = 0;\n        var firstLen = first.length;\n        while (idx < firstLen) {\n            if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n                out[out.length] = first[idx];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new list without any consecutively repeating elements.\n     * `R.equals` is used to determine equality.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     * @see R.transduce\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} `list` without repeating elements.\n     * @example\n     *\n     *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n     */\n    var dropRepeats = _curry1(_dispatchable('dropRepeats', _xdropRepeatsWith(equals), dropRepeatsWith(equals)));\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those elements common to both lists.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @see R.intersectionWith\n     * @return {Array} The list of elements found in both `list1` and `list2`.\n     * @example\n     *\n     *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n     */\n    var intersection = _curry2(function intersection(list1, list2) {\n        return uniq(_filter(flip(_contains)(list1), list2));\n    });\n\n    /**\n     * \"lifts\" a function of arity > 1 so that it may \"map over\" an Array or\n     * other Functor.\n     *\n     * @func\n     * @memberOf R\n     * @see R.liftN\n     * @category Function\n     * @sig (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The function `fn` applicable to mappable objects.\n     * @example\n     *\n     *      var madd3 = R.lift(R.curry(function(a, b, c) {\n     *        return a + b + c;\n     *      }));\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     *\n     *      var madd5 = R.lift(R.curry(function(a, b, c, d, e) {\n     *        return a + b + c + d + e;\n     *      }));\n     *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n     */\n    var lift = _curry1(function lift(fn) {\n        return liftN(fn.length, fn);\n    });\n\n    /**\n     * Returns a partial copy of an object omitting the keys specified.\n     *\n     * @func\n     * @memberOf R\n     * @category Object\n     * @sig [String] -> {String: *} -> {String: *}\n     * @param {Array} names an array of String property names to omit from the new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with properties from `names` not on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n     */\n    var omit = _curry2(function omit(names, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (!_contains(prop, names)) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns the left-to-right Kleisli composition of the provided functions,\n     * each of which must return a value of a type supported by [`chain`](#chain).\n     *\n     * `R.pipeK(f, g, h)` is equivalent to `R.pipe(R.chain(f), R.chain(g), R.chain(h))`.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @see R.composeK\n     * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (m a -> m z)\n     * @param {...Function}\n     * @return {Function}\n     * @example\n     *\n     *      //  parseJson :: String -> Maybe *\n     *      //  get :: String -> Object -> Maybe *\n     *\n     *      //  getStateCode :: Maybe String -> Maybe String\n     *      var getStateCode = R.pipeK(\n     *        parseJson,\n     *        get('user'),\n     *        get('address'),\n     *        get('state'),\n     *        R.compose(Maybe.of, R.toUpper)\n     *      );\n     *\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n     *      //=> Just('NY')\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\n     *      //=> Nothing()\n     */\n    var pipeK = function pipeK() {\n        return composeK.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Returns the string representation of the given value. `eval`'ing the output\n     * should result in a value equivalent to the input value. Many of the built-in\n     * `toString` methods do not satisfy this requirement.\n     *\n     * If the given value is an `[object Object]` with a `toString` method other\n     * than `Object.prototype.toString`, this method is invoked with no arguments\n     * to produce the return value. This means user-defined constructor functions\n     * can provide a suitable `toString` method. For example:\n     *\n     *     function Point(x, y) {\n     *       this.x = x;\n     *       this.y = y;\n     *     }\n     *\n     *     Point.prototype.toString = function() {\n     *       return 'new Point(' + this.x + ', ' + this.y + ')';\n     *     };\n     *\n     *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig * -> String\n     * @param {*} val\n     * @return {String}\n     * @example\n     *\n     *      R.toString(42); //=> '42'\n     *      R.toString('abc'); //=> '\"abc\"'\n     *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n     *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n     *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n     */\n    var toString = _curry1(function toString(val) {\n        return _toString(val, []);\n    });\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the\n     * elements of each list.\n     *\n     * @func\n     * @memberOf R\n     * @category Relation\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @example\n     *\n     *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n     */\n    var union = _curry2(compose(uniq, _concat));\n\n    /**\n     * Returns a new list containing only one copy of each element in the\n     * original list, based upon the value returned by applying the supplied\n     * function to each list element. Prefers the first item if the supplied\n     * function produces the same value on two items. `R.equals` is used for\n     * comparison.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig (a -> b) -> [a] -> [a]\n     * @param {Function} fn A function used to produce a value to use during comparisons.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n     */\n    var uniqBy = _curry2(function uniqBy(fn, list) {\n        var idx = 0, applied = [], result = [], appliedItem, item;\n        while (idx < list.length) {\n            item = list[idx];\n            appliedItem = fn(item);\n            if (!_contains(appliedItem, applied)) {\n                result.push(item);\n                applied.push(appliedItem);\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Turns a named method with a specified arity into a function\n     * that can be called directly supplied with arguments and a target object.\n     *\n     * The returned function is curried and accepts `arity + 1` parameters where\n     * the final parameter is the target object.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n     * @param {Number} arity Number of arguments the returned function should take\n     *        before the target object.\n     * @param {Function} method Name of the method to call.\n     * @return {Function} A new curried function.\n     * @example\n     *\n     *      var sliceFrom = R.invoker(1, 'slice');\n     *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n     *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n     *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n     */\n    var invoker = _curry2(function invoker(arity, method) {\n        return curryN(arity + 1, function () {\n            var target = arguments[arity];\n            if (target != null && is(Function, target[method])) {\n                return target[method].apply(target, _slice(arguments, 0, arity));\n            }\n            throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n        });\n    });\n\n    /**\n     * Returns a string made by inserting the `separator` between each\n     * element and concatenating all the elements into a single string.\n     *\n     * @func\n     * @memberOf R\n     * @category List\n     * @sig String -> [a] -> String\n     * @param {Number|String} separator The string used to separate the elements.\n     * @param {Array} xs The elements to join into a string.\n     * @return {String} str The string made by concatenating `xs` with `separator`.\n     * @see R.split\n     * @example\n     *\n     *      var spacer = R.join(' ');\n     *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n     *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n     */\n    var join = invoker(1, 'join');\n\n    /**\n     * Creates a new function that, when invoked, caches the result of calling `fn` for a given\n     * argument set and returns the result. Subsequent calls to the memoized `fn` with the same\n     * argument set will not result in an additional call to `fn`; instead, the cached result\n     * for that set of arguments will be returned.\n     *\n     * @func\n     * @memberOf R\n     * @category Function\n     * @sig (*... -> a) -> (*... -> a)\n     * @param {Function} fn The function to memoize.\n     * @return {Function} Memoized version of `fn`.\n     * @example\n     *\n     *      var count = 0;\n     *      var factorial = R.memoize(function(n) {\n     *        count += 1;\n     *        return R.product(R.range(1, n + 1));\n     *      });\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      count; //=> 1\n     */\n    var memoize = _curry1(function memoize(fn) {\n        var cache = {};\n        return function () {\n            var key = toString(arguments);\n            if (!_has(key, cache)) {\n                cache[key] = fn.apply(this, arguments);\n            }\n            return cache[key];\n        };\n    });\n\n    /**\n     * Splits a string into an array of strings based on the given\n     * separator.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String -> [String]\n     * @param {String} sep The separator string.\n     * @param {String} str The string to separate into an array.\n     * @return {Array} The array of strings from `str` separated by `str`.\n     * @see R.join\n     * @example\n     *\n     *      var pathComponents = R.split('/');\n     *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n     *\n     *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n     */\n    var split = invoker(1, 'split');\n\n    /**\n     * The lower case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to lower case.\n     * @return {String} The lower case version of `str`.\n     * @see R.toUpper\n     * @example\n     *\n     *      R.toLower('XYZ'); //=> 'xyz'\n     */\n    var toLower = invoker(0, 'toLowerCase');\n\n    /**\n     * The upper case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to upper case.\n     * @return {String} The upper case version of `str`.\n     * @see R.toLower\n     * @example\n     *\n     *      R.toUpper('abc'); //=> 'ABC'\n     */\n    var toUpper = invoker(0, 'toUpperCase');\n\n    var R = {\n        F: F,\n        T: T,\n        __: __,\n        add: add,\n        addIndex: addIndex,\n        adjust: adjust,\n        all: all,\n        allPass: allPass,\n        always: always,\n        and: and,\n        any: any,\n        anyPass: anyPass,\n        ap: ap,\n        aperture: aperture,\n        append: append,\n        apply: apply,\n        assoc: assoc,\n        assocPath: assocPath,\n        binary: binary,\n        bind: bind,\n        both: both,\n        call: call,\n        chain: chain,\n        clone: clone,\n        commute: commute,\n        commuteMap: commuteMap,\n        comparator: comparator,\n        complement: complement,\n        compose: compose,\n        composeK: composeK,\n        composeP: composeP,\n        concat: concat,\n        cond: cond,\n        construct: construct,\n        constructN: constructN,\n        contains: contains,\n        containsWith: containsWith,\n        converge: converge,\n        countBy: countBy,\n        createMapEntry: createMapEntry,\n        curry: curry,\n        curryN: curryN,\n        dec: dec,\n        defaultTo: defaultTo,\n        difference: difference,\n        differenceWith: differenceWith,\n        dissoc: dissoc,\n        dissocPath: dissocPath,\n        divide: divide,\n        drop: drop,\n        dropLast: dropLast,\n        dropLastWhile: dropLastWhile,\n        dropRepeats: dropRepeats,\n        dropRepeatsWith: dropRepeatsWith,\n        dropWhile: dropWhile,\n        either: either,\n        empty: empty,\n        eqProps: eqProps,\n        equals: equals,\n        evolve: evolve,\n        filter: filter,\n        find: find,\n        findIndex: findIndex,\n        findLast: findLast,\n        findLastIndex: findLastIndex,\n        flatten: flatten,\n        flip: flip,\n        forEach: forEach,\n        fromPairs: fromPairs,\n        functions: functions,\n        functionsIn: functionsIn,\n        groupBy: groupBy,\n        gt: gt,\n        gte: gte,\n        has: has,\n        hasIn: hasIn,\n        head: head,\n        identical: identical,\n        identity: identity,\n        ifElse: ifElse,\n        inc: inc,\n        indexOf: indexOf,\n        init: init,\n        insert: insert,\n        insertAll: insertAll,\n        intersection: intersection,\n        intersectionWith: intersectionWith,\n        intersperse: intersperse,\n        into: into,\n        invert: invert,\n        invertObj: invertObj,\n        invoker: invoker,\n        is: is,\n        isArrayLike: isArrayLike,\n        isEmpty: isEmpty,\n        isNil: isNil,\n        isSet: isSet,\n        join: join,\n        keys: keys,\n        keysIn: keysIn,\n        last: last,\n        lastIndexOf: lastIndexOf,\n        length: length,\n        lens: lens,\n        lensIndex: lensIndex,\n        lensProp: lensProp,\n        lift: lift,\n        liftN: liftN,\n        lt: lt,\n        lte: lte,\n        map: map,\n        mapAccum: mapAccum,\n        mapAccumRight: mapAccumRight,\n        mapObj: mapObj,\n        mapObjIndexed: mapObjIndexed,\n        match: match,\n        mathMod: mathMod,\n        max: max,\n        maxBy: maxBy,\n        mean: mean,\n        median: median,\n        memoize: memoize,\n        merge: merge,\n        mergeAll: mergeAll,\n        min: min,\n        minBy: minBy,\n        modulo: modulo,\n        multiply: multiply,\n        nAry: nAry,\n        negate: negate,\n        none: none,\n        not: not,\n        nth: nth,\n        nthArg: nthArg,\n        nthChar: nthChar,\n        nthCharCode: nthCharCode,\n        of: of,\n        omit: omit,\n        once: once,\n        or: or,\n        over: over,\n        partial: partial,\n        partialRight: partialRight,\n        partition: partition,\n        path: path,\n        pathEq: pathEq,\n        pick: pick,\n        pickAll: pickAll,\n        pickBy: pickBy,\n        pipe: pipe,\n        pipeK: pipeK,\n        pipeP: pipeP,\n        pluck: pluck,\n        prepend: prepend,\n        product: product,\n        project: project,\n        prop: prop,\n        propEq: propEq,\n        propIs: propIs,\n        propOr: propOr,\n        propSatisfies: propSatisfies,\n        props: props,\n        range: range,\n        reduce: reduce,\n        reduceRight: reduceRight,\n        reduced: reduced,\n        reject: reject,\n        remove: remove,\n        repeat: repeat,\n        replace: replace,\n        reverse: reverse,\n        scan: scan,\n        set: set,\n        slice: slice,\n        sort: sort,\n        sortBy: sortBy,\n        split: split,\n        splitEvery: splitEvery,\n        subtract: subtract,\n        sum: sum,\n        tail: tail,\n        take: take,\n        takeLast: takeLast,\n        takeLastWhile: takeLastWhile,\n        takeWhile: takeWhile,\n        tap: tap,\n        test: test,\n        times: times,\n        toLower: toLower,\n        toPairs: toPairs,\n        toPairsIn: toPairsIn,\n        toString: toString,\n        toUpper: toUpper,\n        transduce: transduce,\n        trim: trim,\n        type: type,\n        unapply: unapply,\n        unary: unary,\n        uncurryN: uncurryN,\n        unfold: unfold,\n        union: union,\n        unionWith: unionWith,\n        uniq: uniq,\n        uniqBy: uniqBy,\n        uniqWith: uniqWith,\n        unnest: unnest,\n        update: update,\n        useWith: useWith,\n        values: values,\n        valuesIn: valuesIn,\n        view: view,\n        where: where,\n        whereEq: whereEq,\n        wrap: wrap,\n        xprod: xprod,\n        zip: zip,\n        zipObj: zipObj,\n        zipWith: zipWith\n    };\n\n  /* TEST_ENTRY_POINT */\n\n  if (typeof exports === 'object') {\n    module.exports = R;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function() { return R; });\n  } else {\n    this.R = R;\n  }\n\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ramda/dist/ramda.js\n// module id = 0\n// module chunks = 0","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/isArray.js\n// module id = 1\n// module chunks = 0","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/isObjectLike.js\n// module id = 2\n// module chunks = 0","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_Map.js\n// module id = 3\n// module chunks = 0","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is loosely based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/isLength.js\n// module id = 4\n// module chunks = 0","var eq = require('./eq');\n\n/**\n * Gets the index at which the first occurrence of `key` is found in `array`\n * of key-value pairs.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_assocIndexOf.js\n// module id = 5\n// module chunks = 0","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_nativeCreate.js\n// module id = 6\n// module chunks = 0","var checkGlobal = require('./_checkGlobal');\n\n/** Used to determine if values are of the language type `Object`. */\nvar objectTypes = {\n  'function': true,\n  'object': true\n};\n\n/** Detect free variable `exports`. */\nvar freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType) ? exports : null;\n\n/** Detect free variable `module`. */\nvar freeModule = (objectTypes[typeof module] && module && !module.nodeType) ? module : null;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);\n\n/** Detect free variable `self`. */\nvar freeSelf = checkGlobal(objectTypes[typeof self] && self);\n\n/** Detect free variable `window`. */\nvar freeWindow = checkGlobal(objectTypes[typeof window] && window);\n\n/** Detect `this` as the global object. */\nvar thisGlobal = checkGlobal(objectTypes[typeof this] && this);\n\n/**\n * Used as a reference to the global object.\n *\n * The `this` value is used if it's the global object to avoid Greasemonkey's\n * restricted `window` object, otherwise the `window` object is used.\n */\nvar root = freeGlobal || ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) || freeSelf || thisGlobal || Function('return this')();\n\nmodule.exports = root;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_root.js\n// module id = 7\n// module chunks = 0","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'number' || type == 'boolean' ||\n    (type == 'string' && value !== '__proto__') || value == null;\n}\n\nmodule.exports = isKeyable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_isKeyable.js\n// module id = 8\n// module chunks = 0","/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\nmodule.exports = isHostObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_isHostObject.js\n// module id = 9\n// module chunks = 0","var baseHas = require('./_baseHas'),\n    baseKeys = require('./_baseKeys'),\n    indexKeys = require('./_indexKeys'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  var isProto = isPrototype(object);\n  if (!(isProto || isArrayLike(object))) {\n    return baseKeys(object);\n  }\n  var indexes = indexKeys(object),\n      skipIndexes = !!indexes,\n      result = indexes || [],\n      length = result.length;\n\n  for (var key in object) {\n    if (baseHas(object, key) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n        !(isProto && key == 'constructor')) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/keys.js\n// module id = 10\n// module chunks = 0","/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/isObject.js\n// module id = 11\n// module chunks = 0","var isNative = require('./isNative');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_getNative.js\n// module id = 12\n// module chunks = 0","var isArray = require('./isArray');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (typeof value == 'number') {\n    return true;\n  }\n  return !isArray(value) &&\n    (reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n      (object != null && value in Object(object)));\n}\n\nmodule.exports = isKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_isKey.js\n// module id = 13\n// module chunks = 0","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/node_modules/promise/lib/core.js\n// module id = 14\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 15\n// module chunks = 0","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3/d3.js\n// module id = 16\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.default = map2tree;\n\nvar _isArray = require('lodash/isArray');\n\nvar _isArray2 = _interopRequireDefault(_isArray);\n\nvar _isPlainObject = require('lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _mapValues = require('lodash/mapValues');\n\nvar _mapValues2 = _interopRequireDefault(_mapValues);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction visit(parent, visitFn, childrenFn) {\n  if (!parent) return;\n\n  visitFn(parent);\n\n  var children = childrenFn(parent);\n  if (children) {\n    var count = children.length;\n    for (var i = 0; i < count; i++) {\n      visit(children[i], visitFn, childrenFn);\n    }\n  }\n}\n\nfunction getNode(tree, key) {\n  var node = null;\n\n  visit(tree, function (d) {\n    if (d.name === key) {\n      node = d;\n    }\n  }, function (d) {\n    return d.children;\n  });\n\n  return node;\n}\n\nfunction map2tree(root) {\n  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n  var tree = arguments.length <= 2 || arguments[2] === undefined ? { name: options.key || 'state', children: [] } : arguments[2];\n\n  if (!(0, _isPlainObject2.default)(root) && root && !root.toJS) {\n    return {};\n  }\n\n  var _options$key = options.key;\n  var rootNodeKey = _options$key === undefined ? 'state' : _options$key;\n  var _options$pushMethod = options.pushMethod;\n  var pushMethod = _options$pushMethod === undefined ? 'push' : _options$pushMethod;\n\n  var currentNode = getNode(tree, rootNodeKey);\n\n  if (currentNode === null) {\n    return {};\n  }\n\n  (0, _mapValues2.default)(root && root.toJS ? root.toJS() : root, function (maybeImmutable, key) {\n    var value = maybeImmutable && maybeImmutable.toJS ? maybeImmutable.toJS() : maybeImmutable;\n    var newNode = { name: key };\n\n    if ((0, _isArray2.default)(value)) {\n      newNode.children = [];\n\n      for (var i = 0; i < value.length; i++) {\n        var _newNode$children$pus;\n\n        newNode.children[pushMethod]((_newNode$children$pus = {\n          name: key + '[' + i + ']'\n        }, _newNode$children$pus[(0, _isPlainObject2.default)(value[i]) ? 'object' : 'value'] = value[i], _newNode$children$pus));\n      }\n    } else if ((0, _isPlainObject2.default)(value)) {\n      newNode.children = [];\n    } else {\n      newNode.value = value;\n    }\n\n    currentNode.children[pushMethod](newNode);\n\n    map2tree(value, { key: key, pushMethod: pushMethod }, tree);\n  });\n\n  return tree;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/lib/index.js\n// module id = 17\n// module chunks = 0","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar getPrototypeOf = Object.getPrototypeOf;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n  // that are composed entirely of index properties, return `false` for\n  // `hasOwnProperty` checks of them.\n  return hasOwnProperty.call(object, key) ||\n    (typeof object == 'object' && key in object && getPrototypeOf(object) === null);\n}\n\nmodule.exports = baseHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseHas.js\n// module id = 18\n// module chunks = 0","var isArrayLikeObject = require('./isArrayLikeObject');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\nmodule.exports = isArguments;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/isArguments.js\n// module id = 19\n// module chunks = 0","var getLength = require('./_getLength'),\n    isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null &&\n    !(typeof value == 'function' && isFunction(value)) && isLength(getLength(value));\n}\n\nmodule.exports = isArrayLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/isArrayLike.js\n// module id = 20\n// module chunks = 0","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseProperty.js\n// module id = 21\n// module chunks = 0","var isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array constructors, and\n  // PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\nmodule.exports = isFunction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/isFunction.js\n// module id = 22\n// module chunks = 0","var isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\nmodule.exports = isString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/isString.js\n// module id = 23\n// module chunks = 0","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_isIndex.js\n// module id = 24\n// module chunks = 0","var stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @param {Array} [values] The values to cache.\n */\nfunction Stack(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = values[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add functions to the `Stack` cache.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_Stack.js\n// module id = 25\n// module chunks = 0","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the associative array.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction assocDelete(array, key) {\n  var index = assocIndexOf(array, key);\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = array.length - 1;\n  if (index == lastIndex) {\n    array.pop();\n  } else {\n    splice.call(array, index, 1);\n  }\n  return true;\n}\n\nmodule.exports = assocDelete;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_assocDelete.js\n// module id = 26\n// module chunks = 0","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the associative array value for `key`.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction assocGet(array, key) {\n  var index = assocIndexOf(array, key);\n  return index < 0 ? undefined : array[index][1];\n}\n\nmodule.exports = assocGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_assocGet.js\n// module id = 27\n// module chunks = 0","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if an associative array value for `key` exists.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction assocHas(array, key) {\n  return assocIndexOf(array, key) > -1;\n}\n\nmodule.exports = assocHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_assocHas.js\n// module id = 28\n// module chunks = 0","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @param {Object} hash The hash to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(hash, key) {\n  return nativeCreate ? hash[key] !== undefined : hasOwnProperty.call(hash, key);\n}\n\nmodule.exports = hashHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_hashHas.js\n// module id = 29\n// module chunks = 0","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the associative array `key` to `value`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n */\nfunction assocSet(array, key, value) {\n  var index = assocIndexOf(array, key);\n  if (index < 0) {\n    array.push([key, value]);\n  } else {\n    array[index][1] = value;\n  }\n}\n\nmodule.exports = assocSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_assocSet.js\n// module id = 30\n// module chunks = 0","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObject = require('./isObject'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {boolean} [bitmask] The bitmask of comparison flags.\n *  The bitmask may be composed of the following flags:\n *     1 - Unordered comparison\n *     2 - Partial comparison\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, bitmask, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n}\n\nmodule.exports = baseIsEqual;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseIsEqual.js\n// module id = 31\n// module chunks = 0","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_Symbol.js\n// module id = 32\n// module chunks = 0","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined` the `defaultValue` is used in its place.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/get.js\n// module id = 33\n// module chunks = 0","var baseToPath = require('./_baseToPath'),\n    isKey = require('./_isKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path + ''] : baseToPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[path[index++]];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseGet.js\n// module id = 34\n// module chunks = 0","var isArray = require('./isArray'),\n    stringToPath = require('./_stringToPath');\n\n/**\n * The base implementation of `_.toPath` which only converts `value` to a\n * path if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Array} Returns the property path array.\n */\nfunction baseToPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\nmodule.exports = baseToPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseToPath.js\n// module id = 35\n// module chunks = 0","(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.deepmerge = factory();\n    }\n}(this, function () {\n\nreturn function deepmerge(target, src) {\n    var array = Array.isArray(src);\n    var dst = array && [] || {};\n\n    if (array) {\n        target = target || [];\n        dst = dst.concat(target);\n        src.forEach(function(e, i) {\n            if (typeof dst[i] === 'undefined') {\n                dst[i] = e;\n            } else if (typeof e === 'object') {\n                dst[i] = deepmerge(target[i], e);\n            } else {\n                if (target.indexOf(e) === -1) {\n                    dst.push(e);\n                }\n            }\n        });\n    } else {\n        if (target && typeof target === 'object') {\n            Object.keys(target).forEach(function (key) {\n                dst[key] = target[key];\n            })\n        }\n        Object.keys(src).forEach(function (key) {\n            if (typeof src[key] !== 'object' || !src[key]) {\n                dst[key] = src[key];\n            }\n            else {\n                if (!target[key]) {\n                    dst[key] = src[key];\n                } else {\n                    dst[key] = deepmerge(target[key], src[key]);\n                }\n            }\n        });\n    }\n\n    return dst;\n}\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/deepmerge/index.js\n// module id = 36\n// module chunks = 0","'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.__esModule = true;\nexports.default = tooltip;\n\nvar _ramda = require('ramda');\n\nvar _utils = require('./utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _ref = _utils2.default.default || _utils2.default;\n\nvar prependClass = _ref.prependClass;\nvar functor = _ref.functor;\n\nvar defaultOptions = {\n  left: undefined, // mouseX\n  top: undefined, // mouseY\n  offset: { left: 0, top: 0 },\n  root: undefined\n};\n\nfunction tooltip(d3) {\n  var className = arguments.length <= 1 || arguments[1] === undefined ? 'tooltip' : arguments[1];\n  var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n  var _defaultOptions$optio = _extends({}, defaultOptions, options);\n\n  var left = _defaultOptions$optio.left;\n  var top = _defaultOptions$optio.top;\n  var offset = _defaultOptions$optio.offset;\n  var root = _defaultOptions$optio.root;\n\n  var attrs = { 'class': className };\n  var text = function text() {\n    return '';\n  };\n  var styles = {};\n\n  var el = undefined;\n  var anchor = root || d3.select('body');\n  var rootNode = anchor.node();\n\n  function tip(selection) {\n    selection.on({\n      'mouseover.tip': function mouseoverTip(node) {\n        var _d3$mouse = d3.mouse(rootNode);\n\n        var mouseX = _d3$mouse[0];\n        var mouseY = _d3$mouse[1];\n        var x = left || mouseX + offset.left;\n        var y = top || mouseY - offset.top;\n\n        anchor.selectAll('div.' + className).remove();\n\n        el = anchor.append('div').attr(prependClass(className)(attrs)).style(_extends({\n          position: 'absolute',\n          'z-index': 1001,\n          left: x + 'px',\n          top: y + 'px'\n        }, styles)).html(function () {\n          return text(node);\n        });\n      },\n\n      'mousemove.tip': function mousemoveTip(node) {\n        var _d3$mouse2 = d3.mouse(rootNode);\n\n        var mouseX = _d3$mouse2[0];\n        var mouseY = _d3$mouse2[1];\n        var x = left || mouseX + offset.left;\n        var y = top || mouseY - offset.top;\n\n        el.style({\n          left: x + 'px',\n          top: y + 'px'\n        }).html(function () {\n          return text(node);\n        });\n      },\n\n      'mouseout.tip': function mouseoutTip() {\n        return el.remove();\n      }\n    });\n  }\n\n  tip.attr = function setAttr(d) {\n    if ((0, _ramda.is)(Object, d)) {\n      attrs = _extends({}, attrs, d);\n    }\n    return this;\n  };\n\n  tip.style = function setStyle(d) {\n    if ((0, _ramda.is)(Object, d)) {\n      styles = _extends({}, styles, d);\n    }\n    return this;\n  };\n\n  tip.text = function setText(d) {\n    text = functor(d);\n    return this;\n  };\n\n  return tip;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3tooltip/lib/index.js\n// module id = 37\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.default = functor;\n\nvar _ramda = require('ramda');\n\nfunction functor(v) {\n  return (0, _ramda.is)(Function, v) ? v : function () {\n    return v;\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3tooltip/lib/utils/functor.js\n// module id = 38\n// module chunks = 0","// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n// @remove-on-eject-end\n'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/config/polyfills.js\n// module id = 40\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._47 = null;\n  Promise._71 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._47 = function (promise) {\n    if (\n      promise._83 === 2 && // IS REJECTED\n      rejections[promise._56]\n    ) {\n      if (rejections[promise._56].logged) {\n        onHandled(promise._56);\n      } else {\n        clearTimeout(rejections[promise._56].timeout);\n      }\n      delete rejections[promise._56];\n    }\n  };\n  Promise._71 = function (promise, err) {\n    if (promise._75 === 0) { // not yet handled\n      promise._56 = id++;\n      rejections[promise._56] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._56),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/node_modules/promise/lib/rejection-tracking.js\n// module id = 41\n// module chunks = 0","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/asap/browser-raw.js\n// module id = 42\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/node_modules/promise/lib/es6-extensions.js\n// module id = 43\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/whatwg-fetch/fetch.js\n// module id = 44\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-assign/index.js\n// module id = 45\n// module chunks = 0","import { tree } from 'd3-state-visualizer';\nimport oldTree from './lib-before-fix/charts/tree/tree';\nimport update from 'immutability-helper';\n\nconst defaultAppState = {\n  test: [0],\n  todoStore: {\n    todos: [\n      { title: 'd3' },\n      { title: 'state' },\n      { title: 'visualizer' },\n      { title: 'tree' },\n    ],\n    completedCount: 1\n  },\n};\n\nconst appStates = [defaultAppState];\nappStates.push(\n  update(appStates[appStates.length - 1], { todoStore: { todos: { $unshift: [{ title: 'hey' }] } } })\n);\nappStates.push(\n  update(appStates[appStates.length - 1], { test: {$push: [1]}} )\n);\nappStates.push(\n  update(appStates[appStates.length - 1], { test: {$push: [2]}} )\n);\nappStates.push(\n  update(appStates[appStates.length - 1], { test: {$push: [3]}} )\n);\nappStates.push(\n  update(appStates[appStates.length - 1], { test: {\n    1: {$set: [42] },\n    3: {$set: [42] },\n  } })\n);\n\nappStates.push(update(appStates[appStates.length - 1], { todoStore: { $set: {}}}));\n\nconst config = {\n  state: defaultAppState,\n  id: 'treeExample',\n  size: 600,\n  aspectRatio: 0.5,\n  isSorted: false,\n  widthBetweenNodesCoeff: 1.5,\n  heightBetweenNodesCoeff: 2,\n  style: { border: '1px solid black' },\n  tooltipOptions: { offset: { left: 30, top: 10 }, indentationSize: 2 },\n  transitionDuration: 700\n};\nconst stateDuration = 2000\n\nconst oldRender = oldTree(document.getElementById('oldRoot'), update(config, { id: {$set: 'oldTreeExample'}}));\nconst render = tree(document.getElementById('root'), config);\n\nlet i = 0;\nconst updateState = () => {\n  i = (i + 1) % appStates.length;\n  oldRender(appStates[i]);\n  render(appStates[i]);\n}\nsetInterval(updateState, stateDuration);\nupdateState();\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","'use strict';\n\nexports.__esModule = true;\nexports.tree = undefined;\n\nvar _charts = require('./charts');\n\nObject.defineProperty(exports, 'tree', {\n  enumerable: true,\n  get: function get() {\n    return _charts.tree;\n  }\n});\n\nvar charts = _interopRequireWildcard(_charts);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.default = charts;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-state-visualizer/lib/index.js\n// module id = 47\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.tree = undefined;\n\nvar _tree2 = require('./tree/tree');\n\nvar _tree3 = _interopRequireDefault(_tree2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.tree = _tree3.default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-state-visualizer/lib/charts/index.js\n// module id = 48\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function (DOMNode) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _deepmerge = (0, _deepmerge3.default)(defaultOptions, options);\n\n  var id = _deepmerge.id;\n  var style = _deepmerge.style;\n  var size = _deepmerge.size;\n  var aspectRatio = _deepmerge.aspectRatio;\n  var initialZoom = _deepmerge.initialZoom;\n  var margin = _deepmerge.margin;\n  var isSorted = _deepmerge.isSorted;\n  var widthBetweenNodesCoeff = _deepmerge.widthBetweenNodesCoeff;\n  var heightBetweenNodesCoeff = _deepmerge.heightBetweenNodesCoeff;\n  var transitionDuration = _deepmerge.transitionDuration;\n  var state = _deepmerge.state;\n  var rootKeyName = _deepmerge.rootKeyName;\n  var pushMethod = _deepmerge.pushMethod;\n  var tree = _deepmerge.tree;\n  var tooltipOptions = _deepmerge.tooltipOptions;\n  var onClickText = _deepmerge.onClickText;\n\n\n  var width = size - margin.left - margin.right;\n  var height = size * aspectRatio - margin.top - margin.bottom;\n  var fullWidth = size;\n  var fullHeight = size * aspectRatio;\n\n  var attr = {\n    id: id,\n    preserveAspectRatio: 'xMinYMin slice'\n  };\n\n  if (!style.width) {\n    attr.width = fullWidth;\n  }\n\n  if (!style.width || !style.height) {\n    attr.viewBox = '0 0 ' + fullWidth + ' ' + fullHeight;\n  }\n\n  var root = _d4.default.select(DOMNode);\n  var zoom = _d4.default.behavior.zoom().scaleExtent([0.1, 3]).scale(initialZoom);\n  var vis = root.append('svg').attr(attr).style(_extends({ cursor: '-webkit-grab' }, style)).call(zoom.on('zoom', function () {\n    var _d3$event = _d4.default.event;\n    var translate = _d3$event.translate;\n    var scale = _d3$event.scale;\n\n    vis.attr('transform', 'translate(' + translate + ')scale(' + scale + ')');\n  })).append('g').attr({\n    transform: 'translate(' + (margin.left + style.node.radius) + ', ' + margin.top + ') scale(' + initialZoom + ')'\n  });\n\n  var layout = _d4.default.layout.tree().size([width, height]);\n  var data = void 0;\n\n  if (isSorted) {\n    layout.sort(function (a, b) {\n      return b.name.toLowerCase() < a.name.toLowerCase() ? 1 : -1;\n    });\n  }\n\n  return function renderChart() {\n    var nextState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : tree || state;\n\n    data = !tree ? (0, _map2tree2.default)(nextState, { key: rootKeyName, pushMethod: pushMethod }) : nextState;\n\n    if ((0, _ramda.isEmpty)(data) || !data.name) {\n      data = { name: 'error', message: 'Please provide a state map or a tree structure' };\n    }\n\n    var nodeIndex = 0;\n    var maxLabelLength = 0;\n\n    (0, _utils.visit)(data, function (node) {\n      return maxLabelLength = Math.max(node.name.length, maxLabelLength);\n    }, function (node) {\n      return node.children && node.children.length > 0 ? node.children : null;\n    });\n\n    data.x0 = height / 2;\n    data.y0 = 0;\n    /*eslint-disable*/\n    update(data);\n    /*eslint-enable*/\n\n    function update(source) {\n      // path generator for links\n      var diagonal = _d4.default.svg.diagonal().projection(function (d) {\n        return [d.y, d.x];\n      });\n      // set tree dimensions and spacing between branches and nodes\n      var maxNodeCountByLevel = Math.max.apply(Math, (0, _utils.getNodeGroupByDepthCount)(data));\n\n      layout = layout.size([maxNodeCountByLevel * 25 * heightBetweenNodesCoeff, width]);\n\n      var nodes = layout.nodes(data);\n      var links = layout.links(nodes);\n\n      nodes.forEach(function (node) {\n        return node.y = node.depth * (maxLabelLength * 7 * widthBetweenNodesCoeff);\n      });\n\n      // process the node selection\n      var node = vis.selectAll('g.node').property('__oldData__', function (d) {\n        return d;\n      }).data(nodes, function (d) {\n        return d.id || (d.id = ++nodeIndex);\n      });\n\n      var nodeEnter = node.enter().append('g').attr({\n        'class': 'node',\n        transform: function transform(d) {\n          return 'translate(' + source.y0 + ',' + source.x0 + ')';\n        }\n      }).style({\n        fill: style.text.colors.default,\n        cursor: 'pointer'\n      }).on({\n        mouseover: function mouseover(d, i) {\n          _d4.default.select(this).style({\n            fill: style.text.colors.hover\n          });\n        },\n        mouseout: function mouseout(d, i) {\n          _d4.default.select(this).style({\n            fill: style.text.colors.default\n          });\n        }\n      });\n\n      if (!tooltipOptions.disabled) {\n        nodeEnter.call((0, _d3tooltip2.default)(_d4.default, 'tooltip', _extends({}, tooltipOptions, { root: root })).text(function (d, i) {\n          return (0, _utils.getTooltipString)(d, i, tooltipOptions);\n        }).style(tooltipOptions.style));\n      }\n\n      nodeEnter.append('circle').attr({\n        'class': 'nodeCircle'\n      }).on({\n        click: function click(clickedNode) {\n          if (_d4.default.event.defaultPrevented) return;\n          update((0, _utils.toggleChildren)(clickedNode));\n        }\n      });\n\n      nodeEnter.append('text').attr({\n        'class': 'nodeText',\n        dy: '.35em'\n      }).style({\n        'fill-opacity': 0\n      }).text(function (d) {\n        return d.name;\n      }).on({\n        click: onClickText\n      });\n\n      // update the text to reflect whether node has children or not\n      node.select('text').attr({\n        x: function x(d) {\n          return d.children || d._children ? -(style.node.radius + 10) : style.node.radius + 10;\n        },\n        'text-anchor': function textAnchor(d) {\n          return d.children || d._children ? 'end' : 'start';\n        }\n      }).text(function (d) {\n        return d.name;\n      });\n\n      // change the circle fill depending on whether it has children and is collapsed\n      node.select('circle.nodeCircle').attr({\n        r: style.node.radius\n      }).style({\n        stroke: 'black',\n        'stroke-width': '1.5px',\n        fill: function fill(d) {\n          return d._children ? style.node.colors.collapsed : d.children ? style.node.colors.parent : style.node.colors.default;\n        }\n      });\n\n      // transition nodes to their new position\n      var nodeUpdate = node.transition().duration(transitionDuration).attr({\n        transform: function transform(d) {\n          return 'translate(' + d.y + ',' + d.x + ')';\n        }\n      });\n\n      // fade the text in\n      nodeUpdate.select('text').style('fill-opacity', 1);\n\n      // restore the circle\n      nodeUpdate.select('circle').attr('r', 7);\n\n      // blink updated nodes\n      nodeUpdate.filter(function flick(d) {\n        // test whether the relevant properties of d match\n        // the equivalent property of the oldData\n        // also test whether the old data exists,\n        // to catch the entering elements!\n        return !this.__oldData__ || d.value !== this.__oldData__.value;\n      }).style('fill-opacity', '0.3').transition().duration(100).style('fill-opacity', '1');\n\n      // transition exiting nodes to the parent's new position\n      var nodeExit = node.exit().transition().duration(transitionDuration).attr({\n        transform: function transform(d) {\n          return 'translate(' + source.y + ',' + source.x + ')';\n        }\n      }).remove();\n\n      nodeExit.select('circle').attr('r', 0);\n\n      nodeExit.select('text').style('fill-opacity', 0);\n\n      // update the links\n      var link = vis.selectAll('path.link').data(links, function (d) {\n        return d.target.id;\n      });\n\n      // enter any new links at the parent's previous position\n      link.enter().insert('path', 'g').attr({\n        'class': 'link',\n        d: function d(_d) {\n          var o = {\n            x: source.x0,\n            y: source.y0\n          };\n          return diagonal({\n            source: o,\n            target: o\n          });\n        }\n      }).style(style.link);\n\n      // transition links to their new position\n      link.transition().duration(transitionDuration).attr({\n        d: diagonal\n      });\n\n      // transition exiting nodes to the parent's new position\n      link.exit().transition().duration(transitionDuration).attr({\n        d: function d(_d2) {\n          var o = {\n            x: source.x,\n            y: source.y\n          };\n          return diagonal({\n            source: o,\n            target: o\n          });\n        }\n      }).remove();\n\n      // delete the old data once it's no longer needed\n      node.property('__oldData__', null);\n\n      // stash the old positions for transition\n      nodes.forEach(function (d) {\n        d.x0 = d.x;\n        d.y0 = d.y;\n      });\n    }\n  };\n};\n\nvar _d3 = require('d3');\n\nvar _d4 = _interopRequireDefault(_d3);\n\nvar _ramda = require('ramda');\n\nvar _map2tree = require('map2tree');\n\nvar _map2tree2 = _interopRequireDefault(_map2tree);\n\nvar _deepmerge2 = require('deepmerge');\n\nvar _deepmerge3 = _interopRequireDefault(_deepmerge2);\n\nvar _utils = require('./utils');\n\nvar _d3tooltip = require('d3tooltip');\n\nvar _d3tooltip2 = _interopRequireDefault(_d3tooltip);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultOptions = {\n  state: undefined,\n  rootKeyName: 'state',\n  pushMethod: 'push',\n  tree: undefined,\n  id: 'd3svg',\n  style: {\n    node: {\n      colors: {\n        'default': '#ccc',\n        collapsed: 'lightsteelblue',\n        parent: 'white'\n      },\n      radius: 5\n    },\n    text: {\n      colors: {\n        'default': 'black',\n        hover: 'skyblue'\n      }\n    },\n    link: {\n      stroke: '#000',\n      fill: 'none'\n    }\n  },\n  size: 500,\n  aspectRatio: 1.0,\n  initialZoom: 1,\n  margin: {\n    top: 10,\n    right: 10,\n    bottom: 10,\n    left: 50\n  },\n  isSorted: false,\n  heightBetweenNodesCoeff: 2,\n  widthBetweenNodesCoeff: 1,\n  transitionDuration: 750,\n  onClickText: function onClickText() {},\n  tooltipOptions: {\n    disabled: false,\n    left: undefined,\n    right: undefined,\n    offset: {\n      left: 0,\n      top: 0\n    },\n    style: undefined\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-state-visualizer/lib/charts/tree/tree.js\n// module id = 49\n// module chunks = 0","var isHostObject = require('./_isHostObject'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar getPrototypeOf = Object.getPrototypeOf;\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = objectProto;\n  if (typeof value.constructor == 'function') {\n    proto = getPrototypeOf(value);\n  }\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/isPlainObject.js\n// module id = 50\n// module chunks = 0","var baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated by\n * running each own enumerable property of `object` through `iteratee`. The\n * iteratee function is invoked with three arguments: (value, key, object).\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    result[key] = iteratee(value, key, object);\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/mapValues.js\n// module id = 51\n// module chunks = 0","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseForOwn.js\n// module id = 52\n// module chunks = 0","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\n * each property. Iteratee functions may exit iteration early by explicitly\n * returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseFor.js\n// module id = 53\n// module chunks = 0","/**\n * Creates a base function for methods like `_.forIn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_createBaseFor.js\n// module id = 54\n// module chunks = 0","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = Object.keys;\n\n/**\n * The base implementation of `_.keys` which doesn't skip the constructor\n * property of prototypes or treat sparse arrays as dense.\n *\n * @private\n * @type Function\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  return nativeKeys(Object(object));\n}\n\nmodule.exports = baseKeys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseKeys.js\n// module id = 55\n// module chunks = 0","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isLength = require('./isLength'),\n    isString = require('./isString');\n\n/**\n * Creates an array of index keys for `object` values of arrays,\n * `arguments` objects, and strings, otherwise `null` is returned.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array|null} Returns index keys, else `null`.\n */\nfunction indexKeys(object) {\n  var length = object ? object.length : undefined;\n  if (isLength(length) &&\n      (isArray(object) || isString(object) || isArguments(object))) {\n    return baseTimes(length, String);\n  }\n  return null;\n}\n\nmodule.exports = indexKeys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_indexKeys.js\n// module id = 56\n// module chunks = 0","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseTimes.js\n// module id = 57\n// module chunks = 0","var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object, else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/isArrayLikeObject.js\n// module id = 58\n// module chunks = 0","var baseProperty = require('./_baseProperty');\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\nmodule.exports = getLength;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_getLength.js\n// module id = 59\n// module chunks = 0","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_isPrototype.js\n// module id = 60\n// module chunks = 0","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  var type = typeof value;\n  if (type == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (type == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseIteratee.js\n// module id = 61\n// module chunks = 0","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    var key = matchData[0][0],\n        value = matchData[0][1];\n\n    return function(object) {\n      if (object == null) {\n        return false;\n      }\n      return object[key] === value &&\n        (value !== undefined || (key in Object(object)));\n    };\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseMatches.js\n// module id = 62\n// module chunks = 0","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack,\n          result = customizer ? customizer(objValue, srcValue, key, object, source, stack) : undefined;\n\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseIsMatch.js\n// module id = 63\n// module chunks = 0","/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = { 'array': [], 'map': null };\n}\n\nmodule.exports = stackClear;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_stackClear.js\n// module id = 64\n// module chunks = 0","var assocDelete = require('./_assocDelete');\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      array = data.array;\n\n  return array ? assocDelete(array, key) : data.map['delete'](key);\n}\n\nmodule.exports = stackDelete;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_stackDelete.js\n// module id = 65\n// module chunks = 0","/**\n * Performs a [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'user': 'fred' };\n * var other = { 'user': 'fred' };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/eq.js\n// module id = 66\n// module chunks = 0","var assocGet = require('./_assocGet');\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  var data = this.__data__,\n      array = data.array;\n\n  return array ? assocGet(array, key) : data.map.get(key);\n}\n\nmodule.exports = stackGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_stackGet.js\n// module id = 67\n// module chunks = 0","var assocHas = require('./_assocHas');\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  var data = this.__data__,\n      array = data.array;\n\n  return array ? assocHas(array, key) : data.map.has(key);\n}\n\nmodule.exports = stackHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_stackHas.js\n// module id = 68\n// module chunks = 0","var MapCache = require('./_MapCache'),\n    assocSet = require('./_assocSet');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache object.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__,\n      array = data.array;\n\n  if (array) {\n    if (array.length < (LARGE_ARRAY_SIZE - 1)) {\n      assocSet(array, key, value);\n    } else {\n      data.array = null;\n      data.map = new MapCache(array);\n    }\n  }\n  var map = data.map;\n  if (map) {\n    map.set(key, value);\n  }\n  return this;\n}\n\nmodule.exports = stackSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_stackSet.js\n// module id = 69\n// module chunks = 0","var mapClear = require('./_mapClear'),\n    mapDelete = require('./_mapDelete'),\n    mapGet = require('./_mapGet'),\n    mapHas = require('./_mapHas'),\n    mapSet = require('./_mapSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @param {Array} [values] The values to cache.\n */\nfunction MapCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = values[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add functions to the `MapCache`.\nMapCache.prototype.clear = mapClear;\nMapCache.prototype['delete'] = mapDelete;\nMapCache.prototype.get = mapGet;\nMapCache.prototype.has = mapHas;\nMapCache.prototype.set = mapSet;\n\nmodule.exports = MapCache;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_MapCache.js\n// module id = 70\n// module chunks = 0","var Hash = require('./_Hash'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapClear() {\n  this.__data__ = { 'hash': new Hash, 'map': Map ? new Map : [], 'string': new Hash };\n}\n\nmodule.exports = mapClear;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_mapClear.js\n// module id = 71\n// module chunks = 0","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Creates an hash object.\n *\n * @private\n * @returns {Object} Returns the new hash object.\n */\nfunction Hash() {}\n\n// Avoid inheriting from `Object.prototype` when possible.\nHash.prototype = nativeCreate ? nativeCreate(null) : objectProto;\n\nmodule.exports = Hash;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_Hash.js\n// module id = 72\n// module chunks = 0","var isFunction = require('./isFunction'),\n    isHostObject = require('./_isHostObject'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns). */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(funcToString.call(value));\n  }\n  return isObjectLike(value) &&\n    (isHostObject(value) ? reIsNative : reIsHostCtor).test(value);\n}\n\nmodule.exports = isNative;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/isNative.js\n// module id = 73\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 74\n// module chunks = 0","/**\n * Checks if `value` is a global object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n */\nfunction checkGlobal(value) {\n  return (value && value.Object === Object) ? value : null;\n}\n\nmodule.exports = checkGlobal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_checkGlobal.js\n// module id = 75\n// module chunks = 0","var Map = require('./_Map'),\n    assocDelete = require('./_assocDelete'),\n    hashDelete = require('./_hashDelete'),\n    isKeyable = require('./_isKeyable');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapDelete(key) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    return hashDelete(typeof key == 'string' ? data.string : data.hash, key);\n  }\n  return Map ? data.map['delete'](key) : assocDelete(data.map, key);\n}\n\nmodule.exports = mapDelete;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_mapDelete.js\n// module id = 76\n// module chunks = 0","var hashHas = require('./_hashHas');\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(hash, key) {\n  return hashHas(hash, key) && delete hash[key];\n}\n\nmodule.exports = hashDelete;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_hashDelete.js\n// module id = 77\n// module chunks = 0","var Map = require('./_Map'),\n    assocGet = require('./_assocGet'),\n    hashGet = require('./_hashGet'),\n    isKeyable = require('./_isKeyable');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapGet(key) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    return hashGet(typeof key == 'string' ? data.string : data.hash, key);\n  }\n  return Map ? data.map.get(key) : assocGet(data.map, key);\n}\n\nmodule.exports = mapGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_mapGet.js\n// module id = 78\n// module chunks = 0","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @param {Object} hash The hash to query.\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(hash, key) {\n  if (nativeCreate) {\n    var result = hash[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(hash, key) ? hash[key] : undefined;\n}\n\nmodule.exports = hashGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_hashGet.js\n// module id = 79\n// module chunks = 0","var Map = require('./_Map'),\n    assocHas = require('./_assocHas'),\n    hashHas = require('./_hashHas'),\n    isKeyable = require('./_isKeyable');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapHas(key) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    return hashHas(typeof key == 'string' ? data.string : data.hash, key);\n  }\n  return Map ? data.map.has(key) : assocHas(data.map, key);\n}\n\nmodule.exports = mapHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_mapHas.js\n// module id = 80\n// module chunks = 0","var Map = require('./_Map'),\n    assocSet = require('./_assocSet'),\n    hashSet = require('./_hashSet'),\n    isKeyable = require('./_isKeyable');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache object.\n */\nfunction mapSet(key, value) {\n  var data = this.__data__;\n  if (isKeyable(key)) {\n    hashSet(typeof key == 'string' ? data.string : data.hash, key, value);\n  } else if (Map) {\n    data.map.set(key, value);\n  } else {\n    assocSet(data.map, key, value);\n  }\n  return this;\n}\n\nmodule.exports = mapSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_mapSet.js\n// module id = 81\n// module chunks = 0","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n */\nfunction hashSet(hash, key, value) {\n  hash[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n}\n\nmodule.exports = hashSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_hashSet.js\n// module id = 82\n// module chunks = 0","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isHostObject = require('./_isHostObject'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for comparison styles. */\nvar PARTIAL_COMPARE_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = getTag(object);\n    if (objTag == argsTag) {\n      objTag = objectTag;\n    } else if (objTag != objectTag) {\n      objIsArr = isTypedArray(object);\n    }\n  }\n  if (!othIsArr) {\n    othTag = getTag(other);\n    if (othTag == argsTag) {\n      othTag = objectTag;\n    } else if (othTag != objectTag) {\n      othIsArr = isTypedArray(other);\n    }\n  }\n  var objIsObj = objTag == objectTag && !isHostObject(object),\n      othIsObj = othTag == objectTag && !isHostObject(other),\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !(objIsArr || objIsObj)) {\n    return equalByTag(object, other, objTag, equalFunc, customizer, bitmask);\n  }\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n  if (!isPartial) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, bitmask, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, bitmask, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseIsEqualDeep.js\n// module id = 83\n// module chunks = 0","var arraySome = require('./_arraySome');\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n * @param {Object} [stack] Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n  var index = -1,\n      isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      isUnordered = bitmask & UNORDERED_COMPARE_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(array, other);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (isUnordered) {\n      if (!arraySome(other, function(othValue) {\n            return arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack);\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  return result;\n}\n\nmodule.exports = equalArrays;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_equalArrays.js\n// module id = 84\n// module chunks = 0","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_arraySome.js\n// module id = 85\n// module chunks = 0","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = Symbol ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, equalFunc, customizer, bitmask) {\n  switch (tag) {\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n      // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n      // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n      return +object == +other;\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case numberTag:\n      // Treat `NaN` vs. `NaN` as equal.\n      return (object != +object) ? other != +other : object == +other;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings primitives and string\n      // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n      convert || (convert = setToArray);\n\n      // Recursively compare objects (susceptible to call stack limits).\n      return (isPartial || object.size == other.size) &&\n        equalFunc(convert(object), convert(other), customizer, bitmask | UNORDERED_COMPARE_FLAG);\n\n    case symbolTag:\n      return !!Symbol && (symbolValueOf.call(object) == symbolValueOf.call(other));\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_equalByTag.js\n// module id = 86\n// module chunks = 0","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_Uint8Array.js\n// module id = 87\n// module chunks = 0","/**\n * Converts `map` to an array.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_mapToArray.js\n// module id = 88\n// module chunks = 0","/**\n * Converts `set` to an array.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_setToArray.js\n// module id = 89\n// module chunks = 0","var baseHas = require('./_baseHas'),\n    keys = require('./keys');\n\n/** Used to compose bitmasks for comparison styles. */\nvar PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : baseHas(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  return result;\n}\n\nmodule.exports = equalObjects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_equalObjects.js\n// module id = 90\n// module chunks = 0","var Map = require('./_Map'),\n    Set = require('./_Set');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect maps and sets. */\nvar mapCtorString = Map ? funcToString.call(Map) : '',\n    setCtorString = Set ? funcToString.call(Set) : '';\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction getTag(value) {\n  return objectToString.call(value);\n}\n\n// Fallback for IE 11 providing `toStringTag` values for maps and sets.\nif ((Map && getTag(new Map) != mapTag) || (Set && getTag(new Set) != setTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : null,\n        ctorString = typeof Ctor == 'function' ? funcToString.call(Ctor) : '';\n\n    if (ctorString) {\n      if (ctorString == mapCtorString) {\n        return mapTag;\n      }\n      if (ctorString == setCtorString) {\n        return setTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_getTag.js\n// module id = 91\n// module chunks = 0","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_Set.js\n// module id = 92\n// module chunks = 0","var isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dateTag] = typedArrayTags[errorTag] =\ntypedArrayTags[funcTag] = typedArrayTags[mapTag] =\ntypedArrayTags[numberTag] = typedArrayTags[objectTag] =\ntypedArrayTags[regexpTag] = typedArrayTags[setTag] =\ntypedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nfunction isTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n}\n\nmodule.exports = isTypedArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/isTypedArray.js\n// module id = 93\n// module chunks = 0","var isStrictComparable = require('./_isStrictComparable'),\n    toPairs = require('./toPairs');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = toPairs(object),\n      length = result.length;\n\n  while (length--) {\n    result[length][2] = isStrictComparable(result[length][1]);\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_getMatchData.js\n// module id = 94\n// module chunks = 0","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_isStrictComparable.js\n// module id = 95\n// module chunks = 0","var baseToPairs = require('./_baseToPairs'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable key-value pairs for `object`.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the new array of key-value pairs.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.toPairs(new Foo);\n * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n */\nfunction toPairs(object) {\n  return baseToPairs(object, keys(object));\n}\n\nmodule.exports = toPairs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/toPairs.js\n// module id = 96\n// module chunks = 0","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n * of key-value pairs for `object` corresponding to the property names of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the new array of key-value pairs.\n */\nfunction baseToPairs(object, props) {\n  return arrayMap(props, function(key) {\n    return [key, object[key]];\n  });\n}\n\nmodule.exports = baseToPairs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseToPairs.js\n// module id = 97\n// module chunks = 0","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_arrayMap.js\n// module id = 98\n// module chunks = 0","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn');\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseMatchesProperty.js\n// module id = 99\n// module chunks = 0","var toString = require('./toString');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nfunction stringToPath(string) {\n  var result = [];\n  toString(string).replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n}\n\nmodule.exports = stringToPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_stringToPath.js\n// module id = 100\n// module chunks = 0","var Symbol = require('./_Symbol'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = Symbol ? symbolProto.toString : undefined;\n\n/**\n * Converts `value` to a string if it's not one. An empty string is returned\n * for `null` and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (value == null) {\n    return '';\n  }\n  if (isSymbol(value)) {\n    return Symbol ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/toString.js\n// module id = 101\n// module chunks = 0","var isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/isSymbol.js\n// module id = 102\n// module chunks = 0","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b.c');\n * // => true\n *\n * _.hasIn(object, ['a', 'b', 'c']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/hasIn.js\n// module id = 103\n// module chunks = 0","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseHasIn.js\n// module id = 104\n// module chunks = 0","var baseToPath = require('./_baseToPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isKey = require('./_isKey'),\n    isLength = require('./isLength'),\n    isString = require('./isString'),\n    last = require('./last'),\n    parent = require('./_parent');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  if (object == null) {\n    return false;\n  }\n  var result = hasFunc(object, path);\n  if (!result && !isKey(path)) {\n    path = baseToPath(path);\n    object = parent(object, path);\n    if (object != null) {\n      path = last(path);\n      result = hasFunc(object, path);\n    }\n  }\n  var length = object ? object.length : undefined;\n  return result || (\n    !!length && isLength(length) && isIndex(path, length) &&\n    (isArray(object) || isString(object) || isArguments(object))\n  );\n}\n\nmodule.exports = hasPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_hasPath.js\n// module id = 105\n// module chunks = 0","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array ? array.length : 0;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/last.js\n// module id = 106\n// module chunks = 0","var baseSlice = require('./_baseSlice'),\n    get = require('./get');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length == 1 ? object : get(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_parent.js\n// module id = 107\n// module chunks = 0","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_baseSlice.js\n// module id = 108\n// module chunks = 0","/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/identity.js\n// module id = 109\n// module chunks = 0","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': { 'c': 2 } } },\n *   { 'a': { 'b': { 'c': 1 } } }\n * ];\n *\n * _.map(objects, _.property('a.b.c'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/property.js\n// module id = 110\n// module chunks = 0","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/map2tree/node_modules/lodash/_basePropertyDeep.js\n// module id = 111\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.collapseChildren = collapseChildren;\nexports.expandChildren = expandChildren;\nexports.toggleChildren = toggleChildren;\nexports.visit = visit;\nexports.getNodeGroupByDepthCount = getNodeGroupByDepthCount;\nexports.getTooltipString = getTooltipString;\n\nvar _ramda = require('ramda');\n\nvar _sortAndSerialize = require('./sortAndSerialize');\n\nvar _sortAndSerialize2 = _interopRequireDefault(_sortAndSerialize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction collapseChildren(node) {\n  if (node.children) {\n    node._children = node.children;\n    node._children.forEach(collapseChildren);\n    node.children = null;\n  }\n}\n\nfunction expandChildren(node) {\n  if (node._children) {\n    node.children = node._children;\n    node.children.forEach(expandChildren);\n    node._children = null;\n  }\n}\n\nfunction toggleChildren(node) {\n  if (node.children) {\n    node._children = node.children;\n    node.children = null;\n  } else if (node._children) {\n    node.children = node._children;\n    node._children = null;\n  }\n  return node;\n}\n\nfunction visit(parent, visitFn, childrenFn) {\n  if (!parent) {\n    return;\n  }\n\n  visitFn(parent);\n\n  var children = childrenFn(parent);\n  if (children) {\n    var count = children.length;\n\n    for (var i = 0; i < count; i++) {\n      visit(children[i], visitFn, childrenFn);\n    }\n  }\n}\n\nfunction getNodeGroupByDepthCount(rootNode) {\n  var nodeGroupByDepthCount = [1];\n\n  var traverseFrom = function traverseFrom(node) {\n    var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (!node.children || node.children.length === 0) {\n      return 0;\n    }\n\n    if (nodeGroupByDepthCount.length <= depth + 1) {\n      nodeGroupByDepthCount.push(0);\n    }\n\n    nodeGroupByDepthCount[depth + 1] += node.children.length;\n\n    node.children.forEach(function (childNode) {\n      traverseFrom(childNode, depth + 1);\n    });\n  };\n\n  traverseFrom(rootNode);\n  return nodeGroupByDepthCount;\n}\n\nfunction getTooltipString(node, i, _ref) {\n  var _ref$indentationSize = _ref.indentationSize;\n  var indentationSize = _ref$indentationSize === undefined ? 4 : _ref$indentationSize;\n\n  if (!(0, _ramda.is)(Object, node)) return '';\n\n  var spacer = (0, _ramda.join)('&nbsp;&nbsp;');\n  var cr2br = (0, _ramda.replace)(/\\n/g, '<br/>');\n  var spaces2nbsp = (0, _ramda.replace)(/\\s{2}/g, spacer(new Array(indentationSize)));\n  var json2html = (0, _ramda.pipe)(_sortAndSerialize2.default, cr2br, spaces2nbsp);\n\n  var children = node.children || node._children;\n\n  if (typeof node.value !== 'undefined') return json2html(node.value);\n  if (typeof node.object !== 'undefined') return json2html(node.object);\n  if (children && children.length) return 'childrenCount: ' + children.length;\n  return 'empty';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-state-visualizer/lib/charts/tree/utils.js\n// module id = 112\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = sortAndSerialize;\n\nvar _ramda = require('ramda');\n\nfunction sortObject(obj, strict) {\n  if (obj instanceof Array) {\n    var ary = void 0;\n    if (strict) {\n      ary = obj.sort();\n    } else {\n      ary = obj;\n    }\n    return ary;\n  }\n\n  if (obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {\n    var _ret = function () {\n      var tObj = {};\n      Object.keys(obj).sort().forEach(function (key) {\n        return tObj[key] = sortObject(obj[key]);\n      });\n      return {\n        v: tObj\n      };\n    }();\n\n    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n  }\n\n  return obj;\n}\n\nfunction sortAndSerialize(obj) {\n  return JSON.stringify(sortObject(obj, true), undefined, 2);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-state-visualizer/lib/charts/tree/sortAndSerialize.js\n// module id = 113\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _prependClass = require('./prependClass');\n\nvar _prependClass2 = _interopRequireDefault(_prependClass);\n\nvar _functor = require('./functor');\n\nvar _functor2 = _interopRequireDefault(_functor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  prependClass: _prependClass2.default,\n  functor: _functor2.default\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3tooltip/lib/utils/index.js\n// module id = 114\n// module chunks = 0","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nexports.__esModule = true;\nexports.default = prependClass;\n\nvar _ramda = require('ramda');\n\nvar _functor = require('./functor');\n\nvar _functor2 = _interopRequireDefault(_functor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction prependClass(className) {\n  return (0, _ramda.mapObjIndexed)(function (value, key) {\n    if (key === 'class') {\n      var _ret = function () {\n        var fn = (0, _functor2.default)(value);\n\n        return {\n          v: function v(d, i) {\n            var classNames = fn(d, i);\n            if (classNames !== className) {\n              return (0, _ramda.join)(' ', [className, classNames]);\n            }\n            return classNames;\n          }\n        };\n      }();\n\n      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n    }\n\n    return value;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3tooltip/lib/utils/prependClass.js\n// module id = 115\n// module chunks = 0","import d3 from 'd3'\nimport { isEmpty } from 'ramda'\nimport map2tree from 'map2tree'\nimport deepmerge from 'deepmerge'\nimport { getTooltipString, toggleChildren, visit, getNodeGroupByDepthCount } from './utils'\nimport d3tooltip from 'd3tooltip'\n\nconst defaultOptions = {\n  state: undefined,\n  rootKeyName: 'state',\n  pushMethod: 'push',\n  tree: undefined,\n  id: 'd3svg',\n  style: {\n    node: {\n      colors: {\n        'default': '#ccc',\n        collapsed: 'lightsteelblue',\n        parent: 'white'\n      },\n      radius: 5\n    },\n    text: {\n      colors: {\n        'default': 'black',\n        hover: 'skyblue'\n      }\n    },\n    link: {\n      stroke: '#000',\n      fill: 'none'\n    }\n  },\n  size: 500,\n  aspectRatio: 1.0,\n  initialZoom: 1,\n  margin: {\n    top: 10,\n    right: 10,\n    bottom: 10,\n    left: 50\n  },\n  isSorted: false,\n  heightBetweenNodesCoeff: 2,\n  widthBetweenNodesCoeff: 1,\n  transitionDuration: 750,\n  onClickText: () => {},\n  tooltipOptions: {\n    disabled: false,\n    left: undefined,\n    right: undefined,\n    offset: {\n      left: 0,\n      top: 0\n    },\n    style: undefined\n  }\n}\n\nexport default function(DOMNode, options = {}) {\n  const {\n    id,\n    style,\n    size,\n    aspectRatio,\n    initialZoom,\n    margin,\n    isSorted,\n    widthBetweenNodesCoeff,\n    heightBetweenNodesCoeff,\n    transitionDuration,\n    state,\n    rootKeyName,\n    pushMethod,\n    tree,\n    tooltipOptions,\n    onClickText\n    } = deepmerge(defaultOptions, options)\n\n  const width = size - margin.left - margin.right\n  const height = size * aspectRatio - margin.top - margin.bottom\n  const fullWidth = size\n  const fullHeight = size * aspectRatio\n\n  const attr = {\n    id,\n    preserveAspectRatio: 'xMinYMin slice'\n  }\n\n  if (!style.width) {\n    attr.width = fullWidth\n  }\n\n  if (!style.width || !style.height) {\n    attr.viewBox = `0 0 ${fullWidth} ${fullHeight}`\n  }\n\n  const root = d3.select(DOMNode)\n  const zoom = d3.behavior.zoom()\n    .scaleExtent([0.1, 3])\n    .scale(initialZoom)\n  const vis = root\n    .append('svg')\n    .attr(attr)\n    .style({cursor: '-webkit-grab', ...style})\n    .call(zoom.on('zoom', () => {\n      const { translate, scale } = d3.event\n      vis.attr('transform', `translate(${translate})scale(${scale})`)\n    }))\n    .append('g')\n    .attr({\n      transform: `translate(${margin.left + style.node.radius}, ${margin.top}) scale(${initialZoom})`\n    })\n\n  let layout = d3.layout.tree().size([width, height])\n  let data\n\n  if (isSorted) {\n    layout.sort((a, b) => b.name.toLowerCase() < a.name.toLowerCase() ? 1 : -1)\n  }\n\n  return function renderChart(nextState = tree || state) {\n    data = !tree ? map2tree(nextState, {key: rootKeyName, pushMethod}) : nextState\n\n    if (isEmpty(data) || !data.name) {\n      data = { name: 'error', message: 'Please provide a state map or a tree structure'}\n    }\n\n    let nodeIndex = 0\n    let maxLabelLength = 0\n\n    visit(data,\n        node => maxLabelLength = Math.max(node.name.length, maxLabelLength),\n        node => node.children && node.children.length > 0 ? node.children : null\n    )\n\n    data.x0 = height / 2\n    data.y0 = 0\n    /*eslint-disable*/\n    update(data)\n    /*eslint-enable*/\n\n    function update(source) {\n      // path generator for links\n      const diagonal = d3.svg.diagonal().projection(d => [d.y, d.x])\n      // set tree dimensions and spacing between branches and nodes\n      const maxNodeCountByLevel = Math.max(...getNodeGroupByDepthCount(data))\n\n      layout = layout.size([maxNodeCountByLevel * 25 * heightBetweenNodesCoeff, width])\n\n      let nodes = layout.nodes(data)\n      let links = layout.links(nodes)\n\n      nodes.forEach(node => node.y = node.depth * (maxLabelLength * 7 * widthBetweenNodesCoeff))\n\n      // process the node selection\n      let node = vis.selectAll('g.node')\n        .property('__oldData__', d => d)\n        .data(nodes, d => d.id || (d.id = ++nodeIndex))\n\n      let nodeEnter = node.enter().append('g')\n        .attr({\n          'class': 'node',\n          transform: d => `translate(${source.y0},${source.x0})`\n        })\n        .style({\n          fill: style.text.colors.default,\n          cursor: 'pointer'\n        })\n        .on({\n          mouseover: function mouseover(d, i) {\n            d3.select(this).style({\n              fill: style.text.colors.hover\n            })\n          },\n          mouseout: function mouseout(d, i) {\n            d3.select(this).style({\n              fill: style.text.colors.default\n            })\n          }\n        })\n\n      if (!tooltipOptions.disabled) {\n        nodeEnter.call(d3tooltip(d3, 'tooltip', {...tooltipOptions, root})\n          .text((d, i) => getTooltipString(d, i, tooltipOptions))\n          .style(tooltipOptions.style)\n        )\n      }\n\n      nodeEnter.append('circle')\n        .attr({\n          'class': 'nodeCircle'\n        })\n        .on({\n          click: clickedNode => {\n            if (d3.event.defaultPrevented) return\n            update(toggleChildren(clickedNode))\n          }\n        })\n\n      nodeEnter.append('text')\n        .attr({\n          'class': 'nodeText',\n          dy: '.35em'\n        })\n        .style({\n          'fill-opacity': 0\n        })\n        .text(d => d.name)\n        .on({\n          click: onClickText\n        })\n\n      // update the text to reflect whether node has children or not\n      node.select('text')\n        .attr({\n          x: d => d.children || d._children ? -(style.node.radius + 10) : style.node.radius + 10,\n          'text-anchor': d => d.children || d._children ? 'end' : 'start'\n        })\n        .text(d => d.name)\n\n      // change the circle fill depending on whether it has children and is collapsed\n      node.select('circle.nodeCircle')\n        .attr({\n          r: style.node.radius\n        })\n        .style({\n          stroke: 'black',\n          'stroke-width': '1.5px',\n          fill: d => d._children ? style.node.colors.collapsed : (d.children ? style.node.colors.parent : style.node.colors.default)\n        })\n\n      // transition nodes to their new position\n      let nodeUpdate = node.transition()\n        .duration(transitionDuration)\n        .attr({\n          transform: d => `translate(${d.y},${d.x})`\n        })\n\n      // fade the text in\n      nodeUpdate.select('text')\n        .style('fill-opacity', 1)\n\n      // restore the circle\n      nodeUpdate.select('circle').attr('r', 7)\n\n      // blink updated nodes\n      nodeUpdate.filter(function flick(d) {\n        // test whether the relevant properties of d match\n        // the equivalent property of the oldData\n        // also test whether the old data exists,\n        // to catch the entering elements!\n        return (!this.__oldData__ || d.value !== this.__oldData__.value)\n      })\n        .style('fill-opacity', '0.3').transition()\n        .duration(100).style('fill-opacity', '1')\n\n      // transition exiting nodes to the parent's new position\n      let nodeExit = node.exit().transition()\n        .duration(transitionDuration)\n        .attr({\n          transform: d => `translate(${source.y},${source.x})`\n        })\n        .remove()\n\n      nodeExit.select('circle')\n        .attr('r', 0)\n\n      nodeExit.select('text')\n        .style('fill-opacity', 0)\n\n      // update the links\n      let link = vis.selectAll('path.link')\n        .data(links, d => d.target.id)\n\n      // enter any new links at the parent's previous position\n      link.enter().insert('path', 'g')\n        .attr({\n          'class': 'link',\n          d: d => {\n            let o = {\n              x: source.x0,\n              y: source.y0\n            }\n            return diagonal({\n              source: o,\n              target: o\n            })\n          }\n        })\n        .style(style.link)\n\n      // transition links to their new position\n      link.transition()\n        .duration(transitionDuration)\n        .attr({\n          d: diagonal\n        })\n\n      // transition exiting nodes to the parent's new position\n      link.exit().transition()\n        .duration(transitionDuration)\n        .attr({\n          d: d => {\n            let o = {\n              x: source.x,\n              y: source.y\n            }\n            return diagonal({\n              source: o,\n              target: o\n            })\n          }\n        })\n        .remove()\n\n      // delete the old data once it's no longer needed\n      node.property('__oldData__', null)\n\n      // stash the old positions for transition\n      nodes.forEach(d => {\n        d.x0 = d.x\n        d.y0 = d.y\n      })\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib-before-fix/charts/tree/tree.js","import { is, join, pipe, replace } from 'ramda';\nimport sortAndSerialize from './sortAndSerialize';\n\nexport function collapseChildren(node) {\n  if (node.children) {\n    node._children = node.children;\n    node._children.forEach(collapseChildren);\n    node.children = null;\n  }\n}\n\nexport function expandChildren(node) {\n  if (node._children) {\n    node.children = node._children;\n    node.children.forEach(expandChildren);\n    node._children = null;\n  }\n}\n\nexport function toggleChildren(node) {\n  if (node.children) {\n    node._children = node.children;\n    node.children = null;\n  } else if (node._children) {\n    node.children = node._children;\n    node._children = null;\n  }\n  return node;\n}\n\nexport function visit(parent, visitFn, childrenFn) {\n  if (!parent) {\n    return;\n  }\n\n  visitFn(parent);\n\n  let children = childrenFn(parent);\n  if (children) {\n    let count = children.length;\n\n    for (let i = 0; i < count; i++) {\n      visit(children[i], visitFn, childrenFn);\n    }\n  }\n}\n\nexport function getNodeGroupByDepthCount(rootNode) {\n  let nodeGroupByDepthCount = [1];\n\n  const traverseFrom = function traverseFrom(node, depth = 0) {\n    if (!node.children || node.children.length === 0) {\n      return 0;\n    }\n\n    if (nodeGroupByDepthCount.length <= depth + 1) {\n      nodeGroupByDepthCount.push(0);\n    }\n\n    nodeGroupByDepthCount[depth + 1] += node.children.length;\n\n    node.children.forEach(childNode => {\n      traverseFrom(childNode, depth + 1);\n    });\n  };\n\n  traverseFrom(rootNode);\n  return nodeGroupByDepthCount;\n}\n\nexport function getTooltipString(node, i, { indentationSize = 4 }) {\n  if (!is(Object, node)) return '';\n\n  const spacer = join('&nbsp;&nbsp;');\n  const cr2br = replace(/\\n/g, '<br/>');\n  const spaces2nbsp = replace(/\\s{2}/g, spacer(new Array(indentationSize)));\n  const json2html = pipe(sortAndSerialize, cr2br, spaces2nbsp);\n\n  const children = node.children || node._children;\n\n  if (typeof node.value !== 'undefined') return json2html(node.value);\n  if (typeof node.object !== 'undefined') return json2html(node.object);\n  if (children && children.length) return 'childrenCount: ' + children.length;\n  return 'empty';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib-before-fix/charts/tree/utils.js","import { is } from 'ramda'\n\nfunction sortObject(obj, strict) {\n  if (obj instanceof Array) {\n    let ary\n    if (strict) {\n      ary = obj.sort()\n    } else {\n      ary = obj\n    }\n    return ary\n  }\n\n  if (obj && typeof obj === 'object') {\n    const tObj = {}\n    Object.keys(obj).sort().forEach(key => tObj[key] = sortObject(obj[key]))\n    return tObj\n  }\n\n  return obj\n}\n\nexport default function sortAndSerialize(obj) {\n  return JSON.stringify(sortObject(obj, true), undefined, 2)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib-before-fix/charts/tree/sortAndSerialize.js","var invariant = require('invariant');\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar splice = Array.prototype.splice;\n\nvar assign = Object.assign || /* istanbul ignore next */ function assign(target, source) {\n  getAllKeys(source).forEach(function(key) {\n    if (hasOwnProperty.call(source, key)) {\n      target[key] = source[key];\n    }\n  });\n  return target;\n};\n\nvar getAllKeys = typeof Object.getOwnPropertySymbols === 'function' ?\n  function(obj) { return Object.keys(obj).concat(Object.getOwnPropertySymbols(obj)) } :\n  /* istanbul ignore next */ function(obj) { return Object.keys(obj) };\n\n/* istanbul ignore next */\nfunction copy(object) {\n  if (object instanceof Array) {\n    return assign(object.constructor(object.length), object)\n  } else if (object && typeof object === 'object') {\n    var prototype = object.constructor && object.constructor.prototype\n    return assign(Object.create(prototype || null), object);\n  } else {\n    return object;\n  }\n}\n\nfunction newContext() {\n  var commands = assign({}, defaultCommands);\n  update.extend = function(directive, fn) {\n    commands[directive] = fn;\n  };\n  update.isEquals = function(a, b) { return a === b; };\n\n  return update;\n\n  function update(object, spec) {\n    if (!(Array.isArray(object) && Array.isArray(spec))) {\n      invariant(\n        !Array.isArray(spec),\n        'update(): You provided an invalid spec to update(). The spec may ' +\n        'not contain an array except as the value of $set, $push, $unshift, ' +\n        '$splice or any custom command allowing an array value.'\n      );\n    }\n\n    invariant(\n      typeof spec === 'object' && spec !== null,\n      'update(): You provided an invalid spec to update(). The spec and ' +\n      'every included key path must be plain objects containing one of the ' +\n      'following commands: %s.',\n      Object.keys(commands).join(', ')\n    );\n\n    var nextObject = object;\n    var index, key;\n    getAllKeys(spec).forEach(function(key) {\n      if (hasOwnProperty.call(commands, key)) {\n        var objectWasNextObject = object === nextObject;\n        nextObject = commands[key](spec[key], nextObject, spec, object);\n        if (objectWasNextObject && update.isEquals(nextObject, object)) {\n          nextObject = object;\n        }\n      } else {\n        var nextValueForKey = update(object[key], spec[key]);\n        if (!update.isEquals(nextValueForKey, nextObject[key]) || typeof nextValueForKey === 'undefined' && !hasOwnProperty.call(object, key)) {\n          if (nextObject === object) {\n            nextObject = copy(object);\n          }\n          nextObject[key] = nextValueForKey;\n        }\n      }\n    })\n    return nextObject;\n  }\n\n}\n\nvar defaultCommands = {\n  $push: function(value, nextObject, spec) {\n    invariantPushAndUnshift(nextObject, spec, '$push');\n    return value.length ? nextObject.concat(value) : nextObject;\n  },\n  $unshift: function(value, nextObject, spec) {\n    invariantPushAndUnshift(nextObject, spec, '$unshift');\n    return value.length ? value.concat(nextObject) : nextObject;\n  },\n  $splice: function(value, nextObject, spec, originalObject) {\n    invariantSplices(nextObject, spec);\n    value.forEach(function(args) {\n      invariantSplice(args);\n      if (nextObject === originalObject && args.length) nextObject = copy(originalObject);\n      splice.apply(nextObject, args);\n    });\n    return nextObject;\n  },\n  $set: function(value, nextObject, spec) {\n    invariantSet(spec);\n    return value;\n  },\n  $unset: function(value, nextObject, spec, originalObject) {\n    invariant(\n      Array.isArray(value),\n      'update(): expected spec of $unset to be an array; got %s. ' +\n      'Did you forget to wrap the key(s) in an array?',\n      value\n    );\n    value.forEach(function(key) {\n      if (Object.hasOwnProperty.call(nextObject, key)) {\n        if (nextObject === originalObject) nextObject = copy(originalObject);\n        delete nextObject[key];\n      }\n    });\n    return nextObject;\n  },\n  $merge: function(value, nextObject, spec, originalObject) {\n    invariantMerge(nextObject, value);\n    getAllKeys(value).forEach(function(key) {\n      if (value[key] !== nextObject[key]) {\n        if (nextObject === originalObject) nextObject = copy(originalObject);\n        nextObject[key] = value[key];\n      }\n    });\n    return nextObject;\n  },\n  $apply: function(value, original) {\n    invariantApply(value);\n    return value(original);\n  }\n};\n\nmodule.exports = newContext();\nmodule.exports.newContext = newContext;\n\n// invariants\n\nfunction invariantPushAndUnshift(value, spec, command) {\n  invariant(\n    Array.isArray(value),\n    'update(): expected target of %s to be an array; got %s.',\n    command,\n    value\n  );\n  var specValue = spec[command];\n  invariant(\n    Array.isArray(specValue),\n    'update(): expected spec of %s to be an array; got %s. ' +\n    'Did you forget to wrap your parameter in an array?',\n    command,\n    specValue\n  );\n}\n\nfunction invariantSplices(value, spec) {\n  invariant(\n    Array.isArray(value),\n    'Expected $splice target to be an array; got %s',\n    value\n  );\n  invariantSplice(spec['$splice']);\n}\n\nfunction invariantSplice(value) {\n  invariant(\n    Array.isArray(value),\n    'update(): expected spec of $splice to be an array of arrays; got %s. ' +\n    'Did you forget to wrap your parameters in an array?',\n    value\n  );\n}\n\nfunction invariantApply(fn) {\n  invariant(\n    typeof fn === 'function',\n    'update(): expected spec of $apply to be a function; got %s.',\n    fn\n  );\n}\n\nfunction invariantSet(spec) {\n  invariant(\n    Object.keys(spec).length === 1,\n    'Cannot have more than one key in an object with $set'\n  );\n}\n\nfunction invariantMerge(target, specValue) {\n  invariant(\n    specValue && typeof specValue === 'object',\n    'update(): $merge expects a spec of type \\'object\\'; got %s',\n    specValue\n  );\n  invariant(\n    target && typeof target === 'object',\n    'update(): $merge expects a target of type \\'object\\'; got %s',\n    target\n  );\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/immutability-helper/index.js\n// module id = 119\n// module chunks = 0","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/invariant/browser.js\n// module id = 120\n// module chunks = 0"],"sourceRoot":""}